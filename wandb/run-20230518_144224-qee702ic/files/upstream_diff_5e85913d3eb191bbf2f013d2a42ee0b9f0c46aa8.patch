diff --git a/DeepPhospho.py b/DeepPhospho.py
new file mode 100644
index 0000000..6266e8a
--- /dev/null
+++ b/DeepPhospho.py
@@ -0,0 +1,296 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+sys.path.append("/home/hb/python/")
+sys.path.append("/home/hb/python/efficientnet_kincnn/code")
+import kincnn
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'KINCNN'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = kincnn.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/DeepPhospho2.py b/DeepPhospho2.py
new file mode 100644
index 0000000..67d3ea1
--- /dev/null
+++ b/DeepPhospho2.py
@@ -0,0 +1,296 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+sys.path.append("/home/hb/python/")
+sys.path.append("/home/hb/python/efficientnet_kincnn/code")
+import kincnn2
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'KINCNN'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = kincnn2.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/DeepPhospho3.py b/DeepPhospho3.py
new file mode 100644
index 0000000..9bb1f59
--- /dev/null
+++ b/DeepPhospho3.py
@@ -0,0 +1,296 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+sys.path.append("/home/hb/python/")
+sys.path.append("/home/hb/python/efficientnet_kincnn/code")
+import kincnn3
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'KINCNN'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = kincnn3.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/DeepPhospho4.py b/DeepPhospho4.py
new file mode 100644
index 0000000..cefb5db
--- /dev/null
+++ b/DeepPhospho4.py
@@ -0,0 +1,296 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+sys.path.append("/home/hb/python/")
+sys.path.append("/home/hb/python/efficientnet_kincnn/code")
+import kincnn4
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'KINCNN'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = kincnn4.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/__init__.py b/__init__.py
index 4210ebf..0959fed 100644
--- a/__init__.py
+++ b/__init__.py
@@ -1,4 +1,4 @@
 __version__ = "0.7.1"
-from .model import VALID_MODELS, EfficientNet
+from .kincnn import EfficientNet
 from .utils import (BlockArgs, BlockDecoder, GlobalParams, efficientnet,
                     get_model_params)
diff --git a/code/C4_evaluation.ipynb b/code/C4_evaluation.ipynb
new file mode 100644
index 0000000..cb5b7ae
--- /dev/null
+++ b/code/C4_evaluation.ipynb
@@ -0,0 +1,21364 @@
+{
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 1,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import os\n",
+    "import sys\n",
+    "sys.path.append(os.path.join(os.getcwd(), '..'))\n",
+    "sys.path.append(\"/home/hb/python/\")\n",
+    "sys.path.append(\"/home/hb/python/efficientnet_kincnn/code\")\n",
+    "import kincnn\n",
+    "import kincnn2\n",
+    "import kincnn3\n",
+    "import kincnn4\n",
+    "import sys\n",
+    "sys.path.append('/home/hb/python/phospho/code/module')\n",
+    "import pickle\n",
+    "import numpy as np\n",
+    "import pandas as pd\n",
+    "from tqdm.notebook import tqdm\n",
+    "import torch\n",
+    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score\n",
+    "import sklearn\n",
+    "import matplotlib.pyplot as plt\n",
+    "import numpy as np"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# from utils import efficientnet\n",
+    "# blocks_args, global_params = efficientnet()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 5,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import os \n",
+    "\n",
+    "def load_multiple_model(filedir, datatype):\n",
+    "    \n",
+    "    model_path_list = [f'{filedir}/{file}' for file in os.listdir(filedir) if \"best\" in file]\n",
+    "    model = []\n",
+    "\n",
+    "    for model_path in model_path_list:\n",
+    "        print(model_path)\n",
+    "        _checkpoint = torch.load(model_path, map_location='cpu')\n",
+    "        _fold = _checkpoint['model']\n",
+    "        _fold.load_state_dict(_checkpoint['state_dict'])\n",
+    "        model.append(_fold)\n",
+    "    \n",
+    "    return model\n",
+    "\n",
+    "def predict_model(model_name, df, matrix_name):\n",
+    "    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
+    "    BATCH_SIZE = 1024\n",
+    "    matrix = []\n",
+    "    for i in df[matrix_name]:\n",
+    "        matrix.append(i)\n",
+    "\n",
+    "    matrix = np.array(matrix).astype('float64')\n",
+    "    dataset = torch.utils.data.TensorDataset(torch.tensor(matrix))\n",
+    "    test_loader = torch.utils.data.DataLoader(dataset, batch_size=BATCH_SIZE)\n",
+    "\n",
+    "    model = model_name.to(device)\n",
+    "    model.eval()\n",
+    "    preds_list = []\n",
+    "    probs_list = []\n",
+    "    with torch.no_grad():\n",
+    "        for matrix in tqdm(test_loader):\n",
+    "            matrix = torch.as_tensor(matrix[0], device=device, dtype=torch.float32)\n",
+    "            preds = model(matrix)\n",
+    "            probs_list.extend(preds.cpu().tolist())\n",
+    "            preds = torch.softmax(preds, dim=1)\n",
+    "            preds_list.extend(preds.cpu().tolist())\n",
+    "\n",
+    "    return np.array(probs_list)\n",
+    "\n",
+    "def ensemble_5fold(model_list, df, matrix_name):\n",
+    "    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
+    "    predict_list = []\n",
+    "    for model in model_list:\n",
+    "        prediction = predict_model(model_name=model, df=df, matrix_name=matrix_name)\n",
+    "        predict_list.append(prediction)\n",
+    "    ensemble = (predict_list[0] + predict_list[1] + predict_list[2] + predict_list[3] + predict_list[4])/len(predict_list)\n",
+    "    return ensemble\n",
+    "\n",
+    "def ensemble(modelname, df):\n",
+    "    ensemble = ensemble_5fold(modelname, df, 'matrix')\n",
+    "\n",
+    "    df['probs'] = ensemble\n",
+    "    df['answer'] = df['answer'].apply(lambda x: int(x)) \n",
+    "    auc = sklearn.metrics.roc_auc_score(df['answer'], df[f'probs'])\n",
+    "    return auc"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "['/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/3fold_best_model.pth',\n",
+       " '/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/0fold_best_model.pth',\n",
+       " '/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/1fold_best_model.pth',\n",
+       " '/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/4fold_best_model.pth',\n",
+       " '/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/2fold_best_model.pth']"
+      ]
+     },
+     "execution_count": 9,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "filedir = filedir_list[0]\n",
+    "model_path_list = [f'{filedir}/{file}' for file in os.listdir(filedir) if \"best\" in file]\n",
+    "model = []\n",
+    "model_path_list"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/3fold_best_model.pth\n"
+     ]
+    },
+    {
+     "ename": "NameError",
+     "evalue": "name 'checkpoint' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[10], line 8\u001b[0m\n\u001b[1;32m      6\u001b[0m _checkpoint \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39mload(model_path, map_location\u001b[39m=\u001b[39m\u001b[39m'\u001b[39m\u001b[39mcpu\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[1;32m      7\u001b[0m _fold \u001b[39m=\u001b[39m _checkpoint[\u001b[39m'\u001b[39m\u001b[39mmodel\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[0;32m----> 8\u001b[0m _fold\u001b[39m.\u001b[39mload_state_dict(checkpoint[\u001b[39m'\u001b[39m\u001b[39mstate_dict\u001b[39m\u001b[39m'\u001b[39m])\n\u001b[1;32m      9\u001b[0m model\u001b[39m.\u001b[39mappend(_fold)\n",
+      "\u001b[0;31mNameError\u001b[0m: name 'checkpoint' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "model_path_list = [f'{filedir}/{file}' for file in os.listdir(filedir) if \"best\" in file]\n",
+    "model = []\n",
+    "\n",
+    "for model_path in model_path_list:\n",
+    "    print(model_path)\n",
+    "    _checkpoint = torch.load(model_path, map_location='cpu')\n",
+    "    _fold = _checkpoint['model']\n",
+    "    _fold.load_state_dict(_checkpoint['state_dict'])\n",
+    "    model.append(_fold)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "/home/hb/python/efficientnet_kincnn/saved_model/0518/DeepPP_kincnn1_1349_bs1024_weight0/3fold_best_model.pth\n"
+     ]
+    },
+    {
+     "ename": "NameError",
+     "evalue": "name 'checkpoint' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[6], line 12\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[39mfor\u001b[39;00m filedir \u001b[39min\u001b[39;00m filedir_list:\n\u001b[1;32m     11\u001b[0m     filedir_found \u001b[39m=\u001b[39m re\u001b[39m.\u001b[39msearch(\u001b[39m'\u001b[39m\u001b[39mDeepPP_(.+?)_\u001b[39m\u001b[39m'\u001b[39m, filedir)\u001b[39m.\u001b[39mgroup(\u001b[39m1\u001b[39m)\n\u001b[0;32m---> 12\u001b[0m     model \u001b[39m=\u001b[39m load_multiple_model(filedir, filedir_found)\n\u001b[1;32m     13\u001b[0m     model_list\u001b[39m.\u001b[39mappend(model)\n\u001b[1;32m     14\u001b[0m     auc \u001b[39m=\u001b[39m ensemble(model, df_test)\n",
+      "Cell \u001b[0;32mIn[5], line 12\u001b[0m, in \u001b[0;36mload_multiple_model\u001b[0;34m(filedir, datatype)\u001b[0m\n\u001b[1;32m     10\u001b[0m     _checkpoint \u001b[39m=\u001b[39m torch\u001b[39m.\u001b[39mload(model_path, map_location\u001b[39m=\u001b[39m\u001b[39m'\u001b[39m\u001b[39mcpu\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[1;32m     11\u001b[0m     _fold \u001b[39m=\u001b[39m _checkpoint[\u001b[39m'\u001b[39m\u001b[39mmodel\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[0;32m---> 12\u001b[0m     _fold\u001b[39m.\u001b[39mload_state_dict(checkpoint[\u001b[39m'\u001b[39m\u001b[39mstate_dict\u001b[39m\u001b[39m'\u001b[39m])\n\u001b[1;32m     13\u001b[0m     model\u001b[39m.\u001b[39mappend(_fold)\n\u001b[1;32m     15\u001b[0m \u001b[39mreturn\u001b[39;00m model\n",
+      "\u001b[0;31mNameError\u001b[0m: name 'checkpoint' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "import re\n",
+    "df_test = pd.read_pickle(\"/home/hb/python/phospho/data/required/0308_final_train_test/test1.pkl\")\n",
+    "time = 1349\n",
+    "save_dir = '/home/hb/python/efficientnet_kincnn/saved_model/0518'\n",
+    "\n",
+    "filedir_list = [f'{save_dir}/DeepPP_kincnn{x}_{time}_bs1024_weight0' for x in range(1, 5)]\n",
+    "# filedir_list = [f'{save_dir}/DeepPP_kincnn{1}_{1100}_bs1024_weight0']\n",
+    "model_list = []\n",
+    "auc_list = []\n",
+    "for filedir in filedir_list:\n",
+    "    filedir_found = re.search('DeepPP_(.+?)_', filedir).group(1)\n",
+    "    model = load_multiple_model(filedir, filedir_found)\n",
+    "    model_list.append(model)\n",
+    "    auc = ensemble(model, df_test)\n",
+    "    auc_list.append(round(auc, 4))\n",
+    "auc_list"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import warnings\n",
+    "\n",
+    "warnings.filterwarnings(action='ignore') \n",
+    "\n",
+    "df = pd.read_excel('/home/hb/python/efficientnet_kincnn/model_info.xlsx', engine='openpyxl')\n",
+    "\n",
+    "\n",
+    "for idx, model, auc, model_path in zip(range(len(model_list)), model_list, auc_list, filedir_list):\n",
+    "    _model = model[0]\n",
+    "    model_params_dict = {}\n",
+    "    model_params_dict['data'] = f'train{idx+1}'\n",
+    "    model_params_dict['AUC'] = auc\n",
+    "    model_params_dict['conv_stem_kernel_size'] = _model._conv_stem.kernel_size\n",
+    "    model_params_dict['conv_stem_stride_size'] = _model._conv_stem.stride\n",
+    "    model_params_dict['conv_stem_pooling'] = bool(_model._max_pooling)\n",
+    "    if model_params_dict['conv_stem_pooling']:\n",
+    "        model_params_dict['conv_stem_pooling_kernel_size'] = _model._max_pooling.kernel_size\n",
+    "    # model_params_dict[]\n",
+    "    blocks_num = len(_model._blocks)\n",
+    "    for i in range(blocks_num):\n",
+    "        model_params_dict[f'MBconv{i}_inp'] = _model._blocks[i]._depthwise_conv.in_channels\n",
+    "        model_params_dict[f'MBconv{i}_oup'] = _model._blocks[i]._project_conv.out_channels\n",
+    "        model_params_dict[f'MBconv{i}_kernel_size'] = _model._blocks[i]._depthwise_conv.kernel_size\n",
+    "        model_params_dict[f'MBconv{i}_stride'] = _model._blocks[i]._depthwise_conv.stride\n",
+    "    model_params_dict['last_features'] = _model._fc.in_features\n",
+    "    model_params_dict['model_path'] = '/'.join(model_path.split('/')[-2:])\n",
+    "    df = df.append(model_params_dict, ignore_index=True)\n",
+    "df"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df.to_excel(\"/home/hb/python/efficientnet_kincnn/model_info.xlsx\", index=False)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 69,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "MBConvBlock(\n",
+       "  (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "    8, 8, kernel_size=(5, 1), stride=(1, 1), groups=8, bias=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 2, 2))\n",
+       "  )\n",
+       "  (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_se_reduce): Conv2dStaticSamePadding(\n",
+       "    8, 2, kernel_size=(1, 1), stride=(1, 1)\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_se_expand): Conv2dStaticSamePadding(\n",
+       "    2, 8, kernel_size=(1, 1), stride=(1, 1)\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_project_conv): Conv2dStaticSamePadding(\n",
+       "    8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_bn2): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_swish): MemoryEfficientSwish()\n",
+       ")"
+      ]
+     },
+     "execution_count": 69,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "model[0]._blocks[0]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "ModuleNotFoundError",
+     "evalue": "No module named 'utils'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39mutils\u001b[39;00m \u001b[39mimport\u001b[39;00m efficientnet\n\u001b[1;32m      2\u001b[0m a, b \u001b[39m=\u001b[39m efficientnet()\n",
+      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'utils'"
+     ]
+    }
+   ],
+   "source": [
+    "from utils import efficientnet\n",
+    "a, b = efficientnet()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 76,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "[BlockArgs(num_repeat=1, conv_kernel_size=(5, 1), pool_kernel_size=(3, 1), conv_stride=(1, 1), pool_stride=(3, 1), expand_ratio=1, input_filters=2, output_filters=4, se_ratio=0.25, id_skip=True)]"
+      ]
+     },
+     "execution_count": 76,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "a"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 77,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "GlobalParams(width_coefficient=None, depth_coefficient=None, image_size=None, dropout_rate=0.5, num_classes=1, batch_norm_momentum=0.99, batch_norm_epsilon=0.001, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, include_top=None)"
+      ]
+     },
+     "execution_count": 77,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "b"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 72,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "15840\n"
+     ]
+    }
+   ],
+   "source": [
+    "m = kincnn.EfficientNet.from_name('KINCNN')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 73,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "EfficientNet(\n",
+       "  (_conv_stem): Conv2dStaticSamePadding(\n",
+       "    1, 8, kernel_size=(3, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 1, 1))\n",
+       "  )\n",
+       "  (_bn0): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_max_pooling): MaxPool2dStaticSamePadding(\n",
+       "    kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=[1, 1], ceil_mode=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 0, 1))\n",
+       "  )\n",
+       "  (_blocks): ModuleList(\n",
+       "    (0): MBConvBlock(\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        8, 8, kernel_size=(5, 1), stride=(1, 1), groups=8, bias=False\n",
+       "        (static_padding): ZeroPad2d((0, 0, 2, 2))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_max_pooling): MaxPool2dStaticSamePadding(\n",
+       "        kernel_size=(3, 1), stride=(3, 1), padding=0, dilation=[1, 1], ceil_mode=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        8, 2, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        2, 8, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "  )\n",
+       "  (_conv_head): Conv2dStaticSamePadding(\n",
+       "    8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_dropout): Dropout(p=0.7, inplace=False)\n",
+       "  (_fc): Linear(in_features=15840, out_features=1, bias=True)\n",
+       "  (_swish): MemoryEfficientSwish()\n",
+       ")"
+      ]
+     },
+     "execution_count": 73,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "m"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 70,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "EfficientNet(\n",
+       "  (_conv_stem): Conv2dStaticSamePadding(\n",
+       "    1, 8, kernel_size=(3, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 1, 1))\n",
+       "  )\n",
+       "  (_bn0): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_max_pooling): MaxPool2dStaticSamePadding(\n",
+       "    kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=[1, 1], ceil_mode=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 0, 1))\n",
+       "  )\n",
+       "  (_blocks): ModuleList(\n",
+       "    (0): MBConvBlock(\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        8, 8, kernel_size=(5, 1), stride=(1, 1), groups=8, bias=False\n",
+       "        (static_padding): ZeroPad2d((0, 0, 2, 2))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        8, 2, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        2, 8, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "  )\n",
+       "  (_conv_head): Conv2dStaticSamePadding(\n",
+       "    8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_dropout): Dropout(p=0.7, inplace=False)\n",
+       "  (_fc): Linear(in_features=15840, out_features=1, bias=True)\n",
+       "  (_swish): MemoryEfficientSwish()\n",
+       ")"
+      ]
+     },
+     "execution_count": 70,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "model[0]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 61,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>data</th>\n",
+       "      <th>AUC</th>\n",
+       "      <th>conv_stem_kernel_size</th>\n",
+       "      <th>conv_stem_stride_size</th>\n",
+       "      <th>conv_stem_pooling</th>\n",
+       "      <th>conv_stem_pooling_kernel_size</th>\n",
+       "      <th>MBconv0_inp</th>\n",
+       "      <th>MBconv0_oup</th>\n",
+       "      <th>MBconv0_kernel_size</th>\n",
+       "      <th>MBconv0_stride</th>\n",
+       "      <th>...</th>\n",
+       "      <th>MBconv13_kernel_size</th>\n",
+       "      <th>MBconv13_stride</th>\n",
+       "      <th>MBconv14_inp</th>\n",
+       "      <th>MBconv14_oup</th>\n",
+       "      <th>MBconv14_kernel_size</th>\n",
+       "      <th>MBconv14_stride</th>\n",
+       "      <th>MBconv15_inp</th>\n",
+       "      <th>MBconv15_oup</th>\n",
+       "      <th>MBconv15_kernel_size</th>\n",
+       "      <th>MBconv15_stride</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8273</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>16</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8202</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>16</td>\n",
+       "      <td>(5, 5)</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8243</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>16</td>\n",
+       "      <td>(5, 3)</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8262</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>16</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.6549</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(3, 3)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>(5, 5)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>720.0</td>\n",
+       "      <td>120.0</td>\n",
+       "      <td>(5, 5)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>720.0</td>\n",
+       "      <td>200.0</td>\n",
+       "      <td>(3, 3)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>5</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8230</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(3, 3)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8208</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>7</th>\n",
+       "      <td>train2</td>\n",
+       "      <td>0.8340</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <td>train3</td>\n",
+       "      <td>0.8339</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>9</th>\n",
+       "      <td>train4</td>\n",
+       "      <td>0.8367</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>10</th>\n",
+       "      <td>train1</td>\n",
+       "      <td>0.8208</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>11</th>\n",
+       "      <td>train2</td>\n",
+       "      <td>0.8340</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>12</th>\n",
+       "      <td>train3</td>\n",
+       "      <td>0.8339</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13</th>\n",
+       "      <td>train4</td>\n",
+       "      <td>0.8367</td>\n",
+       "      <td>(3, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>True</td>\n",
+       "      <td>(2, 1)</td>\n",
+       "      <td>8</td>\n",
+       "      <td>8</td>\n",
+       "      <td>(5, 1)</td>\n",
+       "      <td>(1, 1)</td>\n",
+       "      <td>...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>14 rows √ó 72 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "      data     AUC conv_stem_kernel_size conv_stem_stride_size  \\\n",
+       "0   train1  0.8273                (3, 1)                (1, 1)   \n",
+       "1   train1  0.8202                (3, 1)                (1, 1)   \n",
+       "2   train1  0.8243                (3, 1)                (1, 1)   \n",
+       "3   train1  0.8262                (3, 1)                (1, 1)   \n",
+       "4   train1  0.6549                (3, 1)                (1, 1)   \n",
+       "5   train1  0.8230                (3, 1)                (1, 1)   \n",
+       "6   train1  0.8208                (3, 1)                (1, 1)   \n",
+       "7   train2  0.8340                (3, 1)                (1, 1)   \n",
+       "8   train3  0.8339                (3, 1)                (1, 1)   \n",
+       "9   train4  0.8367                (3, 1)                (1, 1)   \n",
+       "10  train1  0.8208                (3, 1)                (1, 1)   \n",
+       "11  train2  0.8340                (3, 1)                (1, 1)   \n",
+       "12  train3  0.8339                (3, 1)                (1, 1)   \n",
+       "13  train4  0.8367                (3, 1)                (1, 1)   \n",
+       "\n",
+       "    conv_stem_pooling conv_stem_pooling_kernel_size  MBconv0_inp  MBconv0_oup  \\\n",
+       "0                True                        (2, 1)            8           16   \n",
+       "1                True                        (2, 1)            8           16   \n",
+       "2                True                        (2, 1)            8           16   \n",
+       "3                True                        (2, 1)            8           16   \n",
+       "4                True                        (2, 1)            8            8   \n",
+       "5                True                        (2, 1)            8            8   \n",
+       "6                True                        (2, 1)            8            8   \n",
+       "7                True                        (2, 1)            8            8   \n",
+       "8                True                        (2, 1)            8            8   \n",
+       "9                True                        (2, 1)            8            8   \n",
+       "10               True                        (2, 1)            8            8   \n",
+       "11               True                        (2, 1)            8            8   \n",
+       "12               True                        (2, 1)            8            8   \n",
+       "13               True                        (2, 1)            8            8   \n",
+       "\n",
+       "   MBconv0_kernel_size MBconv0_stride  ...  MBconv13_kernel_size  \\\n",
+       "0               (3, 1)         (1, 1)  ...                   NaN   \n",
+       "1               (5, 5)         (2, 1)  ...                   NaN   \n",
+       "2               (5, 3)         (2, 1)  ...                   NaN   \n",
+       "3               (5, 1)         (2, 1)  ...                   NaN   \n",
+       "4               (3, 3)         (1, 1)  ...                (5, 5)   \n",
+       "5               (3, 3)         (1, 1)  ...                   NaN   \n",
+       "6               (5, 1)         (1, 1)  ...                   NaN   \n",
+       "7               (5, 1)         (1, 1)  ...                   NaN   \n",
+       "8               (5, 1)         (1, 1)  ...                   NaN   \n",
+       "9               (5, 1)         (1, 1)  ...                   NaN   \n",
+       "10              (5, 1)         (1, 1)  ...                   NaN   \n",
+       "11              (5, 1)         (1, 1)  ...                   NaN   \n",
+       "12              (5, 1)         (1, 1)  ...                   NaN   \n",
+       "13              (5, 1)         (1, 1)  ...                   NaN   \n",
+       "\n",
+       "   MBconv13_stride  MBconv14_inp  MBconv14_oup MBconv14_kernel_size  \\\n",
+       "0              NaN           NaN           NaN                  NaN   \n",
+       "1              NaN           NaN           NaN                  NaN   \n",
+       "2              NaN           NaN           NaN                  NaN   \n",
+       "3              NaN           NaN           NaN                  NaN   \n",
+       "4           (1, 1)         720.0         120.0               (5, 5)   \n",
+       "5              NaN           NaN           NaN                  NaN   \n",
+       "6              NaN           NaN           NaN                  NaN   \n",
+       "7              NaN           NaN           NaN                  NaN   \n",
+       "8              NaN           NaN           NaN                  NaN   \n",
+       "9              NaN           NaN           NaN                  NaN   \n",
+       "10             NaN           NaN           NaN                  NaN   \n",
+       "11             NaN           NaN           NaN                  NaN   \n",
+       "12             NaN           NaN           NaN                  NaN   \n",
+       "13             NaN           NaN           NaN                  NaN   \n",
+       "\n",
+       "   MBconv14_stride  MBconv15_inp  MBconv15_oup MBconv15_kernel_size  \\\n",
+       "0              NaN           NaN           NaN                  NaN   \n",
+       "1              NaN           NaN           NaN                  NaN   \n",
+       "2              NaN           NaN           NaN                  NaN   \n",
+       "3              NaN           NaN           NaN                  NaN   \n",
+       "4           (1, 1)         720.0         200.0               (3, 3)   \n",
+       "5              NaN           NaN           NaN                  NaN   \n",
+       "6              NaN           NaN           NaN                  NaN   \n",
+       "7              NaN           NaN           NaN                  NaN   \n",
+       "8              NaN           NaN           NaN                  NaN   \n",
+       "9              NaN           NaN           NaN                  NaN   \n",
+       "10             NaN           NaN           NaN                  NaN   \n",
+       "11             NaN           NaN           NaN                  NaN   \n",
+       "12             NaN           NaN           NaN                  NaN   \n",
+       "13             NaN           NaN           NaN                  NaN   \n",
+       "\n",
+       "   MBconv15_stride  \n",
+       "0              NaN  \n",
+       "1              NaN  \n",
+       "2              NaN  \n",
+       "3              NaN  \n",
+       "4           (1, 1)  \n",
+       "5              NaN  \n",
+       "6              NaN  \n",
+       "7              NaN  \n",
+       "8              NaN  \n",
+       "9              NaN  \n",
+       "10             NaN  \n",
+       "11             NaN  \n",
+       "12             NaN  \n",
+       "13             NaN  \n",
+       "\n",
+       "[14 rows x 72 columns]"
+      ]
+     },
+     "execution_count": 61,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test['st/y'] = df_test['subseq'].apply(lambda x: 'y' if x[7]=='Y' else 'st')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test_st = df_test[df_test['st/y']=='st']\n",
+    "df_test_y = df_test[df_test['st/y']=='y']"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 14,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>subseq11</th>\n",
+       "      <th>pair</th>\n",
+       "      <th>st/y</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>HAND1</td>\n",
+       "      <td>Q64279</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>KERRRTESINSAFAE</td>\n",
+       "      <td>S109</td>\n",
+       "      <td>12518702.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSMUSP00000124951</td>\n",
+       "      <td>RRRTESINSAF</td>\n",
+       "      <td>O00444_RRRTESINSAF</td>\n",
+       "      <td>st</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>MPHEKHYTLCGTPNY</td>\n",
+       "      <td>T170</td>\n",
+       "      <td>480636.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000427568</td>\n",
+       "      <td>HEKHYTLCGTP</td>\n",
+       "      <td>O00444_HEKHYTLCGTP</td>\n",
+       "      <td>st</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>YSK1</td>\n",
+       "      <td>O00506</td>\n",
+       "      <td>PDCD10</td>\n",
+       "      <td>Q9BUL8</td>\n",
+       "      <td>FTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>VNLSAAQTLRAAFIK</td>\n",
+       "      <td>T43</td>\n",
+       "      <td>7452901.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.1606729892090855, 0.9617507091463667, 1.0...</td>\n",
+       "      <td>ENSP00000418160</td>\n",
+       "      <td>LSAAQTLRAAF</td>\n",
+       "      <td>O00506_LSAAQTLRAAF</td>\n",
+       "      <td>st</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>IKKG</td>\n",
+       "      <td>Q9Y6K9</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>LRDAIRQSNQILRER</td>\n",
+       "      <td>S68</td>\n",
+       "      <td>1226900.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000484275</td>\n",
+       "      <td>DAIRQSNQILR</td>\n",
+       "      <td>O14920_DAIRQSNQILR</td>\n",
+       "      <td>st</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>NFkB-p65</td>\n",
+       "      <td>Q04206</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>SGDEDFSSIADMDFS</td>\n",
+       "      <td>S536</td>\n",
+       "      <td>447800.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000433616</td>\n",
+       "      <td>DEDFSSIADMD</td>\n",
+       "      <td>O14920_DEDFSSIADMD</td>\n",
+       "      <td>st</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "  kinase  kin_id substrate  sub_id  \\\n",
+       "0   PLK4  O00444     HAND1  Q64279   \n",
+       "1   PLK4  O00444      PLK4  O00444   \n",
+       "2   YSK1  O00506    PDCD10  Q9BUL8   \n",
+       "3   IKKB  O14920      IKKG  Q9Y6K9   \n",
+       "4   IKKB  O14920  NFkB-p65  Q04206   \n",
+       "\n",
+       "                                              kinseq           subseq  \\\n",
+       "0  0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  KERRRTESINSAFAE   \n",
+       "1  0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  MPHEKHYTLCGTPNY   \n",
+       "2  FTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQ...  VNLSAAQTLRAAFIK   \n",
+       "3  0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  LRDAIRQSNQILRER   \n",
+       "4  0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  SGDEDFSSIADMDFS   \n",
+       "\n",
+       "  sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0        S109   12518702.0        human        mouse      1  263.0   \n",
+       "1        T170     480636.0        human        human      1  263.0   \n",
+       "2         T43    7452901.0        human        human      1  263.0   \n",
+       "3         S68    1226900.0        human        human      1  263.0   \n",
+       "4        S536     447800.0        human        human      1  263.0   \n",
+       "\n",
+       "                                              matrix         ensemble_id  \\\n",
+       "0  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSMUSP00000124951   \n",
+       "1  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000427568   \n",
+       "2  [[[1.1606729892090855, 0.9617507091463667, 1.0...     ENSP00000418160   \n",
+       "3  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000484275   \n",
+       "4  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000433616   \n",
+       "\n",
+       "      subseq11                pair st/y  \n",
+       "0  RRRTESINSAF  O00444_RRRTESINSAF   st  \n",
+       "1  HEKHYTLCGTP  O00444_HEKHYTLCGTP   st  \n",
+       "2  LSAAQTLRAAF  O00506_LSAAQTLRAAF   st  \n",
+       "3  DAIRQSNQILR  O14920_DAIRQSNQILR   st  \n",
+       "4  DEDFSSIADMD  O14920_DEDFSSIADMD   st  "
+      ]
+     },
+     "execution_count": 14,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test_st.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# test_pair = set(df_test['pair'])\n",
+    "test_pair = set(df_test_st['pair'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 16,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "5b0e93ece3b14f40ba6d5b35caddb313",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/3 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "46de661f5c5842c89ae8ef1c91f97efd",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/3 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "0957c7a484de480aa43b2e078c4398e7",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/3 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "9654b960e5f64fae8e5c1c7de89b3dd4",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/3 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ba33ce6bc30a457897a37ef11beca6fc",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/3 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/tmp/ipykernel_572123/976407143.py:38: SettingWithCopyWarning: \n",
+      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
+      "Try using .loc[row_indexer,col_indexer] = value instead\n",
+      "\n",
+      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
+      "  df['probs'] = ensemble\n",
+      "/tmp/ipykernel_572123/976407143.py:39: SettingWithCopyWarning: \n",
+      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
+      "Try using .loc[row_indexer,col_indexer] = value instead\n",
+      "\n",
+      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
+      "  df['answer'] = df['answer'].apply(lambda x: int(x))\n"
+     ]
+    }
+   ],
+   "source": [
+    "auc = ensemble(model, df_test_st)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 17,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.7115552487870236"
+      ]
+     },
+     "execution_count": 17,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk = pd.read_pickle(\"/home/hb/python/phospho/data/nwk/nwk_mapping_by_uniprot.pkl\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk['pair'] = nwk['kin_id'] + '_' + nwk['subseq']\n",
+    "netphorest_score_dt = {pair: netphorest_score  for pair, netphorest_score in zip(nwk['pair'], nwk['netphorest_score'])}\n",
+    "networkin_score_dt = {pair: networkin_score  for pair, networkin_score in zip(nwk['pair'], nwk['networkin_score'])}"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from collections import namedtuple\n",
+    "score_all_tp = namedtuple('score_all_tp', ['networkin', 'netphorest'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk_test = nwk[nwk['pair'].isin(df_test['pair'])]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>pair</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>52</th>\n",
+       "      <td>CDK1</td>\n",
+       "      <td>P06493</td>\n",
+       "      <td>AAK1</td>\n",
+       "      <td>ENSP00000385181</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>IQPALTPRKRA</td>\n",
+       "      <td>T389</td>\n",
+       "      <td>0.3539</td>\n",
+       "      <td>0.6944</td>\n",
+       "      <td>P06493_IQPALTPRKRA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>161</th>\n",
+       "      <td>IKKA</td>\n",
+       "      <td>O15111</td>\n",
+       "      <td>AATF</td>\n",
+       "      <td>ENSP00000225402</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>IERKTSSLDPN</td>\n",
+       "      <td>S477</td>\n",
+       "      <td>0.0206</td>\n",
+       "      <td>1.0765</td>\n",
+       "      <td>O15111_IERKTSSLDPN</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "    kinase  kin_id substrate      ensemble_id  kinseq       subseq  \\\n",
+       "52    CDK1  P06493      AAK1  ENSP00000385181     NaN  IQPALTPRKRA   \n",
+       "161   IKKA  O15111      AATF  ENSP00000225402     NaN  IERKTSSLDPN   \n",
+       "\n",
+       "    sub_mod_rsd  netphorest_score  networkin_score                pair  \n",
+       "52         T389            0.3539           0.6944  P06493_IQPALTPRKRA  \n",
+       "161        S477            0.0206           1.0765  O15111_IERKTSSLDPN  "
+      ]
+     },
+     "execution_count": 23,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk_test.head(2)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 45,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>networkin_score</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>P17252_REEILSEMKKV</td>\n",
+       "      <td>PKCA</td>\n",
+       "      <td>P17252</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>S154</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>1.0071</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>P05771_REEILSEMKKV</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>P05771</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>S154</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>1.3889</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>P17252_TKGHLSNRAII</td>\n",
+       "      <td>PKCA</td>\n",
+       "      <td>P17252</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>S369</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>1.7569</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>P05771_TKGHLSNRAII</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>P05771</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>S369</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>2.4948</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>Q05655_TKGHLSNRAII</td>\n",
+       "      <td>PKCD</td>\n",
+       "      <td>Q05655</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>S369</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>0.5110</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                 pair kinase  kin_id substrate      ensemble_id  kinseq  \\\n",
+       "0  P17252_REEILSEMKKV   PKCA  P17252      A1CF  ENSP00000363105     NaN   \n",
+       "1  P05771_REEILSEMKKV   PKCB  P05771      A1CF  ENSP00000363105     NaN   \n",
+       "2  P17252_TKGHLSNRAII   PKCA  P17252      A1CF  ENSP00000363105     NaN   \n",
+       "3  P05771_TKGHLSNRAII   PKCB  P05771      A1CF  ENSP00000363105     NaN   \n",
+       "4  Q05655_TKGHLSNRAII   PKCD  Q05655      A1CF  ENSP00000363105     NaN   \n",
+       "\n",
+       "        subseq sub_mod_rsd  netphorest_score  networkin_score  \n",
+       "0  REEILSEMKKV        S154            0.1576           1.0071  \n",
+       "1  REEILSEMKKV        S154            0.1576           1.3889  \n",
+       "2  TKGHLSNRAII        S369            0.3374           1.7569  \n",
+       "3  TKGHLSNRAII        S369            0.3374           2.4948  \n",
+       "4  TKGHLSNRAII        S369            0.3374           0.5110  "
+      ]
+     },
+     "execution_count": 45,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk = pd.read_pickle(\"/home/hb/python/phospho/data/nwk/nwk_mapping_by_uniprot.pkl\", )\n",
+    "nwk['kin_id'] = nwk['kin_id'].apply(lambda x: x.upper()) \n",
+    "nwk['subseq'] = nwk['subseq'].apply(lambda x: x.upper()) \n",
+    "nwk_pair = nwk['kin_id'] + '_' + nwk['subseq']\n",
+    "nwk.insert(0, 'pair', nwk_pair)\n",
+    "nwk.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 47,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from sklearn.preprocessing import MinMaxScaler\n",
+    "mm = MinMaxScaler()\n",
+    "nwk_log = np.log(nwk.networkin_score)\n",
+    "nwk_log = np.array(nwk_log).reshape(-1, 1)\n",
+    "nwk_log = mm.fit_transform(nwk_log)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 48,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk['log_scale'] = nwk_log"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 49,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>log_scale</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>177231</th>\n",
+       "      <td>P06493_SSEEDSPIKSD</td>\n",
+       "      <td>CDK1</td>\n",
+       "      <td>P06493</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>SSEEDSPIKSD</td>\n",
+       "      <td>S135</td>\n",
+       "      <td>0.3225</td>\n",
+       "      <td>0.6944</td>\n",
+       "      <td>0.053608</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>177232</th>\n",
+       "      <td>Q00526_SSEEDSPIKSD</td>\n",
+       "      <td>CDK3</td>\n",
+       "      <td>Q00526</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>SSEEDSPIKSD</td>\n",
+       "      <td>S135</td>\n",
+       "      <td>0.3225</td>\n",
+       "      <td>0.5236</td>\n",
+       "      <td>0.007500</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>177233</th>\n",
+       "      <td>P27361_SSEEDSPIKSD</td>\n",
+       "      <td>MAPK3</td>\n",
+       "      <td>P27361</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>SSEEDSPIKSD</td>\n",
+       "      <td>S135</td>\n",
+       "      <td>0.1783</td>\n",
+       "      <td>1.4275</td>\n",
+       "      <td>0.171303</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>177234</th>\n",
+       "      <td>Q13153_AKESASQHITE</td>\n",
+       "      <td>PAK1</td>\n",
+       "      <td>Q13153</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>AKESASQHITE</td>\n",
+       "      <td>S474</td>\n",
+       "      <td>0.0438</td>\n",
+       "      <td>0.7524</td>\n",
+       "      <td>0.066710</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>177235</th>\n",
+       "      <td>P05771_AKESASQHITE</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>P05771</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>AKESASQHITE</td>\n",
+       "      <td>S474</td>\n",
+       "      <td>0.0921</td>\n",
+       "      <td>0.8358</td>\n",
+       "      <td>0.083879</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                      pair kinase  kin_id substrate      ensemble_id  kinseq  \\\n",
+       "177231  P06493_SSEEDSPIKSD   CDK1  P06493      ZZZ3  ENSP00000359837     NaN   \n",
+       "177232  Q00526_SSEEDSPIKSD   CDK3  Q00526      ZZZ3  ENSP00000359837     NaN   \n",
+       "177233  P27361_SSEEDSPIKSD  MAPK3  P27361      ZZZ3  ENSP00000359837     NaN   \n",
+       "177234  Q13153_AKESASQHITE   PAK1  Q13153      ZZZ3  ENSP00000359837     NaN   \n",
+       "177235  P05771_AKESASQHITE   PKCB  P05771      ZZZ3  ENSP00000359837     NaN   \n",
+       "\n",
+       "             subseq sub_mod_rsd  netphorest_score  networkin_score  log_scale  \n",
+       "177231  SSEEDSPIKSD        S135            0.3225           0.6944   0.053608  \n",
+       "177232  SSEEDSPIKSD        S135            0.3225           0.5236   0.007500  \n",
+       "177233  SSEEDSPIKSD        S135            0.1783           1.4275   0.171303  \n",
+       "177234  AKESASQHITE        S474            0.0438           0.7524   0.066710  \n",
+       "177235  AKESASQHITE        S474            0.0921           0.8358   0.083879  "
+      ]
+     },
+     "execution_count": 49,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk.tail()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 50,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# pair Ïª¨ÎüºÏûàÍ≥†, Ïª¨ÎüºÎ™ÖÏ†ïÎ¶¨ÎêêÍ≥†, uniprot_id ÎßµÌïëÌñàÍ≥†, networkin_ScoreÎèÑ ÎßàÎ¨¥Î¶¨Îê®\n",
+    "nwk.to_pickle(\"/home/hb/python/phospho/data/nwk/0218_nwk_f.pkl\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 51,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk_test = nwk[nwk['pair'].isin(df_test['pair'])]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 53,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk_score = {pair: score_all_tp(nwk_s, npr_s) for pair, nwk_s, npr_s in zip(nwk_test['pair'], nwk_test['log_scale'], nwk_test['netphorest_score'])}"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 60,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test['nwk'] = df_test['pair'].apply(lambda x: nwk_score[x].networkin if x in nwk_score.keys() else np.nan)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 61,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test['npr'] = df_test['pair'].apply(lambda x: nwk_score[x].netphorest if x in nwk_score.keys() else np.nan)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 67,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test.dropna(subset=['nwk', 'npr'], inplace=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 68,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "auc_ppsp = sklearn.metrics.roc_auc_score(df_test['answer'], df_test[f'probs'])\n",
+    "auc_npf = sklearn.metrics.roc_auc_score(df_test['answer'], df_test[f'npr'])\n",
+    "auc_nwk = sklearn.metrics.roc_auc_score(df_test['answer'], df_test[f'nwk'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 71,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(0.7102616656134633, 0.4866818272524695, 0.7180266155585857)"
+      ]
+     },
+     "execution_count": 71,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc_ppsp, auc_npf, auc_nwk"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 72,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "1    2248\n",
+       "0     214\n",
+       "Name: answer, dtype: int64"
+      ]
+     },
+     "execution_count": 72,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test.answer.value_counts()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 73,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "2462"
+      ]
+     },
+     "execution_count": 73,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(df_test)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 78,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "st_subseq = [x for x in df_test['subseq'] if (x[7]=='S') or (x[7]=='T')]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 79,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test_st = df_test[df_test['subseq'].isin(st_subseq)]\n",
+    "df_test_st.reset_index(inplace=True, drop=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# # # pre\n",
+    "# df_test1 = pd.read_pickle(\"/home/hb/python/phospho/data/0111_new_data/train_test/test1.pickle\")\n",
+    "# df_test2 = pd.read_pickle(\"/home/hb/python/phospho/data/0111_new_data/train_test/test2.pickle\")\n",
+    "# df_test3 = pd.read_pickle(\"/home/hb/python/phospho/data/0111_new_data/train_test/test3.pickle\")\n",
+    "# # df_test1.tail()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 35,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# df_test1 = pd.read_pickle(\"/home/hb/python/phospho/data/0119_nwk_matching/test1.pickle\")\n",
+    "# df_test2 = pd.read_pickle(\"/home/hb/python/phospho/data/0119_nwk_matching/test2.pickle\")\n",
+    "# df_test3 = pd.read_pickle(\"/home/hb/python/phospho/data/0119_nwk_matching/test3.pickle\")\n",
+    "# df_test1.tail()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 80,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ba99d38af4954822929738158ed3ecc3",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "f0d5f7aeeb434104823c5b5f11930c6c",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ebcd1b8c9ff547f8bbd86fc6289704c4",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ccafc8f632a844bfa515159831fae5d8",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "1f7d863c36b54b4aaa652982d2da7464",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "f5aee9f4cb844c82926b50f760d6903d",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "6b45dcf42683451c9a3a35e8f2c7594f",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "9f2c9e38629d4751b14aaacb91369d1a",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "e9615c4bb3cd49508de9842967f1f211",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "9a4d524a58e04570994304422bf54456",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ab50af6397294f2b8ba706a8a62c38b0",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "727db41b492847b980f55c5c3f871304",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "2e2a364ed86b4fdeb1b62574da032d4f",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "842a646b15e145fb98c5175d014688f8",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "1675ab48b0ba4061a1445273b91cd155",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "4700d53dd3ee429faf1bb3d422d1c0c1",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "f0dfb20cd5b6406cac8cca9f2699aad6",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "10d612db08b140c4a31a15c5fee57ee4",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "e323e7ac8e8f4996ab351b55ce6f2ca8",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "7b9f18ce6e334be2aee5a5525bf3e2df",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "b8cfcd4f63de41e69e677fdedafe022d",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "3c44d467643c4b2ca5b893fee214c876",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "b5fc63d00b5c47949e92afbf86d837cd",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "45c2b5d9aa684e7fbb436ee15598328d",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "857482f994594d67a70e29cf5bba9a0c",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "auc_dict = {}\n",
+    "for i in range(0, 5):\n",
+    "    auc_dict[f'auc{i}'] = ensemble(globals()[f'model_list_DeepPP_w{i}syt1'], df_test)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 81,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "{'auc0': 0.878752645750757,\n",
+       " 'auc1': 0.8745278989052743,\n",
+       " 'auc2': 0.8725035798506958,\n",
+       " 'auc3': 0.8748872810946196,\n",
+       " 'auc4': 0.8811933781395609}"
+      ]
+     },
+     "execution_count": 81,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc_dict"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 50,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "ab12272ccd43482a9e27addd70c51ebe",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "7c2491370aea44acb8bbc5bd5d05abcd",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "e2b10b3415074cf889fe6620ce3b04f0",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "bb2af99edd8143f2809cc80247a8bedd",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "618e0bb3885241dea9e604c44f703f53",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/6 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "auc = ensemble(model_list_w0syt1, df_test)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 51,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.8725035798506958"
+      ]
+     },
+     "execution_count": 51,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 45,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>PPPLAPQSPQGGVMG</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000478927</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>ABL</td>\n",
+       "      <td>P00519</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...</td>\n",
+       "      <td>LKKTDRIYAMKVVKK</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1984151792931996, 1.0140984589384923, 1.0...</td>\n",
+       "      <td>ENSRNOP00000012924</td>\n",
+       "      <td>Abl</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>CDK1</td>\n",
+       "      <td>P06493</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...</td>\n",
+       "      <td>SGEEECRSQPRSISE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 0.981179362242806, 0.86...</td>\n",
+       "      <td>ENSMUSP00000137933</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>CK1A</td>\n",
+       "      <td>P48729</td>\n",
+       "      <td>PHLPP</td>\n",
+       "      <td>O60346</td>\n",
+       "      <td>YKLVRKIGSGSFGDIYLAINITNGEEVAVKLESQKARHPQLLYESK...</td>\n",
+       "      <td>GSKGLWDSLSVEEAV</td>\n",
+       "      <td>S1379</td>\n",
+       "      <td>22769302.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.981179362242806, 1.0232665395472176, 1.01...</td>\n",
+       "      <td>ENSP00000467279</td>\n",
+       "      <td>CK1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>CK2A1</td>\n",
+       "      <td>P68400</td>\n",
+       "      <td>SIRT1</td>\n",
+       "      <td>Q96EB6</td>\n",
+       "      <td>YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...</td>\n",
+       "      <td>FHGAEVYSDSEDDVL</td>\n",
+       "      <td>S659</td>\n",
+       "      <td>6855923.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.2104594520812995, 1.0639623447280337, 0.9...</td>\n",
+       "      <td>ENSP00000384063</td>\n",
+       "      <td>CK2</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "  kinase  kin_id substrate  sub_id  \\\n",
+       "0  RIPK3  Q9Y572       NaN     NaN   \n",
+       "1    ABL  P00519       NaN     NaN   \n",
+       "2   CDK1  P06493       NaN     NaN   \n",
+       "3   CK1A  P48729     PHLPP  O60346   \n",
+       "4  CK2A1  P68400     SIRT1  Q96EB6   \n",
+       "\n",
+       "                                              kinseq           subseq  \\\n",
+       "0  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  PPPLAPQSPQGGVMG   \n",
+       "1  ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...  LKKTDRIYAMKVVKK   \n",
+       "2  YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...  SGEEECRSQPRSISE   \n",
+       "3  YKLVRKIGSGSFGDIYLAINITNGEEVAVKLESQKARHPQLLYESK...  GSKGLWDSLSVEEAV   \n",
+       "4  YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...  FHGAEVYSDSEDDVL   \n",
+       "\n",
+       "  sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0         NaN          NaN          NaN        human      0    NaN   \n",
+       "1         NaN          NaN          NaN          rat      0    NaN   \n",
+       "2         NaN          NaN          NaN        mouse      0    NaN   \n",
+       "3       S1379   22769302.0        human        human      1  263.0   \n",
+       "4        S659    6855923.0        human        human      1  263.0   \n",
+       "\n",
+       "                                              matrix         ensemble_id  \\\n",
+       "0  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000478927   \n",
+       "1  [[[1.1984151792931996, 1.0140984589384923, 1.0...  ENSRNOP00000012924   \n",
+       "2  [[[1.0232665395472176, 0.981179362242806, 0.86...  ENSMUSP00000137933   \n",
+       "3  [[[0.981179362242806, 1.0232665395472176, 1.01...     ENSP00000467279   \n",
+       "4  [[[1.2104594520812995, 1.0639623447280337, 0.9...     ENSP00000384063   \n",
+       "\n",
+       "  family  \n",
+       "0   RIPK  \n",
+       "1    Abl  \n",
+       "2    CDK  \n",
+       "3    CK1  \n",
+       "4    CK2  "
+      ]
+     },
+     "execution_count": 45,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df = pd.read_pickle(\"/home/hb/python/phospho/data/0111_new_data/train_test/train1.pickle\")\n",
+    "df.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 47,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "tr_pair = df['kin_id'] + '_' + df['subseq']\n",
+    "tr_pair = set(tr_pair)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 48,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "      <th>probs</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>FAK</td>\n",
+       "      <td>Q05397</td>\n",
+       "      <td>FAK</td>\n",
+       "      <td>Q05397</td>\n",
+       "      <td>IELGRCIGEGQFGDVHQGIYMSPENPALAVAIKTCKNCTSDSVREK...</td>\n",
+       "      <td>IIDEEDTYTMPSTRD</td>\n",
+       "      <td>Y407</td>\n",
+       "      <td>447888.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.3951472984698037, 1.3951472984698037, 0.8...</td>\n",
+       "      <td>ENSP00000431023</td>\n",
+       "      <td>Fak</td>\n",
+       "      <td>0.632388</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>ABL</td>\n",
+       "      <td>P00519</td>\n",
+       "      <td>Rb</td>\n",
+       "      <td>P06400</td>\n",
+       "      <td>ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...</td>\n",
+       "      <td>RIPGGNIYISPLKSP</td>\n",
+       "      <td>Y805</td>\n",
+       "      <td>456752.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9656054162575665, 1.3951472984698037, 0.7...</td>\n",
+       "      <td>ENSP00000496005</td>\n",
+       "      <td>Abl</td>\n",
+       "      <td>0.639248</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>MELK</td>\n",
+       "      <td>Q14680</td>\n",
+       "      <td>MELK</td>\n",
+       "      <td>Q14680</td>\n",
+       "      <td>YELHETIGTGGFAKVKLACHILTGEMVAIKIMDKNTLGSDLPRIKT...</td>\n",
+       "      <td>SPERRCRSVELDLNQ</td>\n",
+       "      <td>S505</td>\n",
+       "      <td>2861409.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0232665395472176, 0.8860339595928756, 0.8...</td>\n",
+       "      <td>ENSP00000443550</td>\n",
+       "      <td>CAMKL</td>\n",
+       "      <td>0.774461</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>EMSY</td>\n",
+       "      <td>Q7Z589</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>KPRKRRRTNSSSSSP</td>\n",
+       "      <td>T207</td>\n",
+       "      <td>1210942.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9762857097579093, 0.8702280284582515, 0.9...</td>\n",
+       "      <td>ENSP00000436307</td>\n",
+       "      <td>PKA</td>\n",
+       "      <td>0.960219</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>SRC</td>\n",
+       "      <td>P12931</td>\n",
+       "      <td>tensin 3</td>\n",
+       "      <td>Q68CZ2</td>\n",
+       "      <td>0RLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQ...</td>\n",
+       "      <td>QDTSKFWYKADISRE</td>\n",
+       "      <td>Y1173</td>\n",
+       "      <td>9824600.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000407464</td>\n",
+       "      <td>Src</td>\n",
+       "      <td>0.472669</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "  kinase  kin_id substrate  sub_id  \\\n",
+       "0    FAK  Q05397       FAK  Q05397   \n",
+       "1    ABL  P00519        Rb  P06400   \n",
+       "2   MELK  Q14680      MELK  Q14680   \n",
+       "3  PKACA  P17612      EMSY  Q7Z589   \n",
+       "4    SRC  P12931  tensin 3  Q68CZ2   \n",
+       "\n",
+       "                                              kinseq           subseq  \\\n",
+       "0  IELGRCIGEGQFGDVHQGIYMSPENPALAVAIKTCKNCTSDSVREK...  IIDEEDTYTMPSTRD   \n",
+       "1  ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...  RIPGGNIYISPLKSP   \n",
+       "2  YELHETIGTGGFAKVKLACHILTGEMVAIKIMDKNTLGSDLPRIKT...  SPERRCRSVELDLNQ   \n",
+       "3  FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  KPRKRRRTNSSSSSP   \n",
+       "4  0RLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQ...  QDTSKFWYKADISRE   \n",
+       "\n",
+       "  sub_mod_rsd sub_position kin_oragnism sub_oragnism  answer length  \\\n",
+       "0        Y407     447888.0        human        human       1  263.0   \n",
+       "1        Y805     456752.0        human        human       1  263.0   \n",
+       "2        S505    2861409.0        human        human       1  263.0   \n",
+       "3        T207    1210942.0        human        human       1  263.0   \n",
+       "4       Y1173    9824600.0        human        human       1  263.0   \n",
+       "\n",
+       "                                              matrix      ensemble_id family  \\\n",
+       "0  [[[1.3951472984698037, 1.3951472984698037, 0.8...  ENSP00000431023    Fak   \n",
+       "1  [[[0.9656054162575665, 1.3951472984698037, 0.7...  ENSP00000496005    Abl   \n",
+       "2  [[[1.0232665395472176, 0.8860339595928756, 0.8...  ENSP00000443550  CAMKL   \n",
+       "3  [[[0.9762857097579093, 0.8702280284582515, 0.9...  ENSP00000436307    PKA   \n",
+       "4  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000407464    Src   \n",
+       "\n",
+       "      probs  \n",
+       "0  0.632388  \n",
+       "1  0.639248  \n",
+       "2  0.774461  \n",
+       "3  0.960219  \n",
+       "4  0.472669  "
+      ]
+     },
+     "execution_count": 48,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "tt_pair = df_test1['kin_id'] + '_' + df_test1['subseq']\n",
+    "tt_pair = set(tt_pair)\n",
+    "df_test1.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 59,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>subseq11</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>probs</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>PLK4_RRRTESINSAF</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>HAND1</td>\n",
+       "      <td>Q64279</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>KERRRTESINSAFAE</td>\n",
+       "      <td>S109</td>\n",
+       "      <td>12518702.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSMUSP00000124951</td>\n",
+       "      <td>RRRTESINSAF</td>\n",
+       "      <td>1.5492</td>\n",
+       "      <td>0.0249</td>\n",
+       "      <td>0.563</td>\n",
+       "      <td>0.909146</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>PLK4_HEKHYTLCGTP</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>MPHEKHYTLCGTPNY</td>\n",
+       "      <td>T170</td>\n",
+       "      <td>480636.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000427568</td>\n",
+       "      <td>HEKHYTLCGTP</td>\n",
+       "      <td>24.4009</td>\n",
+       "      <td>0.0965</td>\n",
+       "      <td>1.000</td>\n",
+       "      <td>0.811036</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>YSK1_LSAAQTLRAAF</td>\n",
+       "      <td>YSK1</td>\n",
+       "      <td>O00506</td>\n",
+       "      <td>PDCD10</td>\n",
+       "      <td>Q9BUL8</td>\n",
+       "      <td>FTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>VNLSAAQTLRAAFIK</td>\n",
+       "      <td>T43</td>\n",
+       "      <td>7452901.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.1606729892090855, 0.9617507091463667, 1.0...</td>\n",
+       "      <td>ENSP00000418160</td>\n",
+       "      <td>LSAAQTLRAAF</td>\n",
+       "      <td>36.6294</td>\n",
+       "      <td>0.1918</td>\n",
+       "      <td>0.999</td>\n",
+       "      <td>0.491396</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "               pair kinase  kin_id substrate  sub_id  \\\n",
+       "0  PLK4_RRRTESINSAF   PLK4  O00444     HAND1  Q64279   \n",
+       "1  PLK4_HEKHYTLCGTP   PLK4  O00444      PLK4  O00444   \n",
+       "2  YSK1_LSAAQTLRAAF   YSK1  O00506    PDCD10  Q9BUL8   \n",
+       "\n",
+       "                                              kinseq           subseq  \\\n",
+       "0  0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  KERRRTESINSAFAE   \n",
+       "1  0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  MPHEKHYTLCGTPNY   \n",
+       "2  FTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQ...  VNLSAAQTLRAAFIK   \n",
+       "\n",
+       "  sub_mod_rsd sub_position kin_oragnism sub_oragnism  answer length  \\\n",
+       "0        S109   12518702.0        human        mouse       1  263.0   \n",
+       "1        T170     480636.0        human        human       1  263.0   \n",
+       "2         T43    7452901.0        human        human       1  263.0   \n",
+       "\n",
+       "                                              matrix         ensemble_id  \\\n",
+       "0  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSMUSP00000124951   \n",
+       "1  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000427568   \n",
+       "2  [[[1.1606729892090855, 0.9617507091463667, 1.0...     ENSP00000418160   \n",
+       "\n",
+       "      subseq11  networkin_score  netphorest_score  string_score     probs  \n",
+       "0  RRRTESINSAF           1.5492            0.0249         0.563  0.909146  \n",
+       "1  HEKHYTLCGTP          24.4009            0.0965         1.000  0.811036  \n",
+       "2  LSAAQTLRAAF          36.6294            0.1918         0.999  0.491396  "
+      ]
+     },
+     "execution_count": 59,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test1['kinase'] = df_test1['kinase'].apply(lambda x: x.upper()) \n",
+    "df_test1['subseq11'] = df_test1['subseq'].apply(lambda x: x[2:-2])\n",
+    "df_test1['pair'] = df_test1['kinase'] + '_' + df_test1['subseq11']\n",
+    "df_test1.head(3)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 95,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>substrate_id</th>\n",
+       "      <th>#substrate</th>\n",
+       "      <th>position</th>\n",
+       "      <th>id</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>tree</th>\n",
+       "      <th>netphorest_group</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_identifier</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>substrate_name</th>\n",
+       "      <th>sequence</th>\n",
+       "      <th>string_path</th>\n",
+       "      <th>kinase</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>PKCA_REEILSEMKKV</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.0071</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>PKCB_REEILSEMKKV</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>1.3889</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>PKCZ_REEILSEMKKV</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCzeta</td>\n",
+       "      <td>0.5163</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1685</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000367830, 0.6584 ENSP00000226574, 0.727...</td>\n",
+       "      <td>PKCZ</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>PKCA_TKGHLSNRAII</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>369</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.7569</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>PKCB_TKGHLSNRAII</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>369</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>2.4948</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "               pair substrate     substrate_id              #substrate  \\\n",
+       "0  PKCA_REEILSEMKKV      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "1  PKCB_REEILSEMKKV      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "2  PKCZ_REEILSEMKKV      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "3  PKCA_TKGHLSNRAII      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "4  PKCB_TKGHLSNRAII      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "\n",
+       "   position        id  networkin_score tree netphorest_group  \\\n",
+       "0       154  PKCalpha           1.0071  KIN        PKC_group   \n",
+       "1       154   PKCbeta           1.3889  KIN        PKC_group   \n",
+       "2       154   PKCzeta           0.5163  KIN        PKC_group   \n",
+       "3       369  PKCalpha           1.7569  KIN        PKC_group   \n",
+       "4       369   PKCbeta           2.4948  KIN        PKC_group   \n",
+       "\n",
+       "   netphorest_score string_identifier  string_score substrate_name  \\\n",
+       "0            0.1576   ENSP00000282641        0.1738           A1CF   \n",
+       "1            0.1576   ENSP00000282641        0.1232           A1CF   \n",
+       "2            0.1576   ENSP00000282641        0.1685           A1CF   \n",
+       "3            0.3374   ENSP00000282641        0.1738           A1CF   \n",
+       "4            0.3374   ENSP00000282641        0.1232           A1CF   \n",
+       "\n",
+       "      sequence                                        string_path kinase  \n",
+       "0  REEILSEMKKV  ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA  \n",
+       "1  REEILSEMKKV  ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB  \n",
+       "2  REEILSEMKKV  ENSP00000367830, 0.6584 ENSP00000226574, 0.727...   PKCZ  \n",
+       "3  TKGHLSNRAII  ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA  \n",
+       "4  TKGHLSNRAII  ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB  "
+      ]
+     },
+     "execution_count": 95,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk = pd.read_pickle(\"/home/hb/python/phospho/data/benchmark_data/nwk.pickle\", )\n",
+    "nwk['kinase'] = nwk['kinase'].apply(lambda x: x.upper()) \n",
+    "nwk['sequence'] = nwk['sequence'].apply(lambda x: x.upper()) \n",
+    "nwk_pair = nwk['kinase'] + '_' + nwk['sequence']\n",
+    "nwk.insert(0, 'pair', nwk_pair)\n",
+    "nwk.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 89,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from sklearn.preprocessing import MinMaxScaler\n",
+    "mm = MinMaxScaler()\n",
+    "nwk_log = np.log(nwk.networkin_score)\n",
+    "nwk_log = np.array(nwk_log).reshape(-1, 1)\n",
+    "nwk_log = mm.fit_transform(nwk_log)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 104,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk['log_scale'] = nwk_log"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 112,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk_scale = np.array(nwk.networkin_score)\n",
+    "nwk_scale =  nwk_scale.reshape(-1, 1)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 113,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk_scale = mm.fit_transform(nwk_scale)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 114,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk['nwk_scale'] = nwk_scale"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 117,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>substrate_id</th>\n",
+       "      <th>#substrate</th>\n",
+       "      <th>position</th>\n",
+       "      <th>id</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>tree</th>\n",
+       "      <th>netphorest_group</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_identifier</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>substrate_name</th>\n",
+       "      <th>sequence</th>\n",
+       "      <th>string_path</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>log_scale</th>\n",
+       "      <th>nwk_scale</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>PKCA_REEILSEMKKV</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.0071</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "      <td>0.114328</td>\n",
+       "      <td>0.002227</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>PKCB_REEILSEMKKV</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>1.3889</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>0.166826</td>\n",
+       "      <td>0.003904</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>PKCZ_REEILSEMKKV</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCzeta</td>\n",
+       "      <td>0.5163</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1685</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000367830, 0.6584 ENSP00000226574, 0.727...</td>\n",
+       "      <td>PKCZ</td>\n",
+       "      <td>0.005207</td>\n",
+       "      <td>0.000071</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "               pair substrate     substrate_id              #substrate  \\\n",
+       "0  PKCA_REEILSEMKKV      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "1  PKCB_REEILSEMKKV      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "2  PKCZ_REEILSEMKKV      A1CF  ENSP00000363105  A1CF (ENSP00000363105)   \n",
+       "\n",
+       "   position        id  networkin_score tree netphorest_group  \\\n",
+       "0       154  PKCalpha           1.0071  KIN        PKC_group   \n",
+       "1       154   PKCbeta           1.3889  KIN        PKC_group   \n",
+       "2       154   PKCzeta           0.5163  KIN        PKC_group   \n",
+       "\n",
+       "   netphorest_score string_identifier  string_score substrate_name  \\\n",
+       "0            0.1576   ENSP00000282641        0.1738           A1CF   \n",
+       "1            0.1576   ENSP00000282641        0.1232           A1CF   \n",
+       "2            0.1576   ENSP00000282641        0.1685           A1CF   \n",
+       "\n",
+       "      sequence                                        string_path kinase  \\\n",
+       "0  REEILSEMKKV  ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA   \n",
+       "1  REEILSEMKKV  ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB   \n",
+       "2  REEILSEMKKV  ENSP00000367830, 0.6584 ENSP00000226574, 0.727...   PKCZ   \n",
+       "\n",
+       "   log_scale  nwk_scale  \n",
+       "0   0.114328   0.002227  \n",
+       "1   0.166826   0.003904  \n",
+       "2   0.005207   0.000071  "
+      ]
+     },
+     "execution_count": 117,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk.head(3)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 130,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "scores = namedtuple('scores_nt', ['nwk_log', 'nwk_scale' 'netphorest_score', 'string_score'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 132,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "k = scores(3, 3, 3)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 133,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "scores_nt(nwk_log=3, nwk_scalenetphorest_score=3, string_score=3)"
+      ]
+     },
+     "execution_count": 133,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "k"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 137,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from collections import namedtuple\n",
+    "# import dill\n",
+    "scores_nt = namedtuple('scores_nt', ['nwk_log', 'nwk_scale', 'netphorest_score', 'string_score'])\n",
+    "nwk_score = {pair: scores_nt(nwk_log, nwk_scale, npr_score, string_score) \n",
+    "                for pair, nwk_log, nwk_scale, npr_score, string_score in \n",
+    "            zip(nwk.pair, nwk.log_scale, nwk.nwk_scale, nwk.netphorest_score, nwk.string_score)}"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 138,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "ppsp_nwk_log_score = [nwk_score[x].nwk_log if x in nwk_score.keys() else np.NaN for x in df_test1.pair ]\n",
+    "ppsp_nwk_score = [nwk_score[x].nwk_scale if x in nwk_score.keys() else np.NaN for x in df_test1.pair ]\n",
+    "ppsp_npr_score = [nwk_score[x].netphorest_score if x in nwk_score.keys() else np.NaN for x in df_test1.pair ]\n",
+    "ppsp_str_score = [nwk_score[x].string_score if x in nwk_score.keys() else np.NaN for x in df_test1.pair ]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 139,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test1['nwk_scale'] = ppsp_nwk_score\n",
+    "df_test1['nwk_log'] = ppsp_nwk_log_score\n",
+    "df_test1['netphorest_score'] = ppsp_npr_score\n",
+    "df_test1['string_score'] = ppsp_str_score\n",
+    "df_in_nwk = df_test1.dropna(subset=['networkin_score'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 140,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "3498"
+      ]
+     },
+     "execution_count": 140,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_in_nwk.reset_index(inplace=True, drop=True)\n",
+    "len(df_in_nwk)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 141,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>...</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>subseq11</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>probs</th>\n",
+       "      <th>nwk_scale</th>\n",
+       "      <th>nwk_log</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>PLK4_RRRTESINSAF</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>HAND1</td>\n",
+       "      <td>Q64279</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>KERRRTESINSAFAE</td>\n",
+       "      <td>S109</td>\n",
+       "      <td>12518702.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>...</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSMUSP00000124951</td>\n",
+       "      <td>RRRTESINSAF</td>\n",
+       "      <td>1.5492</td>\n",
+       "      <td>0.0249</td>\n",
+       "      <td>0.563</td>\n",
+       "      <td>0.909146</td>\n",
+       "      <td>0.004609</td>\n",
+       "      <td>0.184665</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>PLK4_HEKHYTLCGTP</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>MPHEKHYTLCGTPNY</td>\n",
+       "      <td>T170</td>\n",
+       "      <td>480636.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>...</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000427568</td>\n",
+       "      <td>HEKHYTLCGTP</td>\n",
+       "      <td>24.4009</td>\n",
+       "      <td>0.0965</td>\n",
+       "      <td>1.000</td>\n",
+       "      <td>0.811036</td>\n",
+       "      <td>0.104993</td>\n",
+       "      <td>0.634921</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>YSK1_LSAAQTLRAAF</td>\n",
+       "      <td>YSK1</td>\n",
+       "      <td>O00506</td>\n",
+       "      <td>PDCD10</td>\n",
+       "      <td>Q9BUL8</td>\n",
+       "      <td>FTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>VNLSAAQTLRAAFIK</td>\n",
+       "      <td>T43</td>\n",
+       "      <td>7452901.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>...</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.1606729892090855, 0.9617507091463667, 1.0...</td>\n",
+       "      <td>ENSP00000418160</td>\n",
+       "      <td>LSAAQTLRAAF</td>\n",
+       "      <td>36.6294</td>\n",
+       "      <td>0.1918</td>\n",
+       "      <td>0.999</td>\n",
+       "      <td>0.491396</td>\n",
+       "      <td>0.158711</td>\n",
+       "      <td>0.701267</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>IKKB_DAIRQSNQILR</td>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>IKKG</td>\n",
+       "      <td>Q9Y6K9</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>LRDAIRQSNQILRER</td>\n",
+       "      <td>S68</td>\n",
+       "      <td>1226900.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>...</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000484275</td>\n",
+       "      <td>DAIRQSNQILR</td>\n",
+       "      <td>6.0689</td>\n",
+       "      <td>0.0344</td>\n",
+       "      <td>0.999</td>\n",
+       "      <td>0.372514</td>\n",
+       "      <td>0.024463</td>\n",
+       "      <td>0.407669</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>IKKB_DEDFSSIADMD</td>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>NFkB-p65</td>\n",
+       "      <td>Q04206</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>SGDEDFSSIADMDFS</td>\n",
+       "      <td>S536</td>\n",
+       "      <td>447800.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>...</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000433616</td>\n",
+       "      <td>DEDFSSIADMD</td>\n",
+       "      <td>2.5318</td>\n",
+       "      <td>0.0293</td>\n",
+       "      <td>0.999</td>\n",
+       "      <td>0.676424</td>\n",
+       "      <td>0.008925</td>\n",
+       "      <td>0.264887</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>5 rows √ó 22 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "               pair kinase  kin_id substrate  sub_id  \\\n",
+       "0  PLK4_RRRTESINSAF   PLK4  O00444     HAND1  Q64279   \n",
+       "1  PLK4_HEKHYTLCGTP   PLK4  O00444      PLK4  O00444   \n",
+       "2  YSK1_LSAAQTLRAAF   YSK1  O00506    PDCD10  Q9BUL8   \n",
+       "3  IKKB_DAIRQSNQILR   IKKB  O14920      IKKG  Q9Y6K9   \n",
+       "4  IKKB_DEDFSSIADMD   IKKB  O14920  NFkB-p65  Q04206   \n",
+       "\n",
+       "                                              kinseq           subseq  \\\n",
+       "0  0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  KERRRTESINSAFAE   \n",
+       "1  0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  MPHEKHYTLCGTPNY   \n",
+       "2  FTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQ...  VNLSAAQTLRAAFIK   \n",
+       "3  0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  LRDAIRQSNQILRER   \n",
+       "4  0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  SGDEDFSSIADMDFS   \n",
+       "\n",
+       "  sub_mod_rsd sub_position kin_oragnism  ... length  \\\n",
+       "0        S109   12518702.0        human  ...  263.0   \n",
+       "1        T170     480636.0        human  ...  263.0   \n",
+       "2         T43    7452901.0        human  ...  263.0   \n",
+       "3         S68    1226900.0        human  ...  263.0   \n",
+       "4        S536     447800.0        human  ...  263.0   \n",
+       "\n",
+       "                                              matrix         ensemble_id  \\\n",
+       "0  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSMUSP00000124951   \n",
+       "1  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000427568   \n",
+       "2  [[[1.1606729892090855, 0.9617507091463667, 1.0...     ENSP00000418160   \n",
+       "3  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000484275   \n",
+       "4  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000433616   \n",
+       "\n",
+       "      subseq11 networkin_score netphorest_score  string_score     probs  \\\n",
+       "0  RRRTESINSAF          1.5492           0.0249         0.563  0.909146   \n",
+       "1  HEKHYTLCGTP         24.4009           0.0965         1.000  0.811036   \n",
+       "2  LSAAQTLRAAF         36.6294           0.1918         0.999  0.491396   \n",
+       "3  DAIRQSNQILR          6.0689           0.0344         0.999  0.372514   \n",
+       "4  DEDFSSIADMD          2.5318           0.0293         0.999  0.676424   \n",
+       "\n",
+       "   nwk_scale   nwk_log  \n",
+       "0   0.004609  0.184665  \n",
+       "1   0.104993  0.634921  \n",
+       "2   0.158711  0.701267  \n",
+       "3   0.024463  0.407669  \n",
+       "4   0.008925  0.264887  \n",
+       "\n",
+       "[5 rows x 22 columns]"
+      ]
+     },
+     "execution_count": 141,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_in_nwk.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 68,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "auc_ppsp = sklearn.metrics.roc_auc_score(df_in_nwk['answer'], df_in_nwk[f'probs'])\n",
+    "auc_npf = sklearn.metrics.roc_auc_score(df_in_nwk['answer'], df_in_nwk[f'netphorest_score'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 143,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "auc_nwk_log = sklearn.metrics.roc_auc_score(df_in_nwk['answer'], df_in_nwk[f'nwk_log'])\n",
+    "auc_nwk_log_scale = sklearn.metrics.roc_auc_score(df_in_nwk['answer'], df_in_nwk[f'nwk_scale'])\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 144,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.7242918609208568"
+      ]
+     },
+     "execution_count": 144,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc_nwk_log"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 145,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.7242918609208568"
+      ]
+     },
+     "execution_count": 145,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc_nwk_log_scale"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 69,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.6772830325957269"
+      ]
+     },
+     "execution_count": 69,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc_ppsp"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 70,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.500201598496348"
+      ]
+     },
+     "execution_count": 70,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "auc_npf"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 38,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "count    581.000000\n",
+       "mean       5.584464\n",
+       "std        7.408278\n",
+       "min        0.505900\n",
+       "25%        1.174900\n",
+       "50%        2.406200\n",
+       "75%        7.063900\n",
+       "max       40.855200\n",
+       "Name: networkin_score, dtype: float64"
+      ]
+     },
+     "execution_count": 38,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_in_nwk.networkin_score.describe()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 39,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "count    581.000000\n",
+       "mean       1.026915\n",
+       "std        1.157722\n",
+       "min       -0.681416\n",
+       "25%        0.161183\n",
+       "50%        0.878049\n",
+       "75%        1.954997\n",
+       "max        3.710034\n",
+       "Name: networkin_score, dtype: float64"
+      ]
+     },
+     "execution_count": 39,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.log(df_in_nwk.networkin_score).describe()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "{'AURB_DLTYGNRYKNVKLPD',\n",
+       " 'ERK2_KVYFLPITPHYVTQV',\n",
+       " 'SRC_PSKLKRSYSSPDITQ',\n",
+       " 'SRC_GLTTSQPSPAHYSYP',\n",
+       " 'IKKA_SQRQRSTSTPNVHMV',\n",
+       " 'CDK4_ETLPISSTPSKSVLP',\n",
+       " 'AURB_KRQQARKTASVLSKD',\n",
+       " 'ERK2_ELGSQEGYVPKNFID',\n",
+       " 'P38D_TAADMYLSPVRSPKK',\n",
+       " 'CK2A1_HAATRPDYISWGTQE',\n",
+       " 'PAK5_QASSTPLSPTRITRL',\n",
+       " 'INSR_SEELDENYVPMNPNS',\n",
+       " 'CHK1_EVVGGTDSSMDVFHL',\n",
+       " 'CHK2_KGKKFLQYNRLQLSR',\n",
+       " 'PKACA_RARRGSSSDEEGGPK',\n",
+       " 'PKACA_SSRWSKDYDVCVCHS',\n",
+       " 'AURB_LYNEYIVYDIAQVNL',\n",
+       " 'EGFR_ETRICKIYDSPCLPE',\n",
+       " 'AMPKA1_AQVSRRISFSASHRL',\n",
+       " 'YES_GLDPVEVYESLPEEL',\n",
+       " 'CDK6_VHPATPISPGRASGM',\n",
+       " 'MST1_VEFQRAQSLLSTDRE',\n",
+       " 'CDK1_EKASLQKSISITSAL',\n",
+       " 'GRK6_GQISAGYSPVIDCHT',\n",
+       " 'CHK1_AARKSAPSTGGVKKP',\n",
+       " 'CDK7_GEMDTTSYDVSVLNS',\n",
+       " 'AMPKA1_PVRMRRNSFTPLSSS',\n",
+       " 'ERK1_SSSNRPFTPPTSTGG',\n",
+       " 'ERK2_GSPRTPVSPVKFSPG',\n",
+       " 'EPHA4_VNGHLDSYEKVTQLP',\n",
+       " 'JNK1_FITPTGHSLKSLDLV',\n",
+       " 'SRC_GRYHRGGYRPVWNRR',\n",
+       " 'ERK2_VSRVPYPSPTCVKSE',\n",
+       " 'ERK2_LLDACGFYWGPLSVH',\n",
+       " 'CDK1_PGTDDVFTPAPSDSP',\n",
+       " 'PRKD1_DNVRYGISNIDTTIE',\n",
+       " 'PAK2_ELDELMASLSDFKIQ',\n",
+       " 'ERK2_DEHSSDPYHSGYEMP',\n",
+       " 'SRC_SAEEAPLYSKVTPRA',\n",
+       " 'CHK1_MLKRRNVSSFPDDAT',\n",
+       " 'ERK2_CQLGQRIYQYIQSRF',\n",
+       " 'ERK2_LQNASPHYQNIKENC',\n",
+       " 'TTBK1_SNVSSTGSIDMVDSP',\n",
+       " 'PRKD1_QNHFVDEYDPTIEDS',\n",
+       " 'CDK2_SSMPGGSTPVSSANM',\n",
+       " 'CK2A1_LQRALALSRQEIDME',\n",
+       " 'DAPK1_LSGLANYTNLPQGSR',\n",
+       " 'PLK1_SSGKGAVSEKSNFLF',\n",
+       " 'CDK14_VVGIDLGTTNSCVAV',\n",
+       " 'DYRK1A_NVDRGAGSIREAGGA',\n",
+       " 'JNK1_SAKHQQQSPVSQSMQ',\n",
+       " 'CDK5_SIKSEPISPPRDRMT',\n",
+       " 'LMR2_PRPLRRESEI_____',\n",
+       " 'GSK3B_YEDAGSHYLCLLKAR',\n",
+       " 'P38A_LEIVNHRSPSREKKR',\n",
+       " 'TAK1_LGPDRFSTLTDDPSP',\n",
+       " 'MLK3_ALPELDRTLSECAEM',\n",
+       " 'IKKE_SGRARTSSFAEPGGG',\n",
+       " 'PKACA_NVKCVAPYPSLLSSE',\n",
+       " 'CK2A1_LNTIGLIYEKISLPK',\n",
+       " 'CDK8___MSRRFTVTSLPPA',\n",
+       " 'PKACA_SFENLMATKYGPVVY',\n",
+       " 'MELK_SPERRCRSVELDLNQ',\n",
+       " 'MEKK2_QDYKKRLSVELTSSL',\n",
+       " 'PDK1_SDGATMKTFCGTPEY',\n",
+       " 'NEK2_LGYPFALSKSSMYTV',\n",
+       " 'PAK2_PATGPTNSSSAKKKD',\n",
+       " 'PRKD1_LGAEEKEYHAEGGKV',\n",
+       " 'CHK1_NVLSPLPSQAMDDLM',\n",
+       " 'SRC_VRMQALTYLQRALLV',\n",
+       " 'ERK1_QQVQAQLSPLQNISP',\n",
+       " 'CDK1_PVLQKTSSSITLQAA',\n",
+       " 'PLK4_VRMQALTYLQRALLV',\n",
+       " 'ABL_EQCEYLSYDASQWEF',\n",
+       " 'JNK2_REVRRRQSVELHSPQ',\n",
+       " 'IGF1R_DASSQDCYDIPRAFP',\n",
+       " 'ROCK2_KPAPRQVSLPVTKST',\n",
+       " 'PKACA_FNIKARASSSPVILV',\n",
+       " 'GRK2_HNSSQMKSMSTFIEE',\n",
+       " 'CDK2_TSGGVSESPSGFSKH',\n",
+       " 'ILK_KFDTRRFSADAARFQ',\n",
+       " 'GSK3B_QGCSREASPSRLSVA',\n",
+       " 'CDK1_DPEMEEDSYDSFGEP',\n",
+       " 'SYK_EHPNVIRYFCTEKDR',\n",
+       " 'CDK6_SKSVLPRTPESWRLT',\n",
+       " 'PAK6_TSAQGQPSPGTSAPG',\n",
+       " 'CK2A1_QDNGAEDSGDTEDEL',\n",
+       " 'CK2A1_LKEAEEESSGGEEED',\n",
+       " 'MAPKAPK2_EERVVVISSSEDSDA',\n",
+       " 'CHK2_HPWVRANSRRVLPPS',\n",
+       " 'SRC_HKPLEGKYEWQEVEK',\n",
+       " 'ERK2_HAATRPDYISWGTQE',\n",
+       " 'CK2A1_PDDDTDMYNTPYTYN',\n",
+       " 'LRRK2_LAEKMRRTSVE____',\n",
+       " 'CDK2_APRPVPGSPARDAPA',\n",
+       " 'SRC_IVKMLEKYLKGEDPF',\n",
+       " 'NIK_PIPYIYGSRGPTEAD',\n",
+       " 'CDK5_RVKGRTWTLCGTPEY',\n",
+       " 'ERK1_PGTPPPPSPPSFPPH',\n",
+       " 'JNK1_GILARRPSYRKILKD',\n",
+       " 'CDK1_MTGSTPCSSMSNHTK',\n",
+       " 'TYRO3_DRVKSTAYLSPQELE',\n",
+       " 'PKACA_SDLSRRSSSTMSKSE',\n",
+       " 'CK1A_GSGNNSYSGSNSGAA',\n",
+       " 'PLK1_AVCADPCSLIPTPDK',\n",
+       " 'CDK2_LSPVAPLSPARLQGA',\n",
+       " 'CHK2_NNDQYKLYSKHFTLK',\n",
+       " 'CK2A1_KGATKESSEKDRGRD',\n",
+       " 'ABL_LHSEPPVYANLSNFN',\n",
+       " 'PLK1_EEDGEEKSPSKKKKK',\n",
+       " 'ABL_YVHVNATYVNVKCVA',\n",
+       " 'FAK_GVVDSGVYAVPPPAE',\n",
+       " 'CK2A2_RAAMFPETLDEGMQI',\n",
+       " 'CDK5_RESSRDTSPVRSFQP',\n",
+       " 'PKG1_DNKLRRYTTFSKRKT',\n",
+       " 'CK2A1_LSGEDDAYCTFPSRD',\n",
+       " 'CDK2_SDLPVPRTPGSGAGE',\n",
+       " 'LKB1_NSKERHNSVECLDGL',\n",
+       " 'MST4_RLERFFDSEDEDFEI',\n",
+       " 'GSK3B_SAVKNEEYFMFPEPK',\n",
+       " 'RAF1_SKPSGNDSCELRNLK',\n",
+       " 'PKACA_TDASRRSSEASQSDG',\n",
+       " 'CAMK2A_KKRPQRATSNVFAMF',\n",
+       " 'ITK_EGRNPGFYVEANPMP',\n",
+       " 'CDK1_SSTSISGSLFDKRRL',\n",
+       " 'BUB1_KIISSLSSAFHVFED',\n",
+       " 'SRC_GGEQDYDYLNDWGPR',\n",
+       " 'CK2A1_RRIAVEYSDSEDDSS',\n",
+       " 'TTK_LGQRIYQYIQSRFYR',\n",
+       " 'RET_EGRNPGFYVEANPMP',\n",
+       " 'ABL_QVFYNSEYGELSEPS',\n",
+       " 'P38B_TEVEDTLTPPPSDAG',\n",
+       " 'KIT_SFFSSPPYFED____',\n",
+       " 'ERK1_TQSKPVSSPFPTKPL',\n",
+       " 'IKKE_ASFKKMVTPKKRVRR',\n",
+       " 'FGR_TTLAATTYQSEKPSV',\n",
+       " 'CHK2_IPPARMMSTESANSF',\n",
+       " 'SRC_LIFIEIAYKRHKDAR',\n",
+       " 'CDK2_RQMSSQNSPSRLNIQ',\n",
+       " 'PAK1_ELDELMASLSDFKFM',\n",
+       " 'ABL_NIMRTYTYEKLLWTT',\n",
+       " 'PRKD1_KSKELPLYCSGGLRF',\n",
+       " 'PAK5_SSLPVPNSAYGGPDF',\n",
+       " 'SRC_SESTNHIYSNLANCS',\n",
+       " 'CDK4_PGGNIYISPLKSPYK',\n",
+       " 'IKKA_SSPTAAGTPNKETAG',\n",
+       " 'STLK3_LFEEEMDTSPMVSSL',\n",
+       " 'MAPKAPK2_NAPTSHVTPSVKKRS',\n",
+       " 'LYN_HTVEAVAYAPKKELI',\n",
+       " 'GSK3B_SEPVKDPYVMFPQNA',\n",
+       " 'GRK2_NQDPVSPSLVQGRIV',\n",
+       " 'CK2A1_NGMNQQAYAYPATAA',\n",
+       " 'MAPKAPK2_CRACRLKSTCIYGGA',\n",
+       " 'ETK_KKVSSTHYYLLPERP',\n",
+       " 'PLK1_GSILSDISFDKTDES',\n",
+       " 'ERK1_AEGSHSNSPTNMAPS',\n",
+       " 'ULK1_DWVFINYTYKRFEGL',\n",
+       " 'FER_____MEDYTKIEKIG',\n",
+       " 'LCK_EAEGDEIYEDLMRSE',\n",
+       " 'CDK1_VHPATPISPGRASGM',\n",
+       " 'CK2A1_RFGKKVTYVVIGDGR',\n",
+       " 'GSK3B_GAPAPGVYPGPPSGP',\n",
+       " 'CAMK2A_VTEPQEESEEEVEEP',\n",
+       " 'ROCK2_DRKVKAKSIVFHRKK',\n",
+       " 'BRSK1 ISO2_ARVLRSKSLCHDEIE',\n",
+       " 'ERK1_IDAGCKPYMAPERIN',\n",
+       " 'AURB_KHSKSRDSFLKRVKE',\n",
+       " 'ERK1_DTAGQEDYDRLRPLS',\n",
+       " 'ERK1_EENADDSYEPPPVEQ',\n",
+       " 'GSK3B_QEGSIEVYEDAGSHY',\n",
+       " 'CDK16_DSREDEISPPPPNPV',\n",
+       " 'PKR_ERSPNEEYTWEEDPL',\n",
+       " 'FGFR1_NSYVAGQYDDAASYQ',\n",
+       " 'SRC_SLRYDTSYFVEYFAL',\n",
+       " 'ERK1_SEEQLQLYWAMDSTF',\n",
+       " 'AURB_GRYHRGGYRPVWNRR',\n",
+       " 'ABL_EYVATRWYRAPEIML',\n",
+       " 'AMPKA1_WEEEGFGSSSPVKSP',\n",
+       " 'CAMK1A_WSENKKLSLDTDARF',\n",
+       " 'FAK_SVSETDDYAEIIDEE',\n",
+       " 'CK2A1_SKGVDFESSEDDDDD',\n",
+       " 'EGFR_QSKDSNPYATLPRAS',\n",
+       " 'ERK5_QTRRPEYTPIHLS__',\n",
+       " 'ULK1_ELQSLEQSHLKELED',\n",
+       " 'CK2A1_VHNKDEVYQILEKGA',\n",
+       " 'RET_QCIGPNGYMEPYCST',\n",
+       " 'SRC_IKTGAPQYGSYGTAP',\n",
+       " 'PAK2_EENVKRRTHNVLERQ',\n",
+       " 'MST1_LKFYDSNTVKQKYLS',\n",
+       " 'GSK3B_GQEVYHAYAEPLPIT',\n",
+       " 'CDK1_WFYTRAASTARHLYL',\n",
+       " 'LOK_SKDAKVPSPPPGHKW',\n",
+       " 'YSK1_PLSKLLGSLDEVVLL',\n",
+       " 'AMPKA1_MRSKETSSPGTDDVF',\n",
+       " 'CK1D_LTFLRIRSKKNEIMV',\n",
+       " 'CDK9_AVSPGTLTPTGVVSG',\n",
+       " 'ARAF_LIDSMANSFVGTRSY',\n",
+       " 'GSK3A_STTRPWRSAPPSPPP',\n",
+       " 'FES_AQEALDFYGEVRTRD',\n",
+       " 'ULK1_LLSILGASEEDNVKL',\n",
+       " 'FLT3_NASLESLYSACSMQS',\n",
+       " 'ERK2_TPGSRSRTPSLPTPP',\n",
+       " 'CDK18_SPYKFPSSPLRIPGG',\n",
+       " 'AMPKA1_LARRRKATQVGEKTP',\n",
+       " 'GSK3B_TDAGLKESPLQTPTE',\n",
+       " 'SRC_GHTSNNIYEAVKYSE',\n",
+       " 'GSK3B_TDKSAEDYNSSNALN',\n",
+       " 'CDK1_QRSRKRLSQDAYRRN',\n",
+       " 'CDK1_PSWHLADSPAVNGAT',\n",
+       " 'SRC_QQNRFPDYLEAIPGT',\n",
+       " 'PKACA_AAQDLVSYLEGSTAS',\n",
+       " 'AURB_ADAEMTGYVVTRWYR',\n",
+       " 'PKACA_HLSGRKLSLQERSQG',\n",
+       " 'CK1A_MQQCDSPYVVKYYGS',\n",
+       " 'GSK3A_EPVPPPPTPRSQYLS',\n",
+       " 'ROCK1_SGIVTNGSFSSSNAE',\n",
+       " 'PLK1_EEEETEQSSESLRCN',\n",
+       " 'CAMK2A_WKRLRSHSRQYVSGL',\n",
+       " 'PKACA_GTTEEMKYVLGQLVG',\n",
+       " 'JNK1_VNYAAGLSPYADKGK',\n",
+       " 'GSK3B_VPSERGLSPNNSGHD',\n",
+       " 'PKACA_DQPLEASTWLKNFKT',\n",
+       " 'ACK_RYMEDSTYYKASKGK',\n",
+       " 'PKACA_LKEDQTEYLEERRIK',\n",
+       " 'PIM1_SGRAREASGAPTSSK',\n",
+       " 'CDK5_ERLRLSPSPTSQRSR',\n",
+       " 'CDK5_KLQPQEISPPPTANL',\n",
+       " 'MAPKAPK2_DPGSVLSTACGTPGY',\n",
+       " 'TBK1_SSGSSEDSFVEIRMA',\n",
+       " 'MARK1_RVQSKIGSLDNITHV',\n",
+       " 'ERK2_LHPPPQLSPFLQPHG',\n",
+       " 'AMPKA2_KRSFAPSTPLTGRRY',\n",
+       " 'CAMK2A_FAQSAPGSPLSSQPV',\n",
+       " 'CAMK2A_CRRMRSGSYIKAMGD',\n",
+       " 'ALK_QVPQQPTYVQALFDF',\n",
+       " 'PLK1_TLLMKKDTLTEEETQ',\n",
+       " 'SRC_CAAWHGYYSVAKALC',\n",
+       " 'PDK1_IGGGMAFTFLKVLNN',\n",
+       " 'CK2A1_VGSEEDLYDDLHSSS',\n",
+       " 'CDK2_SGAPVKPSPQAAAVE',\n",
+       " 'CDK1_HESLSQESESEEDGI',\n",
+       " 'IKKA_ISAARGLSPADVAQE',\n",
+       " 'P38A_HQQPQSSSPVYGSSA',\n",
+       " 'PKR_YASVNPEYFSAADVY',\n",
+       " 'CDK2_LGFRPEYSASQLKGF',\n",
+       " 'COT_LEGDEDASRMEEVD_',\n",
+       " 'PRKD2_AGYESVDSPTGSENS',\n",
+       " 'CK2A1_RRGASDLSSEEGWRL',\n",
+       " 'ERK2_SSRWSKDYDVCVCHS',\n",
+       " 'CK2A1_DVVDADEYLIPQQGF',\n",
+       " 'ZAP70_HTVEAVAYAPKKELI',\n",
+       " 'ABL_GVKKPHRYRPGTVAL',\n",
+       " 'ERK2_EEINGNNYVYIDPTQ',\n",
+       " 'CK2A1_GKKTKFASDDEHDEH',\n",
+       " 'DYRK1A_AKKAKADSPVNGLPK',\n",
+       " 'PKACA_LSNQNNSYGTRFEYN',\n",
+       " 'CDK2_TQIPLKLSLGGLLQP',\n",
+       " 'AMPKA1_CNGPVVGTRYKCSVC',\n",
+       " 'PKACA_QKRHARVTVKYDRRE',\n",
+       " 'CDK1_GGPGVALSVGTLPLD',\n",
+       " 'GSK3B_DCAELHDYFNVLSYR',\n",
+       " 'NEK6_SNAGLSLSQLLDEMR',\n",
+       " 'CAMK2A_LAGQKRASSQALGTI',\n",
+       " 'PDGFRB_SSNYMAPYDNYVPSA',\n",
+       " 'CDK1_DPQLPSRTPVQGPRP',\n",
+       " 'SRC_DTEETEDYRQFRKSV',\n",
+       " 'LKB1_VEVDAAVTPEERHLS',\n",
+       " 'P38A_GNQFRANYFLQPELM',\n",
+       " 'CDK1_PLSKLLGSLDEVVLL',\n",
+       " 'CK2A1_EKSGPCSSSSDSDSG',\n",
+       " 'GSK3B_HRIDGKTYVIKRVKY',\n",
+       " 'PKACA_YVVKRRDSATSFSLD',\n",
+       " 'P38A_HPTEFDFYLCSHAGI',\n",
+       " 'FYN_AYATEAVYESAEAPG',\n",
+       " 'SRC_VEIGNPTYKMYEGGE',\n",
+       " 'ERK1_STSADNFSPDLRVLR',\n",
+       " 'PKG1 ISO2_RTKRQAISAEPTAFD',\n",
+       " 'HIPK2_HERAIDFSPYLEPLG',\n",
+       " 'MAPKAPK2_GGVKRSLSEQPVMDT',\n",
+       " 'DYRK2_ISKLPPPSSSASKLR',\n",
+       " 'CDK1_SRLSPPHSPRDFTRM',\n",
+       " 'EGFR_TKYHSDDYIKFLRSI',\n",
+       " 'CAMK2A__MLTFMASDSEEEVC',\n",
+       " 'AMPKA1_IIKVNGESVIGKTYS',\n",
+       " 'ERK1_____MEDYTKIEKIG',\n",
+       " 'PRKD1_TNFTNPVYATLYMGG',\n",
+       " 'IRAK4_KSTATDITGPIILQT',\n",
+       " 'CDK1_SRSLYASSPGGVYAT',\n",
+       " 'MAPKAPK2_SIAELDPSIAVGFFC',\n",
+       " 'EGFR_ESYEGNSYTFIDPTQ',\n",
+       " 'COT_LGRDKYKTLRQIRQG',\n",
+       " 'GRK5_ADREAASSPAGEPLR',\n",
+       " 'RET_LLTTLDDTCDLFAPL',\n",
+       " 'ERK1_MESEMLQSPLLGLGE',\n",
+       " 'CDK1_FTPAPSDSPSSQRIQ',\n",
+       " 'CDK1_TPTKAPYSPTTSKEK',\n",
+       " 'GSK3B_SLISPASTPSCLSAA',\n",
+       " 'NEK6_DDSTLSESANQVFLG',\n",
+       " 'GSK3B_DIKNDSNYVVKGNAR',\n",
+       " 'CDK1_NPEAESSSKEGELDA',\n",
+       " 'FYN_SSRSSSPYSKSPVSK',\n",
+       " 'HCK_GLSNNDQYKLYSKHF',\n",
+       " 'PKACA_WAKGRRETYLCYVVK',\n",
+       " 'CHK1_KYGKKVQTEVLQKRQ',\n",
+       " 'JNK1_LQESQAGSDTDVEEG',\n",
+       " 'DYRK2_VTQVSSAYQKTVPVE',\n",
+       " 'SRC_PTAENPEYLGLDVPV',\n",
+       " 'PLK2_PPLFPIKSFVKTKCK',\n",
+       " 'PRKD1_EQLSHSVYSLSSYTP',\n",
+       " 'CDK8_PQSNIPETPPPGYLS',\n",
+       " 'AURA_YVHVNATYVNVKCVA',\n",
+       " 'CAMK2A_TSVSRGSSLKILSKG',\n",
+       " 'SRC_FAAKMPRYRGAALAR',\n",
+       " 'GRK2_SQARGLSSQNLEIQT',\n",
+       " 'EGFR_TQQTEEQYFQFLAKF',\n",
+       " 'PKACA_SSGGEQDYDYLNDWG',\n",
+       " 'SRC_EQGAAAIYTTQMDDF',\n",
+       " 'GRK2_TQDENTVSTSLGHSK',\n",
+       " 'CDK1_YPGSYSRSPAGSQQQ',\n",
+       " 'ERK2_RLSSRYRYGQLIEIN',\n",
+       " 'MET_IIDEEDTYTMPSTRD',\n",
+       " 'SRC_LPQNDDHYVMQEHRK',\n",
+       " 'CAMK2A_LKGAILTTMLATRNF',\n",
+       " 'CDK1_SGLPPSGSWQDLKDH',\n",
+       " 'CK2A1_ERRPESFTTPEGPKP',\n",
+       " 'CDK1_SEGSGTATPSALITT',\n",
+       " 'ABL_EVAEHVQYMAELIER',\n",
+       " 'CDK1_MESEMLQSPLLGLGE',\n",
+       " 'MAK_TLTTNEEYLDLSQPL',\n",
+       " 'JNK1_AVQSPRRSPRISFFL',\n",
+       " 'ERK1_DTGENPIYKSAVTTV',\n",
+       " 'LRRK2_GIKTSEGTPGFRAPE',\n",
+       " 'ERK2_KSTSPPPSPEVWADS',\n",
+       " 'NEK2_LDESLTQSLTSPGPV',\n",
+       " 'ABL_YTYNAGLYNPPYSAQ',\n",
+       " 'P38A_PPTYNADYGYKSWEA',\n",
+       " 'TGFBR1_ENIADSPTPPPPPPP',\n",
+       " 'SRC_HAATRPDYISWGTQE',\n",
+       " 'YES_RVYSNSIYELLENGQ',\n",
+       " 'ULK1_NAGSVEQTPKKPGLR',\n",
+       " 'GSK3B_MVLTDPHTPYEEEQR',\n",
+       " 'P38G_PAPPEGATPTSPVGH',\n",
+       " 'SRC_STSLDTLYTSSSPSE',\n",
+       " 'ROCK1_EGPPKRVSLVGADDL',\n",
+       " 'CK2A1_ESQEELHYATLNFPG',\n",
+       " 'CDK1_APQGSDSSDSELELS',\n",
+       " 'CK2A1_TNLGEKLTDEEVDEM',\n",
+       " 'GSK3B_APATPPSTPHNSSVG',\n",
+       " 'MST1_AAAGPALSPVPPVVH',\n",
+       " 'AXL_TAKAVDGYVKPQIKQ',\n",
+       " 'CDK1_FKDDYPSSPPKCKFE',\n",
+       " 'ABL_SLEPDSTYFDLPQSS',\n",
+       " 'GRK1_QPSFVPKSPDASSAF',\n",
+       " 'CDK1_PGVVMASSPALPTQP',\n",
+       " 'NLK_LTQSAPASPTNKGVH',\n",
+       " 'TAK1_LFITEEDYQALRTSI',\n",
+       " 'TTBK1_QNHFVDEYDPTIEDS',\n",
+       " 'CDK2_AEAFLGFSYAPPTDS',\n",
+       " 'SRC_VTQVSSAYQKTVPVE',\n",
+       " 'PKACA_SIKSERLSPAPGGPG',\n",
+       " 'CDK5_PSLNSAPSPFNPQGQ',\n",
+       " 'P38G_GAASGTSTTTSTAAT',\n",
+       " 'ABL_DIKNDSNYVVKGNAR',\n",
+       " 'CDK1_WRAARMKSLEQDALR',\n",
+       " 'ERK2_RIRRSGVSPLHLAAE',\n",
+       " 'FYN_NQSSGYRYGTDPTPQ',\n",
+       " 'PAK1_YFAKALESPERPFLA',\n",
+       " 'PLK1_VPSRVKATPMPSRPS',\n",
+       " 'CDK3_VPEHPFLTPSPESPD',\n",
+       " 'ULK1_PISNLTKTASESISN',\n",
+       " 'CDK8_PNSSYPNSPGSSSST',\n",
+       " 'PIM1_RVPVATYTNSSQPFR',\n",
+       " 'PKACA_EEEDEEEYFEEEEEE',\n",
+       " 'CDK2_NAPTSHVTPSVKKRS',\n",
+       " 'ERK2_STSATQSSPAPGQSK',\n",
+       " 'PKG1_VSARFPYSPSPPMAN',\n",
+       " 'SRC_YPAEDSTYDEYENDL',\n",
+       " 'CDK1_DKDEYTFSPGKSKAT',\n",
+       " 'PLK1_DRKVKAKSIVFHRKK',\n",
+       " 'AMPKA1_EENVKRRTHNVLERQ',\n",
+       " 'CHK2_PGGSRAHSSHLKSKK',\n",
+       " 'PLK1_SMRPDVSSPPSSSST',\n",
+       " 'FYN_GMYDGPVYEVPATPK',\n",
+       " 'CAMK2A_RARRGSSSDEEGGPK',\n",
+       " 'CDK2_KSKLKKLSEDSLTKQ',\n",
+       " 'P38A_VKEAPTEYASICVRS',\n",
+       " 'LCK_KIYSGDYYRQGRIAK',\n",
+       " 'ERK2_ALRADENYYKAQTHG',\n",
+       " 'ERK2_DNSSDSDYDLHGAQR',\n",
+       " 'CAMK2A_RRSRAASSQRAEEED',\n",
+       " 'AURB_SDGHEYIYVDPMQLP',\n",
+       " 'PINK1_AKNLKNISELFYYAQ',\n",
+       " 'PKACA_GATTTAPSLSGKGNP',\n",
+       " 'CDK2_TVGNKLDTFCGSPPY',\n",
+       " 'ABL_LNTIGLIYEKISLPK',\n",
+       " 'ERK1_RFSPYEWYNPHPCNP',\n",
+       " 'ERK2_KNENTEGSPQEDGVE',\n",
+       " 'JNK1_SRRSGLCSPSYVAVT',\n",
+       " 'CDK2_APMAPGRSPLATTVM',\n",
+       " 'ERK2_AATPPPSTASAPAAV',\n",
+       " 'PLK1_SLISPASTPSCLSAA',\n",
+       " 'MAPKAPK2_LVDSVAKTMDAGCKP',\n",
+       " 'PKACA_LCISIDRYVAIVQAV',\n",
+       " 'GSK3A_FGGEPLSYTRFSLAR',\n",
+       " 'NLK_SELSGVISSACDKES',\n",
+       " 'CK2A1_SEDDEDCYGNYDNLL',\n",
+       " 'ERK2_PSVEPPLSQETFSDL',\n",
+       " 'CDK5_TEKSHPRSPNVLSVA',\n",
+       " 'JNK1_KLQLRVPSVESLFRS',\n",
+       " 'SRC_QDHYETDYTTGGESC',\n",
+       " 'CDK1_DTLTPPPSDAGSPFQ',\n",
+       " 'HCK_SVTTGATYSYGPASW',\n",
+       " 'LYN_QISSSSYYSNLGFYP',\n",
+       " 'GRK5_GIKTSEGTPGFRAPE',\n",
+       " 'CDK1_EEERLRLSPSPTSQR',\n",
+       " 'GSK3B_ECSKVMHSSPSSPSS',\n",
+       " 'ERK1_PGKMSDVSPVVAAQQ',\n",
+       " 'SRC_EYVATRWYRAPEIML',\n",
+       " 'GSK3B_NILARAGSLKAITAG',\n",
+       " 'IKKB_EPGTATGSGIKSHNS',\n",
+       " 'PKACA_ERGAVDSYDVTVDEE',\n",
+       " 'MARK2_LGLRRILSQSTDSLN',\n",
+       " 'NEK2_LSLTRGLSRTSMKPR',\n",
+       " 'CK2A1_LQNASPHYQNIKENC',\n",
+       " 'CDK1_YNISGNGSPLADSKE',\n",
+       " 'CDK1_SASSHSPTPQRRPVS',\n",
+       " 'AURB_MGRDPGVSFKAVGLQ',\n",
+       " 'HER2_ADDLNAQYERRRQEE',\n",
+       " 'DAPK3_KRPQRATSNVFAMFD',\n",
+       " 'ZAP70_MLPESTVYGDVDLSN',\n",
+       " 'CHK2_TAPGAGHYEDTILKS',\n",
+       " 'ERK2_EDEGGEVYEDLMKAE',\n",
+       " 'PLK1_LDLSPLATPIIRSKI',\n",
+       " 'CDK2_TPAAIPATPVAVSQP',\n",
+       " 'AMPKA1_GFGFVRFTEYETQVK',\n",
+       " 'GSK3A_HTSEGTRSRSHTSEG',\n",
+       " 'CDK5_DGSEPTKTPGRTSST',\n",
+       " 'GSK3B_LIFIEIAYKRHKDAR',\n",
+       " 'NLK_QHVRAHSSPASLQLG',\n",
+       " 'HER4_IVAENPEYLSEFSLK',\n",
+       " 'PKACA_SSRLRSCSVTDAVAE',\n",
+       " 'PKACA_LTEERDGSLNQSSGY',\n",
+       " 'PLK1_YQSKSLMTSVPMNGT',\n",
+       " 'LKB1_KDRWRSMTVVPYLED',\n",
+       " 'CDK2_TPPRGAFSPGMGMQP',\n",
+       " 'PKACA_LDQEEAQYQREYSEF',\n",
+       " 'YES_PYRPSYSYDYEFDLG',\n",
+       " 'CDK6_INITKPASVFVQLRR',\n",
+       " 'SRC_IITLKDVYDDGKYVY',\n",
+       " 'EGFR_ELFDDPSYVNVQNLD',\n",
+       " 'AURB_QETLRRASMQPIQIA',\n",
+       " 'DYRK2_AQRCTISYRAPELFS',\n",
+       " 'ERK2_SDKGNLMYSDNRSFQ',\n",
+       " 'MST2_TNLGEKLTDEEVDEM',\n",
+       " 'CK1A_RRQREESYSRMGYMD',\n",
+       " 'PAK1_DTDMKRLSMEIEKEK',\n",
+       " 'QIK_STLYRTQSSSNLAEL',\n",
+       " 'GSK3B_GSIDMVDSPQLATLA',\n",
+       " 'CK2A1_GNDPLTSSPGRSSRR',\n",
+       " 'SRC_GRYYEGYYAAGPGYG',\n",
+       " 'PKG1_GEKKKKITVFKEISY',\n",
+       " 'ERK2_GDIKPLGSDDSLADY',\n",
+       " 'AURA_VAYGVRESVFTVEGG',\n",
+       " 'CDK1_RRDRQAFSMYEPGSA',\n",
+       " 'CLK2_EASGAPTSSKDNYLG',\n",
+       " 'PYK2_TQEQYELYCEMGSTF',\n",
+       " 'CK1A_HSSPSSPSSDGKQKT',\n",
+       " 'CK1E_GQVDVPLYPLPTENP',\n",
+       " 'ERK1_RLGHCHTYWAVSEEL',\n",
+       " 'ERK1_AVSVKGIYKQMPGCF',\n",
+       " 'CLK2_VNYAAGLSPYADKGK',\n",
+       " 'GSK3B_PYSEYFEYFAPDFTL',\n",
+       " 'CDK1_IIRSKTFSPGPQSQY',\n",
+       " 'FAK_KDCGSQKYAYFNGCS',\n",
+       " 'P38A_NIMRTYTYEKLLWTT',\n",
+       " 'IGF1R_LPKDSDYYNMLLKKL',\n",
+       " 'CDK3_YQRQRRGSLFCPMPV',\n",
+       " 'CK2A1_EAQYQREYSEFKRQQ',\n",
+       " 'EGFR_QISSSSYYSNLGFYP',\n",
+       " 'PLK1_RAFSRFPSFLKAKVI',\n",
+       " 'CK2A1_SKRKRSSSEDDDLDV',\n",
+       " 'SRC_SSPRDKIYTIDGEKE',\n",
+       " 'BRAF_RGSSRLLSFSPEEFP',\n",
+       " 'ERK2_QVCEIIESPLFLKLN',\n",
+       " 'CDK1_FANFPSGSPVSASTL',\n",
+       " 'GSK3A_VGEEEHVYSFPNKQK',\n",
+       " 'P38A_VDPGERLYDLNMPAY',\n",
+       " 'AURB_ISGRKLFYVHYIDFN',\n",
+       " 'ERK2_TEERLPSSPVYEDAA',\n",
+       " 'CK2A1_AQEALDFYGEVRTRD',\n",
+       " 'MAPKAPK2_SGVKRSRSGEGEVSG',\n",
+       " 'CHK1_PHMRRSNSSGNLHMA',\n",
+       " 'AMPKA1_PKRLGAHTP______',\n",
+       " 'CDK1_GGHGSRHSLASTDEK',\n",
+       " 'AMPKA1_PQGGLETSQPEGEAG',\n",
+       " 'ERK1_HSKSPAYTPQNLDSE',\n",
+       " 'NEK2_RSHSESASPSALSSS',\n",
+       " 'ERK2_NRHLAEHSPYYEAMK',\n",
+       " 'AURB_IPTSAPVYQQPQQQP',\n",
+       " 'HPK1_TKMQPPRSRSSIMSI',\n",
+       " 'CK2A1_TSSYLSDSGSTGEHT',\n",
+       " 'CDK2_DDFADDISLLK____',\n",
+       " 'EPHA4_EEITEEQYYMMRRYE',\n",
+       " 'ERK1_VDPDNEAYEMPSEEG',\n",
+       " 'ERK7_EKGPEGVSPSQAHLH',\n",
+       " 'SRC_TAPGAGHYEDTILKS',\n",
+       " 'CAMK2A_AAQGQLPSCIATPYS',\n",
+       " 'ERK1_SGEQAEGSPGGPGDS',\n",
+       " 'ABL_GLITTLHYPAPKRNK',\n",
+       " 'INSR_GVRWAKLYSLVIWGC',\n",
+       " 'PRKD1_WPLSRTRSEPLPPSA',\n",
+       " 'AMPKA1_HNLMRRSTVSLLDTY',\n",
+       " 'PKG1_CQDWFHGSCVGVEEE',\n",
+       " 'ULK1_VQQNMMNSASGPLPD',\n",
+       " 'CK2A1_DVADGNVSDFDNEEE',\n",
+       " 'GSK3A_APSSGQIYGSGPQGY',\n",
+       " 'WNK2_KRASFAKSVIGTPEF',\n",
+       " 'MAPKAPK3_RALSRQLSSGVSEIR',\n",
+       " 'ERK2_SQPLEQYSPSYPDTR',\n",
+       " 'SRC_LQGLGSDYEQPLEVK',\n",
+       " 'ERK5_SGDCAMESPPPAPPP',\n",
+       " 'CDK1_PIKPLISTPPVSSQP',\n",
+       " 'EGFR_GFGDRNEYGSRIGGG',\n",
+       " 'P38A_PRHSGPQYSMMQPHL',\n",
+       " 'PKACA_SVTAPSPYAQPSSTF',\n",
+       " 'AMPKA1_MDQDLKISQKHINSI',\n",
+       " 'P38A_SDKYGLGYQLCDNSV',\n",
+       " 'MST1_AAREMLHSPLPCTGG',\n",
+       " 'PAK1_LSAIYGGTYMLNKPI',\n",
+       " 'MAST3_KGQKYFDSGDYNMAK',\n",
+       " 'AURA_GTSVRRRTSFYLPKD',\n",
+       " 'SRC_ICGPEENYPSLQMSS',\n",
+       " 'MAPKAPK2_RPHFPQFSYSASGTA',\n",
+       " 'ERK2_ARLVPIDTPNHLQRQ',\n",
+       " 'CAMK2A_YLQARKPSDCDSKEL',\n",
+       " 'LRRK2_DGKTKIATPRGAAPP',\n",
+       " 'PLK3_DDGKLDLSVVENGGL',\n",
+       " 'PLK1_LSPIIEDSREATHSS',\n",
+       " 'AURB_RQSWRRASMKETNRR',\n",
+       " 'MEK1_KRKRLSDYALIFGMF',\n",
+       " 'CDK9_INDSLEITKLDSSII',\n",
+       " 'PRKD1_MSVTRSNSLRRDSPP',\n",
+       " 'P38A_GQVDVPLYPLPTENP',\n",
+       " 'PLK1_QALKDARSPSPAHIV',\n",
+       " 'P38A_EEERKVHSPQQVDFR',\n",
+       " 'GSK3B_PNVQRSDYLNTFEFM',\n",
+       " 'CDK14_PVKKIQASTMAFKQM',\n",
+       " 'ERK2_FGSFPVHSPITQGTP',\n",
+       " 'EGFR_VGEEEHVYSFPNKQK',\n",
+       " 'ERK1_KGDLDISYITSRIAV',\n",
+       " 'MKK4_PGSTTEDYNLIVIER',\n",
+       " 'CK2A1_ALTSNQEYLDLSMPL',\n",
+       " 'EGFR_NENTEDQYSLVEDDE',\n",
+       " 'CK2A1_SSYGISETTLEEIFL',\n",
+       " 'ROCK1_RMGSSESTDSGFCLD',\n",
+       " 'ERK1_ETPPRPRTPGRPLSS',\n",
+       " 'LRRK1_NKSKELLTVENQKME',\n",
+       " 'CAMK2A_PIYKSAVTTVVNPKY',\n",
+       " 'SRC_EGEEQSQYMHVGSCQ',\n",
+       " 'SRC_VTLNMEKYNFLGISI',\n",
+       " 'CK2A1_DTRKKDASDDLDDLN',\n",
+       " 'CDK1_CQDWFHGSCVGVEEE',\n",
+       " 'ERK1_TLRDVVPSPDTQEKG',\n",
+       " 'IKKB_VGTPYYMSPERIHEN',\n",
+       " 'PKACA_RHGSEEAYIDPIAME',\n",
+       " 'AMPKA1_ICTRSSSSPTGSDWF',\n",
+       " 'LYN_DGEDDGDYESPNEEE',\n",
+       " 'CK2A1_KKKDEGSYSLEEPKQ',\n",
+       " 'PRKD2_GAEIVYKSPVVSGDT',\n",
+       " 'FGR_RFVLDDQYTSSTGTK',\n",
+       " 'SRC_LDQEEAQYQREYSEF',\n",
+       " 'CDK8_GLPAPSLTMSNTMPR',\n",
+       " 'NIK_EKDIEFIYTAPSSAV',\n",
+       " 'PDK1_PTEHIYKTNIELKVE',\n",
+       " 'PLK1_ENVGKVGSPLDYSLV',\n",
+       " 'ERK2_IVSSPLNSPLDRSGI',\n",
+       " 'CK1E_NTSPRAISRVDRERK',\n",
+       " 'PKG1_LRTKNGTSGKDSATT',\n",
+       " 'CDK1_QDRESPSTRPSTPSL',\n",
+       " 'GRK2_VPKSPDASSAFSPAS',\n",
+       " 'ERK2_AKHHQDAYIRIVLEN',\n",
+       " 'TTK_ANQMQPDTTSVVKDS',\n",
+       " 'P38A_ETNSITVYASVTLPE',\n",
+       " 'CAMK2A_CSLERQLSLEQEVQQ',\n",
+       " 'PAK1_LREKRRSTGVVNIPA',\n",
+       " 'CHK1_SFDDRGPSLNPVLDY',\n",
+       " 'FGFR1_____MVDYSVWDHIE',\n",
+       " 'AURA_QAQKLVSSHKPVQNQ',\n",
+       " 'GSK3B_EAKSGTATPQRSGSV',\n",
+       " 'YSK1_SDLGDAMSEEDMLQA',\n",
+       " 'CDK1_____MPSSPLRVAVV',\n",
+       " 'CDKL5_QKRRRPKSAPSFRPK',\n",
+       " 'CDK5_LQGQLHPTPDLKPLL',\n",
+       " 'TBK1_VPSTSTMSQEPELLI',\n",
+       " 'ERK2_GVTGGNTYAVPALPP',\n",
+       " 'CDKL5_DYPSRGYSDRDGYGR',\n",
+       " 'PLK1_QTEEEEHSCLEQAS_',\n",
+       " 'SYK_SPPDSQHYEDQVHWQ',\n",
+       " 'CDK1_KVDDAKVSPPKRAEM',\n",
+       " 'SRC_MLPESTVYGDVDLSN',\n",
+       " 'CAMK2A_PWPLRRTSAQGQPSP',\n",
+       " 'SYK_VEIGNPTYKMYEGGE',\n",
+       " 'CK2A1_CSDSTNEYMDMKPGV',\n",
+       " 'SRC_AQPADRGYDRPKAVS',\n",
+       " 'PAK1_DYGTARRTGTPSDPR',\n",
+       " 'MELK_RAAYFGVYDTAKGML',\n",
+       " 'INSR_____MSEYIRVTEDE',\n",
+       " 'FYN_EDEESEDYQNSASIH',\n",
+       " 'EGFR_PDIKDDIYDPTYKDK',\n",
+       " 'CDK14_PAPPEPGSPAPGEGP',\n",
+       " 'FAK_DTAGQEDYDRLRPLS',\n",
+       " 'PLK1_MKLTQEESFSVWDEH',\n",
+       " 'CDK7_MKQVEELYHSLLELG',\n",
+       " 'CK2A1_TLSEEKNSECDPTPS',\n",
+       " 'GSK3B_NFDFVTETPLEGDFA',\n",
+       " 'PLK1_MSSVAEISSHMRESF',\n",
+       " 'CDK2_RGKEGPGTPTRSSVI',\n",
+       " 'CDK5_QGIGEPQSPSRRVFN',\n",
+       " 'NLK_SLLTRSPTPAPFSPF',\n",
+       " 'SRC_SSPTHSLYVFVRNFV',\n",
+       " 'GSK3A_ELFDDPSYVNVQNLD',\n",
+       " 'CDK1_QSKSLMTSVPMNGTS',\n",
+       " 'SRC_ERDINSLYDVSRMYV',\n",
+       " 'PRKD1_GQLVRNDSLWHRSDS',\n",
+       " 'ERK1_EEEDGTGSPQLNNR_',\n",
+       " 'PAK1_QDTQRRTSMGGTQQQ',\n",
+       " 'JNK1_SPPQPAPTPLKMYPS',\n",
+       " 'FGFR1_RSEGFDTYRCDRNLA',\n",
+       " 'CDK1_GSRRGRSSLSLAKSV',\n",
+       " 'CDK2_ADALKLRSPRGSPDG',\n",
+       " 'CDK1_GTPTRKISASEFDRP',\n",
+       " 'PKACA_VTQVSSAYQKTVPVE',\n",
+       " 'ERK1_HTGFLTEYVATRWYR',\n",
+       " 'CK2A1_GPGDDLCSDLEEAPE',\n",
+       " 'SRC_NQATEDVYQLEQQLH',\n",
+       " 'CDK2_HLPLMPMSPLMHPRV',\n",
+       " 'SRC_ELFDDPSYVNVQNLD',\n",
+       " 'P38A_QDNVDQTYSEELCYT',\n",
+       " 'AMPKA2_SYNLELRSFPNEMGK',\n",
+       " 'PAK1_IKRSKKNSLALSLTA',\n",
+       " 'TAK1_HMTNNKGSAAWMAPE',\n",
+       " 'PRKD1_RFLKSPAYRDLAAQA',\n",
+       " 'CAMK2A_ESSPILTSFELVKVP',\n",
+       " 'CDK1_PVRLRLSSFSCGQAS',\n",
+       " 'P38A_SQPPYTDYVSTRWYR',\n",
+       " 'MER_IDPIAMEYYNWGRFS',\n",
+       " 'CHK1_KFSLSGGYWNSVSDT',\n",
+       " 'ERK1_IKQERISYTPPESPV',\n",
+       " 'PDK1_GKDSATTSTLSKDSL',\n",
+       " 'CDK2_EPGTPPSSPLSAEQL',\n",
+       " 'PIM1_NGRQPPYSPHHSPTP',\n",
+       " 'CDK9_TPMYGSQTPMYGSGS',\n",
+       " 'MARK2_SDHPRASTIFLSKSQ',\n",
+       " 'CAMK2A_TLSPVNHSLDLQPVT',\n",
+       " 'CK1E_VTEEPEIYEPNFIFF',\n",
+       " 'JNK1_IYQLMDHSNMDCFIC',\n",
+       " 'ERK2_EETGDTLYAPYSTHF',\n",
+       " 'CDK1_EGKISTITPQIQAFN',\n",
+       " 'CK2A2_RTPGRPLSSYGMDSR',\n",
+       " 'ZAP70_EPPDHQYYNDFPGKE',\n",
+       " 'FYN_KGVDYASYYQGLWDC',\n",
+       " 'CK1D_NSHPLSLTSDQYKAY',\n",
+       " 'CDK7_LPPPPPVSPPALTPA',\n",
+       " 'CK2A1_LSLFRRLSDQRSKER',\n",
+       " 'GSK3B_IIQHCSNYSTQELLR',\n",
+       " 'CDK7_NTEQRNVYKDLRQIE',\n",
+       " 'PKACA_DGVYTGLSTRNQETY',\n",
+       " 'IKKA_PTPAILESLISINNK',\n",
+       " 'CDK2_SLGEGNGSPNHQPEP',\n",
+       " 'ULK1_AGQERFRTITSSYYR',\n",
+       " 'EGFR_GLINKKCYEMASHLR',\n",
+       " 'SRC_TEEQKKYYNAMKKLG',\n",
+       " 'HCK_AKHHQDAYIRIVLEN',\n",
+       " 'SIK_EICQRRTSYLPSEIM',\n",
+       " 'PLK3_NEAYEMPSEEGYQDY',\n",
+       " 'IKKE_GTQREGVSSLDSSSL',\n",
+       " 'ERK2_LGRADPPYTHTIQKQ',\n",
+       " 'CDK2_SNVNRNSTIENTRRH',\n",
+       " 'LRRK2_CNSFSKQSKQKNFLL',\n",
+       " 'ABL_AGDSLSYYHSPADSF',\n",
+       " 'ULK3_ELKAIVSSSNQALLR',\n",
+       " 'ERK1_QEASRPNSPQLTPTA',\n",
+       " 'ROCK1_NEEKMHQSAMYELCQ',\n",
+       " 'TBK1_NTLKRENSSPRVMQR',\n",
+       " 'CDK1_ITIAFLATLITQFLV',\n",
+       " 'PAK1_SRSLYASSPGGVYAT',\n",
+       " 'CDK1_FVSHSHISPIKPTEA',\n",
+       " 'PKACA_YTLLNENYVEDDDNM',\n",
+       " 'PLK1_VDLSKVTSKCGSLGN',\n",
+       " 'MARK2_SRLSPPHSPRDFTRM',\n",
+       " 'CHK1_PALGRGGSGGGGGPP',\n",
+       " 'AMPKA1_ITIAFLATLITQFLV',\n",
+       " 'CK2A2_GPLFPDKTSNLRKQT',\n",
+       " 'LCK_VYFTYDPYSEEDPDE',\n",
+       " 'LYN_RFVLDDQYTSSTGTK',\n",
+       " 'FYN_ADLDPYNSPGQEVYH',\n",
+       " 'CDK1_AVIPINGSPRTPRRG',\n",
+       " 'COT_VKKSIRDTPAKNAQK',\n",
+       " 'SRC_TTSDTEVYGEFYPVP',\n",
+       " 'CDK1_VSMLSLNTPNSNRKR',\n",
+       " 'P38B_RGSSRLLSFSPEEFP',\n",
+       " 'ERK1_PATPLLDYALEVEKI',\n",
+       " 'CK1A_TDGLGLSYLSSHIAN',\n",
+       " 'MELK_DIKSNNWSLEDVTAS',\n",
+       " 'HIPK2_FYDETYDYGGFTMMF',\n",
+       " 'ERK2_VEGDAAETPPRPRTP',\n",
+       " 'SRC_KGCSNEPYFGSLTAL',\n",
+       " 'SRC_APTICFVYQDPQGRH',\n",
+       " 'CHK1_QQSYKRKSEQEFSFD',\n",
+       " 'ERK1_LYDVSRMYVDPSEIN',\n",
+       " 'P38A_DHPSGPTSPLSALNL',\n",
+       " 'CDK1_RRENSSDSPKELKRR',\n",
+       " 'PKACA_YLQARKPSDCDSKEL',\n",
+       " 'PKACA_ASNGNLLYIGFRGLD',\n",
+       " 'AMPKA1_QKSGQDVSQAQRQIK',\n",
+       " 'FYN_STFIGEHYVHVNATY',\n",
+       " 'IKKE_DLYNFQVSPMPSTSE',\n",
+       " 'JNK1_SCDKSTQTPSPPCQA',\n",
+       " 'ABL_QCIGPNGYMEPYCST',\n",
+       " 'PAK1_RLGKRVLSKLQSPSR',\n",
+       " 'CK2A1_NIMRTYTYEKLLWTT',\n",
+       " 'ERK2_CCSPPPDYNSVVLYS',\n",
+       " 'CK2A1_CSSAQAQYDTPKAGK',\n",
+       " 'CDK2_RGLSRQETFDSETQE',\n",
+       " 'CK2A2_SVPEFPLSPPKKKDL',\n",
+       " 'CDK1_STSATQSSPAPGQSK',\n",
+       " 'MAPKAPK2_PSLMRSQSPKAQPQT',\n",
+       " 'LYN_FTEAQKQYWVCNSSD',\n",
+       " 'PLK1_PVTTLTQTMHDLAGL',\n",
+       " 'LYN_FHRNDSIYEELQKHD',\n",
+       " 'NEK2_LYASLRLSRQAEATA',\n",
+       " 'PKACA_THRQGHIYMEMNFTN',\n",
+       " 'ERK1_VGETKVIYHLDEEET',\n",
+       " 'FYN_EKKSLTIYAQVQKPG',\n",
+       " 'DAPK1_GNLLGRNSFEVRVCA',\n",
+       " 'CAMKK2_DGPGLERSPGEPGGA',\n",
+       " 'SYK_RPSYSYDYEFDLGSD',\n",
+       " 'CK1D_CQTSLETSIFTPSPC',\n",
+       " 'MARK2_FGTMSSMSGADDTVY',\n",
+       " 'PLK1_TALIKRNSTIPTKQT',\n",
+       " 'EGFR_DEHSSDPYHSGYEMP',\n",
+       " 'PIM1_CPDVEMPSPWAPSGD',\n",
+       " 'AURB_AAFRLFKYGVQLYKN',\n",
+       " 'PKACA_PILSRRNTVWLCYEV',\n",
+       " 'CDK2_RRDYDDMSPRRGPPP',\n",
+       " 'IKKB_SRRSGLCSPSYVAVT',\n",
+       " 'PKG1_VRIEEGKSLRFPLAL',\n",
+       " 'FYN_HPGTSDSYSAPRDCL',\n",
+       " 'IRAK4_ASEKFAQTVMTSRIV',\n",
+       " 'AURB_PPITARNTGIICTIG',\n",
+       " 'BLK_QDNVDQTYSEELCYT',\n",
+       " 'PIM1_QGCSREASPSRLSVA',\n",
+       " 'PKACA_KRKRLSDYALIFGMF',\n",
+       " 'YES_PFLNSGTYHSRDEST',\n",
+       " 'PLK1_VKKSIRDTPAKNAQK',\n",
+       " 'CDK2_EEDSRPRSQSSKAAI',\n",
+       " 'JNK1_SAYGGLTSPGLSYSL',\n",
+       " 'GSK3B_STAENAEYLRVAPQS',\n",
+       " 'PIM1_MARQRRASLSCGGPG',\n",
+       " 'MARK2_FPLRKTASEPNLKVR',\n",
+       " 'PKACA_APTICFVYQDPQGRH',\n",
+       " 'CDK2_ADQTPGATPKKLSSW',\n",
+       " 'PDK1_PAPAPLGTPVKQENS',\n",
+       " 'PKACA_CFSSRRSSEASQAEG',\n",
+       " 'PLK1_SHLLVKHSQSRRPSS',\n",
+       " 'ROCK1_RRRRRSRSRSRSRSR',\n",
+       " 'CK1D_NQQESSDSGTSVSEN',\n",
+       " 'LRRK2_KIFNKHTSLRLLRQE',\n",
+       " 'SRC_PHQVKHLYITKELEH',\n",
+       " 'ULK1_NIVHGSGSQLFDHVA',\n",
+       " 'VRK1_DMDGSQDSPIFMYAP',\n",
+       " 'ERK1_FPKGEDFYCVTCHET',\n",
+       " 'PRKD1_PSWLRRASAPLPGLS',\n",
+       " 'BTK_EAHPNDLYVEGLPEN',\n",
+       " 'GSK3B_RACPPEVYAIMRGCW',\n",
+       " 'DAPK1_TLSEEKNSECDPTPS',\n",
+       " 'SRC_SLDGSREYVNVSQEL',\n",
+       " 'NUAK1_SLLGRSGSYSYLEER',\n",
+       " 'GRK2_ILVSIGESFGTSEKF',\n",
+       " 'PKACA_STFTNITYRGT____',\n",
+       " 'PKACA_LLCLRRSSLKAYGNG',\n",
+       " 'CDK5_SFEPKIRSPRRFIGS',\n",
+       " 'PLK1_EPMRRSVSEAALAQP',\n",
+       " 'LYN_RYVLDDEYTSSVGSK',\n",
+       " 'CK2A1_RFSPYEWYNPHPCNP',\n",
+       " 'ERK2_SSSNRPFTPPTSTGG',\n",
+       " 'IKKE_PAARTPQSPAPCVLL',\n",
+       " 'ERK2_HEELTVLYSELKKTH',\n",
+       " 'SRC_LNDRLAVYIDRVRSL',\n",
+       " 'NLK_KSKATQLSPEDRVED',\n",
+       " 'MPSK1_ERSPNEEYTWEEDPL',\n",
+       " 'PKACA_KDGTKRKSLSDSESD',\n",
+       " 'P38B_DMADTCGTICHAADK',\n",
+       " 'PYK2_AEHEEDMYRAADEIE',\n",
+       " 'FRK_HDLTETSYLPRQDLE',\n",
+       " 'CAMK2A_ERHRRINSKKKESAW',\n",
+       " 'PDGFRB_SDGHEYIYVDPMQLP',\n",
+       " 'PIM1_DMENKIRSTLNEIYF',\n",
+       " 'CDK2_SLESLYFTPIPARSQ',\n",
+       " 'PKACA_LDMGDEVYDDVDTSD',\n",
+       " 'LKB1_LPKLYLPTGPRRGRD',\n",
+       " 'SRC_LIIEDPYYGNDSDFE',\n",
+       " 'ABL_PKGTQADYAEVKFQ_',\n",
+       " 'ERK5_VKAEPAHTAASVAAK',\n",
+       " 'CK1E_RAAYFGVYDTAKGML',\n",
+       " 'CHK2_RAMKDLTYASLCFPE',\n",
+       " 'PKACA_GQVDVPLYPLPTENP',\n",
+       " 'ARG_DGSFIGQYSGKKEKE',\n",
+       " 'ULK1_SNYHQLGTPGTESCF',\n",
+       " 'DYRK2_KVLTDEQYQAVRAEP',\n",
+       " 'JNK1_PDPGMSLTDRGVMSY',\n",
+       " 'FAK_FLPVNPEYSATRNQG',\n",
+       " 'PKACA_TLTTNEEYLDLSQPL',\n",
+       " 'CDK5_VNQGEMSSPQRVTST',\n",
+       " 'HCK_LHSEPPVYANLSNFN',\n",
+       " 'LYN_VQINDNYYEDLTAKD',\n",
+       " 'ERK2_SSGGEQDYDYLNDWG',\n",
+       " 'TBK1_VNNKSLVSMSATMAE',\n",
+       " 'SLK_AGRDKYKTLRQIRQG',\n",
+       " 'PKACA_TGHGLRRSSKFCLKE',\n",
+       " 'CDK1_TIKQEPVSPKKKENA',\n",
+       " 'ALK_SSSAASSYSFSDLNS',\n",
+       " 'ERK2_AGKEQTYYQGRHLGD',\n",
+       " 'MST1_APSLRRKTMCGTLDY',\n",
+       " 'CDK5_SVRCSSMS_______',\n",
+       " 'SRC_SILKANEYSFKVPEF',\n",
+       " 'PKACA_PNKRQHIYQRCIQLK',\n",
+       " 'GSK3B_ELKQMVMSLRVSELQ',\n",
+       " 'SRC_FYDETYDYGGFTMMF',\n",
+       " 'PLK1_EQPPLQPSPVMTRRG',\n",
+       " 'SRC_RHSTILDYINVVPTA',\n",
+       " 'PKG1_LDSDEDFSDFDEKTD',\n",
+       " 'EGFR_FFQQQMIYDSPPSRA',\n",
+       " 'SRC_DIHDDQDYLHSLGKA',\n",
+       " 'ERK2_IGTAEPDYGALYEGR',\n",
+       " 'CK2A1_DVYDDGKYVYVVTEL',\n",
+       " 'HER2_GAVENPEYLTPQGGA',\n",
+       " 'ERK1_GEASSTTSPTEETTQ',\n",
+       " 'KSR2_KVLLRRKSELPQDVY',\n",
+       " 'JNK1_HQLFRGFSFVATGLM',\n",
+       " 'CDK2_YACASPKTPIQAGGY',\n",
+       " 'ABL_CTQPRPNYASNFSVI',\n",
+       " 'PDGFRB_TGESDGGYMDMSKDE',\n",
+       " 'GRK4_EPIQMENSMGTLRTS',\n",
+       " 'STLK3_KGVDFESSEDDDDDP',\n",
+       " 'JNK3_____MAASLPGPGSR',\n",
+       " 'AMPKA2_AFRRRANTLSHFPIE',\n",
+       " 'CK1D_FNGGFGSSMDSKSSG',\n",
+       " 'ERK2_HRLESPTTPLLDDMD',\n",
+       " 'ERK1_IVAENPEYLSEFSLK',\n",
+       " 'CK2A1_TSTETRSSSSESSHS',\n",
+       " 'DAPK1_QALSRKASAVNMEKF',\n",
+       " 'FYN_YPAEDSTYDEYENDL',\n",
+       " 'AURA_YRELQKLSKFDEQRT',\n",
+       " 'CHK1_RPLIKAPSQLPLSGS',\n",
+       " 'PKG1 ISO2_NSHSPAGSAAISQQD',\n",
+       " 'JNK1_GAEIVYKSPVVSGDT',\n",
+       " 'SRC_SNCTNELYMMMRDCW',\n",
+       " 'AMPKA1_APLATMESLSDTESL',\n",
+       " 'RET_EEEKEETYDDIDGFD',\n",
+       " 'CK1A2_LLDNSRMSCQDEGCG',\n",
+       " 'ABL_VGNGSSRYSPSQNSP',\n",
+       " 'P38A_IREFLDQYDAPL___',\n",
+       " 'CDK5_NIKARASSSPVILVG',\n",
+       " 'PKACA_SSLIRKRSTRRSVRG',\n",
+       " 'CK2A1_ASLVSQDYVNGTDQE',\n",
+       " 'MKK3_LYNEYIVYDIAQVNL',\n",
+       " 'LCK_KKKTEGTYDLPYWDR',\n",
+       " 'CDK2_PSPEPSMSPKMHRRR',\n",
+       " 'CK1E_FNGGFGSSMDSKSSG',\n",
+       " 'MAPKAPK2_PKLARQASIELPSMA',\n",
+       " 'MET_KGDLDISYITSRIAV',\n",
+       " 'PKG1_PGKARKKSSCQLL__',\n",
+       " 'PKACA_RREERSLSAPGNLLT',\n",
+       " 'MAPKAPK2_VSSGSRSSTRTSTSS',\n",
+       " 'CDK2_EEERIPATPVVIPMK',\n",
+       " 'CAMKK1_TEAAQLSTKSRAEGR',\n",
+       " 'AURB_RFGKKVTYVVIGDGR',\n",
+       " 'CDK1_LGPYEAVTPLTKAAD',\n",
+       " 'JNK1_KKEKKQQSIAGSADS',\n",
+       " 'NEK2_AELVRTDSPNFLCSV',\n",
+       " 'CK1D_DDFADDISLLK____',\n",
+       " 'CDK16_NVRVSNGSPSLERMD',\n",
+       " 'TBK1_MSSILPFTPPVVKRL',\n",
+       " 'CDK1_SGRARTSSFAEPGGG',\n",
+       " 'SRC_HEELTVLYSELKKTH',\n",
+       " 'CAMK2A_DYTTGGESCDELEED',\n",
+       " 'PKACA_EAALLPLYMEGGFVE',\n",
+       " 'CAMK2A_QQAGSGLSEEDAPER',\n",
+       " 'CAMK2A_ICALRHLTSRHQEAE',\n",
+       " 'SRC_PFLNSGTYHSRDEST',\n",
+       " 'ROCK2_NDRKKRYTVVGNPYW',\n",
+       " 'ULK1_APNVHINTIEPVNID',\n",
+       " 'CHK1_FTSTEPQYQPGENL_',\n",
+       " 'SRC_EASRLAHYNKRSTIT',\n",
+       " 'ABL_NDPTAPPYDSLLVFD',\n",
+       " 'TTBK1_GEGYKKKYQQVDEEF',\n",
+       " 'CK2A1_KPQKSVVSDLEADDV',\n",
+       " 'JNK1_QADSASLSASLLADW',\n",
+       " 'AMPKA1_AVVKRMQSLQLDCVA',\n",
+       " 'ABL_DFDDEAYYAALGTRP',\n",
+       " 'LYN_TDDDKNIYLTLPPND',\n",
+       " 'PKACA_SSISTPHYEDIPFTR',\n",
+       " 'CAMK1A_RAMKKVNTAPSSVSL',\n",
+       " 'AMPKA1_TDASRRSSEASQSDG',\n",
+       " 'GSK3B_QTETEMLYGSAPRTP',\n",
+       " 'CDK4_GLMKRRSSV______',\n",
+       " 'PKR_NKEKKAVSPLLLTTT',\n",
+       " 'IRAK4_QSYMPPDSSSPENKS',\n",
+       " 'SRC_AIEWPGAYPKLMEID',\n",
+       " 'CDK1_LSLFRRLSDQRSKER',\n",
+       " 'SRC_EDMRGILYAAPQLRS',\n",
+       " 'CK1D_KASVMRLTISYLRVR',\n",
+       " 'SRC_VDSGNDIYGNPIKRI',\n",
+       " 'CDK2_ALDCSQVSPPRPATS',\n",
+       " 'AMPKA2_EVYELLDSPGKVLLQ',\n",
+       " 'CK2A1_GSSDDVRYVNAFKFM',\n",
+       " 'TAO1_QRATKRISHMPSRPE',\n",
+       " 'ERK1_TRVFKKSSPNCKLTV',\n",
+       " 'ICK_MKLERPRTSKGKARP',\n",
+       " 'P38A_EPICSVNTPREVTLH',\n",
+       " 'ZAP70_GAPAPGVYPGPPSGP',\n",
+       " 'PLK1_QPWNSDSTLNSRQLE',\n",
+       " 'CDK2_MQAISLFSPDRPGVL',\n",
+       " 'LTK_RRRAPELYRAPFPLY',\n",
+       " 'FYN_PFAEDKTYKYICRNF',\n",
+       " 'IRAK4___MNKPITPSTYVRC',\n",
+       " 'CLK1_EKDASKKSDSNPLTE',\n",
+       " 'CAMK2A_QVFSRSESTQPLLDS',\n",
+       " 'OSR1_KSTSPPPSPEVWADS',\n",
+       " 'LCK_VNGHLDSYEKVTQLP',\n",
+       " 'ERK1_EKLALYVYEYLLHVG',\n",
+       " 'STLK3_GADKIQMTWTRDKYM',\n",
+       " 'CAMK2A_DDRQIVDTPPHVAAG',\n",
+       " 'ERK1_LPQNDDHYVMQEHRK',\n",
+       " 'AMPKA1_GSRSRTPSLPTPPTR',\n",
+       " 'PINK1_DGPKFLKSGDAAIVD',\n",
+       " 'MELK_KGAKVFGSLERGLDK',\n",
+       " 'CDK5_NVKSKIGSTENLKHQ',\n",
+       " 'ERK2_GFDLDLTYIYPNIIA',\n",
+       " 'CK2A1_DDSDEDMSNFDRFSE',\n",
+       " 'P38A_MSDPGVSYRTREEIQ',\n",
+       " 'GSK3A_VVRTPPKSPSSAKSR',\n",
+       " 'TBK1_VELFGPISLEQVRFP',\n",
+       " 'CK1A_VDSEGHLYTVPIREQ',\n",
+       " 'AURB_PFLNSGTYHSRDEST',\n",
+       " 'MELK_QRLFRSPSMPCSVIR',\n",
+       " 'ERK1_STTGLSATPPASLPG',\n",
+       " 'CAMK1A_KPDYRRWSAEVTSST',\n",
+       " 'CK1A_ASKIRSGYFDERYVL',\n",
+       " 'PKACA_RKRKKRTSIEVSVKG',\n",
+       " 'CDK2_GTNDLASTPGSGSSS',\n",
+       " 'CDK2_VYFKPSLTPSGEFRK',\n",
+       " 'SRC_STSSSIIYSSQEDVK',\n",
+       " 'PKACA_SGGARGGSGGFGDEC',\n",
+       " 'ALK_GLSNNDQYKLYSKHF',\n",
+       " 'HCK_VRMQALTYLQRALLV',\n",
+       " 'CK2A1_MPKRKVSSAEGAAKE',\n",
+       " 'PKACA_GEKSRYETSLNLTTK',\n",
+       " 'TAK1_CDIQTHMTNNKGSAA',\n",
+       " 'TBK1_LRRRTRLSTASEETV',\n",
+       " 'ERK1_TLMEKDSYPRFLKSP',\n",
+       " 'CK1A_GERQLYCYEVVPQQP',\n",
+       " 'STLK3_RPLARVTSLANLISP',\n",
+       " 'AURA_TRSSARRSQAGVSSG',\n",
+       " 'CDK1_PLPSPTASPNHTLAP',\n",
+       " 'WNK4_RSYPKSNSSKEYV__',\n",
+       " 'LCK_KYLQKPMYEVQWKVV',\n",
+       " 'ERK1_VVRTPPKSPSSAKSR',\n",
+       " 'CDK2_NYGTNPGTPPASTSP',\n",
+       " 'CDK1_EKAKLENSTQAEEGF',\n",
+       " 'ERK2_SSNFDSIYICPSTFA',\n",
+       " 'CDK2_QSSDSLNSPTLLAL_',\n",
+       " 'CDK1_ICLEDIHTSRVVAHV',\n",
+       " 'MST1_PDPGMSLTDRGVMSY',\n",
+       " 'FGFR1_KRNSLPQYQATMPDG',\n",
+       " 'TAK1_FPLRKTASEPNLKVR',\n",
+       " 'CDK1_GLLTPPQSGKKQSSG',\n",
+       " 'IKKB_LAEQHLESPVPSAPG',\n",
+       " 'PRKD1_TTKDGWVYYANHTEE',\n",
+       " 'ABL_LAQAPPVYLDVLG__',\n",
+       " 'PRKD1_PNFYDETYDYGGFTM',\n",
+       " 'PKACA_IKQERISYTPPESPV',\n",
+       " 'CK2A1_ETPPTTSSDSEEEQE',\n",
+       " 'PAK1_QMEKDIRSDVEESDS',\n",
+       " 'GSK3B_SRIGDELYLEPLEDG',\n",
+       " 'CDK1_KAAHAAKTVKHGAGA',\n",
+       " 'SRC_GYGFKEEYEALPEGQ',\n",
+       " 'CDK2_LSQRFTFSPGQDIQL',\n",
+       " 'IKKB_SSRRRAISETEENSD',\n",
+       " 'BLK_AKLAEALYIADRKAR',\n",
+       " 'SRC_VENPKMPYEMKEMAL',\n",
+       " 'GSK3B_KDDFQRLTPSYNADI',\n",
+       " 'ERK1_RFLKSPAYRDLAAQA',\n",
+       " 'PKACA_TGLVRENYVWNVLLH',\n",
+       " 'PKACA_DSQQTNDYMQPEEDW',\n",
+       " 'CK2A1_CAAWHGYYSVAKALC',\n",
+       " 'CK1A_NTEQRNVYKDLRQIE',\n",
+       " 'AURB_RGKLARASGNYATVI',\n",
+       " 'AMPKA1_TVHQRIASWQNLGAV',\n",
+       " ...}"
+      ]
+     },
+     "execution_count": 25,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test1_sub = df_test1.ensemble_id.unique()\n",
+    "df_test1_kin = df_test1.kinase.unique()\n",
+    "df_test1_pair = set(df_test1.kinase + '_' + df_test1.subseq)\n",
+    "df_test1_pair"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 82,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "nwk = pd.read_pickle(\"/home/hb/python/phospho/data/benchmark_data/nwk.pickle\")\n",
+    "nwk['sequence'] = nwk['sequence'].apply(lambda x: x.upper())\n",
+    "nwk_sub = nwk.substrate_id.unique()\n",
+    "nwk_kin = nwk.kinase.unique()\n",
+    "nwk_pair = nwk['kinase'] + '_' + nwk['sequence']\n",
+    "nwk['pair'] = nwk_pair"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 84,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>substrate_id</th>\n",
+       "      <th>#substrate</th>\n",
+       "      <th>position</th>\n",
+       "      <th>id</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>tree</th>\n",
+       "      <th>netphorest_group</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_identifier</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>substrate_name</th>\n",
+       "      <th>sequence</th>\n",
+       "      <th>string_path</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>pair</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.0071</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "      <td>PKCA_REEILSEMKKV</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>1.3889</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>PKCB_REEILSEMKKV</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCzeta</td>\n",
+       "      <td>0.5163</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1685</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILSEMKKV</td>\n",
+       "      <td>ENSP00000367830, 0.6584 ENSP00000226574, 0.727...</td>\n",
+       "      <td>PKCZ</td>\n",
+       "      <td>PKCZ_REEILSEMKKV</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>369</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.7569</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "      <td>PKCA_TKGHLSNRAII</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>369</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>2.4948</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>TKGHLSNRAII</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>PKCB_TKGHLSNRAII</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459743</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>135</td>\n",
+       "      <td>CK1alpha</td>\n",
+       "      <td>1.3564</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>CK1_group</td>\n",
+       "      <td>0.1338</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1079</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>SSEEDSPIKSD</td>\n",
+       "      <td>ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...</td>\n",
+       "      <td>CK1A</td>\n",
+       "      <td>CK1A_SSEEDSPIKSD</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459744</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>135</td>\n",
+       "      <td>MAPK3</td>\n",
+       "      <td>1.4275</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>MAPK3_MAPK1_MAPK7_NLK_group</td>\n",
+       "      <td>0.1783</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1328</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>SSEEDSPIKSD</td>\n",
+       "      <td>ENSP00000263025, 0.54 ENSP00000363559, 0.3416 ...</td>\n",
+       "      <td>MAPK3</td>\n",
+       "      <td>MAPK3_SSEEDSPIKSD</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459745</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>474</td>\n",
+       "      <td>CK1alpha</td>\n",
+       "      <td>1.3564</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>CK1_group</td>\n",
+       "      <td>0.1249</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1079</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>AKESASQHITE</td>\n",
+       "      <td>ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...</td>\n",
+       "      <td>CK1A</td>\n",
+       "      <td>CK1A_AKESASQHITE</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459746</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>474</td>\n",
+       "      <td>PAK1</td>\n",
+       "      <td>0.7524</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PAK_group</td>\n",
+       "      <td>0.0438</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1020</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>AKESASQHITE</td>\n",
+       "      <td>ENSP00000278568, 0.54 ENSP00000363559, 0.2624 ...</td>\n",
+       "      <td>PAK1</td>\n",
+       "      <td>PAK1_AKESASQHITE</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459747</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>474</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>0.8358</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.0921</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1926</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>AKESASQHITE</td>\n",
+       "      <td>ENSP00000305355, 0.54 ENSP00000363559, 0.4952 ...</td>\n",
+       "      <td>PKCB</td>\n",
+       "      <td>PKCB_AKESASQHITE</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>459748 rows √ó 16 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       substrate     substrate_id              #substrate  position        id  \\\n",
+       "0           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       154  PKCalpha   \n",
+       "1           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       154   PKCbeta   \n",
+       "2           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       154   PKCzeta   \n",
+       "3           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       369  PKCalpha   \n",
+       "4           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       369   PKCbeta   \n",
+       "...          ...              ...                     ...       ...       ...   \n",
+       "459743      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       135  CK1alpha   \n",
+       "459744      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       135     MAPK3   \n",
+       "459745      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       474  CK1alpha   \n",
+       "459746      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       474      PAK1   \n",
+       "459747      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       474   PKCbeta   \n",
+       "\n",
+       "        networkin_score tree             netphorest_group  netphorest_score  \\\n",
+       "0                1.0071  KIN                    PKC_group            0.1576   \n",
+       "1                1.3889  KIN                    PKC_group            0.1576   \n",
+       "2                0.5163  KIN                    PKC_group            0.1576   \n",
+       "3                1.7569  KIN                    PKC_group            0.3374   \n",
+       "4                2.4948  KIN                    PKC_group            0.3374   \n",
+       "...                 ...  ...                          ...               ...   \n",
+       "459743           1.3564  KIN                    CK1_group            0.1338   \n",
+       "459744           1.4275  KIN  MAPK3_MAPK1_MAPK7_NLK_group            0.1783   \n",
+       "459745           1.3564  KIN                    CK1_group            0.1249   \n",
+       "459746           0.7524  KIN                    PAK_group            0.0438   \n",
+       "459747           0.8358  KIN                    PKC_group            0.0921   \n",
+       "\n",
+       "       string_identifier  string_score substrate_name     sequence  \\\n",
+       "0        ENSP00000282641        0.1738           A1CF  REEILSEMKKV   \n",
+       "1        ENSP00000282641        0.1232           A1CF  REEILSEMKKV   \n",
+       "2        ENSP00000282641        0.1685           A1CF  REEILSEMKKV   \n",
+       "3        ENSP00000282641        0.1738           A1CF  TKGHLSNRAII   \n",
+       "4        ENSP00000282641        0.1232           A1CF  TKGHLSNRAII   \n",
+       "...                  ...           ...            ...          ...   \n",
+       "459743   ENSP00000359837        0.1079           ZZZ3  SSEEDSPIKSD   \n",
+       "459744   ENSP00000359837        0.1328           ZZZ3  SSEEDSPIKSD   \n",
+       "459745   ENSP00000359837        0.1079           ZZZ3  AKESASQHITE   \n",
+       "459746   ENSP00000359837        0.1020           ZZZ3  AKESASQHITE   \n",
+       "459747   ENSP00000359837        0.1926           ZZZ3  AKESASQHITE   \n",
+       "\n",
+       "                                              string_path kinase  \\\n",
+       "0       ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA   \n",
+       "1       ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB   \n",
+       "2       ENSP00000367830, 0.6584 ENSP00000226574, 0.727...   PKCZ   \n",
+       "3       ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA   \n",
+       "4       ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB   \n",
+       "...                                                   ...    ...   \n",
+       "459743  ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...   CK1A   \n",
+       "459744  ENSP00000263025, 0.54 ENSP00000363559, 0.3416 ...  MAPK3   \n",
+       "459745  ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...   CK1A   \n",
+       "459746  ENSP00000278568, 0.54 ENSP00000363559, 0.2624 ...   PAK1   \n",
+       "459747  ENSP00000305355, 0.54 ENSP00000363559, 0.4952 ...   PKCB   \n",
+       "\n",
+       "                     pair  \n",
+       "0        PKCA_REEILSEMKKV  \n",
+       "1        PKCB_REEILSEMKKV  \n",
+       "2        PKCZ_REEILSEMKKV  \n",
+       "3        PKCA_TKGHLSNRAII  \n",
+       "4        PKCB_TKGHLSNRAII  \n",
+       "...                   ...  \n",
+       "459743   CK1A_SSEEDSPIKSD  \n",
+       "459744  MAPK3_SSEEDSPIKSD  \n",
+       "459745   CK1A_AKESASQHITE  \n",
+       "459746   PAK1_AKESASQHITE  \n",
+       "459747   PKCB_AKESASQHITE  \n",
+       "\n",
+       "[459748 rows x 16 columns]"
+      ]
+     },
+     "execution_count": 84,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 86,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>pair</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>subseq11</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>22915</th>\n",
+       "      <td>TRKA_PVKDPYVMFPQ</td>\n",
+       "      <td>TRKA</td>\n",
+       "      <td>P04629</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>00LKWELGEGAFGKVFLAECHNLPEQDKMLVAVKALKEASESARQD...</td>\n",
+       "      <td>SEPVKDPYVMFPQNA</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000472989</td>\n",
+       "      <td>PVKDPYVMFPQ</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22916</th>\n",
+       "      <td>ULK2_GDDWDTDPDFV</td>\n",
+       "      <td>ULK2</td>\n",
+       "      <td>Q8IYT8</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YSKRDLVGHGAFAVVFRGRHRQTDWEVAIKSINKKNLSKSQILLGK...</td>\n",
+       "      <td>TQGDDWDTDPDFVND</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0273678027634894, 1.003004504503377, 0.98...</td>\n",
+       "      <td>ENSP00000419614</td>\n",
+       "      <td>GDDWDTDPDFV</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22917</th>\n",
+       "      <td>JNK2_SSLSPSPASSI</td>\n",
+       "      <td>JNK2</td>\n",
+       "      <td>P45984</td>\n",
+       "      <td>NFAT4</td>\n",
+       "      <td>Q12968</td>\n",
+       "      <td>YQQLKPIGSGAQGIVCAAFDTVLGINVAVKKLSRPFQNQTHAKRAY...</td>\n",
+       "      <td>RESSLSPSPASSISS</td>\n",
+       "      <td>S165</td>\n",
+       "      <td>448858.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0618365465453596, 0.8650222931107413, 1.0...</td>\n",
+       "      <td>ENSP00000457441</td>\n",
+       "      <td>SSLSPSPASSI</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22918</th>\n",
+       "      <td>HGK_RDKYKTLRQIR</td>\n",
+       "      <td>HGK</td>\n",
+       "      <td>O95819</td>\n",
+       "      <td>Moesin</td>\n",
+       "      <td>P26038</td>\n",
+       "      <td>FELVEVVGNGTYGQVYKGRHVKTGQLAAIKVMDVTEDEEEEIKLEI...</td>\n",
+       "      <td>LGRDKYKTLRQIRQG</td>\n",
+       "      <td>T558</td>\n",
+       "      <td>447706.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0963648220808169, 1.0191816486174081, 0.9...</td>\n",
+       "      <td>ENSP00000513134</td>\n",
+       "      <td>RDKYKTLRQIR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22919</th>\n",
+       "      <td>ERK2_GDADMYDLPKK</td>\n",
+       "      <td>ERK2</td>\n",
+       "      <td>P28482</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>TRGDADMYDLPKKED</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0273678027634894, 1.0618365465453596, 0.9...</td>\n",
+       "      <td>ENSP00000507059</td>\n",
+       "      <td>GDADMYDLPKK</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                   pair kinase  kin_id substrate  sub_id  \\\n",
+       "22915  TRKA_PVKDPYVMFPQ   TRKA  P04629       NaN     NaN   \n",
+       "22916  ULK2_GDDWDTDPDFV   ULK2  Q8IYT8       NaN     NaN   \n",
+       "22917  JNK2_SSLSPSPASSI   JNK2  P45984     NFAT4  Q12968   \n",
+       "22918   HGK_RDKYKTLRQIR    HGK  O95819    Moesin  P26038   \n",
+       "22919  ERK2_GDADMYDLPKK   ERK2  P28482       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "22915  00LKWELGEGAFGKVFLAECHNLPEQDKMLVAVKALKEASESARQD...  SEPVKDPYVMFPQNA   \n",
+       "22916  YSKRDLVGHGAFAVVFRGRHRQTDWEVAIKSINKKNLSKSQILLGK...  TQGDDWDTDPDFVND   \n",
+       "22917  YQQLKPIGSGAQGIVCAAFDTVLGINVAVKKLSRPFQNQTHAKRAY...  RESSLSPSPASSISS   \n",
+       "22918  FELVEVVGNGTYGQVYKGRHVKTGQLAAIKVMDVTEDEEEEIKLEI...  LGRDKYKTLRQIRQG   \n",
+       "22919  YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...  TRGDADMYDLPKKED   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "22915         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "22916         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "22917        S165     448858.0        human        human      1  263.0   \n",
+       "22918        T558     447706.0        human        human      1  263.0   \n",
+       "22919         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix      ensemble_id  \\\n",
+       "22915  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000472989   \n",
+       "22916  [[[1.0273678027634894, 1.003004504503377, 0.98...  ENSP00000419614   \n",
+       "22917  [[[1.0618365465453596, 0.8650222931107413, 1.0...  ENSP00000457441   \n",
+       "22918  [[[1.0963648220808169, 1.0191816486174081, 0.9...  ENSP00000513134   \n",
+       "22919  [[[1.0273678027634894, 1.0618365465453596, 0.9...  ENSP00000507059   \n",
+       "\n",
+       "          subseq11  \n",
+       "22915  PVKDPYVMFPQ  \n",
+       "22916  GDDWDTDPDFV  \n",
+       "22917  SSLSPSPASSI  \n",
+       "22918  RDKYKTLRQIR  \n",
+       "22919  GDADMYDLPKK  "
+      ]
+     },
+     "execution_count": 86,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "tr = pd.read_pickle(\"/home/hb/python/phospho/data/0119_nwk_matching/train1.pickle\")\n",
+    "tr.tail()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 85,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>FAK</td>\n",
+       "      <td>Q05397</td>\n",
+       "      <td>FAK</td>\n",
+       "      <td>Q05397</td>\n",
+       "      <td>IELGRCIGEGQFGDVHQGIYMSPENPALAVAIKTCKNCTSDSVREK...</td>\n",
+       "      <td>IIDEEDTYTMPSTRD</td>\n",
+       "      <td>Y407</td>\n",
+       "      <td>447888.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.3951472984698037, 1.3951472984698037, 0.8...</td>\n",
+       "      <td>ENSP00000431023</td>\n",
+       "      <td>Fak</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>ABL</td>\n",
+       "      <td>P00519</td>\n",
+       "      <td>Rb</td>\n",
+       "      <td>P06400</td>\n",
+       "      <td>ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...</td>\n",
+       "      <td>RIPGGNIYISPLKSP</td>\n",
+       "      <td>Y805</td>\n",
+       "      <td>456752.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9656054162575665, 1.3951472984698037, 0.7...</td>\n",
+       "      <td>ENSP00000496005</td>\n",
+       "      <td>Abl</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>MELK</td>\n",
+       "      <td>Q14680</td>\n",
+       "      <td>MELK</td>\n",
+       "      <td>Q14680</td>\n",
+       "      <td>YELHETIGTGGFAKVKLACHILTGEMVAIKIMDKNTLGSDLPRIKT...</td>\n",
+       "      <td>SPERRCRSVELDLNQ</td>\n",
+       "      <td>S505</td>\n",
+       "      <td>2861409.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0232665395472176, 0.8860339595928756, 0.8...</td>\n",
+       "      <td>ENSP00000443550</td>\n",
+       "      <td>CAMKL</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>EMSY</td>\n",
+       "      <td>Q7Z589</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>KPRKRRRTNSSSSSP</td>\n",
+       "      <td>T207</td>\n",
+       "      <td>1210942.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9762857097579093, 0.8702280284582515, 0.9...</td>\n",
+       "      <td>ENSP00000436307</td>\n",
+       "      <td>PKA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>SRC</td>\n",
+       "      <td>P12931</td>\n",
+       "      <td>tensin 3</td>\n",
+       "      <td>Q68CZ2</td>\n",
+       "      <td>0RLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQ...</td>\n",
+       "      <td>QDTSKFWYKADISRE</td>\n",
+       "      <td>Y1173</td>\n",
+       "      <td>9824600.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000407464</td>\n",
+       "      <td>Src</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3995</th>\n",
+       "      <td>AMPKA1</td>\n",
+       "      <td>Q13131</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>00LGDTLGVGTFGKVKVGKHELTGHKVAVKILNRQKIRSLDVGKIR...</td>\n",
+       "      <td>AQVSRRISFSASHRL</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000434688</td>\n",
+       "      <td>CAMKL</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3996</th>\n",
+       "      <td>KSR2</td>\n",
+       "      <td>Q6VAB6</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>LEIGELIGKGRFGQVYHGRWHGEVAIRLIDERDNEDQLKAFKREVM...</td>\n",
+       "      <td>EAETLAETEPERHLG</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.9841273200552851, 1.3008267189517242, 0.9...</td>\n",
+       "      <td>ENSP00000429729</td>\n",
+       "      <td>RAF</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3997</th>\n",
+       "      <td>MAPKAPK2</td>\n",
+       "      <td>P49137</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>000SQVLGLGINGKVLQIFNKRTQEKFALKMLQDCPKARREVELHW...</td>\n",
+       "      <td>LVDSVAKTMDAGCKP</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000486923</td>\n",
+       "      <td>MAPKAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3998</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>EPEPENDYEDVEEMD</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8798533791446438, 0.8702280284582515, 0.8...</td>\n",
+       "      <td>ENSP00000419614</td>\n",
+       "      <td>PKA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3999</th>\n",
+       "      <td>CK2A1</td>\n",
+       "      <td>P68400</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...</td>\n",
+       "      <td>GRCPSDPYKHSLPSQ</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.981179362242806, 1.0618365465453596, 1.37...</td>\n",
+       "      <td>ENSP00000489946</td>\n",
+       "      <td>CK2</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>4000 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "        kinase  kin_id substrate  sub_id  \\\n",
+       "0          FAK  Q05397       FAK  Q05397   \n",
+       "1          ABL  P00519        Rb  P06400   \n",
+       "2         MELK  Q14680      MELK  Q14680   \n",
+       "3        PKACA  P17612      EMSY  Q7Z589   \n",
+       "4          SRC  P12931  tensin 3  Q68CZ2   \n",
+       "...        ...     ...       ...     ...   \n",
+       "3995    AMPKA1  Q13131       NaN     NaN   \n",
+       "3996      KSR2  Q6VAB6       NaN     NaN   \n",
+       "3997  MAPKAPK2  P49137       NaN     NaN   \n",
+       "3998     PKACA  P17612       NaN     NaN   \n",
+       "3999     CK2A1  P68400       NaN     NaN   \n",
+       "\n",
+       "                                                 kinseq           subseq  \\\n",
+       "0     IELGRCIGEGQFGDVHQGIYMSPENPALAVAIKTCKNCTSDSVREK...  IIDEEDTYTMPSTRD   \n",
+       "1     ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...  RIPGGNIYISPLKSP   \n",
+       "2     YELHETIGTGGFAKVKLACHILTGEMVAIKIMDKNTLGSDLPRIKT...  SPERRCRSVELDLNQ   \n",
+       "3     FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  KPRKRRRTNSSSSSP   \n",
+       "4     0RLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQ...  QDTSKFWYKADISRE   \n",
+       "...                                                 ...              ...   \n",
+       "3995  00LGDTLGVGTFGKVKVGKHELTGHKVAVKILNRQKIRSLDVGKIR...  AQVSRRISFSASHRL   \n",
+       "3996  LEIGELIGKGRFGQVYHGRWHGEVAIRLIDERDNEDQLKAFKREVM...  EAETLAETEPERHLG   \n",
+       "3997  000SQVLGLGINGKVLQIFNKRTQEKFALKMLQDCPKARREVELHW...  LVDSVAKTMDAGCKP   \n",
+       "3998  FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  EPEPENDYEDVEEMD   \n",
+       "3999  YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...  GRCPSDPYKHSLPSQ   \n",
+       "\n",
+       "     sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0           Y407     447888.0        human        human      1  263.0   \n",
+       "1           Y805     456752.0        human        human      1  263.0   \n",
+       "2           S505    2861409.0        human        human      1  263.0   \n",
+       "3           T207    1210942.0        human        human      1  263.0   \n",
+       "4          Y1173    9824600.0        human        human      1  263.0   \n",
+       "...          ...          ...          ...          ...    ...    ...   \n",
+       "3995         NaN          NaN          NaN        human      0    NaN   \n",
+       "3996         NaN          NaN          NaN        human      0    NaN   \n",
+       "3997         NaN          NaN          NaN        human      0    NaN   \n",
+       "3998         NaN          NaN          NaN        human      0    NaN   \n",
+       "3999         NaN          NaN          NaN        human      0    NaN   \n",
+       "\n",
+       "                                                 matrix      ensemble_id  \\\n",
+       "0     [[[1.3951472984698037, 1.3951472984698037, 0.8...  ENSP00000431023   \n",
+       "1     [[[0.9656054162575665, 1.3951472984698037, 0.7...  ENSP00000496005   \n",
+       "2     [[[1.0232665395472176, 0.8860339595928756, 0.8...  ENSP00000443550   \n",
+       "3     [[[0.9762857097579093, 0.8702280284582515, 0.9...  ENSP00000436307   \n",
+       "4     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000407464   \n",
+       "...                                                 ...              ...   \n",
+       "3995  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000434688   \n",
+       "3996  [[[0.9841273200552851, 1.3008267189517242, 0.9...  ENSP00000429729   \n",
+       "3997  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000486923   \n",
+       "3998  [[[0.8798533791446438, 0.8702280284582515, 0.8...  ENSP00000419614   \n",
+       "3999  [[[0.981179362242806, 1.0618365465453596, 1.37...  ENSP00000489946   \n",
+       "\n",
+       "       family  \n",
+       "0         Fak  \n",
+       "1         Abl  \n",
+       "2       CAMKL  \n",
+       "3         PKA  \n",
+       "4         Src  \n",
+       "...       ...  \n",
+       "3995    CAMKL  \n",
+       "3996      RAF  \n",
+       "3997  MAPKAPK  \n",
+       "3998      PKA  \n",
+       "3999      CK2  \n",
+       "\n",
+       "[4000 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 85,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "tt = pd.read_pickle(\"/home/hb/python/phospho/data/0111_new_data/train_test/test1.pickle\")\n",
+    "tt"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 89,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "tt = pd.read_pickle(\"/home/hb/python/phospho/data/after1227_new_data/syt_false_dataset/after0214_train_test/syt1_test.pkl\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 93,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "tt.reset_index(drop=True, inplace=True)\n",
+    "tt['kinase'] = tt['kinase'].apply(lambda x: x.upper())\n",
+    "tt['pair'] = tt['kinase'] + '_' + tt['subseq']"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 94,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>substrate_id</th>\n",
+       "      <th>#substrate</th>\n",
+       "      <th>position</th>\n",
+       "      <th>id</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>tree</th>\n",
+       "      <th>netphorest_group</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_identifier</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>substrate_name</th>\n",
+       "      <th>sequence</th>\n",
+       "      <th>string_path</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>pair</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "Empty DataFrame\n",
+       "Columns: [substrate, substrate_id, #substrate, position, id, networkin_score, tree, netphorest_group, netphorest_score, string_identifier, string_score, substrate_name, sequence, string_path, kinase, pair]\n",
+       "Index: []"
+      ]
+     },
+     "execution_count": 94,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk[nwk['pair'].isin(tt['pair'])]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 79,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "input_data = (tt.ensemble_id + ' ' + tt.subseq).tolist()\n",
+    "input_data = [x for x in input_data if '_' not in x]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 87,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# print('\\n'.join(input_data))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 88,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# print('\\n'.join((tt.ensemble_id + ' ' + tt.subseq).tolist()))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 34,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>substrate_id</th>\n",
+       "      <th>#substrate</th>\n",
+       "      <th>position</th>\n",
+       "      <th>id</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>tree</th>\n",
+       "      <th>netphorest_group</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_identifier</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>substrate_name</th>\n",
+       "      <th>sequence</th>\n",
+       "      <th>string_path</th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>pair</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "Empty DataFrame\n",
+       "Columns: [substrate, substrate_id, #substrate, position, id, networkin_score, tree, netphorest_group, netphorest_score, string_identifier, string_score, substrate_name, sequence, string_path, kinase, pair]\n",
+       "Index: []"
+      ]
+     },
+     "execution_count": 34,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk[nwk['pair'].isin(df_pair)]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0"
+      ]
+     },
+     "execution_count": 27,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "common_pair = df_test1_pair.intersection(nwk_pair)\n",
+    "len(common_pair)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0        BMPR1B_SPHNPISSVS_____\n",
+       "1        BMPR1B_HNPISSVS_______\n",
+       "2        BMPR1B_SVRCSSMS_______\n",
+       "3        BMPR1B_GSPHNPISSVS____\n",
+       "4        BMPR1B_GSPSVRCSSMS____\n",
+       "                  ...          \n",
+       "26413      MST3_DDSTLSESANQVFLG\n",
+       "26414      MST3_ALVKMLGSPVDSVLF\n",
+       "26415      MST3_QQEGGFASPRTGKGK\n",
+       "26416     CK1G3_PPHHGVQTPVQ____\n",
+       "26417     MEKK4_MEELKETTNSSEI__\n",
+       "Length: 26418, dtype: object"
+      ]
+     },
+     "execution_count": 30,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df = pd.read_pickle(\"/home/hb/python/phospho/data/after1227_new_data/syt_false_dataset/1228_syt1_mtx_ensembl.pickle\")\n",
+    "df.head()\n",
+    "df['kinase'] = df['kinase'].apply(lambda x: x.upper())\n",
+    "df_pair = df['kinase'] + '_' + df['subseq']\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>substrate_id</th>\n",
+       "      <th>#substrate</th>\n",
+       "      <th>position</th>\n",
+       "      <th>id</th>\n",
+       "      <th>networkin_score</th>\n",
+       "      <th>tree</th>\n",
+       "      <th>netphorest_group</th>\n",
+       "      <th>netphorest_score</th>\n",
+       "      <th>string_identifier</th>\n",
+       "      <th>string_score</th>\n",
+       "      <th>substrate_name</th>\n",
+       "      <th>sequence</th>\n",
+       "      <th>string_path</th>\n",
+       "      <th>kinase</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.0071</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILsEMKKV</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>1.3889</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILsEMKKV</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>154</td>\n",
+       "      <td>PKCzeta</td>\n",
+       "      <td>0.5163</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.1576</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1685</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>REEILsEMKKV</td>\n",
+       "      <td>ENSP00000367830, 0.6584 ENSP00000226574, 0.727...</td>\n",
+       "      <td>PKCZ</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>369</td>\n",
+       "      <td>PKCalpha</td>\n",
+       "      <td>1.7569</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1738</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>TKGHLsNRAII</td>\n",
+       "      <td>ENSP00000284384, 0.7304 ENSP00000385269, 0.675...</td>\n",
+       "      <td>PKCA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>ENSP00000363105</td>\n",
+       "      <td>A1CF (ENSP00000363105)</td>\n",
+       "      <td>369</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>2.4948</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.3374</td>\n",
+       "      <td>ENSP00000282641</td>\n",
+       "      <td>0.1232</td>\n",
+       "      <td>A1CF</td>\n",
+       "      <td>TKGHLsNRAII</td>\n",
+       "      <td>ENSP00000305355, 0.7328 ENSP00000348986, 0.627...</td>\n",
+       "      <td>PKCB</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459743</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>135</td>\n",
+       "      <td>CK1alpha</td>\n",
+       "      <td>1.3564</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>CK1_group</td>\n",
+       "      <td>0.1338</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1079</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>SSEEDsPIKSD</td>\n",
+       "      <td>ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...</td>\n",
+       "      <td>CK1A</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459744</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>135</td>\n",
+       "      <td>MAPK3</td>\n",
+       "      <td>1.4275</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>MAPK3_MAPK1_MAPK7_NLK_group</td>\n",
+       "      <td>0.1783</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1328</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>SSEEDsPIKSD</td>\n",
+       "      <td>ENSP00000263025, 0.54 ENSP00000363559, 0.3416 ...</td>\n",
+       "      <td>MAPK3</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459745</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>474</td>\n",
+       "      <td>CK1alpha</td>\n",
+       "      <td>1.3564</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>CK1_group</td>\n",
+       "      <td>0.1249</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1079</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>AKESAsQHITE</td>\n",
+       "      <td>ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...</td>\n",
+       "      <td>CK1A</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459746</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>474</td>\n",
+       "      <td>PAK1</td>\n",
+       "      <td>0.7524</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PAK_group</td>\n",
+       "      <td>0.0438</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1020</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>AKESAsQHITE</td>\n",
+       "      <td>ENSP00000278568, 0.54 ENSP00000363559, 0.2624 ...</td>\n",
+       "      <td>PAK1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>459747</th>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>ZZZ3 (ENSP00000359837)</td>\n",
+       "      <td>474</td>\n",
+       "      <td>PKCbeta</td>\n",
+       "      <td>0.8358</td>\n",
+       "      <td>KIN</td>\n",
+       "      <td>PKC_group</td>\n",
+       "      <td>0.0921</td>\n",
+       "      <td>ENSP00000359837</td>\n",
+       "      <td>0.1926</td>\n",
+       "      <td>ZZZ3</td>\n",
+       "      <td>AKESAsQHITE</td>\n",
+       "      <td>ENSP00000305355, 0.54 ENSP00000363559, 0.4952 ...</td>\n",
+       "      <td>PKCB</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>459748 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       substrate     substrate_id              #substrate  position        id  \\\n",
+       "0           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       154  PKCalpha   \n",
+       "1           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       154   PKCbeta   \n",
+       "2           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       154   PKCzeta   \n",
+       "3           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       369  PKCalpha   \n",
+       "4           A1CF  ENSP00000363105  A1CF (ENSP00000363105)       369   PKCbeta   \n",
+       "...          ...              ...                     ...       ...       ...   \n",
+       "459743      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       135  CK1alpha   \n",
+       "459744      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       135     MAPK3   \n",
+       "459745      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       474  CK1alpha   \n",
+       "459746      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       474      PAK1   \n",
+       "459747      ZZZ3  ENSP00000359837  ZZZ3 (ENSP00000359837)       474   PKCbeta   \n",
+       "\n",
+       "        networkin_score tree             netphorest_group  netphorest_score  \\\n",
+       "0                1.0071  KIN                    PKC_group            0.1576   \n",
+       "1                1.3889  KIN                    PKC_group            0.1576   \n",
+       "2                0.5163  KIN                    PKC_group            0.1576   \n",
+       "3                1.7569  KIN                    PKC_group            0.3374   \n",
+       "4                2.4948  KIN                    PKC_group            0.3374   \n",
+       "...                 ...  ...                          ...               ...   \n",
+       "459743           1.3564  KIN                    CK1_group            0.1338   \n",
+       "459744           1.4275  KIN  MAPK3_MAPK1_MAPK7_NLK_group            0.1783   \n",
+       "459745           1.3564  KIN                    CK1_group            0.1249   \n",
+       "459746           0.7524  KIN                    PAK_group            0.0438   \n",
+       "459747           0.8358  KIN                    PKC_group            0.0921   \n",
+       "\n",
+       "       string_identifier  string_score substrate_name     sequence  \\\n",
+       "0        ENSP00000282641        0.1738           A1CF  REEILsEMKKV   \n",
+       "1        ENSP00000282641        0.1232           A1CF  REEILsEMKKV   \n",
+       "2        ENSP00000282641        0.1685           A1CF  REEILsEMKKV   \n",
+       "3        ENSP00000282641        0.1738           A1CF  TKGHLsNRAII   \n",
+       "4        ENSP00000282641        0.1232           A1CF  TKGHLsNRAII   \n",
+       "...                  ...           ...            ...          ...   \n",
+       "459743   ENSP00000359837        0.1079           ZZZ3  SSEEDsPIKSD   \n",
+       "459744   ENSP00000359837        0.1328           ZZZ3  SSEEDsPIKSD   \n",
+       "459745   ENSP00000359837        0.1079           ZZZ3  AKESAsQHITE   \n",
+       "459746   ENSP00000359837        0.1020           ZZZ3  AKESAsQHITE   \n",
+       "459747   ENSP00000359837        0.1926           ZZZ3  AKESAsQHITE   \n",
+       "\n",
+       "                                              string_path kinase  \n",
+       "0       ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA  \n",
+       "1       ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB  \n",
+       "2       ENSP00000367830, 0.6584 ENSP00000226574, 0.727...   PKCZ  \n",
+       "3       ENSP00000284384, 0.7304 ENSP00000385269, 0.675...   PKCA  \n",
+       "4       ENSP00000305355, 0.7328 ENSP00000348986, 0.627...   PKCB  \n",
+       "...                                                   ...    ...  \n",
+       "459743  ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...   CK1A  \n",
+       "459744  ENSP00000263025, 0.54 ENSP00000363559, 0.3416 ...  MAPK3  \n",
+       "459745  ENSP00000261798, 0.54 ENSP00000363559, 0.2776 ...   CK1A  \n",
+       "459746  ENSP00000278568, 0.54 ENSP00000363559, 0.2624 ...   PAK1  \n",
+       "459747  ENSP00000305355, 0.54 ENSP00000363559, 0.4952 ...   PKCB  \n",
+       "\n",
+       "[459748 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 23,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "nwk"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "      <th>probs</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>FAK</td>\n",
+       "      <td>Q05397</td>\n",
+       "      <td>FAK</td>\n",
+       "      <td>Q05397</td>\n",
+       "      <td>IELGRCIGEGQFGDVHQGIYMSPENPALAVAIKTCKNCTSDSVREK...</td>\n",
+       "      <td>IIDEEDTYTMPSTRD</td>\n",
+       "      <td>Y407</td>\n",
+       "      <td>447888.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.3951472984698037, 1.3951472984698037, 0.8...</td>\n",
+       "      <td>ENSP00000431023</td>\n",
+       "      <td>Fak</td>\n",
+       "      <td>0.632388</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>ABL</td>\n",
+       "      <td>P00519</td>\n",
+       "      <td>Rb</td>\n",
+       "      <td>P06400</td>\n",
+       "      <td>ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...</td>\n",
+       "      <td>RIPGGNIYISPLKSP</td>\n",
+       "      <td>Y805</td>\n",
+       "      <td>456752.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9656054162575665, 1.3951472984698037, 0.7...</td>\n",
+       "      <td>ENSP00000496005</td>\n",
+       "      <td>Abl</td>\n",
+       "      <td>0.639248</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>MELK</td>\n",
+       "      <td>Q14680</td>\n",
+       "      <td>MELK</td>\n",
+       "      <td>Q14680</td>\n",
+       "      <td>YELHETIGTGGFAKVKLACHILTGEMVAIKIMDKNTLGSDLPRIKT...</td>\n",
+       "      <td>SPERRCRSVELDLNQ</td>\n",
+       "      <td>S505</td>\n",
+       "      <td>2861409.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0232665395472176, 0.8860339595928756, 0.8...</td>\n",
+       "      <td>ENSP00000443550</td>\n",
+       "      <td>CAMKL</td>\n",
+       "      <td>0.774461</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>EMSY</td>\n",
+       "      <td>Q7Z589</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>KPRKRRRTNSSSSSP</td>\n",
+       "      <td>T207</td>\n",
+       "      <td>1210942.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9762857097579093, 0.8702280284582515, 0.9...</td>\n",
+       "      <td>ENSP00000436307</td>\n",
+       "      <td>PKA</td>\n",
+       "      <td>0.960219</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>SRC</td>\n",
+       "      <td>P12931</td>\n",
+       "      <td>tensin 3</td>\n",
+       "      <td>Q68CZ2</td>\n",
+       "      <td>0RLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQ...</td>\n",
+       "      <td>QDTSKFWYKADISRE</td>\n",
+       "      <td>Y1173</td>\n",
+       "      <td>9824600.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000407464</td>\n",
+       "      <td>Src</td>\n",
+       "      <td>0.472669</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3995</th>\n",
+       "      <td>AMPKA1</td>\n",
+       "      <td>Q13131</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>00LGDTLGVGTFGKVKVGKHELTGHKVAVKILNRQKIRSLDVGKIR...</td>\n",
+       "      <td>AQVSRRISFSASHRL</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000434688</td>\n",
+       "      <td>CAMKL</td>\n",
+       "      <td>0.651911</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3996</th>\n",
+       "      <td>KSR2</td>\n",
+       "      <td>Q6VAB6</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>LEIGELIGKGRFGQVYHGRWHGEVAIRLIDERDNEDQLKAFKREVM...</td>\n",
+       "      <td>EAETLAETEPERHLG</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.9841273200552851, 1.3008267189517242, 0.9...</td>\n",
+       "      <td>ENSP00000429729</td>\n",
+       "      <td>RAF</td>\n",
+       "      <td>0.684888</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3997</th>\n",
+       "      <td>MAPKAPK2</td>\n",
+       "      <td>P49137</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>000SQVLGLGINGKVLQIFNKRTQEKFALKMLQDCPKARREVELHW...</td>\n",
+       "      <td>LVDSVAKTMDAGCKP</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000486923</td>\n",
+       "      <td>MAPKAPK</td>\n",
+       "      <td>0.675056</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3998</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>EPEPENDYEDVEEMD</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8798533791446438, 0.8702280284582515, 0.8...</td>\n",
+       "      <td>ENSP00000419614</td>\n",
+       "      <td>PKA</td>\n",
+       "      <td>0.015924</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3999</th>\n",
+       "      <td>CK2A1</td>\n",
+       "      <td>P68400</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...</td>\n",
+       "      <td>GRCPSDPYKHSLPSQ</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>human</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.981179362242806, 1.0618365465453596, 1.37...</td>\n",
+       "      <td>ENSP00000489946</td>\n",
+       "      <td>CK2</td>\n",
+       "      <td>0.005324</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>4000 rows √ó 16 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "        kinase  kin_id substrate  sub_id  \\\n",
+       "0          FAK  Q05397       FAK  Q05397   \n",
+       "1          ABL  P00519        Rb  P06400   \n",
+       "2         MELK  Q14680      MELK  Q14680   \n",
+       "3        PKACA  P17612      EMSY  Q7Z589   \n",
+       "4          SRC  P12931  tensin 3  Q68CZ2   \n",
+       "...        ...     ...       ...     ...   \n",
+       "3995    AMPKA1  Q13131       NaN     NaN   \n",
+       "3996      KSR2  Q6VAB6       NaN     NaN   \n",
+       "3997  MAPKAPK2  P49137       NaN     NaN   \n",
+       "3998     PKACA  P17612       NaN     NaN   \n",
+       "3999     CK2A1  P68400       NaN     NaN   \n",
+       "\n",
+       "                                                 kinseq           subseq  \\\n",
+       "0     IELGRCIGEGQFGDVHQGIYMSPENPALAVAIKTCKNCTSDSVREK...  IIDEEDTYTMPSTRD   \n",
+       "1     ITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEA...  RIPGGNIYISPLKSP   \n",
+       "2     YELHETIGTGGFAKVKLACHILTGEMVAIKIMDKNTLGSDLPRIKT...  SPERRCRSVELDLNQ   \n",
+       "3     FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  KPRKRRRTNSSSSSP   \n",
+       "4     0RLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQ...  QDTSKFWYKADISRE   \n",
+       "...                                                 ...              ...   \n",
+       "3995  00LGDTLGVGTFGKVKVGKHELTGHKVAVKILNRQKIRSLDVGKIR...  AQVSRRISFSASHRL   \n",
+       "3996  LEIGELIGKGRFGQVYHGRWHGEVAIRLIDERDNEDQLKAFKREVM...  EAETLAETEPERHLG   \n",
+       "3997  000SQVLGLGINGKVLQIFNKRTQEKFALKMLQDCPKARREVELHW...  LVDSVAKTMDAGCKP   \n",
+       "3998  FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  EPEPENDYEDVEEMD   \n",
+       "3999  YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...  GRCPSDPYKHSLPSQ   \n",
+       "\n",
+       "     sub_mod_rsd sub_position kin_oragnism sub_oragnism  answer length  \\\n",
+       "0           Y407     447888.0        human        human       1  263.0   \n",
+       "1           Y805     456752.0        human        human       1  263.0   \n",
+       "2           S505    2861409.0        human        human       1  263.0   \n",
+       "3           T207    1210942.0        human        human       1  263.0   \n",
+       "4          Y1173    9824600.0        human        human       1  263.0   \n",
+       "...          ...          ...          ...          ...     ...    ...   \n",
+       "3995         NaN          NaN          NaN        human       0    NaN   \n",
+       "3996         NaN          NaN          NaN        human       0    NaN   \n",
+       "3997         NaN          NaN          NaN        human       0    NaN   \n",
+       "3998         NaN          NaN          NaN        human       0    NaN   \n",
+       "3999         NaN          NaN          NaN        human       0    NaN   \n",
+       "\n",
+       "                                                 matrix      ensemble_id  \\\n",
+       "0     [[[1.3951472984698037, 1.3951472984698037, 0.8...  ENSP00000431023   \n",
+       "1     [[[0.9656054162575665, 1.3951472984698037, 0.7...  ENSP00000496005   \n",
+       "2     [[[1.0232665395472176, 0.8860339595928756, 0.8...  ENSP00000443550   \n",
+       "3     [[[0.9762857097579093, 0.8702280284582515, 0.9...  ENSP00000436307   \n",
+       "4     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000407464   \n",
+       "...                                                 ...              ...   \n",
+       "3995  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000434688   \n",
+       "3996  [[[0.9841273200552851, 1.3008267189517242, 0.9...  ENSP00000429729   \n",
+       "3997  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000486923   \n",
+       "3998  [[[0.8798533791446438, 0.8702280284582515, 0.8...  ENSP00000419614   \n",
+       "3999  [[[0.981179362242806, 1.0618365465453596, 1.37...  ENSP00000489946   \n",
+       "\n",
+       "       family     probs  \n",
+       "0         Fak  0.632388  \n",
+       "1         Abl  0.639248  \n",
+       "2       CAMKL  0.774461  \n",
+       "3         PKA  0.960219  \n",
+       "4         Src  0.472669  \n",
+       "...       ...       ...  \n",
+       "3995    CAMKL  0.651911  \n",
+       "3996      RAF  0.684888  \n",
+       "3997  MAPKAPK  0.675056  \n",
+       "3998      PKA  0.015924  \n",
+       "3999      CK2  0.005324  \n",
+       "\n",
+       "[4000 rows x 16 columns]"
+      ]
+     },
+     "execution_count": 10,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test1"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 34,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df = pd.read_pickle(\"/home/hb/python/phospho/data/after1227_new_data/syt_false_dataset/1228_syt1_mtx_ensembl.pickle\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn [9], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m iloc_index \u001b[39m=\u001b[39m \u001b[39mint\u001b[39m(\u001b[39mlen\u001b[39m(df)\u001b[39m/\u001b[39m\u001b[39m2\u001b[39m)\n\u001b[1;32m      2\u001b[0m df_true \u001b[39m=\u001b[39m df\u001b[39m.\u001b[39miloc[:iloc_index]\n",
+      "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "iloc_index = int(len(df)/2)\n",
+    "df_true = df.iloc[:iloc_index]\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_true_ = df_true[~df_true['ensemble_id'].isin([0, \"\"])]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 44,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(False, False)"
+      ]
+     },
+     "execution_count": 44,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "0 in df_true_.ensemble_id.unique(), \"\" in df_true_.ensemble_id.unique()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 45,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "array(['ENSP00000426568', 'ENSP00000349282', 'ENSP00000394011', ...,\n",
+       "       'ENSMUSP00000112963', 'ENSP00000516040', 'ENSP00000443961'],\n",
+       "      dtype=object)"
+      ]
+     },
+     "execution_count": 45,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_true_.ensemble_id.unique()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 48,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>SPHNPISSVS_____</td>\n",
+       "      <td>S463</td>\n",
+       "      <td>448362.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0253151205244289, 0.7268755493063382, 1.0...</td>\n",
+       "      <td>ENSP00000426568</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>HNPISSVS_______</td>\n",
+       "      <td>S465</td>\n",
+       "      <td>448363.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0273678027634894, 0.9579113900670306, 0.7...</td>\n",
+       "      <td>ENSP00000426568</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD2</td>\n",
+       "      <td>Q15796</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>SVRCSSMS_______</td>\n",
+       "      <td>S467</td>\n",
+       "      <td>447495.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0253151205244289, 1.3391030176392937, 0.9...</td>\n",
+       "      <td>ENSP00000349282</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>GSPHNPISSVS____</td>\n",
+       "      <td>S462</td>\n",
+       "      <td>448361.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9550419621907147, 1.0253151205244289, 0.7...</td>\n",
+       "      <td>ENSP00000426568</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD2</td>\n",
+       "      <td>Q15796</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>GSPSVRCSSMS____</td>\n",
+       "      <td>S464</td>\n",
+       "      <td>447567.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9550419621907147, 1.0253151205244289, 0.7...</td>\n",
+       "      <td>ENSP00000349282</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13202</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>RAB8A</td>\n",
+       "      <td>P61006</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>AGQERFRTITTAYYR</td>\n",
+       "      <td>T72</td>\n",
+       "      <td>4709152.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.1151623503414478, 1.0191816486174081, 0.9...</td>\n",
+       "      <td>ENSP00000467501</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13203</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>KEPI</td>\n",
+       "      <td>Q8TAE6</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>RHQQGKVTVKYDRKE</td>\n",
+       "      <td>T73</td>\n",
+       "      <td>10296602.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9417645335842487, 1.060775240740159, 0.94...</td>\n",
+       "      <td>ENSP00000355260</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13204</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>TAO1</td>\n",
+       "      <td>Q7L7X3</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>RNREHFATIRTASLV</td>\n",
+       "      <td>T440</td>\n",
+       "      <td>23150854.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9417645335842487, 0.9617507091463667, 0.9...</td>\n",
+       "      <td>ENSP00000516040</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13205</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>NDR2</td>\n",
+       "      <td>Q9Y2H1</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>DWVFLNYTYKRFEGL</td>\n",
+       "      <td>T442</td>\n",
+       "      <td>451133.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8607079764250578, 1.1629966580818203, 1.1...</td>\n",
+       "      <td>ENSP00000443961</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13206</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>DTQIKRNTFVGTPFW</td>\n",
+       "      <td>T190</td>\n",
+       "      <td>468211.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8607079764250578, 1.0335505392413056, 0.9...</td>\n",
+       "      <td>ENSP00000380651</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>10596 rows √ó 14 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "0      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "1      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "2      BMPR1B  O00238     SMAD2  Q15796   \n",
+       "3      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "4      BMPR1B  O00238     SMAD2  Q15796   \n",
+       "...       ...     ...       ...     ...   \n",
+       "13202    MST3  Q9Y6E0     RAB8A  P61006   \n",
+       "13203    MST3  Q9Y6E0      KEPI  Q8TAE6   \n",
+       "13204    MST3  Q9Y6E0      TAO1  Q7L7X3   \n",
+       "13205    MST3  Q9Y6E0      NDR2  Q9Y2H1   \n",
+       "13206    MST3  Q9Y6E0      MST3  Q9Y6E0   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  SPHNPISSVS_____   \n",
+       "1      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  HNPISSVS_______   \n",
+       "2      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  SVRCSSMS_______   \n",
+       "3      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  GSPHNPISSVS____   \n",
+       "4      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  GSPSVRCSSMS____   \n",
+       "...                                                  ...              ...   \n",
+       "13202  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  AGQERFRTITTAYYR   \n",
+       "13203  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  RHQQGKVTVKYDRKE   \n",
+       "13204  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  RNREHFATIRTASLV   \n",
+       "13205  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  DWVFLNYTYKRFEGL   \n",
+       "13206  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  DTQIKRNTFVGTPFW   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0            S463     448362.0        human        human      1  263.0   \n",
+       "1            S465     448363.0        human        human      1  263.0   \n",
+       "2            S467     447495.0        human        human      1  263.0   \n",
+       "3            S462     448361.0        human        human      1  263.0   \n",
+       "4            S464     447567.0        human        human      1  263.0   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "13202         T72    4709152.0        human        human      1  263.0   \n",
+       "13203         T73   10296602.0        human        human      1  263.0   \n",
+       "13204        T440   23150854.0        human        human      1  263.0   \n",
+       "13205        T442     451133.0        human        human      1  263.0   \n",
+       "13206        T190     468211.0        human        human      1  263.0   \n",
+       "\n",
+       "                                                  matrix      ensemble_id  \n",
+       "0      [[[1.0253151205244289, 0.7268755493063382, 1.0...  ENSP00000426568  \n",
+       "1      [[[1.0273678027634894, 0.9579113900670306, 0.7...  ENSP00000426568  \n",
+       "2      [[[1.0253151205244289, 1.3391030176392937, 0.9...  ENSP00000349282  \n",
+       "3      [[[0.9550419621907147, 1.0253151205244289, 0.7...  ENSP00000426568  \n",
+       "4      [[[0.9550419621907147, 1.0253151205244289, 0.7...  ENSP00000349282  \n",
+       "...                                                  ...              ...  \n",
+       "13202  [[[1.1151623503414478, 1.0191816486174081, 0.9...  ENSP00000467501  \n",
+       "13203  [[[0.9417645335842487, 1.060775240740159, 0.94...  ENSP00000355260  \n",
+       "13204  [[[0.9417645335842487, 0.9617507091463667, 0.9...  ENSP00000516040  \n",
+       "13205  [[[0.8607079764250578, 1.1629966580818203, 1.1...  ENSP00000443961  \n",
+       "13206  [[[0.8607079764250578, 1.0335505392413056, 0.9...  ENSP00000380651  \n",
+       "\n",
+       "[10596 rows x 14 columns]"
+      ]
+     },
+     "execution_count": 48,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_true_"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 52,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>SPHNPISSVS_____</td>\n",
+       "      <td>S463</td>\n",
+       "      <td>448362.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0253151205244289, 0.7268755493063382, 1.0...</td>\n",
+       "      <td>ENSP00000426568</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>HNPISSVS_______</td>\n",
+       "      <td>S465</td>\n",
+       "      <td>448363.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0273678027634894, 0.9579113900670306, 0.7...</td>\n",
+       "      <td>ENSP00000426568</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD2</td>\n",
+       "      <td>Q15796</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>SVRCSSMS_______</td>\n",
+       "      <td>S467</td>\n",
+       "      <td>447495.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0253151205244289, 1.3391030176392937, 0.9...</td>\n",
+       "      <td>ENSP00000349282</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>GSPHNPISSVS____</td>\n",
+       "      <td>S462</td>\n",
+       "      <td>448361.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9550419621907147, 1.0253151205244289, 0.7...</td>\n",
+       "      <td>ENSP00000426568</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD2</td>\n",
+       "      <td>Q15796</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>GSPSVRCSSMS____</td>\n",
+       "      <td>S464</td>\n",
+       "      <td>447567.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9550419621907147, 1.0253151205244289, 0.7...</td>\n",
+       "      <td>ENSP00000349282</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13204</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>TAO1</td>\n",
+       "      <td>Q7L7X3</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>RNREHFATIRTASLV</td>\n",
+       "      <td>T440</td>\n",
+       "      <td>23150854.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9417645335842487, 0.9617507091463667, 0.9...</td>\n",
+       "      <td>ENSP00000516040</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13205</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>NDR2</td>\n",
+       "      <td>Q9Y2H1</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>DWVFLNYTYKRFEGL</td>\n",
+       "      <td>T442</td>\n",
+       "      <td>451133.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8607079764250578, 1.1629966580818203, 1.1...</td>\n",
+       "      <td>ENSP00000443961</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13206</th>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>MST3</td>\n",
+       "      <td>Q9Y6E0</td>\n",
+       "      <td>FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...</td>\n",
+       "      <td>DTQIKRNTFVGTPFW</td>\n",
+       "      <td>T190</td>\n",
+       "      <td>468211.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8607079764250578, 1.0335505392413056, 0.9...</td>\n",
+       "      <td>ENSP00000380651</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13207</th>\n",
+       "      <td>CK1G3</td>\n",
+       "      <td>Q9Y6M4</td>\n",
+       "      <td>LYN</td>\n",
+       "      <td>P07948</td>\n",
+       "      <td>0RVGKKIGCGNFGELRLGKNLYTNEYVAIKLEPMKSRAPQLHLEYR...</td>\n",
+       "      <td>SKGKDSLSDDGVDLK</td>\n",
+       "      <td>S13</td>\n",
+       "      <td>1983291.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13208</th>\n",
+       "      <td>MEKK4</td>\n",
+       "      <td>Q9Y6R4</td>\n",
+       "      <td>MEKK4</td>\n",
+       "      <td>Q9Y6R4</td>\n",
+       "      <td>0QRGNKIGEGQYGKVYTCISVDTGELMAMKEIRFQPNDHKTIKETA...</td>\n",
+       "      <td>KLKNNAQTMPGEVNS</td>\n",
+       "      <td>T1494</td>\n",
+       "      <td>479428.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>13209 rows √ó 14 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "0      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "1      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "2      BMPR1B  O00238     SMAD2  Q15796   \n",
+       "3      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "4      BMPR1B  O00238     SMAD2  Q15796   \n",
+       "...       ...     ...       ...     ...   \n",
+       "13204    MST3  Q9Y6E0      TAO1  Q7L7X3   \n",
+       "13205    MST3  Q9Y6E0      NDR2  Q9Y2H1   \n",
+       "13206    MST3  Q9Y6E0      MST3  Q9Y6E0   \n",
+       "13207   CK1G3  Q9Y6M4       LYN  P07948   \n",
+       "13208   MEKK4  Q9Y6R4     MEKK4  Q9Y6R4   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  SPHNPISSVS_____   \n",
+       "1      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  HNPISSVS_______   \n",
+       "2      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  SVRCSSMS_______   \n",
+       "3      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  GSPHNPISSVS____   \n",
+       "4      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  GSPSVRCSSMS____   \n",
+       "...                                                  ...              ...   \n",
+       "13204  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  RNREHFATIRTASLV   \n",
+       "13205  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  DWVFLNYTYKRFEGL   \n",
+       "13206  FTKLEKIGKGSFGEVFKGIDNRTQKVVAIKIIDLEEAEDEIEDIQQ...  DTQIKRNTFVGTPFW   \n",
+       "13207  0RVGKKIGCGNFGELRLGKNLYTNEYVAIKLEPMKSRAPQLHLEYR...  SKGKDSLSDDGVDLK   \n",
+       "13208  0QRGNKIGEGQYGKVYTCISVDTGELMAMKEIRFQPNDHKTIKETA...  KLKNNAQTMPGEVNS   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0            S463     448362.0        human        human      1  263.0   \n",
+       "1            S465     448363.0        human        human      1  263.0   \n",
+       "2            S467     447495.0        human        human      1  263.0   \n",
+       "3            S462     448361.0        human        human      1  263.0   \n",
+       "4            S464     447567.0        human        human      1  263.0   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "13204        T440   23150854.0        human        human      1  263.0   \n",
+       "13205        T442     451133.0        human        human      1  263.0   \n",
+       "13206        T190     468211.0        human        human      1  263.0   \n",
+       "13207         S13    1983291.0        human        human      1  263.0   \n",
+       "13208       T1494     479428.0        human        human      1  263.0   \n",
+       "\n",
+       "                                                  matrix      ensemble_id  \n",
+       "0      [[[1.0253151205244289, 0.7268755493063382, 1.0...  ENSP00000426568  \n",
+       "1      [[[1.0273678027634894, 0.9579113900670306, 0.7...  ENSP00000426568  \n",
+       "2      [[[1.0253151205244289, 1.3391030176392937, 0.9...  ENSP00000349282  \n",
+       "3      [[[0.9550419621907147, 1.0253151205244289, 0.7...  ENSP00000426568  \n",
+       "4      [[[0.9550419621907147, 1.0253151205244289, 0.7...  ENSP00000349282  \n",
+       "...                                                  ...              ...  \n",
+       "13204  [[[0.9417645335842487, 0.9617507091463667, 0.9...  ENSP00000516040  \n",
+       "13205  [[[0.8607079764250578, 1.1629966580818203, 1.1...  ENSP00000443961  \n",
+       "13206  [[[0.8607079764250578, 1.0335505392413056, 0.9...  ENSP00000380651  \n",
+       "13207  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                   \n",
+       "13208  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                   \n",
+       "\n",
+       "[13209 rows x 14 columns]"
+      ]
+     },
+     "execution_count": 52,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_true"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 50,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test = df_test[df_test['subseq'].isin(df_true_.subseq)]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 51,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>551</th>\n",
+       "      <td>P38D</td>\n",
+       "      <td>O15264</td>\n",
+       "      <td>DLG1</td>\n",
+       "      <td>Q62696</td>\n",
+       "      <td>000PTHVGSGAYGSVCSAIDKRSGEKVAIKKLSRPFQSEIFAKRAY...</td>\n",
+       "      <td>FVSHSHISPIKPTEA</td>\n",
+       "      <td>S158</td>\n",
+       "      <td>2024309.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>553</th>\n",
+       "      <td>P38D</td>\n",
+       "      <td>O15264</td>\n",
+       "      <td>DLG1</td>\n",
+       "      <td>Q62696</td>\n",
+       "      <td>000PTHVGSGAYGSVCSAIDKRSGEKVAIKKLSRPFQSEIFAKRAY...</td>\n",
+       "      <td>VNTDSLETPTYVNGT</td>\n",
+       "      <td>T209</td>\n",
+       "      <td>35547401.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>739</th>\n",
+       "      <td>ROCK2</td>\n",
+       "      <td>O75116</td>\n",
+       "      <td>MYPT1</td>\n",
+       "      <td>Q10728</td>\n",
+       "      <td>YDVVKVIGRGAFGEVQLVRHKASQKVYAMKLLSKFEMIKRSDAFFW...</td>\n",
+       "      <td>RPREKRRSTGVSFWT</td>\n",
+       "      <td>S854</td>\n",
+       "      <td>451999.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0618365465453596, 0.8860339595928756, 1.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>741</th>\n",
+       "      <td>ROCK2</td>\n",
+       "      <td>O75116</td>\n",
+       "      <td>CRMP-2</td>\n",
+       "      <td>Q16555</td>\n",
+       "      <td>YDVVKVIGRGAFGEVQLVRHKASQKVYAMKLLSKFEMIKRSDAFFW...</td>\n",
+       "      <td>DNIPRRTTQRIVAPP</td>\n",
+       "      <td>T555</td>\n",
+       "      <td>448084.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8478937040879159, 1.003004504503377, 1.18...</td>\n",
+       "      <td></td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>743</th>\n",
+       "      <td>ROCK2</td>\n",
+       "      <td>O75116</td>\n",
+       "      <td>SNAP-25</td>\n",
+       "      <td>P60879</td>\n",
+       "      <td>YDVVKVIGRGAFGEVQLVRHKASQKVYAMKLLSKFEMIKRSDAFFW...</td>\n",
+       "      <td>GGFIRRVTNDARENE</td>\n",
+       "      <td>T138</td>\n",
+       "      <td>449875.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.981179362242806, 0.981179362242806, 1.210...</td>\n",
+       "      <td></td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25550</th>\n",
+       "      <td>PINK1</td>\n",
+       "      <td>Q9BXM7</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>000QLAHPNIIRVLRAFTSGRTLFLVMKNYPCTLRQYLCVNTPSPR...</td>\n",
+       "      <td>ARQSRRSTQGVTLTD</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NKF2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25648</th>\n",
+       "      <td>HIPK2</td>\n",
+       "      <td>Q9H2X6</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEVLEFLGRGTFGQVVKCWKRGTNEIVAIKILKNHPSYARQGQIEV...</td>\n",
+       "      <td>IRVDTPHYPRWITKE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.187677833213906, 1.0618365465453596, 1.16...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26049</th>\n",
+       "      <td>TLK1</td>\n",
+       "      <td>Q9UKI8</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>000LHLLGRGGFSEVYKAFDLYEQRYAAVKIHQLNKRDEKKEKHAC...</td>\n",
+       "      <td>AVLADVSYLMAMEKS</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>TLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26295</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>PVVSGDTSPRHLSNV</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8860339595928756, 1.1653249789427378, 1.1...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26310</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>LGISRSKTPVDDPMS</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.152576648537005, 0.981179362242806, 1.187...</td>\n",
+       "      <td></td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>267 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "551      P38D  O15264      DLG1  Q62696   \n",
+       "553      P38D  O15264      DLG1  Q62696   \n",
+       "739     ROCK2  O75116     MYPT1  Q10728   \n",
+       "741     ROCK2  O75116    CRMP-2  Q16555   \n",
+       "743     ROCK2  O75116   SNAP-25  P60879   \n",
+       "...       ...     ...       ...     ...   \n",
+       "25550   PINK1  Q9BXM7       NaN     NaN   \n",
+       "25648   HIPK2  Q9H2X6       NaN     NaN   \n",
+       "26049    TLK1  Q9UKI8       NaN     NaN   \n",
+       "26295  CAMK2A  Q9UQM7       NaN     NaN   \n",
+       "26310  CAMK2A  Q9UQM7       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "551    000PTHVGSGAYGSVCSAIDKRSGEKVAIKKLSRPFQSEIFAKRAY...  FVSHSHISPIKPTEA   \n",
+       "553    000PTHVGSGAYGSVCSAIDKRSGEKVAIKKLSRPFQSEIFAKRAY...  VNTDSLETPTYVNGT   \n",
+       "739    YDVVKVIGRGAFGEVQLVRHKASQKVYAMKLLSKFEMIKRSDAFFW...  RPREKRRSTGVSFWT   \n",
+       "741    YDVVKVIGRGAFGEVQLVRHKASQKVYAMKLLSKFEMIKRSDAFFW...  DNIPRRTTQRIVAPP   \n",
+       "743    YDVVKVIGRGAFGEVQLVRHKASQKVYAMKLLSKFEMIKRSDAFFW...  GGFIRRVTNDARENE   \n",
+       "...                                                  ...              ...   \n",
+       "25550  000QLAHPNIIRVLRAFTSGRTLFLVMKNYPCTLRQYLCVNTPSPR...  ARQSRRSTQGVTLTD   \n",
+       "25648  YEVLEFLGRGTFGQVVKCWKRGTNEIVAIKILKNHPSYARQGQIEV...  IRVDTPHYPRWITKE   \n",
+       "26049  000LHLLGRGGFSEVYKAFDLYEQRYAAVKIHQLNKRDEKKEKHAC...  AVLADVSYLMAMEKS   \n",
+       "26295  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  PVVSGDTSPRHLSNV   \n",
+       "26310  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  LGISRSKTPVDDPMS   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "551          S158    2024309.0        human          rat      1  263.0   \n",
+       "553          T209   35547401.0        human          rat      1  263.0   \n",
+       "739          S854     451999.0        human          rat      1  263.0   \n",
+       "741          T555     448084.0        human        human      1  263.0   \n",
+       "743          T138     449875.0        human        mouse      1  263.0   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "25550         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "25648         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26049         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26295         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26310         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix ensemble_id family  \n",
+       "551    [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0   MAPK  \n",
+       "553    [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0   MAPK  \n",
+       "739    [[[1.0618365465453596, 0.8860339595928756, 1.0...           0   DMPK  \n",
+       "741    [[[0.8478937040879159, 1.003004504503377, 1.18...               DMPK  \n",
+       "743    [[[0.981179362242806, 0.981179362242806, 1.210...               DMPK  \n",
+       "...                                                  ...         ...    ...  \n",
+       "25550  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0   NKF2  \n",
+       "25648  [[[1.187677833213906, 1.0618365465453596, 1.16...           0   DYRK  \n",
+       "26049  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                TLK  \n",
+       "26295  [[[0.8860339595928756, 1.1653249789427378, 1.1...           0  CAMK2  \n",
+       "26310  [[[1.152576648537005, 0.981179362242806, 1.187...              CAMK2  \n",
+       "\n",
+       "[267 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 51,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "ensembl_dict = {key: value for key, value in zip(df_true_.substrate, df_true_.ensemble_id,)}"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 47,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "KeyError",
+     "evalue": "'NNLRRSNSTTQVSQP'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn [47], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m subseq_dict \u001b[39m=\u001b[39m {key: value \u001b[39mfor\u001b[39;00m key, value \u001b[39min\u001b[39;00m \u001b[39mzip\u001b[39m(df_true_\u001b[39m.\u001b[39msubseq, df_true_\u001b[39m.\u001b[39msub_id)}\n\u001b[0;32m----> 2\u001b[0m df_test[\u001b[39m'\u001b[39m\u001b[39msub_id\u001b[39m\u001b[39m'\u001b[39m] \u001b[39m=\u001b[39m df_test[\u001b[39m'\u001b[39;49m\u001b[39msubseq\u001b[39;49m\u001b[39m'\u001b[39;49m]\u001b[39m.\u001b[39;49mapply(\u001b[39mlambda\u001b[39;49;00m x: subseq_dict[x])\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/series.py:4433\u001b[0m, in \u001b[0;36mSeries.apply\u001b[0;34m(self, func, convert_dtype, args, **kwargs)\u001b[0m\n\u001b[1;32m   4323\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mapply\u001b[39m(\n\u001b[1;32m   4324\u001b[0m     \u001b[39mself\u001b[39m,\n\u001b[1;32m   4325\u001b[0m     func: AggFuncType,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4328\u001b[0m     \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs,\n\u001b[1;32m   4329\u001b[0m ) \u001b[39m-\u001b[39m\u001b[39m>\u001b[39m DataFrame \u001b[39m|\u001b[39m Series:\n\u001b[1;32m   4330\u001b[0m     \u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m   4331\u001b[0m \u001b[39m    Invoke function on values of Series.\u001b[39;00m\n\u001b[1;32m   4332\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4431\u001b[0m \u001b[39m    dtype: float64\u001b[39;00m\n\u001b[1;32m   4432\u001b[0m \u001b[39m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 4433\u001b[0m     \u001b[39mreturn\u001b[39;00m SeriesApply(\u001b[39mself\u001b[39;49m, func, convert_dtype, args, kwargs)\u001b[39m.\u001b[39;49mapply()\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/apply.py:1082\u001b[0m, in \u001b[0;36mSeriesApply.apply\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1078\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39misinstance\u001b[39m(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mf, \u001b[39mstr\u001b[39m):\n\u001b[1;32m   1079\u001b[0m     \u001b[39m# if we are a string, try to dispatch\u001b[39;00m\n\u001b[1;32m   1080\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mapply_str()\n\u001b[0;32m-> 1082\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mapply_standard()\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/apply.py:1137\u001b[0m, in \u001b[0;36mSeriesApply.apply_standard\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1131\u001b[0m         values \u001b[39m=\u001b[39m obj\u001b[39m.\u001b[39mastype(\u001b[39mobject\u001b[39m)\u001b[39m.\u001b[39m_values\n\u001b[1;32m   1132\u001b[0m         \u001b[39m# error: Argument 2 to \"map_infer\" has incompatible type\u001b[39;00m\n\u001b[1;32m   1133\u001b[0m         \u001b[39m# \"Union[Callable[..., Any], str, List[Union[Callable[..., Any], str]],\u001b[39;00m\n\u001b[1;32m   1134\u001b[0m         \u001b[39m# Dict[Hashable, Union[Union[Callable[..., Any], str],\u001b[39;00m\n\u001b[1;32m   1135\u001b[0m         \u001b[39m# List[Union[Callable[..., Any], str]]]]]\"; expected\u001b[39;00m\n\u001b[1;32m   1136\u001b[0m         \u001b[39m# \"Callable[[Any], Any]\"\u001b[39;00m\n\u001b[0;32m-> 1137\u001b[0m         mapped \u001b[39m=\u001b[39m lib\u001b[39m.\u001b[39;49mmap_infer(\n\u001b[1;32m   1138\u001b[0m             values,\n\u001b[1;32m   1139\u001b[0m             f,  \u001b[39m# type: ignore[arg-type]\u001b[39;49;00m\n\u001b[1;32m   1140\u001b[0m             convert\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mconvert_dtype,\n\u001b[1;32m   1141\u001b[0m         )\n\u001b[1;32m   1143\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mlen\u001b[39m(mapped) \u001b[39mand\u001b[39;00m \u001b[39misinstance\u001b[39m(mapped[\u001b[39m0\u001b[39m], ABCSeries):\n\u001b[1;32m   1144\u001b[0m     \u001b[39m# GH#43986 Need to do list(mapped) in order to get treated as nested\u001b[39;00m\n\u001b[1;32m   1145\u001b[0m     \u001b[39m#  See also GH#25959 regarding EA support\u001b[39;00m\n\u001b[1;32m   1146\u001b[0m     \u001b[39mreturn\u001b[39;00m obj\u001b[39m.\u001b[39m_constructor_expanddim(\u001b[39mlist\u001b[39m(mapped), index\u001b[39m=\u001b[39mobj\u001b[39m.\u001b[39mindex)\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/_libs/lib.pyx:2870\u001b[0m, in \u001b[0;36mpandas._libs.lib.map_infer\u001b[0;34m()\u001b[0m\n",
+      "Cell \u001b[0;32mIn [47], line 2\u001b[0m, in \u001b[0;36m<lambda>\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m      1\u001b[0m subseq_dict \u001b[39m=\u001b[39m {key: value \u001b[39mfor\u001b[39;00m key, value \u001b[39min\u001b[39;00m \u001b[39mzip\u001b[39m(df_true_\u001b[39m.\u001b[39msubseq, df_true_\u001b[39m.\u001b[39msub_id)}\n\u001b[0;32m----> 2\u001b[0m df_test[\u001b[39m'\u001b[39m\u001b[39msub_id\u001b[39m\u001b[39m'\u001b[39m] \u001b[39m=\u001b[39m df_test[\u001b[39m'\u001b[39m\u001b[39msubseq\u001b[39m\u001b[39m'\u001b[39m]\u001b[39m.\u001b[39mapply(\u001b[39mlambda\u001b[39;00m x: subseq_dict[x])\n",
+      "\u001b[0;31mKeyError\u001b[0m: 'NNLRRSNSTTQVSQP'"
+     ]
+    }
+   ],
+   "source": [
+    "subseq_dict = {key: value for key, value in zip(df_true_.subseq, df_true_.sub_id)}\n",
+    "df_test['sub_id'] = df_test['subseq'].apply(lambda x: subseq_dict[x])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test_ = df_test[df_test.substrate.isin(ensembl_dict.keys())]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>22</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PPP1R16B</td>\n",
+       "      <td>Q96T49</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>KKVSFEASVALLEAS</td>\n",
+       "      <td>S69</td>\n",
+       "      <td>17549547.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>36</th>\n",
+       "      <td>CRIK</td>\n",
+       "      <td>O14578</td>\n",
+       "      <td>MRLC1</td>\n",
+       "      <td>Q64122</td>\n",
+       "      <td>0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...</td>\n",
+       "      <td>KRPQSATSNVFAMFD</td>\n",
+       "      <td>S20</td>\n",
+       "      <td>1863500.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>38</th>\n",
+       "      <td>CRIK</td>\n",
+       "      <td>O14578</td>\n",
+       "      <td>MRLC1</td>\n",
+       "      <td>Q64122</td>\n",
+       "      <td>0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...</td>\n",
+       "      <td>KKRPQSATSNVFAMF</td>\n",
+       "      <td>T19</td>\n",
+       "      <td>1863501.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>274</th>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>IkB-alpha</td>\n",
+       "      <td>Q9Z1E3</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>LVDDRHDSGLDSMKD</td>\n",
+       "      <td>S32</td>\n",
+       "      <td>448203.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>IKK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>283</th>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>PIK3R1</td>\n",
+       "      <td>P26450</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>EPYNLYSSLKELVLH</td>\n",
+       "      <td>S690</td>\n",
+       "      <td>25018700.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>IKK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26310</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>ID2</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>LGISRSKTPVDDPMS</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.152576648537005, 0.981179362242806, 1.187...</td>\n",
+       "      <td></td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26316</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>NCCT</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>SSTFCMRTFGYNTID</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 1.0232665395472176, 1.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26330</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>HMGN1</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>KNEESPASDEAEEKE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0130848673598092, 1.003004504503377, 0.86...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26333</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>SKP2</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>ATLLSSCSRLDELNL</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1241194296905368, 1.0273678027634894, 1.1...</td>\n",
+       "      <td></td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26346</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>MEF2D</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>QPALQRNSVSPGLPQ</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.003004504503377, 0.8860339595928756, 1.12...</td>\n",
+       "      <td></td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>1695 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id  substrate  sub_id  \\\n",
+       "22       PLK4  O00444   PPP1R16B  Q96T49   \n",
+       "36       CRIK  O14578      MRLC1  Q64122   \n",
+       "38       CRIK  O14578      MRLC1  Q64122   \n",
+       "274      IKKB  O14920  IkB-alpha  Q9Z1E3   \n",
+       "283      IKKB  O14920     PIK3R1  P26450   \n",
+       "...       ...     ...        ...     ...   \n",
+       "26310  CAMK2A  Q9UQM7        ID2     NaN   \n",
+       "26316  CAMK2A  Q9UQM7       NCCT     NaN   \n",
+       "26330  CAMK2A  Q9UQM7      HMGN1     NaN   \n",
+       "26333  CAMK2A  Q9UQM7       SKP2     NaN   \n",
+       "26346  CAMK2A  Q9UQM7      MEF2D     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "22     0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  KKVSFEASVALLEAS   \n",
+       "36     0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...  KRPQSATSNVFAMFD   \n",
+       "38     0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...  KKRPQSATSNVFAMF   \n",
+       "274    0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  LVDDRHDSGLDSMKD   \n",
+       "283    0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  EPYNLYSSLKELVLH   \n",
+       "...                                                  ...              ...   \n",
+       "26310  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  LGISRSKTPVDDPMS   \n",
+       "26316  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  SSTFCMRTFGYNTID   \n",
+       "26330  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  KNEESPASDEAEEKE   \n",
+       "26333  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  ATLLSSCSRLDELNL   \n",
+       "26346  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  QPALQRNSVSPGLPQ   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "22            S69   17549547.0        human        human      1  263.0   \n",
+       "36            S20    1863500.0        human          rat      1  263.0   \n",
+       "38            T19    1863501.0        human          rat      1  263.0   \n",
+       "274           S32     448203.0        human        mouse      1  263.0   \n",
+       "283          S690   25018700.0        human        mouse      1  263.0   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "26310         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26316         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26330         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26333         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26346         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix ensemble_id family  \n",
+       "22     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                PLK  \n",
+       "36     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0   DMPK  \n",
+       "38     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0   DMPK  \n",
+       "274    [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                IKK  \n",
+       "283    [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                IKK  \n",
+       "...                                                  ...         ...    ...  \n",
+       "26310  [[[1.152576648537005, 0.981179362242806, 1.187...              CAMK2  \n",
+       "26316  [[[1.0232665395472176, 1.0232665395472176, 1.0...              CAMK2  \n",
+       "26330  [[[1.0130848673598092, 1.003004504503377, 0.86...           0  CAMK2  \n",
+       "26333  [[[1.1241194296905368, 1.0273678027634894, 1.1...              CAMK2  \n",
+       "26346  [[[1.003004504503377, 0.8860339595928756, 1.12...              CAMK2  \n",
+       "\n",
+       "[1695 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 31,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test_"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 32,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/tmp/ipykernel_3164597/2471985305.py:1: SettingWithCopyWarning: \n",
+      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
+      "Try using .loc[row_indexer,col_indexer] = value instead\n",
+      "\n",
+      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
+      "  df_test_['ensemble_id'] = df_test_['substrate'].apply(lambda x: ensembl_dict[x])\n"
+     ]
+    }
+   ],
+   "source": [
+    "df_test_['ensemble_id'] = df_test_['substrate'].apply(lambda x: ensembl_dict[x])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 33,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>22</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PPP1R16B</td>\n",
+       "      <td>Q96T49</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>KKVSFEASVALLEAS</td>\n",
+       "      <td>S69</td>\n",
+       "      <td>17549547.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSBTAP00000000858</td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>36</th>\n",
+       "      <td>CRIK</td>\n",
+       "      <td>O14578</td>\n",
+       "      <td>MRLC1</td>\n",
+       "      <td>Q64122</td>\n",
+       "      <td>0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...</td>\n",
+       "      <td>KRPQSATSNVFAMFD</td>\n",
+       "      <td>S20</td>\n",
+       "      <td>1863500.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000279022</td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>38</th>\n",
+       "      <td>CRIK</td>\n",
+       "      <td>O14578</td>\n",
+       "      <td>MRLC1</td>\n",
+       "      <td>Q64122</td>\n",
+       "      <td>0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...</td>\n",
+       "      <td>KKRPQSATSNVFAMF</td>\n",
+       "      <td>T19</td>\n",
+       "      <td>1863501.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>rat</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000279022</td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>274</th>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>IkB-alpha</td>\n",
+       "      <td>Q9Z1E3</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>LVDDRHDSGLDSMKD</td>\n",
+       "      <td>S32</td>\n",
+       "      <td>448203.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000513488</td>\n",
+       "      <td>IKK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>283</th>\n",
+       "      <td>IKKB</td>\n",
+       "      <td>O14920</td>\n",
+       "      <td>PIK3R1</td>\n",
+       "      <td>P26450</td>\n",
+       "      <td>0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...</td>\n",
+       "      <td>EPYNLYSSLKELVLH</td>\n",
+       "      <td>S690</td>\n",
+       "      <td>25018700.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>mouse</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000513328</td>\n",
+       "      <td>IKK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26310</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>ID2</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>LGISRSKTPVDDPMS</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.152576648537005, 0.981179362242806, 1.187...</td>\n",
+       "      <td>ENSMUSP00000020974</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26316</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>NCCT</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>SSTFCMRTFGYNTID</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 1.0232665395472176, 1.0...</td>\n",
+       "      <td>ENSMUSP00000148537</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26330</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>HMGN1</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>KNEESPASDEAEEKE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0130848673598092, 1.003004504503377, 0.86...</td>\n",
+       "      <td>ENSP00000395787</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26333</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>SKP2</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>ATLLSSCSRLDELNL</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1241194296905368, 1.0273678027634894, 1.1...</td>\n",
+       "      <td>ENSP00000503224</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26346</th>\n",
+       "      <td>CAMK2A</td>\n",
+       "      <td>Q9UQM7</td>\n",
+       "      <td>MEF2D</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...</td>\n",
+       "      <td>QPALQRNSVSPGLPQ</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.003004504503377, 0.8860339595928756, 1.12...</td>\n",
+       "      <td>ENSP00000477124</td>\n",
+       "      <td>CAMK2</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>1695 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id  substrate  sub_id  \\\n",
+       "22       PLK4  O00444   PPP1R16B  Q96T49   \n",
+       "36       CRIK  O14578      MRLC1  Q64122   \n",
+       "38       CRIK  O14578      MRLC1  Q64122   \n",
+       "274      IKKB  O14920  IkB-alpha  Q9Z1E3   \n",
+       "283      IKKB  O14920     PIK3R1  P26450   \n",
+       "...       ...     ...        ...     ...   \n",
+       "26310  CAMK2A  Q9UQM7        ID2     NaN   \n",
+       "26316  CAMK2A  Q9UQM7       NCCT     NaN   \n",
+       "26330  CAMK2A  Q9UQM7      HMGN1     NaN   \n",
+       "26333  CAMK2A  Q9UQM7       SKP2     NaN   \n",
+       "26346  CAMK2A  Q9UQM7      MEF2D     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "22     0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  KKVSFEASVALLEAS   \n",
+       "36     0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...  KRPQSATSNVFAMFD   \n",
+       "38     0EVRSLVGCGHFAEVQVVREKATGDIYAMKVMKKKALLAQEQSFFE...  KKRPQSATSNVFAMF   \n",
+       "274    0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  LVDDRHDSGLDSMKD   \n",
+       "283    0EMKERLGTGGFGNVIRWHNQETGEQIAIKQCRQELSPRNRERWCL...  EPYNLYSSLKELVLH   \n",
+       "...                                                  ...              ...   \n",
+       "26310  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  LGISRSKTPVDDPMS   \n",
+       "26316  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  SSTFCMRTFGYNTID   \n",
+       "26330  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  KNEESPASDEAEEKE   \n",
+       "26333  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  ATLLSSCSRLDELNL   \n",
+       "26346  YQLFEELGKGAFSVVRRCVKVLAGQEYAAKIINTKKLSARDHQKLE...  QPALQRNSVSPGLPQ   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "22            S69   17549547.0        human        human      1  263.0   \n",
+       "36            S20    1863500.0        human          rat      1  263.0   \n",
+       "38            T19    1863501.0        human          rat      1  263.0   \n",
+       "274           S32     448203.0        human        mouse      1  263.0   \n",
+       "283          S690   25018700.0        human        mouse      1  263.0   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "26310         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26316         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26330         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26333         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26346         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix         ensemble_id  \\\n",
+       "22     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSBTAP00000000858   \n",
+       "36     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000279022   \n",
+       "38     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000279022   \n",
+       "274    [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000513488   \n",
+       "283    [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...     ENSP00000513328   \n",
+       "...                                                  ...                 ...   \n",
+       "26310  [[[1.152576648537005, 0.981179362242806, 1.187...  ENSMUSP00000020974   \n",
+       "26316  [[[1.0232665395472176, 1.0232665395472176, 1.0...  ENSMUSP00000148537   \n",
+       "26330  [[[1.0130848673598092, 1.003004504503377, 0.86...     ENSP00000395787   \n",
+       "26333  [[[1.1241194296905368, 1.0273678027634894, 1.1...     ENSP00000503224   \n",
+       "26346  [[[1.003004504503377, 0.8860339595928756, 1.12...     ENSP00000477124   \n",
+       "\n",
+       "      family  \n",
+       "22       PLK  \n",
+       "36      DMPK  \n",
+       "38      DMPK  \n",
+       "274      IKK  \n",
+       "283      IKK  \n",
+       "...      ...  \n",
+       "26310  CAMK2  \n",
+       "26316  CAMK2  \n",
+       "26330  CAMK2  \n",
+       "26333  CAMK2  \n",
+       "26346  CAMK2  \n",
+       "\n",
+       "[1695 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 33,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test_"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 61,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_train = pd.read_pickle(\"/home/hb/python/phospho/data/after1227_new_data/syt_false_dataset/train_test/train3.pickle\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 62,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>P38A</td>\n",
+       "      <td>Q16539</td>\n",
+       "      <td>STAT3</td>\n",
+       "      <td>P40763</td>\n",
+       "      <td>YQNLSPVGSGAYGSVCAAFDTKTGLRVAVKKLSRPFQSIIHAKRTY...</td>\n",
+       "      <td>NTIDLPMSPRTLDSL</td>\n",
+       "      <td>S727</td>\n",
+       "      <td>448191.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.003004504503377, 1.0273678027634894, 1.18...</td>\n",
+       "      <td>ENSP00000384943</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>CK2A1</td>\n",
+       "      <td>P68400</td>\n",
+       "      <td>HES6</td>\n",
+       "      <td>Q96HZ4</td>\n",
+       "      <td>YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...</td>\n",
+       "      <td>GPGDDLCSDLEEAPE</td>\n",
+       "      <td>S183</td>\n",
+       "      <td>455670.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.981179362242806, 0.8860339595928756, 0.98...</td>\n",
+       "      <td>ENSP00000390870</td>\n",
+       "      <td>CK2</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>AURB</td>\n",
+       "      <td>Q96GD4</td>\n",
+       "      <td>KIF2C</td>\n",
+       "      <td>Q99661</td>\n",
+       "      <td>FEIGRPLGKGKFGNVYLAREKKSHFIVALKVLFKSQIEKEGVHQLR...</td>\n",
+       "      <td>KESLRSRSTRMSTVS</td>\n",
+       "      <td>S111</td>\n",
+       "      <td>25159900.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9762857097579093, 0.8798533791446438, 1.0...</td>\n",
+       "      <td>ENSP00000402172</td>\n",
+       "      <td>AUR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>ULK1</td>\n",
+       "      <td>O75385</td>\n",
+       "      <td>ATG9A</td>\n",
+       "      <td>Q7Z3C6</td>\n",
+       "      <td>0SRKDLIGHGAFAVVFKGRHREKHDEVAVKCINKKNLAKSQTLLGK...</td>\n",
+       "      <td>EYQRLEASYSDSPPG</td>\n",
+       "      <td>S14</td>\n",
+       "      <td>3203970.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000394345</td>\n",
+       "      <td>ULK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>MST2</td>\n",
+       "      <td>Q13188</td>\n",
+       "      <td>SAV1</td>\n",
+       "      <td>Q9H4B6</td>\n",
+       "      <td>0DVLEKLGEGSYGSVFKAIHKESGQVVAIKQVPVESDLQEIIKEIS...</td>\n",
+       "      <td>YRHPCAPSVPRYDQP</td>\n",
+       "      <td>S269</td>\n",
+       "      <td>21507301.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000451596</td>\n",
+       "      <td>STE20</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13204</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>ID2</td>\n",
+       "      <td>Q02363</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>LGISRSKTPVDDPMS</td>\n",
+       "      <td>T27</td>\n",
+       "      <td>4706880.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.152576648537005, 0.981179362242806, 1.187...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13205</th>\n",
+       "      <td>MRCKB</td>\n",
+       "      <td>Q9Y5S2</td>\n",
+       "      <td>SIAH2</td>\n",
+       "      <td>O43255</td>\n",
+       "      <td>FEIIKVIGRGAFGEVAVVKMKNTERIYAMKILNKWEMLKRAEACFR...</td>\n",
+       "      <td>RRLTWEATPRSIHDG</td>\n",
+       "      <td>T279</td>\n",
+       "      <td>1872043500.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9417645335842487, 0.9417645335842487, 1.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13206</th>\n",
+       "      <td>MRCKB</td>\n",
+       "      <td>Q9Y5S2</td>\n",
+       "      <td>SIAH2</td>\n",
+       "      <td>O43255</td>\n",
+       "      <td>FEIIKVIGRGAFGEVAVVKMKNTERIYAMKILNKWEMLKRAEACFR...</td>\n",
+       "      <td>__MSRPSSTGPSANK</td>\n",
+       "      <td>S6</td>\n",
+       "      <td>25172963.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 1.1653249789427378, 1.07896257415...</td>\n",
+       "      <td></td>\n",
+       "      <td>DMPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13207</th>\n",
+       "      <td>CK1G3</td>\n",
+       "      <td>Q9Y6M4</td>\n",
+       "      <td>LYN</td>\n",
+       "      <td>P07948</td>\n",
+       "      <td>0RVGKKIGCGNFGELRLGKNLYTNEYVAIKLEPMKSRAPQLHLEYR...</td>\n",
+       "      <td>SKGKDSLSDDGVDLK</td>\n",
+       "      <td>S13</td>\n",
+       "      <td>1983291.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>CK1</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13208</th>\n",
+       "      <td>MEKK4</td>\n",
+       "      <td>Q9Y6R4</td>\n",
+       "      <td>MEKK4</td>\n",
+       "      <td>Q9Y6R4</td>\n",
+       "      <td>0QRGNKIGEGQYGKVYTCISVDTGELMAMKEIRFQPNDHKTIKETA...</td>\n",
+       "      <td>KLKNNAQTMPGEVNS</td>\n",
+       "      <td>T1494</td>\n",
+       "      <td>479428.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>STE11</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>13209 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "0        P38A  Q16539     STAT3  P40763   \n",
+       "1       CK2A1  P68400      HES6  Q96HZ4   \n",
+       "2        AURB  Q96GD4     KIF2C  Q99661   \n",
+       "3        ULK1  O75385     ATG9A  Q7Z3C6   \n",
+       "4        MST2  Q13188      SAV1  Q9H4B6   \n",
+       "...       ...     ...       ...     ...   \n",
+       "13204  DYRK1B  Q9Y463       ID2  Q02363   \n",
+       "13205   MRCKB  Q9Y5S2     SIAH2  O43255   \n",
+       "13206   MRCKB  Q9Y5S2     SIAH2  O43255   \n",
+       "13207   CK1G3  Q9Y6M4       LYN  P07948   \n",
+       "13208   MEKK4  Q9Y6R4     MEKK4  Q9Y6R4   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      YQNLSPVGSGAYGSVCAAFDTKTGLRVAVKKLSRPFQSIIHAKRTY...  NTIDLPMSPRTLDSL   \n",
+       "1      YQLVRKLGRGKYSEVFEAINITNNEKVVVKILKPVKKKKIKREIKI...  GPGDDLCSDLEEAPE   \n",
+       "2      FEIGRPLGKGKFGNVYLAREKKSHFIVALKVLFKSQIEKEGVHQLR...  KESLRSRSTRMSTVS   \n",
+       "3      0SRKDLIGHGAFAVVFKGRHREKHDEVAVKCINKKNLAKSQTLLGK...  EYQRLEASYSDSPPG   \n",
+       "4      0DVLEKLGEGSYGSVFKAIHKESGQVVAIKQVPVESDLQEIIKEIS...  YRHPCAPSVPRYDQP   \n",
+       "...                                                  ...              ...   \n",
+       "13204  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  LGISRSKTPVDDPMS   \n",
+       "13205  FEIIKVIGRGAFGEVAVVKMKNTERIYAMKILNKWEMLKRAEACFR...  RRLTWEATPRSIHDG   \n",
+       "13206  FEIIKVIGRGAFGEVAVVKMKNTERIYAMKILNKWEMLKRAEACFR...  __MSRPSSTGPSANK   \n",
+       "13207  0RVGKKIGCGNFGELRLGKNLYTNEYVAIKLEPMKSRAPQLHLEYR...  SKGKDSLSDDGVDLK   \n",
+       "13208  0QRGNKIGEGQYGKVYTCISVDTGELMAMKEIRFQPNDHKTIKETA...  KLKNNAQTMPGEVNS   \n",
+       "\n",
+       "      sub_mod_rsd  sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0            S727      448191.0        human        human      1  263.0   \n",
+       "1            S183      455670.0        human        human      1  263.0   \n",
+       "2            S111    25159900.0        human        human      1  263.0   \n",
+       "3             S14     3203970.0        human        human      1  263.0   \n",
+       "4            S269    21507301.0        human        human      1  263.0   \n",
+       "...           ...           ...          ...          ...    ...    ...   \n",
+       "13204         T27     4706880.0        human        human      1  263.0   \n",
+       "13205        T279  1872043500.0        human        human      1  263.0   \n",
+       "13206          S6    25172963.0        human        human      1  263.0   \n",
+       "13207         S13     1983291.0        human        human      1  263.0   \n",
+       "13208       T1494      479428.0        human        human      1  263.0   \n",
+       "\n",
+       "                                                  matrix      ensemble_id  \\\n",
+       "0      [[[1.003004504503377, 1.0273678027634894, 1.18...  ENSP00000384943   \n",
+       "1      [[[0.981179362242806, 0.8860339595928756, 0.98...  ENSP00000390870   \n",
+       "2      [[[0.9762857097579093, 0.8798533791446438, 1.0...  ENSP00000402172   \n",
+       "3      [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000394345   \n",
+       "4      [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000451596   \n",
+       "...                                                  ...              ...   \n",
+       "13204  [[[1.152576648537005, 0.981179362242806, 1.187...                    \n",
+       "13205  [[[0.9417645335842487, 0.9417645335842487, 1.0...                    \n",
+       "13206  [[[0.0, 0.0, 1.1653249789427378, 1.07896257415...                    \n",
+       "13207  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                    \n",
+       "13208  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                    \n",
+       "\n",
+       "      family  \n",
+       "0       MAPK  \n",
+       "1        CK2  \n",
+       "2        AUR  \n",
+       "3        ULK  \n",
+       "4      STE20  \n",
+       "...      ...  \n",
+       "13204   DYRK  \n",
+       "13205   DMPK  \n",
+       "13206   DMPK  \n",
+       "13207    CK1  \n",
+       "13208  STE11  \n",
+       "\n",
+       "[13209 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 62,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "dff = pd.concat([df_train, df_test], ignore_index=True,)\n",
+    "dff_ = dff.dropna(subset=['substrate'], )\n",
+    "dff_.reset_index(drop=True, inplace=True)\n",
+    "dff_"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "sub_subseq_dict = {}\n",
+    "for i in range(len(dff_)):\n",
+    "    sub_subseq_dict[dff_.subseq[i]] = dff_.substrate[i]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 84,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      ">CEP131\n",
+      "NNLRRSNSTTQVSQP\n",
+      ">PCM-1\n",
+      "RRQAESLSLTREVSQ\n",
+      ">PPP1R16B\n",
+      "KKVSFEASVALLEAS\n",
+      ">CEP131\n",
+      "SPAGVDLSLTGLPPP\n",
+      ">CEP131\n",
+      "PLKSSNQTAPSLNNI\n",
+      ">MRLC1\n",
+      "KRPQSATSNVFAMFD\n",
+      ">MRLC1\n",
+      "KKRPQSATSNVFAMF\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">CDC25C\n",
+      "SGLYRSPSMPENLNR\n",
+      ">RALY\n",
+      "PLVRRVKTNVPVKLF\n",
+      ">KI-67\n",
+      "RSLRKADTEEEFLAF\n",
+      ">FANCE\n",
+      "LFLGRILSLTSSASR\n",
+      ">CK1D\n",
+      "RGLPSTASGRLRGTQ\n",
+      ">CK1D\n",
+      "MERERKVSMRLHRGA\n",
+      ">CK1D\n",
+      "QDTSRMSTSQIPGRV\n",
+      ">CK1D\n",
+      "PATRGLPSTASGRLR\n",
+      ">CLK3\n",
+      "HHCKRYRSPEPDPYL\n",
+      ">CEP170B\n",
+      "QGLPVPGSPGGQKWV\n",
+      ">LMO7\n",
+      "GIMRRGESLDNLDSP\n",
+      ">ING1 iso2\n",
+      "LGDTAGNSGKAGADR\n",
+      ">vigilin\n",
+      "MSSVAVLTQESFAEH\n",
+      ">WIZ\n",
+      "SLEARSPSDLHISPL\n",
+      ">PRRC2C\n",
+      "QPRPAVLSGYFKQFQ\n",
+      ">E2F8\n",
+      "PSFTRHPSLIKLVKS\n",
+      ">BLM\n",
+      "DQNKHTASINDLERE\n",
+      ">LAMC1\n",
+      "VTLNRLNTFGDEVFN\n",
+      ">YB-1\n",
+      "GFINRNDTKEDVFVH\n",
+      ">SETMAR\n",
+      "LYDNRRRSAQWLDQE\n",
+      ">FANCE\n",
+      "LGLLRLCTWLLALSP\n",
+      ">CAAP1\n",
+      "EGDNGMDSDMEEEAD\n",
+      ">ASF1A\n",
+      "KLEDAESSNPNLQSL\n",
+      ">SNCB\n",
+      "EDPPQEEYQEYEPEA\n",
+      ">CCDC6\n",
+      "QPVSAPPSPRDISME\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">MCM3\n",
+      "KTIERRYSDLTTLVA\n",
+      ">BLM\n",
+      "SHFVRVSTAQKSKKG\n",
+      ">LATS2\n",
+      "PVPSRTNSFNSHQPR\n",
+      ">CCDC6\n",
+      "EKLDQPVSAPPSPRD\n",
+      ">LATS2\n",
+      "GSHVRQDSMEPSDLW\n",
+      ">BLM\n",
+      "HLQKSFVSSNWAETP\n",
+      ">SKAR\n",
+      "ARQKIGLSDARLKLG\n",
+      ">FYTTD1\n",
+      "KVQAQLNTEQLLDDV\n",
+      ">BLM\n",
+      "LKHERFQSLSFPHTK\n",
+      ">NHS\n",
+      "RKLRRRKTISGIPRR\n",
+      ">MCPIP1\n",
+      "TSQECLDSGIGSLES\n",
+      ">IkB-alpha\n",
+      "LVDDRHDSGLDSMKD\n",
+      ">MCPIP1\n",
+      "CLDSGIGSLESQMSE\n",
+      ">PIK3R1\n",
+      "EPYNLYSSLKELVLH\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">REL\n",
+      "SNTTVFVSQSDAFEG\n",
+      ">AML2\n",
+      "YHRAIKVTVDGPREP\n",
+      ">LATS2\n",
+      "ATLARRDSLQKPGLE\n",
+      ">CPEB\n",
+      "VRGSRLDTRPILDSR\n",
+      ">CPEB\n",
+      "DTRPILDSRSSSPSD\n",
+      ">POU6F1\n",
+      "KLDITPKSAQKLKPV\n",
+      ">TACC3\n",
+      "ESAWRKQSLYVKFDP\n",
+      ">AKIP\n",
+      "MLVPRKMSVSPLESW\n",
+      ">SOX8\n",
+      "SAPSASASPTETGPP\n",
+      ">YY1\n",
+      "EGCGKRFSLDFNLRT\n",
+      ">SPIN1\n",
+      "LNKDERVSALEVLPD\n",
+      ">FAF1\n",
+      "DVHMVSDSDGDDFED\n",
+      ">CETN2\n",
+      "LRIMKKTSLY_____\n",
+      ">AML2\n",
+      "PSTSRRFTPPSPAFP\n",
+      ">KIF4A\n",
+      "PPKLRRRTFSLTEVR\n",
+      ">VHL\n",
+      "SVNSREPSQVIFCNR\n",
+      ">LATS2\n",
+      "ALREIRYSLLPFANE\n",
+      ">LIMK1\n",
+      "DRSPGAGSLGSPASQ\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">SPIN1\n",
+      "RVATSRISDAHLADT\n",
+      ">FAF1\n",
+      "ITDVHMVSDSDGDDF\n",
+      ">PIAS1\n",
+      "SPMPPTLSPSTIPQL\n",
+      ">PIK3R1\n",
+      "EPYNLYSSLKELVLH\n",
+      ">RORC iso2\n",
+      "GCSELISSIFDFSHF\n",
+      ">N-CoR1\n",
+      "NKSNSRKSKSPIPGQ\n",
+      ">N-CoR1\n",
+      "KLINKSNSRKSKSPI\n",
+      ">DCUN1D5\n",
+      "QPPARLISGEEDFSR\n",
+      ">REL\n",
+      "SNTTVFVSQSDAFEG\n",
+      ">SRC-3\n",
+      "PPYNRAVSLDSPVSV\n",
+      ">HuR\n",
+      "EAAMAIASLNGYRLG\n",
+      ">DLG1\n",
+      "FVSHSHISPIKPTEA\n",
+      ">DLG1\n",
+      "YLGQTPASPARYSPI\n",
+      ">DLG1\n",
+      "VNTDSLETPTYVNGT\n",
+      ">PSD-95\n",
+      "TDYPTAMTPTSPRRY\n",
+      ">GYS1\n",
+      "KRKPDIVTPNGLNVK\n",
+      ">EEF2K\n",
+      "TFDSLPSSPSSATPH\n",
+      ">EEF2K\n",
+      "GTEEKCGSPQVRTLS\n",
+      ">ISL1\n",
+      "GTPMVAASPERHDGG\n",
+      ">GYS1\n",
+      "STPSEPLSPTSSLGE\n",
+      ">GYS1\n",
+      "SSSLSTPSEPLSPTS\n",
+      ">p90RSK\n",
+      "TSRTPKDSPGIPPSA\n",
+      ">ASK1\n",
+      "GINPCTETFTGTLQY\n",
+      ">PKCD\n",
+      "FGENRASTFCGTPDY\n",
+      ">SGK1\n",
+      "EHNGTTSTFCGTPEY\n",
+      ">PDHA1\n",
+      "NRYGMGTSVERAAAS\n",
+      ">ASK1\n",
+      "NEYLRSISLPVPVLV\n",
+      ">PKCD\n",
+      "FGESRASTFCGTPDY\n",
+      ">PIP5K1C\n",
+      "NTVFRKNSSLKSSPS\n",
+      ">MRLC1\n",
+      "KKRPQSATSNVFAMF\n",
+      ">MRLC1\n",
+      "KRPQSATSNVFAMFD\n",
+      ">LMO7 iso3\n",
+      "LKNLKRRSQFFEQGS\n",
+      ">KSR\n",
+      "TRLRRTESVPSDINN\n",
+      ">CDC25C\n",
+      "SGLYRSPSMPENLNR\n",
+      ">RIPK2\n",
+      "KWRMMSLSQSRSSKS\n",
+      ">RIPK2\n",
+      "LSKWRMMSLSQSRSS\n",
+      ">RIPK2\n",
+      "MSLSQSRSSKSAPEG\n",
+      ">RIPK2\n",
+      "SLSQSRSSKSAPEGG\n",
+      ">RIPK2\n",
+      "RMMSLSQSRSSKSAP\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">CDC20\n",
+      "NRLKVLYSQKATPGS\n",
+      ">CDC20\n",
+      "VLYSQKATPGSSRKT\n",
+      ">CDC20\n",
+      "AAQMEVASFLLSKEN\n",
+      ">CDC20\n",
+      "SKVQTTPSKPGGDRY\n",
+      ">CDC20\n",
+      "QKATPGSSRKTCRYI\n",
+      ">CDC20\n",
+      "EAAGPAPSPMRAANR\n",
+      ">BUB3\n",
+      "PPEDGISSVKFSPNT\n",
+      ">PRAS40\n",
+      "LPRPRLNTSDFQKLK\n",
+      ">SRC-3\n",
+      "PAFGRVSSPPNAMMS\n",
+      ">MYPT1\n",
+      "RPREKRRSTGVSFWT\n",
+      ">CRMP-2\n",
+      "DNIPRRTTQRIVAPP\n",
+      ">SNAP-25\n",
+      "GGFIRRVTNDARENE\n",
+      ">MYPT1\n",
+      "PREKRRSTGVSFWTQ\n",
+      ">NFAT2\n",
+      "PRHSPSTSPRASITE\n",
+      ">AMPKG1\n",
+      "TKALQHRSHYFEGVL\n",
+      ">AMPKB2\n",
+      "WQQDLDDSVKPTQQA\n",
+      ">AMPKG1\n",
+      "TYNNLDVSVTKALQH\n",
+      ">AMPKB2\n",
+      "EHKIMVGSTDDPSVF\n",
+      ">AMPKG1\n",
+      "NNLDVSVTKALQHRS\n",
+      ">AMPKB2\n",
+      "KLDSMESSETSCRDL\n",
+      ">SQSTM1\n",
+      "ESLSQMLSMGFSDEG\n",
+      ">AMPKB2\n",
+      "HKIMVGSTDDPSVFS\n",
+      ">SQSTM1\n",
+      "QMLSMGFSDEGGWLT\n",
+      ">FUNDC1\n",
+      "DYESDDDSYEVLDLT\n",
+      ">BNIP3\n",
+      "QEESLQGSWVELHFS\n",
+      ">ULK1\n",
+      "RRLSALLSGVYA___\n",
+      ">ULK1\n",
+      "QSNMMAATLCGSPMY\n",
+      ">ATG14\n",
+      "LARDLVDSVDDAEGL\n",
+      ">BNIP3L\n",
+      "PPAGLNSSWVELPMN\n",
+      ">Caldesmon\n",
+      "EGVRNIKSMWEKGNV\n",
+      ">MEK1\n",
+      "RTPGRPLSSYGMDSR\n",
+      ">Caldesmon\n",
+      "GLKVGVSSRINEWLT\n",
+      ">PHF23\n",
+      "RLGGPPKSGEP____\n",
+      ">TCEB3\n",
+      "EENRRPPSGDNAREK\n",
+      ">amphiphysin\n",
+      "PAPVRPRSPSQTRKG\n",
+      ">hnRNP F\n",
+      "GPYDRPGTARRYIGI\n",
+      ">ZNF592\n",
+      "NHLKRPVSGVGDAPG\n",
+      ">CEP131\n",
+      "PVSRRPGSAATTKPI\n",
+      ">ZAP3\n",
+      "GLVRPGSSREKVPGG\n",
+      ">CDKL5\n",
+      "NNANYTEYVATRWYR\n",
+      ">ZAP3\n",
+      "RGLVRPGSSREKVPG\n",
+      ">CDKL5\n",
+      "EGNNANYTEYVATRW\n",
+      ">p400\n",
+      "SPVNRPSSATNKALS\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">MEKK6\n",
+      "GITPCTETFTGTLQY\n",
+      ">JNK1\n",
+      "AGTSFMMTPYVVTRY\n",
+      ">ASK1\n",
+      "GINPCTETFTGTLQY\n",
+      ">NCCT\n",
+      "SSHPSHLTHSSTFCM\n",
+      ">NKCC2\n",
+      "TNTYYLQTFGHNTMD\n",
+      ">NKCC2\n",
+      "EYYRNTGSISGPKVN\n",
+      ">NCCT\n",
+      "SSTFCMRTFGYNTID\n",
+      ">NKCC2\n",
+      "AYDSHTNTYYLQTFG\n",
+      ">NCCT\n",
+      "TYEHYANSTQPGEPR\n",
+      ">NCCT\n",
+      "MRTFGYNTIDVVPTY\n",
+      ">NKCC2\n",
+      "KIEYYRNTGSISGPK\n",
+      ">NKCC2\n",
+      "LQTFGHNTMDAVPKI\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">TORC1\n",
+      "KAGSRPKSCEVPGIN\n",
+      ">MBP\n",
+      "KYLASASTMDHARHG\n",
+      ">MBP\n",
+      "DGHHAARTTHYGSLP\n",
+      ">MBP\n",
+      "FLPRHRDTGILDSLG\n",
+      ">MBP\n",
+      "HDAQGTLSKIFKLGG\n",
+      ">MBP\n",
+      "SKYLASASTMDHARH\n",
+      ">MBP\n",
+      "KGHDAQGTLSKIFKL\n",
+      ">CDK11B\n",
+      "QRVKRGTSPRPPEGG\n",
+      ">SIAH2\n",
+      "PPPQPQHTPSPAAPP\n",
+      ">LATS2\n",
+      "ATLARRDSLQKPGLE\n",
+      ">INCENP\n",
+      "RRLSRRKSRSSQLSS\n",
+      ">HuR\n",
+      "SGLPRTMTQKDVEDM\n",
+      ">BLM\n",
+      "SHFVRVSTAQKSKKG\n",
+      ">VHL\n",
+      "GTGRRIHSYRGHLWL\n",
+      ">HuR\n",
+      "VSYARPSSEVIKDAN\n",
+      ">CDC25C\n",
+      "SGLYRSPSMPENLNR\n",
+      ">SIAH2\n",
+      "PTCRGALTPSIRNLA\n",
+      ">LATS2\n",
+      "PVPSRTNSFNSHQPR\n",
+      ">IRTKS\n",
+      "PSLQRSVSVATGLNM\n",
+      ">LATS2\n",
+      "HILHPVKSVRVLRPE\n",
+      ">SIAH2\n",
+      "PQPQHTPSPAAPPAA\n",
+      ">LATS2\n",
+      "TPVTRRPSFEGTGDS\n",
+      ">HuR\n",
+      "LNGLRLQSKTIKVSY\n",
+      ">SIAH2\n",
+      "GGGAGPVSPQHHELT\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">MUC1\n",
+      "NGGSSLSYTNPAVAA\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">vinexin\n",
+      "QHPDPAWYQTWPGPG\n",
+      ">PKCD\n",
+      "IKQAKIHYIKNHEFI\n",
+      ">PSD-95\n",
+      "VTQMEVHYARPIIIL\n",
+      ">BCAP\n",
+      "LGQEEDVYHTVDDDE\n",
+      ">SRC-3\n",
+      "HPQAASIYQSSEMKG\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">RTCB\n",
+      "MEEAPESYKNVTDVV\n",
+      ">WAVE2\n",
+      "GKEALKFYTNPSYFF\n",
+      ">SOS1\n",
+      "SKAYSPRYSISDRTS\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">CRK\n",
+      "QKRVPNAYDKTALAL\n",
+      ">YY1\n",
+      "SPPDYSEYMTGKKLP\n",
+      ">TBX21\n",
+      "VLQSLHKYQPRLHIV\n",
+      ">BCAP\n",
+      "AKVEFGVYESGPRKS\n",
+      ">BCAP\n",
+      "QERPGNFYVSSESIR\n",
+      ">BCAP\n",
+      "DRPQSSIYDPFAGMK\n",
+      ">TBX21\n",
+      "SMPGNRLYVHPDSPN\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">RTCB\n",
+      "GMAAAGNYAWVNRSS\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">TBX21\n",
+      "QFIAVTAYQNAEITQ\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">CCDC50\n",
+      "SSHKGFHYKH_____\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">LYN\n",
+      "RNTERTIYVRDPTSN\n",
+      ">CCDC50\n",
+      "TDGEDADYTHFTNQQ\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">CCDC50\n",
+      "MAEEKKAYKKAKERE\n",
+      ">Ezrin\n",
+      "KEVHKSGYLSSERLI\n",
+      ">VAV2\n",
+      "EDGGDDIYEDIIKVE\n",
+      ">PKCD\n",
+      "IPDNNGTYGKIWEGS\n",
+      ">VAV2\n",
+      "HDLGEDIYDCVPCED\n",
+      ">PLCG1\n",
+      "KLAEGSAYEEVPTSV\n",
+      ">RASA1\n",
+      "TVDGKEIYNTIRRKT\n",
+      ">PLCG1\n",
+      "EGSFEARYQQPFEDF\n",
+      ">PKCD\n",
+      "TPETVGIYQGFEKKT\n",
+      ">MEK1\n",
+      "LIDSMANSFVGTRSY\n",
+      ">MEK1\n",
+      "VSGQLIDSMANSFVG\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">BAD\n",
+      "GRELRRMSDEFVDSF\n",
+      ">ADCY6\n",
+      "PNALQRLSRSIVRSR\n",
+      ">ADCY6\n",
+      "LSRSIVRSRVHSTAV\n",
+      ">ADCY6\n",
+      "IVRSRVHSTAVGVFS\n",
+      ">TNNT2\n",
+      "RKSGKRQTEREKKKK\n",
+      ">ADCY6\n",
+      "ALQRLSRSIVRSRVH\n",
+      ">BAD\n",
+      "PFRGRSRSAPPNLWA\n",
+      ">SOCS3\n",
+      "VNGHLDSYEKVTQLP\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">IRS1\n",
+      "VPSSRGDYMTMQMSC\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">BVR\n",
+      "LAEEIQKYCCSRK__\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">Ezrin\n",
+      "KEVHKSGYLSSERLI\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">SPTAN1\n",
+      "AVQQQEVYGMMPRDE\n",
+      ">CD163L1\n",
+      "DALAEAVYEELDYLL\n",
+      ">TSAd\n",
+      "GEAPSNIYVEVEDEG\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">CCDC50\n",
+      "SSHKGFHYKH_____\n",
+      ">LAX1\n",
+      "SSQISNDYVNMTGLD\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">TSAd\n",
+      "PDEPIAFYAMGRGSP\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">DAPP1\n",
+      "KVEEPSIYESVRVHT\n",
+      ">VAV1\n",
+      "ALNDEDIYSGLSDQI\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">LAX1\n",
+      "AFQCCRDYENVPAAD\n",
+      ">CCDC50\n",
+      "MAEEKKAYKKAKERE\n",
+      ">CCDC50\n",
+      "TDGEDADYTHFTNQQ\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">NPHS1\n",
+      "EDRIRNEYEESQWTG\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">TRIO\n",
+      "LLNPNYIYDVPPEFV\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">NPHS1\n",
+      "AEVDPNYYSMRDFSP\n",
+      ">DCC\n",
+      "PTLESAQYPGILPSP\n",
+      ">DLC1\n",
+      "SAEDNVNYEGQSAYD\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">FAK\n",
+      "DRSNDKVYENVTGLV\n",
+      ">NPHS1\n",
+      "PGAWGPLYDEVRMDP\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">NMDAR2B\n",
+      "ISTHTVTYGNIEGNA\n",
+      ">DAB1 iso2\n",
+      "KQCEQAVYQTILEED\n",
+      ">DAB1 iso2\n",
+      "VEDPVYQYIVFEAGH\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">CENTG1 iso2\n",
+      "QGRTALFYARQAGSQ\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">GUCY1B1\n",
+      "ESKEEDFYEDLDRFE\n",
+      ">IREM-1\n",
+      "VDQVEVEYVTMASLP\n",
+      ">PLXNA1\n",
+      "VPKQTSAYNISNSST\n",
+      ">PTPRJ\n",
+      "DSKVDLIYQNTTAMT\n",
+      ">PTPRJ\n",
+      "NTTAMTIYENLAPVT\n",
+      ">PLXNA2\n",
+      "SKMVSEIYLTRLLAT\n",
+      ">STAM2\n",
+      "KSEPEPVYIDEDKMD\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">MAP2 iso3\n",
+      "RSANGFPYREDEEGA\n",
+      ">PLXNA2\n",
+      "VPKQTSSYNIPASAS\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">MAP2 iso3\n",
+      "EHGSQGTYSNTKENG\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">DENR\n",
+      "PNEFAKLTVENSPKQ\n",
+      ">KIF20B\n",
+      "VKHPGCTTPVTVKIP\n",
+      ">GRASP65\n",
+      "FEISFPDSPGSQAQV\n",
+      ">NCKAP5L\n",
+      "AQGPLLPSPARGLKF\n",
+      ">NOLC1\n",
+      "SKKVKLQTPNTFPKR\n",
+      ">MYPT1\n",
+      "AKTPPGSSPAGTQSS\n",
+      ">MYPT1\n",
+      "GVIRSASSPRLSSSL\n",
+      ">JunB\n",
+      "YTNLSSYSPASAPSG\n",
+      ">GRASP65\n",
+      "EQLPGPGSPGHGTAD\n",
+      ">JunB\n",
+      "LHKMNHVTPPNVSLG\n",
+      ">GRASP65\n",
+      "SPGTPAKTPQPNAFP\n",
+      ">JunB\n",
+      "AAAGYGRSPGSLSLH\n",
+      ">NOLC1\n",
+      "VKLQTPNTFPKRKKG\n",
+      ">GRP58\n",
+      "GFPTIYFSPANKKLT\n",
+      ">MYPT1\n",
+      "EEERKDESPASWRLG\n",
+      ">GRASP65\n",
+      "PSASSPGTPAKTPQP\n",
+      ">Nogo iso2\n",
+      "LVSSSTDSPPRPPPA\n",
+      ">ULK1\n",
+      "PLPPILGSPTKAGPS\n",
+      ">REPS2\n",
+      "RPRSRSYSSTSIEEA\n",
+      ">RIT1\n",
+      "SVWKRLKSPFRKKKD\n",
+      ">ULK1\n",
+      "HAVQMVQSAALDEMF\n",
+      ">SOX2\n",
+      "TGGNQKNSPDRVKRP\n",
+      ">ULK1\n",
+      "DFPKTPSSQNLLTLL\n",
+      ">NFAT2\n",
+      "ARGSRPTSPCNKRKY\n",
+      ">NCKAP5L\n",
+      "RSTFRGPSPEPPPSP\n",
+      ">SKA3\n",
+      "ENLLRTPTPPEVTKI\n",
+      ">ULK1\n",
+      "ARQGVVMTPPRNRTL\n",
+      ">KI-67\n",
+      "GSKRRPQTPKEKAKA\n",
+      ">CCNB1\n",
+      "LVDTASPSPMETSGC\n",
+      ">cGAS\n",
+      "MKRKRGGSPAVTLLI\n",
+      ">DNCLI1\n",
+      "PGEDFPASPQRRNTS\n",
+      ">Caldesmon\n",
+      "KTPEGNKSPAPKPSD\n",
+      ">Caldesmon\n",
+      "KKPFKCFSPKGSSLK\n",
+      ">Caldesmon\n",
+      "INEWLTKTPEGNKSP\n",
+      ">Caldesmon\n",
+      "EKGNVFSSPGGTGTP\n",
+      ">Caldesmon\n",
+      "SSPGGTGTPNKETAG\n",
+      ">SMAD2\n",
+      "QSNYIPETPPPGYIS\n",
+      ">SMAD2\n",
+      "ELSPTTLSPVNHSLD\n",
+      ">SMAD2\n",
+      "TGSPAELSPTTLSPV\n",
+      ">SMAD2\n",
+      "NQSMDTGSPAELSPT\n",
+      ">RGC32\n",
+      "ALLSATVTPQKAKLG\n",
+      ">ULK1\n",
+      "GKAPFQASSPQDLRL\n",
+      ">ULK1\n",
+      "SPTKAGPSFDFPKTP\n",
+      ">SKA3\n",
+      "SLVKVLKTPKCALKM\n",
+      ">EEF2K\n",
+      "GTEEKCGSPQVRTLS\n",
+      ">desmin\n",
+      "_MSQAYSSSQRVSSY\n",
+      ">Vimentin\n",
+      "SRSLYSSSPGGAYVT\n",
+      ">CDC25C\n",
+      "SRSGLYRSPSMPENL\n",
+      ">NOLC1\n",
+      "IKLQTPNTFPKRKKG\n",
+      ">POLH\n",
+      "QGKRNPKSPSASSSK\n",
+      ">HMGA2\n",
+      "PKGSKNKSPSKAAQK\n",
+      ">NONO\n",
+      "NLEKQNHTPRKHHQH\n",
+      ">NUCKS\n",
+      "LKATVTPSPVKGKGK\n",
+      ">NR1D1\n",
+      "SQFPQQLTPPRSPSP\n",
+      ">desmin\n",
+      "APGFSLGSPLSSPVF\n",
+      ">MCM3\n",
+      "TQMPQVHTPKTDDSQ\n",
+      ">HMGA2\n",
+      "QEPTCEPSPKRPRGR\n",
+      ">MCM3\n",
+      "SFGSKHVSPRTLTSC\n",
+      ">desmin\n",
+      "SLGSPLSSPVFPRAG\n",
+      ">MCM3\n",
+      "SSDTARTSPVTARTL\n",
+      ">PTTG2\n",
+      "LFQLGPPSPVKMPSP\n",
+      ">FMNL2\n",
+      "MEQQDPKSPSHKSKR\n",
+      ">POLR2A\n",
+      "SPTYSPTSPKGSTYS\n",
+      ">POLR2A\n",
+      "SPTYSPTSPKYSPTS\n",
+      ">SETD8\n",
+      "SKIYSYMSPNKCSGM\n",
+      ">Survivin\n",
+      "FLEGCACTPERMAEA\n",
+      ">ING1 iso2\n",
+      "LGDTAGNSGKAGADR\n",
+      ">VGLL4 iso4\n",
+      "SRRGQPASPSAHMVS\n",
+      ">VGLL4 iso4\n",
+      "AGLSPTLTPGERQQN\n",
+      ">palladin\n",
+      "PTPAVLLSPTKEPPP\n",
+      ">CDC25C\n",
+      "VCPDVPRTPVGKFLG\n",
+      ">SRC-3\n",
+      "SPVSVGSSPPVKNIS\n",
+      ">ULK1\n",
+      "TAERLILSHAVQMVQ\n",
+      ">CUTL1\n",
+      "IDYSQGASPQPQHQL\n",
+      ">ULK1\n",
+      "FDFPKTPSSQNLLTL\n",
+      ">PAK1\n",
+      "VIEPLPVTPTRDVAT\n",
+      ">NCKAP5L\n",
+      "RVDLEPVSPRSCLTK\n",
+      ">VGLL4 iso4\n",
+      "RTGPPPISPSKRKFS\n",
+      ">palladin\n",
+      "SSLPSPMSPTPRQFG\n",
+      ">VGLL4 iso4\n",
+      "ASRPAGLSPTLTPGE\n",
+      ">ATAD5\n",
+      "TVPFDSESPIRMKFT\n",
+      ">ULK1\n",
+      "PSFDFPKTPSSQNLL\n",
+      ">separase\n",
+      "IAPSTNSSPVLKTKP\n",
+      ">4E-BP1\n",
+      "RNSPVTKTPPRDLPT\n",
+      ">CCNB1\n",
+      "PILVDTASPSPMETS\n",
+      ">CDC25C\n",
+      "LSILSGGTPKRCLDL\n",
+      ">BAD\n",
+      "EGMGEEPSPFRGRSR\n",
+      ">EEF2\n",
+      "NVLCLSKSPNKHNRL\n",
+      ">CDC25C\n",
+      "PAQLLCSTPNGLDRG\n",
+      ">SKA3\n",
+      "PLVPTFCTPGLKIPS\n",
+      ">4E-BP1\n",
+      "PTIPGVTSPSSDEPP\n",
+      ">KIF4A\n",
+      "FFNPVCATPNSKILK\n",
+      ">NCKAP5L\n",
+      "SPGGPQLSPQLPRNS\n",
+      ">ISL1\n",
+      "GTPMVAASPERHDGG\n",
+      ">CDC25C\n",
+      "DQHLMKCSPAQLLCS\n",
+      ">CENPC1\n",
+      "KLVLPSNTPNVRRTK\n",
+      ">SKA3\n",
+      "SYENLLRTPTPPEVT\n",
+      ">CDC25C\n",
+      "SEMKYLGSPITTVPK\n",
+      ">BLM\n",
+      "PGVTVVISPLRSLIV\n",
+      ">DENR\n",
+      "AKLTVENSPKQEAGI\n",
+      ">KI-67\n",
+      "GIAEMFKTPVKEQPQ\n",
+      ">GMPS\n",
+      "PISDEDRTPRKRISK\n",
+      ">dUTPase iso2\n",
+      "SEETPAISPSKRARP\n",
+      ">SKA3\n",
+      "SDAEYTNSPLVPTFC\n",
+      ">FOXO1A\n",
+      "EGGKSGKSPRRRAAS\n",
+      ">PIP5K1C\n",
+      "DERSWVYSPLHYSAQ\n",
+      ">NOLC1\n",
+      "AKKIKLQTPNTFPKR\n",
+      ">NCKAP5L\n",
+      "KLQIGPPSPGEAQGP\n",
+      ">TK\n",
+      "LPTVLPGSPSKTRGQ\n",
+      ">SRC-3\n",
+      "VVKQEQLSPKKKENN\n",
+      ">dUTPase\n",
+      "GPETPAISPSKRARP\n",
+      ">TFCP2L1\n",
+      "HCISTEFTPRKHGGE\n",
+      ">CEP55\n",
+      "NREKVAASPKSPTAA\n",
+      ">NCKAP5L\n",
+      "PTSEKSPSPGGPQLS\n",
+      ">BLM\n",
+      "IIKLLYVTPEKICAS\n",
+      ">APC4\n",
+      "KEEVLSESEAENQQA\n",
+      ">SET\n",
+      "_MAPKRQSPLPPQKK\n",
+      ">SKA3\n",
+      "MDDFECVTPKLEHFG\n",
+      ">NCKAP5L\n",
+      "PSPEPPPSPLQVPTY\n",
+      ">HuR\n",
+      "LLSQLYHSPARRFGG\n",
+      ">INCENP\n",
+      "EPELMPKTPSQKNRR\n",
+      ">CEP55\n",
+      "KVAASPKSPTAALNE\n",
+      ">CKAP2\n",
+      "FKELKFLTPVRRSRR\n",
+      ">TIAM1\n",
+      "SDAVSASSPEKESQQ\n",
+      ">NPHS1\n",
+      "SGAWGPLYDEVQMGP\n",
+      ">DLC1\n",
+      "SAEDNVNYEGQSAYD\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">CRMP-2\n",
+      "KPFPDFVYKRIKARS\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">NIPP-1\n",
+      "NEPKKKKYAKEAWPG\n",
+      ">AFAP1L1\n",
+      "QWPEPRIYDEVPYEK\n",
+      ">AFAP1L1\n",
+      "KPPPEDYYEEALPLG\n",
+      ">GluR2\n",
+      "YKEGYNVYGIESVKI\n",
+      ">CD163L1\n",
+      "DALAEAVYEELDYLL\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">YY1\n",
+      "MASGDTLYIATDGSE\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">YY1\n",
+      "SPPDYSEYMTGKKLP\n",
+      ">SLC4A1\n",
+      "MEELQDDYEDMMEEN\n",
+      ">DAPP1\n",
+      "KVEEPSIYESVRVHT\n",
+      ">Ret\n",
+      "FGLSRDVYEEDSYVK\n",
+      ">Ret\n",
+      "PLLLIVEYAKYGSLR\n",
+      ">Ret\n",
+      "TPSDSLIYDDGLSEE\n",
+      ">Ret\n",
+      "LIVEYAKYGSLRGFL\n",
+      ">Ret\n",
+      "AQAFPVSYSSSGARR\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">Ret\n",
+      "MMVKRRDYLDLAAST\n",
+      ">Ret\n",
+      "RYPNDSVYANWMLSP\n",
+      ">Ret\n",
+      "TWIENKLYGMSDPNW\n",
+      ">Ret\n",
+      "TNTGFPRYPNDSVYA\n",
+      ">Ret\n",
+      "DNCSEEMYRLMLQCW\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">Ret\n",
+      "SRKVGPGYLGSGGSR\n",
+      ">IRS1\n",
+      "QRVDPNGYMMMSPSG\n",
+      ">IRS1\n",
+      "VPSSRGDYMTMQMSC\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">IRS1\n",
+      "GRKGSGDYMPMSPKS\n",
+      ">IRS1\n",
+      "EETGTEEYMKMDLGP\n",
+      ">IRS1\n",
+      "LLPCTGDYMNMSPVG\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">IRS1\n",
+      "TLHTDDGYMPMSPGV\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">RHOA\n",
+      "VPTVFENYVADIEVD\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">Ron\n",
+      "YVQLPATYMNLGPST\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">Hck\n",
+      "YTATESQYQQQP___\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">MUC1\n",
+      "TYHTHGRYVPPSSTD\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">Arg\n",
+      "PNLFVALYDFVASGD\n",
+      ">Arg\n",
+      "KCNKPTVYGVSPIHD\n",
+      ">Arg\n",
+      "EKLRVLGYNQNGEWS\n",
+      ">Arg\n",
+      "RLMTGDTYTAHAGAK\n",
+      ">Arg\n",
+      "YVGVWKKYSLTVAVK\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">Arg\n",
+      "QGWVPSNYITPVNSL\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">BAD\n",
+      "GRELRRMSDEFVDSF\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">BAD\n",
+      "PFRGRSRSAPPNLWA\n",
+      ">AML2\n",
+      "SGRGKSFTLTITVFT\n",
+      ">IRS1\n",
+      "GCRRRHSSETFSSTP\n",
+      ">AML2\n",
+      "GRSGRGKSFTLTITV\n",
+      ">AML2\n",
+      "RGKSFTLTITVFTNP\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">ASK1\n",
+      "ATRGRGSSVGGGSRR\n",
+      ">CBX8\n",
+      "PSSPGDSSKKRGPKP\n",
+      ">AML2\n",
+      "KSFTLTITVFTNPTQ\n",
+      ">S6\n",
+      "IAKRRRLSSLRASTS\n",
+      ">S6\n",
+      "AKRRRLSSLRASTSK\n",
+      ">4E-BP1\n",
+      "FLMECRNSPVAKTPP\n",
+      ">PDHK1\n",
+      "AEDAKAIYDFTDTVI\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">PDHK1\n",
+      "RRLCDLYYINSPELE\n",
+      ">FOXO1A\n",
+      "EGGKSGKSPRRRAAS\n",
+      ">TFE3\n",
+      "PTGSAPNSPMALLTI\n",
+      ">WDR77\n",
+      "FVRDATWSPLNHSLL\n",
+      ">WDR77\n",
+      "___MRKETPPPLVPP\n",
+      ">WDR77\n",
+      "CVTGLVFSPHSVPFL\n",
+      ">AML2\n",
+      "SSSGGDRSPTRMLAS\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">Cortactin\n",
+      "TYTSEPVYETTEAPG\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">Tks5\n",
+      "ALEEETIYENEGFRP\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">PTTG1IP\n",
+      "LFKEENPYARFENN_\n",
+      ">ADAM12\n",
+      "PRPSHNAYIK_____\n",
+      ">ENG\n",
+      "TAALWYIYSHTRSPS\n",
+      ">ARAF\n",
+      "LGYRDSGYYWEVPPS\n",
+      ">TIAM1\n",
+      "DRARQGVYENFRREL\n",
+      ">MUC1\n",
+      "SSTDRSPYEKVSAGN\n",
+      ">ROCK2\n",
+      "LADKNKIYESIEEAK\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">ephexin-1\n",
+      "IEQIGLLYQEYRDKS\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">CTNND2\n",
+      "QEPSRKDYETYQPFP\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">CTNND2\n",
+      "LKERKTDYESAGNNA\n",
+      ">CTNND2\n",
+      "ERDRQRPYSSSRTPS\n",
+      ">DAB1\n",
+      "EDVEDPVYQYIVFEA\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">DLC1\n",
+      "SAEDNVNYEGQSAYD\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">NELFCD iso4\n",
+      "__MDEDYYGSAAEWG\n",
+      ">CACNA1C\n",
+      "ELQDSRVYVSSL___\n",
+      ">TR-beta1\n",
+      "FLLAFEHYINYRKHH\n",
+      ">MEGF10\n",
+      "LSSSENPYATIKDPP\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">GRF-1\n",
+      "DGFDPSDYAEPMDAV\n",
+      ">Trap150\n",
+      "WQNYRQAYSPRRGRS\n",
+      ">RBM10 iso2\n",
+      "RGDRTGRYGATDRSQ\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">Ezrin\n",
+      "KEVHKSGYLSSERLI\n",
+      ">Tks5\n",
+      "VKYEEPEYDVPAFGF\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">DAPP1\n",
+      "KVEEPSIYESVRVHT\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">CD163L1\n",
+      "DALAEAVYEELDYLL\n",
+      ">SYN1\n",
+      "VVALTKTYATTEPFI\n",
+      ">calponin 2\n",
+      "QFNKGPSYGLSAEVK\n",
+      ">eNOS\n",
+      "WELGSITYDTLCAQS\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">DYN1\n",
+      "NTEQRNVYKDYRQLE\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">IRTKS\n",
+      "LINLGKNYEKAVNAM\n",
+      ">ENG\n",
+      "LLTAALWYIYSHTRS\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">iNOS\n",
+      "LPGKPKVYVQDILRQ\n",
+      ">ROMK\n",
+      "SKTKEGKYRVDFHNF\n",
+      ">ARAF\n",
+      "GYRDSGYYWEVPPSE\n",
+      ">IRTKS\n",
+      "VVIPPPDYLECLSMG\n",
+      ">CDCP1\n",
+      "LQPEVDTYRPFQGTM\n",
+      ">PKCD\n",
+      "KVKSPSDYSNFDPEF\n",
+      ">VEGFR2\n",
+      "AQQDGKDYIVLPISE\n",
+      ">IRTKS\n",
+      "YEHKEIEYVETVTSR\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">CDCP1\n",
+      "VIEDTMVYGHLLQDS\n",
+      ">IRTKS\n",
+      "SNVVRKDYDTLSKCS\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">iNOS\n",
+      "IEFVNQYYGSFKEAK\n",
+      ">PKCD\n",
+      "SSEPVGIYQGFEKKT\n",
+      ">RBM10 iso2\n",
+      "LGARGSSYGVTSTES\n",
+      ">PTPRJ\n",
+      "NTTAMTIYENLAPVT\n",
+      ">ZC3H4\n",
+      "PTDRYNSYNRPRPKA\n",
+      ">RBM10 iso2\n",
+      "SEEPPVDYSYYQQDE\n",
+      ">GLRB\n",
+      "RDFELSNYDCYGKPI\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">Trap150\n",
+      "AASGGAAYTKRYLEE\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">ZC3H4\n",
+      "GHRKYREYSPPYAPS\n",
+      ">PTPRJ\n",
+      "DSKVDLIYQNTTAMT\n",
+      ">GRK2\n",
+      "ARPLVEFYEEIKKYE\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">ZC3H4\n",
+      "SRGRGRGYRGRGSRG\n",
+      ">PIP5K1C\n",
+      "TDERSWVYSPLHYSA\n",
+      ">MST1\n",
+      "KIPQDGDYEFLKSWT\n",
+      ">endophilin B1\n",
+      "ARIEEFVYEKLDRKA\n",
+      ">Trap150\n",
+      "NRGGYGNYRSNWQNY\n",
+      ">RRas\n",
+      "DPTIEDSYTKICSVD\n",
+      ">IRTKS\n",
+      "PAPSGRAYTSPLIDM\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAQKD\n",
+      ">ARRB1\n",
+      "YLKERRVYVTLTCAF\n",
+      ">CELF2 iso3\n",
+      "LKELFEPYGAVYQIN\n",
+      ">TRPV6\n",
+      "YRPHNLIYYGEHPLS\n",
+      ">FLOT2\n",
+      "DVYDKVDYLSSLGKT\n",
+      ">PKCD\n",
+      "IRVDTPHYPRWITKE\n",
+      ">GluR2\n",
+      "YKEGYNVYGIESVKI\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">PLCG1\n",
+      "EGRNPGFYVEANPMP\n",
+      ">PKCD\n",
+      "IPDNNGTYGKIWEGS\n",
+      ">DYN1\n",
+      "LLPLRRGYIGVVNRS\n",
+      ">PKCD\n",
+      "TPETVGIYQGFEKKT\n",
+      ">TACE\n",
+      "DKKLDKQYESLSLFH\n",
+      ">CACNA1C\n",
+      "PEDESCVYALGRGRS\n",
+      ">PLCG1\n",
+      "EGSFEARYQQPFEDF\n",
+      ">PKCD\n",
+      "STFDAHIYEGRVIQI\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">BAD\n",
+      "KGLPRPKSAGTATQM\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">BAD\n",
+      "PFRGRSRSAPPNLWA\n",
+      ">BAD\n",
+      "GRELRRMSDEFVDSF\n",
+      ">PKCD\n",
+      "ELKGRGEYFAIKALK\n",
+      ">Ezrin\n",
+      "KEVHKSGYLSSERLI\n",
+      ">CRMP-2\n",
+      "KPFPDFVYKRIKARS\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">CRMP-2\n",
+      "RGVPRGLYDGPVCEV\n",
+      ">Cortactin\n",
+      "TYTSEPVYETTEAPG\n",
+      ">PTP1B\n",
+      "ISEDIKSYYTVRQLE\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">Titin\n",
+      "LRTEEGKSLSFPLAL\n",
+      ">CACNA1D\n",
+      "QPNSSKQTVLSWQAA\n",
+      ">SLC14A2\n",
+      "TVFPRRKSVFHIEWS\n",
+      ">HSL\n",
+      "LTESMRRSVSEAALA\n",
+      ">ABCC9\n",
+      "FESCKKHTGVQSKPI\n",
+      ">CACNA1D\n",
+      "RRWGQAISKSKLRSH\n",
+      ">MAP2 iso3\n",
+      "VASPRRLSNVSSSGS\n",
+      ">CYP2B6\n",
+      "WKALRRFSLATMRDF\n",
+      ">CES1D iso2\n",
+      "ANFARNGSPNGGGLP\n",
+      ">KCNJ12\n",
+      "ERPYRRESEI_____\n",
+      ">RPS19\n",
+      "QRNGVRPSHFSRGSK\n",
+      ">Claudin-16\n",
+      "AGVSMAKSYKAPRTE\n",
+      ">GluR4\n",
+      "TRNKARLSITGSVGE\n",
+      ">CACNA1D\n",
+      "WGQAISKSKLRSHGA\n",
+      ">PAH\n",
+      "GVLSRKLSDFGQETS\n",
+      ">CACNA1D\n",
+      "KGYLDWITQAEDIDP\n",
+      ">MAP2 iso3\n",
+      "ISSARRTTRSEPIRR\n",
+      ">ROMK iso2\n",
+      "RVANLRKSLLIGSHI\n",
+      ">Titin\n",
+      "SDLLSKETLFSSIPK\n",
+      ">TGM2\n",
+      "RDCSRRSSPIYVGRV\n",
+      ">CACNB2\n",
+      "KKSQHRSSSATHQNH\n",
+      ">SHANK3\n",
+      "PPPKRAPSTTLTLRS\n",
+      ">CREB\n",
+      "QKRREILSRRPSYRK\n",
+      ">ROMK iso2\n",
+      "ATCQVRTSYVPEEVL\n",
+      ">CACNA1D\n",
+      "ANSDNKVTIDDYQEE\n",
+      ">NCX1\n",
+      "VDKLIKKTNLALVVG\n",
+      ">TRPC6\n",
+      "RLTHRRQTVLREKGR\n",
+      ">CACNB2\n",
+      "KSQHRSSSATHQNHR\n",
+      ">Kv4.2\n",
+      "VSGSHRGSVQELSTI\n",
+      ">RYR2\n",
+      "YNRTRRISQTSQVSI\n",
+      ">NKX2-1\n",
+      "DLAHHAASPAALQGQ\n",
+      ">CAMKK1\n",
+      "SLSARKFSLQERPAG\n",
+      ">NMDAR2C\n",
+      "SCTWRRVSSLESEV_\n",
+      ">WT1\n",
+      "KDCERRFSRSDQLKR\n",
+      ">CACNA1D\n",
+      "VNSDRRESLQQTNTT\n",
+      ">PPP1R1A\n",
+      "PRQRKKMTRITPTMK\n",
+      ">Survivin\n",
+      "FLKDHRISTFKNWPF\n",
+      ">CIITA\n",
+      "QELPGRLSFLGTRLT\n",
+      ">WT1\n",
+      "KTCQRKFSRSDHLKT\n",
+      ">AP-2 alpha\n",
+      "AEVQRRLSPPECLNA\n",
+      ">CACNA1C iso4\n",
+      "DYLTRDWSILGPHHL\n",
+      ">CIITA\n",
+      "AASLLRLSLYNNCIC\n",
+      ">KSR\n",
+      "PKLNRRLSHPGHFWK\n",
+      ">NLRP3\n",
+      "HKIVRKPSRILFLMD\n",
+      ">PPP1R1A\n",
+      "QIRRRRPTPATLVLT\n",
+      ">TRPV5\n",
+      "WEILRQNTLGHLNLG\n",
+      ">ADRB1\n",
+      "RAGKRRPSRLVALRE\n",
+      ">PPP1R1A\n",
+      "LKSTLAMSPRQRKKM\n",
+      ">PDE10A iso2\n",
+      "ASCFRRLTECFLSPS\n",
+      ">CACNA1C\n",
+      "ASLGRRASFHLECLK\n",
+      ">BNIP3\n",
+      "IYIGRRLTTSTSTF_\n",
+      ">RASGRF1\n",
+      "KEIYRRMSLANTGYS\n",
+      ">CAMKK1\n",
+      "PPRARAASVIPGSAS\n",
+      ">nAChRA4\n",
+      "LIKARSLSVQHVPSS\n",
+      ">HCN4\n",
+      "RASGSHGSLLLPPAS\n",
+      ">CPEB3\n",
+      "QALSSGLSSPTRCQN\n",
+      ">RIMS1 iso7\n",
+      "ARHERRHSDVALPHT\n",
+      ">CPEB3\n",
+      "SPLKKPFSSNVIAPP\n",
+      ">SYNE1\n",
+      "EFSKRTESIATQAEN\n",
+      ">HCN4\n",
+      "PSFMAGASGGASPVA\n",
+      ">HCN4\n",
+      "QVPQRRGTPPLTPGR\n",
+      ">HCN4\n",
+      "VTLPRKTSSGSLPPP\n",
+      ">MYBPC3\n",
+      "SLLKKRDSFRRDSKL\n",
+      ">TVB5\n",
+      "GYKASRPSQENFSLI\n",
+      ">HCN4\n",
+      "SPHSSGESVAAFSLY\n",
+      ">MYBPC3\n",
+      "AGAGRRTSDSHEDAG\n",
+      ">HCN4\n",
+      "PRKTSSGSLPPPLSL\n",
+      ">RRAD\n",
+      "ERDRRRGSTPWGPAP\n",
+      ">QIK\n",
+      "RLKSHRSSFPVEQRL\n",
+      ">HCN4\n",
+      "LGSRGGGSGGAGGGS\n",
+      ">CPEB3\n",
+      "GRRRGRSSLFPFEDA\n",
+      ">HCN4\n",
+      "TLPRKTSSGSLPPPL\n",
+      ">RRAD\n",
+      "AFRAKSKSCHDLSVL\n",
+      ">CPEB3\n",
+      "YGRRRGRSSLFPFED\n",
+      ">HCN4\n",
+      "DCRRFRGSLASLGSR\n",
+      ">HCN4\n",
+      "HVTLPRKTSSGSLPP\n",
+      ">RFC1\n",
+      "TKKARKDSEEGESFS\n",
+      ">CASK\n",
+      "LPAFKRKTLVLLGAH\n",
+      ">CACNA1D\n",
+      "PEIRRAISCDLQDDE\n",
+      ">GABBR2\n",
+      "EHIQRRLSLQLPILH\n",
+      ">ARHGEF7\n",
+      "EFAVRKSTAALEEDA\n",
+      ">KCNN4\n",
+      "KHTRRKDSRAARRHQ\n",
+      ">nAChRA4\n",
+      "LLFMKRPSVVKDNCR\n",
+      ">ROMK\n",
+      "RQRARLVSKEGRCNI\n",
+      ">rabphilin 3A\n",
+      "QGLRRANSVQASRPA\n",
+      ">CAMKK1\n",
+      "KSMLRKRSFGNPFEP\n",
+      ">SLC14A2\n",
+      "WSSIRRRSKVFGKSE\n",
+      ">CACNA1D\n",
+      "NGDMGPISHRQDYEL\n",
+      ">RFC1\n",
+      "GSPTKRESVSPEDSE\n",
+      ">CACNA1D\n",
+      "PPSHRRSSFNFECLR\n",
+      ">CACNA1D\n",
+      "HNHHNHNSIGKQVPT\n",
+      ">nAChRA4\n",
+      "EDGIRCRSRSIQYCV\n",
+      ">CACNA1D\n",
+      "GSAFFILSKTNPIRV\n",
+      ">NHE3\n",
+      "SLEQRRRSIRDTEDM\n",
+      ">MYBPC1 iso2\n",
+      "ERKDSEWSLGESPAG\n",
+      ">SYNE1\n",
+      "SSHERFLSFSSLESL\n",
+      ">IPO13\n",
+      "RKGLVRASLAVECGA\n",
+      ">Titin\n",
+      "TEEGKSLSFPLALEE\n",
+      ">MEKK2\n",
+      "AERKKRLSVVGPPNR\n",
+      ">CACNA1D\n",
+      "SSKQTVLSWQAAIDA\n",
+      ">CAMKK1\n",
+      "PRAWRRPTIESHHVA\n",
+      ">NOLC1\n",
+      "KKGEKRASSPFRRVR\n",
+      ">CACNA1D\n",
+      "AAHGKRPSIGDLEHV\n",
+      ">CK1D\n",
+      "MERERKVSMRLHRGA\n",
+      ">RYR2\n",
+      "ISQTSQVSIDAAHGY\n",
+      ">CACNA1D\n",
+      "GPTSQPNSSKQTVLS\n",
+      ">PDE4A\n",
+      "TTSQRRESFLYRSDS\n",
+      ">eNOS\n",
+      "SYKIRFNSVSCSDPL\n",
+      ">MEN1\n",
+      "RRGPRRESKPEEPPP\n",
+      ">PAR-4\n",
+      "LREKRRSTGVVNIPA\n",
+      ">CACNA1D\n",
+      "EMESAASTLLNGSVC\n",
+      ">CACNA1B\n",
+      "SEKQRFYSCDRFGSR\n",
+      ">ACC1 iso2\n",
+      "TSHPNRMSFASNLNH\n",
+      ">CACNA1D\n",
+      "PIRRACISIVDWKPF\n",
+      ">CASK\n",
+      "MLREMRGSITFKIVP\n",
+      ">IP3R1\n",
+      "RPSGRRESLTSFGNG\n",
+      ">NHE3\n",
+      "AEGERRGSLAFIRSP\n",
+      ">HNF4 alpha\n",
+      "DRISTRRSSYEDSSL\n",
+      ">CPEB3\n",
+      "PSPLNPISPLKKPFS\n",
+      ">HCN4\n",
+      "SGGAGGGSSLGHLHD\n",
+      ">DLC1\n",
+      "DIPERRDSGVGASLT\n",
+      ">DLC1\n",
+      "KELKRRNSSSSLSSR\n",
+      ">CPEB3\n",
+      "PLKKPFSSNVIAPPK\n",
+      ">HCN4\n",
+      "RHPRRLQSLIPSALG\n",
+      ">CPEB3\n",
+      "SSGLSSPTRCQNGER\n",
+      ">RRAD\n",
+      "APPLHRRSMPVDERD\n",
+      ">MYBPC1 iso2\n",
+      "RALERKDSEWSLGES\n",
+      ">HCN4\n",
+      "PMMRKKNSILLHKVQ\n",
+      ">KCNMA1 iso4\n",
+      "GCRRPKMSIYKRMRR\n",
+      ">HCN4\n",
+      "FHKALGGSLSSSDSP\n",
+      ">HCN4\n",
+      "RAGGGSGSSGGLGPP\n",
+      ">GRK1\n",
+      "AFIAARGSFDGSSTP\n",
+      ">MYBPC1 iso2\n",
+      "IRSAFKRSGEGQEDA\n",
+      ">SYNE1\n",
+      "TEAHRKLSEPLEVSF\n",
+      ">MYBPC3\n",
+      "RDSFRRDSKLEAPAE\n",
+      ">HCN4\n",
+      "SMRKRLYSLPQQVGA\n",
+      ">Titin\n",
+      "QELLSKETLFPSMPE\n",
+      ">MYBPC3\n",
+      "RSAFRRTSLAGAGRR\n",
+      ">KCNMA1 iso2\n",
+      "HGMLRQPSITTGVNI\n",
+      ">HCN4\n",
+      "PPRPERPSFMAGASG\n",
+      ">CAMKK1\n",
+      "RREERSMSAPGNLLL\n",
+      ">CACNA1D\n",
+      "SIGKQVPTSTNANLN\n",
+      ">CDC25B\n",
+      "FTIKRFRSLPVRLLE\n",
+      ">RIL\n",
+      "PATSRRSSVSGISLE\n",
+      ">NMDAR1\n",
+      "SFKRRRSSKDTSTGG\n",
+      ">SIK\n",
+      "GSTGRRHTLAEVSTH\n",
+      ">VASP\n",
+      "EHMERRVSNAGGPPA\n",
+      ">CDC25B\n",
+      "AFTQRPSSAPDLMCL\n",
+      ">Vimentin\n",
+      "LRPSTSRSLYSSSPG\n",
+      ">MEF2D\n",
+      "EDKYRRASEELDGLF\n",
+      ">ADCY8\n",
+      "VFPERSGSGSASGSG\n",
+      ">CDC25B\n",
+      "QRLFRSPSMPCSVIR\n",
+      ">LRRK2\n",
+      "NAQRHSNSLGPVFDH\n",
+      ">SYT12\n",
+      "GPPSRKGSLSIEDTF\n",
+      ">GluR1\n",
+      "TSTLPRNSGAGASGG\n",
+      ">MEF2D\n",
+      "QPALQRNSVSPGLPQ\n",
+      ">CACNA1D\n",
+      "ASTLLNGSVCPRANG\n",
+      ">CACNA1D\n",
+      "PTSQPNSSKQTVLSW\n",
+      ">CACNA1D\n",
+      "KRRGAAKTGPSGCRR\n",
+      ">Titin\n",
+      "ETSARGLSVQAFDSE\n",
+      ">rabphilin 3A\n",
+      "GPPTRRASEARMSTT\n",
+      ">ACC1\n",
+      "LAFHMRSSMSGLHLV\n",
+      ">CACNA1D\n",
+      "IAPIPEGSAFFILSK\n",
+      ">HIR\n",
+      "NISYRRESAI_____\n",
+      ">CACNA1D\n",
+      "EVNQIANSDNKVTID\n",
+      ">SRI\n",
+      "DSFRRRDSGQQGVVN\n",
+      ">DNCLI1\n",
+      "ASPQRRATAAQEDRD\n",
+      ">RGS18\n",
+      "PTNLRRRSRSFTCNE\n",
+      ">Ret\n",
+      "SSGARRPSLDSMENQ\n",
+      ">TXA2-R iso2\n",
+      "LSTRPRRSLTLWPSL\n",
+      ">TRPC6\n",
+      "RLAHRRQTVLREKGR\n",
+      ">SRC-3\n",
+      "PPYNRAVSLDSPVSV\n",
+      ">PDE3A\n",
+      "IPKRLRRSLPPGLLR\n",
+      ">PHOX2A\n",
+      "RKQERAASAKGAAGA\n",
+      ">desmin\n",
+      "RVSSYRRTFGGAPGF\n",
+      ">FOXO1A\n",
+      "AGQPRKSSSSRRNAW\n",
+      ">TXA2-R iso2\n",
+      "TRPRRSLTLWPSLEY\n",
+      ">TRPA1\n",
+      "AEVQKHASLKRIAMQ\n",
+      ">RASGRF1\n",
+      "KEKYRRMSLASAGFP\n",
+      ">TXA2-R\n",
+      "STRPRSLSLQPQLTQ\n",
+      ">TRPA1\n",
+      "CRQGGPGSVNNLLGF\n",
+      ">JMJD1A\n",
+      "GAVKRKSSENNGTLV\n",
+      ">RAP1A\n",
+      "KKKPKKKSCLLL___\n",
+      ">MAP2\n",
+      "NVKSKIGSTDNIKYQ\n",
+      ">TPH2\n",
+      "YWARRGFSLDSAVPE\n",
+      ">CAPN2\n",
+      "DGNWRRGSTAGGCRN\n",
+      ">CAMKK1\n",
+      "RREERSMSAPGNLLV\n",
+      ">TRPA1\n",
+      "ETMLHRASLFDHHEL\n",
+      ">DOCK1\n",
+      "HAKLLKWSEDVCVAH\n",
+      ">MAP2\n",
+      "HVTSKCGSLKNIRHR\n",
+      ">BAD\n",
+      "PFRGRSRSAPPNLWA\n",
+      ">TPI1 iso3\n",
+      "KMNGRKQSLGELIGT\n",
+      ">CA9\n",
+      "RRQHRRGTKGGVSYR\n",
+      ">KDELR1\n",
+      "VLKGKKLSLPA____\n",
+      ">PIK3CG\n",
+      "YLALRHHTNLLIILF\n",
+      ">Kv4.2\n",
+      "VSGSHQGSIQELSTI\n",
+      ">separase\n",
+      "TDNWRKMSFEILRGS\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">PDE3B\n",
+      "IRPRRRSSCVSLGET\n",
+      ">CETN2\n",
+      "LRIMKKTSLY_____\n",
+      ">Kv1.4\n",
+      "LKKFRSSTSSSLGDK\n",
+      ">PDE4A\n",
+      "ATSQRRESFLYRSDS\n",
+      ">RYR2\n",
+      "TIRGRLLSLVEKVTY\n",
+      ">LC3A\n",
+      "RPFKQRRSFADRCKE\n",
+      ">TXA2-R\n",
+      "RLSTRPRSLSLQPQL\n",
+      ">TXA2-R\n",
+      "RRLQPRLSTRPRSLS\n",
+      ">desmin\n",
+      "LRASRLGTTRTPSSY\n",
+      ">RHOA\n",
+      "ARRGKKKSGCLVL__\n",
+      ">PDE3B\n",
+      "CKIFRRPSLPCISRE\n",
+      ">FRAT1\n",
+      "RLQQRRGSQPETRTG\n",
+      ">SNAPIN\n",
+      "HVHAVRESQVELREQ\n",
+      ">CACNA1D\n",
+      "DSPIGYDSRRSPRRR\n",
+      ">RAP1GAP2\n",
+      "_MFGRKRSVSFGGFG\n",
+      ">FOXO1A\n",
+      "RAAKKKASLQSGQEG\n",
+      ">TRPA1\n",
+      "MEKITRDSSLEVLHE\n",
+      ">ataxin-1\n",
+      "ATRKRRWSAPESRKL\n",
+      ">PDE3A\n",
+      "SKSHRRTSLPCIPRE\n",
+      ">PDE3B\n",
+      "PQQPRRCSPFCRARL\n",
+      ">PDE3A\n",
+      "PGLLRRVSSTWTTTT\n",
+      ">TRPV4\n",
+      "LRRDRWSSVVPRVVE\n",
+      ">CAPN2\n",
+      "GNWRRGSTAGGCRNY\n",
+      ">DARPP-32\n",
+      "MIRRRRPTPAMLFRL\n",
+      ">FAK iso5\n",
+      "LKPDVRLSRGSIERE\n",
+      ">GJA8\n",
+      "KASSRARSDDLTV__\n",
+      ">smMLCK\n",
+      "RAIGRLSSMAMISGM\n",
+      ">Myb\n",
+      "KYGPKRWSVIAKHLK\n",
+      ">smMLCK\n",
+      "GMSGRKASGSSPTSP\n",
+      ">smMLCK\n",
+      "PPVEHRPSIWGESPP\n",
+      ">Src\n",
+      "DPSQRRRSLEPPDST\n",
+      ">GYS1\n",
+      "MPLSRTLSVSSLPGL\n",
+      ">PPP1R1A\n",
+      "LKPSLAMSPRQRKKM\n",
+      ">CACNA1C\n",
+      "KKIWKRTSMKLLDQV\n",
+      ">MAZ\n",
+      "KDRLRAHTVRHEEKV\n",
+      ">PFKP\n",
+      "VSASPRGSYRKFLEH\n",
+      ">CACNA1C\n",
+      "PEIRRAISGDLTAEE\n",
+      ">smMLCK\n",
+      "SSTGSPTSPLTAERL\n",
+      ">CACNA1S\n",
+      "PEIRRTISGDLTAEE\n",
+      ">smMLCK\n",
+      "KTPGGRLSVPPVEHR\n",
+      ">CACNB1\n",
+      "VTGTRRPTPPASGNE\n",
+      ">GJA8\n",
+      "VRSLSRLSKASSRAR\n",
+      ">MBP\n",
+      "RGAPKRGSGKDGHHA\n",
+      ">MAP2 iso3\n",
+      "KSPEKRSSLPRPSSI\n",
+      ">MBP\n",
+      "GLSLSRFSWGAEGQK\n",
+      ">H2B\n",
+      "RKRSRKESYSVYVYK\n",
+      ">MBP\n",
+      "_AAQKRPSQRSKYLA\n",
+      ">TNNI3\n",
+      "AKKKSKISASRKLQL\n",
+      ">TNNI3\n",
+      "KKSKISASRKLQLKT\n",
+      ">MBP\n",
+      "QGKGRGLSLSRFSWG\n",
+      ">GPLD1\n",
+      "NGFHKNVTAALTKNI\n",
+      ">MBP\n",
+      "FKLGGRDSRSGSPMA\n",
+      ">MBP\n",
+      "FGYGGRASDYKSAHK\n",
+      ">MBP\n",
+      "FLPRHRDTGILDSLG\n",
+      ">NIPP-1\n",
+      "TAHNKRISTLTIEEG\n",
+      ">MBP\n",
+      "QKRPSQRSKYLASAS\n",
+      ">NIPP-1\n",
+      "PKRKRKNSRVTFSED\n",
+      ">TNNI3\n",
+      "PPPVRRRSSANYRAY\n",
+      ">TNNI3\n",
+      "PPVRRRSSANYRAYA\n",
+      ">MAZ\n",
+      "ALEKKRKSKGPYICA\n",
+      ">Kv1.2\n",
+      "PDLKKSRSASTISKS\n",
+      ">ARHGEF7\n",
+      "RKPERKPSDEEFAVR\n",
+      ">PFKM\n",
+      "EHISRKRSGEATV__\n",
+      ">SUFU\n",
+      "RAPSRKDSLESDSST\n",
+      ">RYR2\n",
+      "YNRTRRISQTSQVSV\n",
+      ">ANPA\n",
+      "RHLRSAGSRLTLSGR\n",
+      ">CAMKK1\n",
+      "SLSARKLSLQERPAG\n",
+      ">desmin\n",
+      "YSSSQRVSSYRRTFG\n",
+      ">Desmoplakin\n",
+      "RSGSRRGSFDATGNS\n",
+      ">CDK9\n",
+      "APPRRKGSQITQQST\n",
+      ">Ezrin\n",
+      "LKLDKKVSAQEVRKE\n",
+      ">BAD\n",
+      "GRELRRMSDEFVDSF\n",
+      ">NDUFS4\n",
+      "WNKRTRVSTK_____\n",
+      ">QIK\n",
+      "DGRQRRPSTIAEQTV\n",
+      ">AMPKB1\n",
+      "HKTPRRDSSGGTKDG\n",
+      ">ABCC9\n",
+      "KKHTGVQSKPINRKQ\n",
+      ">MAP2\n",
+      "GAEIITQSPGRSSVA\n",
+      ">TAL1\n",
+      "NRVKRRPSPYEMEIT\n",
+      ">PLCB3\n",
+      "LDRKRHNSISEAKMR\n",
+      ">Plectin-1\n",
+      "RAGSRRGSFDATGSG\n",
+      ">AQP5\n",
+      "STDSRRTSPVGSPAL\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">eIF2-alpha\n",
+      "IEGRILLSELSR___\n",
+      ">eIF2-alpha\n",
+      "RILLSELSR______\n",
+      ">PPP2R5A\n",
+      "VDGFTRKSVRKAQRQ\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">FMR1\n",
+      "NSEASNASETESDHR\n",
+      ">eIF3-epsilon\n",
+      "PAAAPASSSDPAAAA\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">ephexin-1\n",
+      "IEQIGLLYQEYRDKS\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">FGFR3\n",
+      "ANCTHDLYMIMRECW\n",
+      ">FGFR3\n",
+      "DVHNLDYYKKTTNGR\n",
+      ">FGFR3\n",
+      "RDVHNLDYYKKTTNG\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">Nogo iso2\n",
+      "LVSSSTDSPPRPPPA\n",
+      ">DAB1 iso2\n",
+      "TPAPRQSSPSKSSAS\n",
+      ">ACF7\n",
+      "EGASQGMTPFRSRGR\n",
+      ">vinexin iso10\n",
+      "TDLGGQTSPRRTGFS\n",
+      ">MDM2\n",
+      "SSSESTETPSHQDLD\n",
+      ">CTNNB1\n",
+      "GATTTAPSLSGKGNP\n",
+      ">CTNNB1\n",
+      "GIHSGATTTAPSLSG\n",
+      ">Kv-beta2\n",
+      "YPESTTGSPARLSLR\n",
+      ">GR\n",
+      "PSKDTNESPWRSDLL\n",
+      ">MAP2 iso2\n",
+      "ETVNLPPSPPPSPAS\n",
+      ">CTNNB1\n",
+      "QQQSYLDSGIHSGAT\n",
+      ">GR\n",
+      "DLEFSAGSPSKDTNE\n",
+      ">C/EBP-beta\n",
+      "HERAIDFSPYLEPLA\n",
+      ">CTNNB1\n",
+      "YLDSGIHSGATTTAP\n",
+      ">C/EBP-beta\n",
+      "SSSSPPGTPSPADAK\n",
+      ">SOX2\n",
+      "VKSEASSSPPVVTSS\n",
+      ">MCM3\n",
+      "SSDTARTSPVTARTL\n",
+      ">SOX2\n",
+      "TGGNQKNSPDRVKRP\n",
+      ">ATRIP\n",
+      "APSVSHVSPRKNPSV\n",
+      ">AKIRIN2\n",
+      "DPLLSPASPKRRRCA\n",
+      ">TK\n",
+      "LPTVLPGSPSKTRGQ\n",
+      ">DENR\n",
+      "AKLTVENSPKQEAGI\n",
+      ">CDC6\n",
+      "TPHLPPCSPPKQGKK\n",
+      ">C1orf198\n",
+      "FTYFSSLSPMARKIM\n",
+      ">Trap150\n",
+      "EEWDPEYTPKSKKYY\n",
+      ">RbBP1\n",
+      "QHNFSVASPLTLSQD\n",
+      ">SUV39H1\n",
+      "GLAGLPGSPKKRVRI\n",
+      ">CCDC6\n",
+      "QPVSAPPSPRDISME\n",
+      ">NOB1P\n",
+      "SSIQHPETPLHISGF\n",
+      ">RbBP1\n",
+      "RKILGQSSPEKKIRI\n",
+      ">MCM3\n",
+      "EEMPQVHTPKTADSQ\n",
+      ">BTG1\n",
+      "ELLLGRTSPSKNYNM\n",
+      ">SNAPIN\n",
+      "SGIYPPGSPGK____\n",
+      ">EEF2\n",
+      "RIMGPNYTPGKKEDL\n",
+      ">RbBP1\n",
+      "LDNSSKCTPVKHLNV\n",
+      ">FOXO1A\n",
+      "QFSKWPASPGSHSND\n",
+      ">EEF2\n",
+      "NVLCLSKSPNKHNRL\n",
+      ">RbBP1\n",
+      "KPQKLARSPARISPH\n",
+      ">WRN\n",
+      "KKSIMVQSPEKAYSS\n",
+      ">TORC2\n",
+      "HHRRVPLSPLSLLAG\n",
+      ">AARSL\n",
+      "VTTQTPLTPEQLRAV\n",
+      ">DENR\n",
+      "PNEFAKLTVENSPKQ\n",
+      ">RALY\n",
+      "FDYRGRLSPVPVPRA\n",
+      ">SPT6\n",
+      "QDPVPGITPSSSSRT\n",
+      ">CDC25C\n",
+      "SRSGLYRSPSMPENL\n",
+      ">NUP133\n",
+      "VSSPVLFSPVGRRSS\n",
+      ">TERF2IP\n",
+      "LLGDAPVSPSSQKLK\n",
+      ">CDX2\n",
+      "RSVPEPLSPVSSLQA\n",
+      ">TSR1\n",
+      "MFPDEVDTPRDVAAR\n",
+      ">KI-67\n",
+      "QYSQQQNSPQKHKNK\n",
+      ">APC\n",
+      "EFSSGAKSPSKSGAQ\n",
+      ">CTTNBP2NL\n",
+      "SSPLSPLSPGIKSPT\n",
+      ">Ebp1\n",
+      "IANRVLRSLVEASSS\n",
+      ">WRN\n",
+      "YKSTEHLSPNDNEND\n",
+      ">ALDH5A1\n",
+      "VYGDIIHTPAKDRRA\n",
+      ">TANC1\n",
+      "SSQNPPPSPMPGRIA\n",
+      ">AKIRIN2\n",
+      "LDFDPLLSPASPKRR\n",
+      ">TUBG2\n",
+      "VIHSILNSPYAKLYN\n",
+      ">GRK2\n",
+      "KMKNKPRSPVVELSK\n",
+      ">BLM\n",
+      "SFVTPPQSHFVRVST\n",
+      ">CDK9\n",
+      "EICRTKASPYNRCKG\n",
+      ">FOXO1A\n",
+      "EGGKSGKSPRRRAAS\n",
+      ">CDC6\n",
+      "DNQLTIKSPSKRELA\n",
+      ">ZNF609\n",
+      "FTVNPALTPAKDKKK\n",
+      ">HuR\n",
+      "LLSQLYHSPARRFGG\n",
+      ">RbBP1\n",
+      "ARSPARISPHIKDGE\n",
+      ">CDC6\n",
+      "RVKALPLSPRKRLGD\n",
+      ">NUCKS\n",
+      "LKATVTPSPVKGKGK\n",
+      ">ADRA1D\n",
+      "QLRAKVSSLSHKIRA\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">ADRA1D\n",
+      "RAKVSSLSHKIRAGG\n",
+      ">CXCR4\n",
+      "SVSTESESSSFHSS_\n",
+      ">CLTB\n",
+      "LCDFNPKSSKQCKDV\n",
+      ">TXA2-R iso2\n",
+      "RLPGSSDSRASASRA\n",
+      ">TXA2-R iso2\n",
+      "AQQRPRDSEVEMMAQ\n",
+      ">ADRA1D\n",
+      "KRERGKASEVVLRIH\n",
+      ">ADRA1D\n",
+      "DGAHGMRSAKGHTFR\n",
+      ">NPFFR2\n",
+      "LKETTNSSEI_____\n",
+      ">NPFFR2\n",
+      "ELKETTNSSEI____\n",
+      ">NPFFR2\n",
+      "MEELKETTNSSEI__\n",
+      ">NPFFR2\n",
+      "VMEELKETTNSSEI_\n",
+      ">CXCR4\n",
+      "VSTESESSSFHSS__\n",
+      ">TRHR\n",
+      "IKESDRFSTELDDIT\n",
+      ">ADRA1D\n",
+      "KGHTFRSSLSVRLLK\n",
+      ">TRHR\n",
+      "KESDRFSTELDDITV\n",
+      ">MOR-1\n",
+      "QNTREHPSTANTVDR\n",
+      ">TRHR\n",
+      "YSVALNYSVIKESDR\n",
+      ">TRHR\n",
+      "NYSVIKESDRFSTEL\n",
+      ">ADRA1D\n",
+      "HTFRSSLSVRLLKFS\n",
+      ">RRas\n",
+      "QEQELPPSPPSAPRK\n",
+      ">MZF-1\n",
+      "SLSGQIQSPTTEGGF\n",
+      ">GAB2\n",
+      "QSVYIPMSPGPHHFD\n",
+      ">GAB2\n",
+      "PVPSGTNSPAPKKST\n",
+      ">DLC1\n",
+      "KQDPIPGSPDNSRLQ\n",
+      ">MZF-1\n",
+      "EEVGGIFSPGFTLQM\n",
+      ">GAB2\n",
+      "ALDFQPGSPSPHRKP\n",
+      ">PPAR-gamma\n",
+      "PHEEPSNSLMAIECR\n",
+      ">MZF-1\n",
+      "TAEPDMMSPHLHVPW\n",
+      ">GAB2\n",
+      "SASSDDNYVPMNPGS\n",
+      ">STAT1\n",
+      "TDNLLPMSPEEFDEM\n",
+      ">GAB2\n",
+      "DFQPGSPSPHRKPST\n",
+      ">TOB1\n",
+      "FGHSAAVSPTFMPRS\n",
+      ">REST\n",
+      "TEDLSPPSPPLPKEN\n",
+      ">TAL1\n",
+      "DGRMVQLSPPALAAP\n",
+      ">REST\n",
+      "SVSTEDLSPPSPPLP\n",
+      ">TOB1\n",
+      "SSVSSSPSPPFGHSA\n",
+      ">CIITA\n",
+      "TVHGLPTSPDRPGST\n",
+      ">palladin\n",
+      "PPPPPVFSPTAAFPV\n",
+      ">RSHL2\n",
+      "AFLDRPPTPLFIPAK\n",
+      ">palladin\n",
+      "APRSAPPSPPFPPPP\n",
+      ">ELK1\n",
+      "LSPIAPRSPAKLSFQ\n",
+      ">LYL1\n",
+      "APPPKPASPGPPQVE\n",
+      ">CIITA\n",
+      "PDRPGSTSPFAPSAT\n",
+      ">ELK1\n",
+      "IHFWSTLSPIAPRSP\n",
+      ">GLRA1\n",
+      "PPPAPSKSPEEMRKL\n",
+      ">RAB5A\n",
+      "KELQRQASPNIVIAL\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">CAPN2\n",
+      "GTLFQDPSFPAIPSA\n",
+      ">TOB1\n",
+      "PASSVSSSPSPPFGH\n",
+      ">CACNB1\n",
+      "IVYIKITSPKVLQRL\n",
+      ">NSMF\n",
+      "AKLVPGPSPRAFGLE\n",
+      ">p90RSK\n",
+      "DTEFTSRTPRDSPGI\n",
+      ">GRASP65\n",
+      "EQLPGPGSPGHGTAD\n",
+      ">Kv4.2\n",
+      "IPTPPVTTPEGDDRP\n",
+      ">p90RSK\n",
+      "AENGLLMTPCYTANF\n",
+      ">JunD\n",
+      "LGLLKLASPELERLI\n",
+      ">ARRB2\n",
+      "KVQFAPETPGPQPSA\n",
+      ">Kv4.2\n",
+      "TAIISIPTPPVTTPE\n",
+      ">smMLCK\n",
+      "ASGSSPTSPINADKV\n",
+      ">DNMT3A\n",
+      "QQPTDPASPNVATTP\n",
+      ">IRX2\n",
+      "AALGGRASPGPPTPA\n",
+      ">CACNA1B\n",
+      "DRNAEEKSPLDAVLK\n",
+      ">CACNA1B\n",
+      "TGLCAPGSPFARASL\n",
+      ">MFN1\n",
+      "VPRSLASTPTAPSNP\n",
+      ">NG2\n",
+      "ELLQFCRTPNPALRN\n",
+      ">CACNB1\n",
+      "CEVGFIPSPVKLDSL\n",
+      ">PXN\n",
+      "KQKSAEPSPTVMSSS\n",
+      ">DUSP5\n",
+      "TVSELSRSPVATATS\n",
+      ">MAZ\n",
+      "AAPAPPPTPQAPAAE\n",
+      ">p90RSK\n",
+      "TSRTPRDSPGIPPSA\n",
+      ">Kv4.2\n",
+      "EGDDRPESPEYSGGN\n",
+      ">4E-BP1\n",
+      "FLMECRNSPVTKTPP\n",
+      ">IRS1\n",
+      "DDGYMPMSPGVAPVP\n",
+      ">iNOS\n",
+      "KSRQNLQSPTSSRAT\n",
+      ">RHOA\n",
+      "ENIPEKWTPEVKHFC\n",
+      ">N-Myc\n",
+      "LLPTPPLSPSRGFAE\n",
+      ">DUSP5\n",
+      "ESEILPSTPNPQPPS\n",
+      ">RHOA\n",
+      "LMCFSIDSPDSLENI\n",
+      ">CdGAP\n",
+      "TPAPPPPTPLEEEPE\n",
+      ">DEPTOR\n",
+      "MELLNEKSPSSQETH\n",
+      ">SULT4A1\n",
+      "SEAETPSTPGEFESK\n",
+      ">CAPN2\n",
+      "GALFQDPSFPALPSS\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">CdGAP\n",
+      "RNLSPPLTPAPPPPT\n",
+      ">GAB1\n",
+      "ELQAPVRSPITRSFA\n",
+      ">STF-1\n",
+      "EYPEPYASPPQQPGP\n",
+      ">Securin\n",
+      "LLHLGPPSPLKTPFL\n",
+      ">DUSP5\n",
+      "IGHLQTLSPDMQGAY\n",
+      ">TR-beta1\n",
+      "IQKNLHPSYSCKYEG\n",
+      ">PIP5K1C\n",
+      "DERSWVYSPLHYSAQ\n",
+      ">SHARPIN\n",
+      "PEADLPRSPGNLTER\n",
+      ">BVR\n",
+      "LKRNRYLSFHFKSGS\n",
+      ">WSTF\n",
+      "KSDGACDSPSSDKEN\n",
+      ">Trap170\n",
+      "NEDDNPPSPIGGDMM\n",
+      ">CDC25C\n",
+      "SGLYRSPSMPENLNR\n",
+      ">PSD-95\n",
+      "TDYPTAMTPTSPRRY\n",
+      ">CACNB1\n",
+      "IVYIKITSPKVLQRL\n",
+      ">p90RSK\n",
+      "DTEFTSRTPRDSPGI\n",
+      ">SHC4\n",
+      "GHRATALTPDSCPLP\n",
+      ">DUSP5\n",
+      "ESEILPSTPNPQPPS\n",
+      ">NG2\n",
+      "ELLQFCRTPNPALRN\n",
+      ">CACNA1B\n",
+      "DRNAEEKSPLDAVLK\n",
+      ">CACNA1B\n",
+      "TGLCAPGSPFARASL\n",
+      ">smMLCK\n",
+      "SSTGSPTSPLTAERL\n",
+      ">Kv4.2\n",
+      "EGDDRPESPEYSGGN\n",
+      ">p90RSK\n",
+      "TSRTPRDSPGIPPSA\n",
+      ">CAPN2\n",
+      "GTLFQDPSFPAIPSA\n",
+      ">PRDX6\n",
+      "TAEKRVATPVDWKDG\n",
+      ">DDHD1\n",
+      "TIPSPVTSPVLSRRH\n",
+      ">MBP\n",
+      "HFFKNIVTPRTPPPS\n",
+      ">eNOS\n",
+      "DHSPAPNSPTLTRPP\n",
+      ">eNOS\n",
+      "SRAPAPATPHAPDHS\n",
+      ">DNMT3A\n",
+      "QQPTDPASPNVATTP\n",
+      ">smMLCK\n",
+      "ASGSSPTSPINADKV\n",
+      ">eNOS\n",
+      "RKLQTRPSPGPPPAE\n",
+      ">N-Myc\n",
+      "LLPTPPLSPSRGFAE\n",
+      ">SHARPIN\n",
+      "PEADLPRSPGNLTER\n",
+      ">PSD-95\n",
+      "PTAMTPTSPRRYSPV\n",
+      ">CACNB1\n",
+      "CEVGFIPSPVKLDSL\n",
+      ">PRDX6\n",
+      "TASNPVATPVDWKKG\n",
+      ">PXN\n",
+      "KQKSAEPSPTVMSSS\n",
+      ">RIMS1\n",
+      "ISVISPTSPGALKDA\n",
+      ">DCC\n",
+      "QYPGILPSPTCGYPH\n",
+      ">DCC\n",
+      "IQSCQDLTPVSHSQS\n",
+      ">GRASP65\n",
+      "EQLPGPGSPGHGTAD\n",
+      ">DCC\n",
+      "TDPAGRGSPIQSCQD\n",
+      ">RIMS1\n",
+      "ARVSPPESPRARAAA\n",
+      ">PIAS1\n",
+      "LSLPHQASPVSRTPS\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">PLA2G4A\n",
+      "LNTSYPLSPLSDFAT\n",
+      ">AML3 iso5\n",
+      "SYLSQMTSPSIHSTT\n",
+      ">PPAR-gamma\n",
+      "TGKTTDKSPFVIYDM\n",
+      ">smMLCK\n",
+      "GLSGRKSSTGSPTSP\n",
+      ">CIITA\n",
+      "PDRPGSTSPFAPSAT\n",
+      ">JMJD2B\n",
+      "AKRPRVGTPLATEDS\n",
+      ">JMJD2B\n",
+      "TRPTALTSPELSSWS\n",
+      ">JMJD2B\n",
+      "PTWKEPVSPMELTGP\n",
+      ">CIITA\n",
+      "TVHGLPTSPDRPGST\n",
+      ">JMJD2B\n",
+      "IDYGKVATQCTCRKD\n",
+      ">JMJD2B\n",
+      "LGRPPTRSPLSVVKQ\n",
+      ">53BP2\n",
+      "NSDMPAPSPGLDYEP\n",
+      ">ELK1\n",
+      "ISVDGLSTPVVLSPG\n",
+      ">ELK1\n",
+      "GGQGPERTPGSGTSS\n",
+      ">ELK1\n",
+      "QAPGPALTPSLLPTH\n",
+      ">ELK1\n",
+      "LSPIAPRSPAKLSFQ\n",
+      ">TR-beta1\n",
+      "IQKNLHPSYSCKYEG\n",
+      ">STF-1\n",
+      "EYPEPYASPPQQPGP\n",
+      ">ELK1\n",
+      "TLTPVLLTPSSLPPS\n",
+      ">ELK1\n",
+      "LLPTHTLTPVLLTPS\n",
+      ">Securin\n",
+      "LLHLGPPSPLKTPFL\n",
+      ">ELK1\n",
+      "LSTPVVLSPGPQKP_\n",
+      ">ADRB3\n",
+      "GRFSPEESPPSPSRS\n",
+      ">amphiphysin\n",
+      "PAPVRPRSPSQTRKG\n",
+      ">MAPKAPK2\n",
+      "TSHNSLTTPCYTPYY\n",
+      ">separase\n",
+      "IAPSTNSSPVLKTKP\n",
+      ">REST\n",
+      "TEDLSPPSPPLPKEN\n",
+      ">MAPKAPK2\n",
+      "LSNSQGQSPPVPFPA\n",
+      ">CEP55\n",
+      "NREKVAASPKSPTAA\n",
+      ">GLRA1\n",
+      "PPPAPSKSPEEMRKL\n",
+      ">IRS1\n",
+      "YMPMSPKSVSAPQQI\n",
+      ">4E-BP1\n",
+      "PPGDYSTTPGGTLFS\n",
+      ">BMF\n",
+      "DKATQTLSPASPSQG\n",
+      ">CCNB1\n",
+      "LVDTASPSPMETSGC\n",
+      ">MAPKAPK2\n",
+      "APPPQPPTPALPHPP\n",
+      ">CEP55\n",
+      "KVAASPKSPTAALNE\n",
+      ">TOB1\n",
+      "FGHSAAVSPTFMPRS\n",
+      ">ELK1\n",
+      "IHFWSTLSPIAPRSP\n",
+      ">MAPKAPK2\n",
+      "QSTKVPQTPLHTSRV\n",
+      ">4E-BP1\n",
+      "RNSPVTKTPPRDLPT\n",
+      ">4E-BP1\n",
+      "GGTLFSTTPGGTRII\n",
+      ">DUSP5\n",
+      "IGHLQTLSPDMQGAY\n",
+      ">TOB1\n",
+      "SSVSSSPSPPFGHSA\n",
+      ">LYL1\n",
+      "APPPKPASPGPPQVE\n",
+      ">REST\n",
+      "SVSTEDLSPPSPPLP\n",
+      ">CCNB1\n",
+      "PILVDTASPSPMETS\n",
+      ">IRS1\n",
+      "SGDYMPMSPKSVSAP\n",
+      ">4E-BP1\n",
+      "FLMECRNSPVTKTPP\n",
+      ">DUSP5\n",
+      "TVSELSRSPVATATS\n",
+      ">RORC\n",
+      "ASCHLEYSPERGKAE\n",
+      ">BMF\n",
+      "TQTLSPASPSQGVML\n",
+      ">TOB1\n",
+      "PASSVSSSPSPPFGH\n",
+      ">MAPKAPK2\n",
+      "SNHGLAISPGMKTRI\n",
+      ">Trap170\n",
+      "NEDDNPPSPIGGDMM\n",
+      ">RGS19\n",
+      "EDYVSILSPKEVSLD\n",
+      ">PIMT\n",
+      "DLVSFPSSPIMVDND\n",
+      ">NFL\n",
+      "YKRRYVETPRVHISS\n",
+      ">TORC2\n",
+      "DAKKLSSSSSRPRSC\n",
+      ">Yes\n",
+      "RLIEDNEYTARQGAK\n",
+      ">EphA2\n",
+      "KYLANMNYVHRDLAA\n",
+      ">EphA2\n",
+      "QLKPLKTYVDPHTYE\n",
+      ">EphA2\n",
+      "ESIKMQQYTEHFMAA\n",
+      ">EphA2\n",
+      "GHQKRIAYSLLGLKD\n",
+      ">EphA2\n",
+      "RQSPEDVYFSKSEQL\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">EphA2\n",
+      "EDDPEATYTTSGGKI\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">RRas\n",
+      "DPTIEDSYTKICSVD\n",
+      ">syndecan-2\n",
+      "RKPSSAAYQKAPTKE\n",
+      ">syndecan-2\n",
+      "RKKDEGSYDLGERKP\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">DRD1\n",
+      "SVILDYDTDVSLEKI\n",
+      ">GRK4\n",
+      "LENIVANSLLLKARQ\n",
+      ">DRD1\n",
+      "LDYDTDVSLEKIQPV\n",
+      ">GRK4\n",
+      "VLDIEQFSVVKGIYL\n",
+      ">GRK4\n",
+      "MLLTKNPSKRLGCRG\n",
+      ">GRK4\n",
+      "SLAYAYETKDALCLV\n",
+      ">GRK4\n",
+      "KFSEDAKSICRMLLT\n",
+      ">GRK4\n",
+      "VQSRFVVSLAYAYET\n",
+      ">GRK4\n",
+      "RILEKVQSRFVVSLA\n",
+      ">GRK4\n",
+      "SICRMLLTKNPSKRL\n",
+      ">GRK4\n",
+      "GLKEENPSKKAFEEC\n",
+      ">ARHGEF17\n",
+      "DEGSQDQTGSLSRAR\n",
+      ">BLM\n",
+      "TSPAEDSSPGISLSS\n",
+      ">ARHGEF17\n",
+      "APSLEDVTKQYMLNL\n",
+      ">BLM\n",
+      "KKLEFSSSPDSLSTI\n",
+      ">BLM\n",
+      "QKYSEWTSPAEDSSP\n",
+      ">ARHGEF17\n",
+      "AATSEEPTGFSVDSN\n",
+      ">GRK5\n",
+      "VLDIEQFSTVKGVNL\n",
+      ">GRK5\n",
+      "LDIEQFSTVKGVNLD\n",
+      ">GRK5\n",
+      "LENIVANTVLLKARE\n",
+      ">CXCR4\n",
+      "VSTESESSSFHSS__\n",
+      ">CXCR4\n",
+      "SVSTESESSSFHSS_\n",
+      ">SSTR2\n",
+      "GTDDGERSDSKQDKS\n",
+      ">TXA2-R iso2\n",
+      "RLPGSSDSRASASRA\n",
+      ">TXA2-R iso2\n",
+      "AQQRPRDSEVEMMAQ\n",
+      ">SSTR2\n",
+      "DDGERSDSKQDKSRL\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">VEGFR2\n",
+      "FGLARDIYKDPDYVR\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">VEGFR2\n",
+      "RFRQGKDYVGAIPVD\n",
+      ">VEGFR2\n",
+      "EEAPEDLYKDFLTLE\n",
+      ">VEGFR2\n",
+      "DIYKDPDYVRKGDAR\n",
+      ">VEGFR2\n",
+      "AQQDGKDYIVLPISE\n",
+      ">EphB6\n",
+      "YTDRLQQYISTRGLG\n",
+      ">EphB6\n",
+      "SKRRETPYTDRLQQY\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">FLT3\n",
+      "ADAEEAMYQNVDGRV\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">FLT3\n",
+      "DIMSDSNYVVRGNAR\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">FLT3\n",
+      "VDFREYEYDLKWEFP\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">TTRAP\n",
+      "PKTYVDLTNEETTDS\n",
+      ">TTRAP\n",
+      "VDLTNEETTDSTTSK\n",
+      ">ENG\n",
+      "HSIGSTQSTPCSTSS\n",
+      ">ENG\n",
+      "STNHSIGSTQSTPCS\n",
+      ">ENG\n",
+      "STNHSIGSTQSTPCS\n",
+      ">ENG\n",
+      "ASSESSSTNHSIGST\n",
+      ">ENG\n",
+      "TQSTPCSTSSMA___\n",
+      ">ENG\n",
+      "HSIGSTQSTPCSTSS\n",
+      ">TGFBR1\n",
+      "KDLIYDMTTSGSGSG\n",
+      ">TGFBR1\n",
+      "LIYDMTTSGSGSGLP\n",
+      ">TGFBR1\n",
+      "DLIYDMTTSGSGSGL\n",
+      ">TGFBR1\n",
+      "LPLLVQRTIARTIVL\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">TGFBR2\n",
+      "LRLDPTLSVDDLANS\n",
+      ">ENG\n",
+      "AVAAPASSESSSTNH\n",
+      ">TGFBR2\n",
+      "SVDDLANSGQVGTAR\n",
+      ">TGFBR1\n",
+      "MTTSGSGSGLPLLVQ\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">ENG\n",
+      "VAVAAPASSESSSTN\n",
+      ">TGFBR2\n",
+      "TRKLMEFSEHCAIIL\n",
+      ">TGFBR1\n",
+      "YDMTTSGSGSGLPLL\n",
+      ">TGFBR2\n",
+      "GQVGTARYMAPEVLE\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">P2X3\n",
+      "QSTDSGAYSIGH___\n",
+      ">Cot\n",
+      "LTYRNIGSGFVPRGA\n",
+      ">Cot\n",
+      "EVLRRQRSLYIDLGA\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">4E-BP1\n",
+      "RNSPVTKTPPRDLPT\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">TXK\n",
+      "KIQVKALYDFLPREP\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">Arg\n",
+      "RLMTGDTYTAHAGAK\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">IkB-beta\n",
+      "PRDASDTYLTQSQDH\n",
+      ">Fos\n",
+      "GGLPEASTPESEEAF\n",
+      ">NHERF\n",
+      "PALARSASSDTSEEL\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">DUSP3\n",
+      "SPTLVIAYLMMRQKM\n",
+      ">PLCG1\n",
+      "EGRNPGFYVEANPMP\n",
+      ">PLCG1\n",
+      "EGSFEARYQQPFEDF\n",
+      ">FCGR2C\n",
+      "TDDDKNIYLTLPPND\n",
+      ">DEPTOR\n",
+      "SSCGSSGYFSSSPTL\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">DUSP3\n",
+      "SPTLVIAYLMMRQKM\n",
+      ">FCGR2C\n",
+      "PEETNNDYETADGGY\n",
+      ">SLC4A1\n",
+      "MEELQDDYEDMMEEN\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">LAX1\n",
+      "SSQISNDYVNMTGLD\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">LAX1\n",
+      "AFQCCRDYENVPAAD\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">RIP140\n",
+      "SSGDESSYSNCVPID\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">RIP140\n",
+      "TPTTIDEYSDNNPSF\n",
+      ">RIP140\n",
+      "SSPKNTSYKNSLERN\n",
+      ">SRC-3\n",
+      "NRAVSLDSPVSVGSS\n",
+      ">DRPLA\n",
+      "EEYETPESPVPPARS\n",
+      ">PSD-95\n",
+      "PTSPRRYSPVAKDLL\n",
+      ">SRC-3\n",
+      "SLLSTLSSPGPKLDN\n",
+      ">SRC-3\n",
+      "KRKLPCDTPGQGLTC\n",
+      ">GAP43\n",
+      "VTDAAATTPAAEDAA\n",
+      ">CDC25C\n",
+      "SEMKYLGSPITTVPK\n",
+      ">LMO7 iso3\n",
+      "LAGSVKTSPGSPSPR\n",
+      ">LMO7 iso3\n",
+      "SPSPRSHSPSMSQSG\n",
+      ">STMN1\n",
+      "SVPEFPLSPPKKKDL\n",
+      ">LMO7 iso3\n",
+      "SVKTSPGSPSPRSHS\n",
+      ">GR\n",
+      "LIDENLLSPLAGEDD\n",
+      ">LMO7 iso3\n",
+      "KTSPGSPSPRSHSPS\n",
+      ">BIM\n",
+      "GDRCPHGSPQGPLAP\n",
+      ">MAP2 iso3\n",
+      "YSSRTPGTPGTPSYP\n",
+      ">MAP2\n",
+      "PPSYSSRTPGTPGTP\n",
+      ">MAP2 iso3\n",
+      "RTPGTPGTPSYPRTP\n",
+      ">LMO7 iso3\n",
+      "SLREVSRSPDQFSDM\n",
+      ">NLRP3\n",
+      "GKTKTCESPVSPIKM\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">HuR\n",
+      "QAQRFRFSPMGVDHM\n",
+      ">SMAD2\n",
+      "ELSPTTLSPVNHSLD\n",
+      ">SMAD2\n",
+      "NQSMDTGSPAELSPT\n",
+      ">DGCR8\n",
+      "AECGLLLSPVSGDVH\n",
+      ">JIP1\n",
+      "PLKTGEQTPPHEHIC\n",
+      ">JIP1\n",
+      "LIDATGDTPGAEDDE\n",
+      ">SRC-3\n",
+      "SPVSVGSSPPVKNIS\n",
+      ">BMF\n",
+      "DKATQTLSPASPSQG\n",
+      ">PPM1J\n",
+      "HAGRAVQSPPDTGRR\n",
+      ">SRC-3\n",
+      "SPVAGVHSPMASSGN\n",
+      ">STAT1\n",
+      "TDNLLPMSPEEFDEM\n",
+      ">GAP43\n",
+      "TDAAPATSPKAEEPS\n",
+      ">PPM1J\n",
+      "CLPSTPGTPGAPSPS\n",
+      ">PPM1J\n",
+      "PPLCLPSTPGTPGAP\n",
+      ">SH3BP5\n",
+      "PGSLDLPSPVSLSEF\n",
+      ">TOB1\n",
+      "FGHSAAVSPTFMPRS\n",
+      ">JIP1\n",
+      "LIDATGDTPGAEDDE\n",
+      ">TOB1\n",
+      "SSVSSSPSPPFGHSA\n",
+      ">GR\n",
+      "LIDENLLSPLAGEDD\n",
+      ">TOB1\n",
+      "PASSVSSSPSPPFGH\n",
+      ">WSTF\n",
+      "KSDGACDSPSSDKEN\n",
+      ">GRASP65\n",
+      "EQLPGPGSPGHGTAD\n",
+      ">CDC25C\n",
+      "SEMKYLGSPITTVPK\n",
+      ">MKK4\n",
+      "ISGQLVDSIAKTRDA\n",
+      ">JNK1 iso3\n",
+      "GVIRGQPSPLAQVQQ\n",
+      ">JNK1 iso3\n",
+      "GGVLFPGTDHIDQWN\n",
+      ">MKK4\n",
+      "LVDSIAKTRDAGCRP\n",
+      ">JNK1\n",
+      "AGTSFMMTPYVVTRY\n",
+      ">JNK1 iso3\n",
+      "DVLFPADSEHNKLKA\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">TIAM1\n",
+      "DVNAGEGSEFADSGI\n",
+      ">YB-1\n",
+      "EKNEGSESAPEGQAQ\n",
+      ">NFM\n",
+      "EEEEAAKSDAAEEGG\n",
+      ">NFM\n",
+      "TKVEDEKSEMEDALS\n",
+      ">galectin-3\n",
+      "MSDGFSLSDALPAHN\n",
+      ">FAK iso5\n",
+      "DVRLSRGSIEREDGG\n",
+      ">galectin-3\n",
+      "__MSDGFSLSDALPA\n",
+      ">NFM\n",
+      "AVEEEAVSEKAAEQA\n",
+      ">NFM\n",
+      "SEMEDALSAIAEEMA\n",
+      ">GYS1\n",
+      "MPLSRTLSVSSLPGL\n",
+      ">GYS1\n",
+      "SRTLSVSSLPGLEDW\n",
+      ">ZRANB1\n",
+      "RAQRPSGTIITEDPF\n",
+      ">DEPTOR\n",
+      "SSMSSCGSSGYFSSS\n",
+      ">FOXO1A\n",
+      "SSNASTISGRLSPIM\n",
+      ">CBX4\n",
+      "ARSISTPTCLGGSPA\n",
+      ">DEPTOR\n",
+      "KLMSPENTLLQPREE\n",
+      ">ZRANB1\n",
+      "RWRGSCSSGNSQRRS\n",
+      ">APC\n",
+      "PDGFSCSSSLSALSL\n",
+      ">SLC4A1\n",
+      "IDAYMAQSRGELLHS\n",
+      ">APC\n",
+      "SSSLSALSLDEPFIQ\n",
+      ">PAX3-FOXO1\n",
+      "PRTSSNASTISGRLS\n",
+      ">FMR1\n",
+      "NSEASNASETESDHR\n",
+      ">SLC4A1\n",
+      "AAHDTEATATDYHTT\n",
+      ">STX1A\n",
+      "SDDDDDVTVTVDRDR\n",
+      ">SLC18A2\n",
+      "PIGDDEESESD____\n",
+      ">SLC18A2\n",
+      "GDDEESESD______\n",
+      ">APC\n",
+      "DGFSCSSSLSALSLD\n",
+      ">CDK5\n",
+      "GIPVRCYSAEVVTLW\n",
+      ">DEPTOR\n",
+      "CGSSGYFSSSPTLSS\n",
+      ">APC\n",
+      "FSCSSSLSALSLDEP\n",
+      ">VHL\n",
+      "SVNSREPSQVIFCNR\n",
+      ">DEPTOR\n",
+      "RKSTSFMSVSPSKEI\n",
+      ">DEPTOR\n",
+      "SMSSCGSSGYFSSSP\n",
+      ">MDM2\n",
+      "DSVSDQFSVEFEVES\n",
+      ">MDM2\n",
+      "CLDQDSVSDQFSVEF\n",
+      ">MDM2\n",
+      "GDCLDQDSVSDQFSV\n",
+      ">APC\n",
+      "SSSLSALSLDEPFIQ\n",
+      ">DCK\n",
+      "EFEELTMSQKNGGNV\n",
+      ">MBP\n",
+      "QGKGRGLSLSRFSWG\n",
+      ">APC\n",
+      "DGFSCSSSLSALSLD\n",
+      ">APC\n",
+      "FSCSSSLSALSLDEP\n",
+      ">SRC-3\n",
+      "SDKESKESSVEGAEN\n",
+      ">APC\n",
+      "PDGFSCSSSLSALSL\n",
+      ">FMR1\n",
+      "NSEASNASETESDHR\n",
+      ">DCK\n",
+      "PPKRSCPSFSASSEG\n",
+      ">DCK\n",
+      "QDEFEELTMSQKNGG\n",
+      ">PPP5C\n",
+      "LFSEDGVTLDDIRKI\n",
+      ">DCK\n",
+      "SCPSFSASSEGTRIK\n",
+      ">SMAD2\n",
+      "TGSPAELSPTTLSPV\n",
+      ">SMAD2\n",
+      "ELSPTTLSPVNHSLD\n",
+      ">CEP131\n",
+      "NNLRRSNSTTQVSQP\n",
+      ">AYTL1\n",
+      "PMVPRQASFFPPPVP\n",
+      ">RBM7\n",
+      "QMVQRSFSSPEDYQR\n",
+      ">p47phox\n",
+      "QDTYRRNSVRFLQQR\n",
+      ">LIMK1\n",
+      "KDLGRSESLRVVCRP\n",
+      ">CDC25C\n",
+      "SGLYRSPSMPENLNR\n",
+      ">EEF2K\n",
+      "PPLLRPLSENSGDEN\n",
+      ">RBM7\n",
+      "QIIQRSFSSPENFQR\n",
+      ">MAPKAPK2\n",
+      "VPQTPLHTSRVLKED\n",
+      ">K18\n",
+      "ISVSRSTSFRGGMGS\n",
+      ">RBM7\n",
+      "QRKVRMNSYPYLADR\n",
+      ">CEP131\n",
+      "KPIVRSVSVVTGSEQ\n",
+      ">PDE4A\n",
+      "SFLYRSDSDYDMSPK\n",
+      ">TAB3\n",
+      "HKYQRSSSSGSDDYA\n",
+      ">STAT1\n",
+      "TDNLLPMSPEEFDEM\n",
+      ">FMR1\n",
+      "NSEASNASETESDHR\n",
+      ">APC\n",
+      "SRCTSVSSLDSFESR\n",
+      ">4E-BP1\n",
+      "FSTTPGGTRIIYDRK\n",
+      ">APC\n",
+      "SRCSSLSSLSSAEDE\n",
+      ">4E-BP1\n",
+      "YSTTPGGTLFSTTPG\n",
+      ">SRC-3\n",
+      "VQKADVSSTGQGVID\n",
+      ">CK1D\n",
+      "MERERKVSMRLHRGA\n",
+      ">PPP2R5B\n",
+      "PDKVDGFSRRSLRRA\n",
+      ">PPP2R5B\n",
+      "PRRSHSSSQFRYQSN\n",
+      ">PPP2R5B\n",
+      "ARPRRSHSSSQFRYQ\n",
+      ">PPP2R5B\n",
+      "VDGFSRRSLRRARPR\n",
+      ">PPP2R5B\n",
+      "RRARPRRSHSSSQFR\n",
+      ">PPP2R5B\n",
+      "RPRRSHSSSQFRYQS\n",
+      ">PAGE4\n",
+      "RSERGDGSDVKEKTP\n",
+      ">PAGE4\n",
+      "MDLEKTRSERGDGSD\n",
+      ">PAGE4\n",
+      "QEMDLEKTRSERGDG\n",
+      ">PAGE4\n",
+      "GSDVKEKTPPNPKHA\n",
+      ">PAGE4\n",
+      "_MSARVRSRSRGRGD\n",
+      ">PAGE4\n",
+      "SARVRSRSRGRGDGQ\n",
+      ">PAGE4\n",
+      "PNPKHAKTKEAGDGQ\n",
+      ">PAGE4\n",
+      "PGQEREGTPPIEERK\n",
+      ">CRMP-2\n",
+      "KTVTPASSAKTSPAK\n",
+      ">NFM\n",
+      "EKPEKAKSPVPKSPV\n",
+      ">GR\n",
+      "TSATGCATPTEKEFP\n",
+      ">NFM\n",
+      "VEKSPVKSPEAKEEE\n",
+      ">NFM\n",
+      "PDKKKAESPVKEKAV\n",
+      ">CTNND1\n",
+      "GTARRTGTPSDPRRR\n",
+      ">NFM\n",
+      "EEPEVEKSPVKSPEA\n",
+      ">PI4K2A\n",
+      "AAAGSGPSPPCSPGH\n",
+      ">PI4K2A\n",
+      "___MDETSPLVSPER\n",
+      ">CdGAP\n",
+      "TPAPPPPTPLEEEPE\n",
+      ">SMAD2\n",
+      "NQSMDTGSPAELSPT\n",
+      ">SMAD2\n",
+      "QSNYIPETPPPGYIS\n",
+      ">SMAD2\n",
+      "TGSPAELSPTTLSPV\n",
+      ">SMAD2\n",
+      "ELSPTTLSPVNHSLD\n",
+      ">desmin\n",
+      "PLGSPLSSPVFPRAG\n",
+      ">SRC-3\n",
+      "SPVAGVHSPMASSGN\n",
+      ">PD-L1\n",
+      "CGIQDTNSKKQSDTH\n",
+      ">neurogenin 2\n",
+      "SCTLSPASPGSDVDY\n",
+      ">neurogenin 2\n",
+      "SPYSCTLSPASPGSD\n",
+      ">desmin\n",
+      "APGFPLGSPLSSPVF\n",
+      ">PD-L1\n",
+      "DTNSKKQSDTHLEET\n",
+      ">SRC-3\n",
+      "GVHSPMASSGNTGNH\n",
+      ">FBXO4\n",
+      "EPRSGTNSPPPPFSD\n",
+      ">TRAF6\n",
+      "ARHLQENTQSHMRML\n",
+      ">APC\n",
+      "ESTPDGFSCSSSLSA\n",
+      ">4E-BP1\n",
+      "PPGDYSTTPGGTLFS\n",
+      ">RAB11FIP5\n",
+      "SMKDKPRSPFSKIRD\n",
+      ">RAB11FIP5\n",
+      "GPGAELLTRSPSRSS\n",
+      ">ACBD5 iso2\n",
+      "DSEVYCDSMEQFGQE\n",
+      ">APC\n",
+      "TPDGFSCSSSLSALS\n",
+      ">PD-L1\n",
+      "GKTTTTNSKREEKLF\n",
+      ">Desmoplakin\n",
+      "RSGSRSGSRRGSFDA\n",
+      ">CRMP-2\n",
+      "PVCEVSVTPKTVTPA\n",
+      ">GYS1\n",
+      "YRYPRPASVPPSPSL\n",
+      ">CRMP-2\n",
+      "SVTPKTVTPASSAKT\n",
+      ">desmin\n",
+      "APGFPLGSPLSSPVF\n",
+      ">desmin\n",
+      "PLGSPLSSPVFPRAG\n",
+      ">CRMP-2\n",
+      "KTVTPASSAKTSPAK\n",
+      ">APP\n",
+      "VEVDAAVTPEERHLS\n",
+      ">ZAP\n",
+      "RDRFLHNSLEFLSPV\n",
+      ">PSD-95\n",
+      "YRYQDEDTPPLEHSP\n",
+      ">MAP2 iso3\n",
+      "YSSRTPGTPGTPSYP\n",
+      ">MEF2D\n",
+      "MPVTVPVSNQSSMQF\n",
+      ">NFH\n",
+      "GEEAATTSPPAEEAA\n",
+      ">MAP2 iso3\n",
+      "RTPGTPGTPSYPRTP\n",
+      ">MEF2D\n",
+      "PNFAMPVTVPVSNQS\n",
+      ">ZAP\n",
+      "EFLSPVVSPLGSGPP\n",
+      ">ZAP\n",
+      "DVTSCKDSLEDVSVD\n",
+      ">TSC2\n",
+      "SSEGARPTVDLSFQP\n",
+      ">MEF2D\n",
+      "VPVSNQSSMQFSNPS\n",
+      ">ZAP\n",
+      "PPSPDVTSCKDSLED\n",
+      ">DYN1\n",
+      "SVPAGRRSPTSSPTP\n",
+      ">neurogenin 2\n",
+      "SPYSCTLSPASPGSD\n",
+      ">CTNND2\n",
+      "RPYSSSRTPSISPVR\n",
+      ">ULK1\n",
+      "CSSSPSPSGRPGPFS\n",
+      ">Bcl-2L12\n",
+      "SESPRPCSLPIRPCY\n",
+      ">ACF7\n",
+      "RAGSRASSRRGSDAS\n",
+      ">WT1 iso7\n",
+      "ERLQGRRSRGASGSE\n",
+      ">MUC1\n",
+      "PPSSTDRSPYEKVSA\n",
+      ">NFH\n",
+      "GGEEETKSPPAEEAA\n",
+      ">ACF7\n",
+      "KSASRPGSRAGSRAG\n",
+      ">TSC2\n",
+      "FQPSQPLSKSSSSPE\n",
+      ">ACF7\n",
+      "ADPKKSASRPGSRAG\n",
+      ">ACF7\n",
+      "RAGSRAGSRASSRRG\n",
+      ">WT1 iso7\n",
+      "RSRGASGSEPQQMGS\n",
+      ">ULK1\n",
+      "HGRTPSPSPTCSSSP\n",
+      ">CDH1\n",
+      "SEAASLSSLNSSESD\n",
+      ">neurogenin 2\n",
+      "SCTLSPASPGSDVDY\n",
+      ">ULK1\n",
+      "KVAELLSSGLQTAID\n",
+      ">ACF7\n",
+      "GRRSKPSSRAASPTR\n",
+      ">TSC2\n",
+      "VDLSFQPSQPLSKSS\n",
+      ">C/EBP-beta\n",
+      "SSSSPPGTPSPADAK\n",
+      ">ZAP\n",
+      "PLGSGPPSPDVTSCK\n",
+      ">ACF7\n",
+      "RAASPTRSSSSASQS\n",
+      ">ZAP\n",
+      "PVVSPLGSGPPSPDV\n",
+      ">IRS1\n",
+      "SDGEGTMSRPASVDG\n",
+      ">ZAP\n",
+      "HNSLEFLSPVVSPLG\n",
+      ">SCN8A\n",
+      "HRDKKESTPSTASLP\n",
+      ">TSC2\n",
+      "ARPTVDLSFQPSQPL\n",
+      ">ZAP\n",
+      "KDSLEDVSVDVTQKF\n",
+      ">smMLCK\n",
+      "GRKASGSSPTSPINA\n",
+      ">GYS1\n",
+      "VPPSPSLSRHSSPHQ\n",
+      ">NHE3\n",
+      "MRQSAQKSRDRILNV\n",
+      ">FAK\n",
+      "PSRPGYPSPRSSEGF\n",
+      ">ACF7\n",
+      "RPGSRAGSRAGSRAS\n",
+      ">CIITA\n",
+      "VQARLERSSSKSLER\n",
+      ">FBXL21\n",
+      "FYSSLNQTHTHTVLL\n",
+      ">PLEKHO1\n",
+      "KAKDPPQSPPDSESE\n",
+      ">NRF2\n",
+      "MEFNDSDSGISLNTS\n",
+      ">gephyrin\n",
+      "LSTTPSESPRAQATS\n",
+      ">CdGAP\n",
+      "TPAPPPPTPLEEEPE\n",
+      ">Myb\n",
+      "LTSSVLMTPVSEDED\n",
+      ">CAP1\n",
+      "PKPQTSPSPKPATKK\n",
+      ">WT1 iso7\n",
+      "GRRSRGASGSEPQQM\n",
+      ">ACF7\n",
+      "FRSRGRRSKPSSRAA\n",
+      ">ACF7\n",
+      "KPSSRAASPTRSSSS\n",
+      ">ACF7\n",
+      "RASSRRGSDASDFDL\n",
+      ">neurogenin 3\n",
+      "VSQAGNLSPTASLEE\n",
+      ">FTO\n",
+      "YSYSCEGSEDESEDE\n",
+      ">PAX3\n",
+      "ERASAPQSDEGSDID\n",
+      ">FTO\n",
+      "CEGSEDESEDESSFE\n",
+      ">neurogenin 3\n",
+      "GNLSPTASLEEFPGL\n",
+      ">NRF2\n",
+      "NDSDSGISLNTSPSR\n",
+      ">KLC2\n",
+      "LSDSRTLSSSSMDLS\n",
+      ">CAP1\n",
+      "PKPQTSPSPKRATKK\n",
+      ">FRAT1\n",
+      "RLQQRRGSQPETRTG\n",
+      ">CDX2\n",
+      "RSVPEPLSPVSSLQA\n",
+      ">PD-L1\n",
+      "QVLSGKTTTTNSKRE\n",
+      ">4E-BP1\n",
+      "RNSPVTKTPPRDLPT\n",
+      ">SUFU\n",
+      "LAHDRAPSRKDSLES\n",
+      ">4E-BP1\n",
+      "FLMECRNSPVTKTPP\n",
+      ">GYS1\n",
+      "RPASVPPSPSLSRHS\n",
+      ">BLM\n",
+      "ETSKSFVTPPQSHFV\n",
+      ">Desmoplakin\n",
+      "RSGSRRGSFDATGNS\n",
+      ">4E-BP1\n",
+      "GGTLFSTTPGGTRII\n",
+      ">GYS1\n",
+      "PSLSRHSSPHQSEDE\n",
+      ">VHL\n",
+      "PVLRSVNSREPSQVI\n",
+      ">CAP1\n",
+      "SAPKPQTSPSPKRAT\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">POLR2A\n",
+      "SYSPTSPSYSPTSPS\n",
+      ">POLR2A\n",
+      "SPKYSPTSPTYSPTT\n",
+      ">STF-1\n",
+      "EYPEPYASPPQQPGP\n",
+      ">FMR1\n",
+      "NSEASNASETESDHR\n",
+      ">POLR2A\n",
+      "TPQSPSYSPTSPSYS\n",
+      ">CDK11B\n",
+      "GSPLKAYTPVVVTLW\n",
+      ">CDK9\n",
+      "FGLARAFSLAKNSQP\n",
+      ">CDK12\n",
+      "SEESRPYTNKVITLW\n",
+      ">CDK9\n",
+      "QSRNPATTNQTEFER\n",
+      ">CDK9\n",
+      "NSQPNRYTNRVVTLW\n",
+      ">CDK9\n",
+      "SQITQQSTNQSRNPA\n",
+      ">CDK9\n",
+      "APPRRKGSQITQQST\n",
+      ">MBP\n",
+      "KNIVTPRTPPPSQGK\n",
+      ">MBP\n",
+      "GRDSRSGSPMARR__\n",
+      ">CDK9\n",
+      "GSQITQQSTNQSRNP\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">POLR2A\n",
+      "TPWNQGATPAYGAWS\n",
+      ">POLR2A\n",
+      "SYSPTSPSYSPTSPS\n",
+      ">POLR2A\n",
+      "TPQSPSYSPTSPSYS\n",
+      ">POLR2A\n",
+      "PSVGSGMTPGAAGFS\n",
+      ">CDK9\n",
+      "NQSRNPATTNQTEFE\n",
+      ">POLR2A\n",
+      "QSPSYSPTSPSYSPT\n",
+      ">cGAS\n",
+      "LLNTGSYYEHVKISA\n",
+      ">BLK\n",
+      "ARIIDSEYTAQEGAK\n",
+      ">PELI1\n",
+      "PQAAKAISNKDQHSI\n",
+      ">PELI1\n",
+      "FNTLAFPSMKRKDVV\n",
+      ">PELI1\n",
+      "DQHSISYTLSRAQTV\n",
+      ">PELI1\n",
+      "NKDQHSISYTLSRAQ\n",
+      ">PELI1\n",
+      "HSISYTLSRAQTVVV\n",
+      ">PELI1\n",
+      "QCPVGFNTLAFPSMK\n",
+      ">PELI1\n",
+      "GSQSNSDTQSVQSTI\n",
+      ">PELI1\n",
+      "VPGSQSNSDTQSVQS\n",
+      ">PELI1\n",
+      "ISNKDQHSISYTLSR\n",
+      ">PELI1\n",
+      "YTLSRAQTVVVEYTH\n",
+      ">PD-L1\n",
+      "EEKLFNVTSTLRINT\n",
+      ">PD-L1\n",
+      "TNEIFYCTFRRLDPE\n",
+      ">EEF2\n",
+      "NVLCLSKSPNKHNRL\n",
+      ">GAS2L1\n",
+      "HPRSRRYSGDSDSSA\n",
+      ">PAK6\n",
+      "KSLVGTPYWMAPEVI\n",
+      ">PINX1\n",
+      "ATGKDVESYLQPKAK\n",
+      ">PINX1\n",
+      "SDKKEKKSFSLEEKS\n",
+      ">SUZ12\n",
+      "SMSEFLESEDGEVEQ\n",
+      ">CDC20\n",
+      "KTCRYIPSLPDRILD\n",
+      ">CDC25C\n",
+      "PKRCLDLSNLSSGEI\n",
+      ">NUDC\n",
+      "QHPEMDFSKAKFN__\n",
+      ">SNCB\n",
+      "LMEPEGESYEDPPQE\n",
+      ">SUZ12\n",
+      "RPKRTKASMSEFLES\n",
+      ">CEP55\n",
+      "PTAALNESLVECPKC\n",
+      ">YY1\n",
+      "PVETIETTVVGEEEE\n",
+      ">CCNB1\n",
+      "LVDTASPSPMETSGC\n",
+      ">CDC25C\n",
+      "SDELMEFSLKDQEAK\n",
+      ">NUDC\n",
+      "KKINPENSKLSDLDS\n",
+      ">RAPGEF2 iso2\n",
+      "AIREFAVTATPDQYS\n",
+      ">Survivin\n",
+      "FLKDHRISTFKNWPF\n",
+      ">RAPGEF2 iso2\n",
+      "KPVKSETSPVAPRAG\n",
+      ">GTSE1\n",
+      "RSIRRRDSCLNSKTK\n",
+      ">PAX3-FOXO1\n",
+      "PRTSSNASTISGRLS\n",
+      ">KLF4\n",
+      "GKFVLKASLSAPGSE\n",
+      ">RAPGEF2 iso2\n",
+      "DERRQRHSVSIVETN\n",
+      ">RAPGEF2 iso2\n",
+      "KKWRSLGSLSQGSTN\n",
+      ">RAPGEF2 iso2\n",
+      "RECKNFNSMFAIISG\n",
+      ">Survivin\n",
+      "LKDHRISTFKNWPFL\n",
+      ">GTSE1\n",
+      "LLLPRAASVRGRSIP\n",
+      ">FBX5\n",
+      "YEDSGYSSFTQSDRD\n",
+      ">FBX5\n",
+      "ASRLYEDSGYSSFTQ\n",
+      ">SGO1\n",
+      "LALENEKSKVREAQD\n",
+      ">CELSR1\n",
+      "TTRATLLTRSLNCNN\n",
+      ">CELSR1\n",
+      "RATLLTRSLNCNNTY\n",
+      ">CELSR1\n",
+      "KKLQLDDSATTRATL\n",
+      ">MAD2L1BP\n",
+      "KHFYRKPSPQAEEML\n",
+      ">PINX1\n",
+      "EDATLEETLVKKKKK\n",
+      ">axin 1\n",
+      "LDSNGIVSRQTKPAT\n",
+      ">TPT1\n",
+      "TEGAIDDSLIGGNAS\n",
+      ">PINX1\n",
+      "DLSSRSKTDLDCIFG\n",
+      ">PINX1\n",
+      "SFSLEEKSKISKNRV\n",
+      ">CCNB1\n",
+      "SPSPMETSGCAPAEE\n",
+      ">separase\n",
+      "AGPHVPFTVFEEVCP\n",
+      ">REST\n",
+      "MSEGSDDSGLHGARP\n",
+      ">APC4\n",
+      "KEEVLSESEAENQQA\n",
+      ">JIP4 iso2\n",
+      "SGYKGSSTPTKGIEN\n",
+      ">SGO1\n",
+      "QQIAVEETDCPYQTT\n",
+      ">TPT1\n",
+      "PEGEGTESTVVTGVD\n",
+      ">MDM2\n",
+      "SLDSEDYSLSDEGHE\n",
+      ">separase\n",
+      "KVNFSDDSDLEDPVS\n",
+      ">ROCK2\n",
+      "ELTEKDATIASLEET\n",
+      ">ROCK2\n",
+      "QAQIAEESQIRIELQ\n",
+      ">ROCK2\n",
+      "MKIQQNQSIRRPSRQ\n",
+      ">ROCK2\n",
+      "LHIGLDSSSIGSGPG\n",
+      ">RASGRF1\n",
+      "QMIKSDASLYCDDVD\n",
+      ">RASGRF1\n",
+      "GLYLLEGSICKRMPS\n",
+      ">SynGAP iso3\n",
+      "GKAKDFLSDMAMSEV\n",
+      ">RASGRF1\n",
+      "GKTTLDTSKLCVASS\n",
+      ">RASGRF1\n",
+      "FPLFNYNSGIMMTCR\n",
+      ">SynGAP iso3\n",
+      "LSVNKSVSMLDLQGD\n",
+      ">SynGAP iso3\n",
+      "KMLSVNKSVSMLDLQ\n",
+      ">IRS1\n",
+      "GYLRKPKSMHKRFFV\n",
+      ">RASGRF1\n",
+      "LASLGCPSDGYTNIH\n",
+      ">SynGAP iso3\n",
+      "AGRLSQGSGSSITAA\n",
+      ">RASGRF1\n",
+      "QEKAAWTSDIIQCVD\n",
+      ">SynGAP iso3\n",
+      "GSGGGGGSGGGSGGK\n",
+      ">DYNC1I2\n",
+      "PSSKSVSTPSEAGSQ\n",
+      ">SynGAP iso3\n",
+      "GGSGGMGSGGGGGSG\n",
+      ">CCNB1\n",
+      "EDLCQAFSDVILAVN\n",
+      ">SynGAP iso3\n",
+      "EPEQKMLSVNKSVSM\n",
+      ">CDC6\n",
+      "SDAKLEPTNVQTVTC\n",
+      ">CCNB1\n",
+      "PILVDTASPSPMETS\n",
+      ">SUZ12\n",
+      "KRTKASMSEFLESED\n",
+      ">MCM3\n",
+      "KTIERRYSDLTTLVA\n",
+      ">PELI1\n",
+      "GDRGRRKSRFALFKR\n",
+      ">STX1A\n",
+      "IIMDSSISKQALSEI\n",
+      ">GYS1\n",
+      "KRKPDIVTPNGLNVK\n",
+      ">GYS1\n",
+      "SSSLSTPSEPLSPTS\n",
+      ">GYS1\n",
+      "STPSEPLSPTSSLGE\n",
+      ">PSD-95\n",
+      "TDYPTAMTPTSPRRY\n",
+      ">SH3BP5\n",
+      "PGSLDLPSPVSLSEF\n",
+      ">DLG1\n",
+      "YLGQTPASPARYSPI\n",
+      ">PSD-95\n",
+      "PTAMTPTSPRRYSPV\n",
+      ">GR\n",
+      "LIDENLLSPLAGEDD\n",
+      ">DRPLA\n",
+      "EEYETPESPVPPARS\n",
+      ">KIF5C\n",
+      "CTERFVSSPEEVMDV\n",
+      ">PINK1\n",
+      "MWNISAGSSSEAILN\n",
+      ">PINK1\n",
+      "ALLQREASKRPSARV\n",
+      ">EEF2K\n",
+      "DSLPSSPSSATPHSQ\n",
+      ">AP-2 alpha\n",
+      "CSVPGRLSLLSSTSK\n",
+      ">AS160\n",
+      "PSLHTSFSAPSFTAP\n",
+      ">PINK1\n",
+      "VLRAFTSSVPLLPGA\n",
+      ">VASP\n",
+      "TTLPRMKSSSSVTTS\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">syndecan-3\n",
+      "PDKQEEFYA______\n",
+      ">ephexin-1\n",
+      "IEQIGLLYQEYRDKS\n",
+      ">GMPR\n",
+      "GRKLKLFYGMSSDTA\n",
+      ">SCARB1\n",
+      "AYSESLMSPAAKGTV\n",
+      ">VHL\n",
+      "EESGAEESGPEESGP\n",
+      ">SERINC3\n",
+      "DTTTSGASDEEDGQP\n",
+      ">MYH10\n",
+      "NETQPPQSE______\n",
+      ">FNIP1\n",
+      "WDIPRNESSDSALGD\n",
+      ">FUNDC1\n",
+      "PPPQDYESDDDSYEV\n",
+      ">HOXB7\n",
+      "RIYPWMRSSGTDRKR\n",
+      ">PDCD5\n",
+      "NRRKVMDSDEDDDY_\n",
+      ">AATF\n",
+      "LEMEDYPSFMAKRFA\n",
+      ">DOK7\n",
+      "EKRLSLLSHSGRPGS\n",
+      ">GAP43\n",
+      "PPTETAESSQAEEEK\n",
+      ">14-3-3 gamma\n",
+      "DNLTLWTSDQQDDDG\n",
+      ">HMGA2\n",
+      "AQETEETSSQESAEE\n",
+      ">GAP43\n",
+      "TTDAAPATSPKAEEP\n",
+      ">Bcr\n",
+      "ADAEKPFYVNVEFHH\n",
+      ">DOK7\n",
+      "SSSEASHSDISASSR\n",
+      ">DOK7\n",
+      "IATGSHSSYSGSFSS\n",
+      ">DOK7\n",
+      "GGDDRSLSSSSSEAS\n",
+      ">HMGA2\n",
+      "PAQETEETSSQESAE\n",
+      ">TPM1\n",
+      "HALNDMTSI______\n",
+      ">GAP43\n",
+      "EGDGSATTDAAPATS\n",
+      ">HMGA2\n",
+      "EETSSQESAEED___\n",
+      ">CFTR\n",
+      "SNGDRKHSSDENNVS\n",
+      ">DOK7\n",
+      "DDRSLSSSSSEASHS\n",
+      ">GAP43\n",
+      "PTETAESSQAEEEKD\n",
+      ">DOK7\n",
+      "GIATGSHSSYSGSFS\n",
+      ">M6PR\n",
+      "DDQLGEESEERDDHL\n",
+      ">GAP43\n",
+      "KEGDGSATTDAAPAT\n",
+      ">FNIP1\n",
+      "SALGDSESEDTGHDM\n",
+      ">OTUD5\n",
+      "EVGAGYNSEDEYEAA\n",
+      ">SET iso2\n",
+      "SAPAAKVSKKELNSN\n",
+      ">CETN2\n",
+      "KELGENLTDEELQEM\n",
+      ">CFTR\n",
+      "TETLRRFSVDDSSAP\n",
+      ">HMGA2\n",
+      "QETEETSSQESAEED\n",
+      ">CFTR\n",
+      "ITALKEETEEEVQET\n",
+      ">DOK7\n",
+      "GDDRSLSSSSSEASH\n",
+      ">FURIN\n",
+      "AWQEECPSDSEEDEG\n",
+      ">MAZ\n",
+      "PTAVGSLSGAEGVPV\n",
+      ">FNIP1\n",
+      "SDSALGDSESEDTGH\n",
+      ">MYH10\n",
+      "LELSDDDTESKTSDV\n",
+      ">calsequestrin 2\n",
+      "DEEDNDDSDDDDDE_\n",
+      ">DHFR\n",
+      "PEYPGVLSDVQEEKG\n",
+      ">FGF14\n",
+      "PGVTPSKSTSASAIM\n",
+      ">VHL\n",
+      "EEDGGEESGAEESGP\n",
+      ">A-Myb\n",
+      "_MAKRSRSEDEDDDL\n",
+      ">RGS19\n",
+      "ADRPPSMSSHDTASP\n",
+      ">ACE2\n",
+      "PYASIDISKGENNPG\n",
+      ">MRTO4\n",
+      "LPESASESTEESDSE\n",
+      ">VHL\n",
+      "EESGPEESGPEELGA\n",
+      ">ANP32B\n",
+      "GEKRKRETDDEGEDD\n",
+      ">RAD1\n",
+      "EEVPESES_______\n",
+      ">4E-BP1\n",
+      "KRAGGEESQFEMDI_\n",
+      ">MRTO4\n",
+      "ASESTEESDSEDDD_\n",
+      ">PSMD3\n",
+      "__MKQEGSARRRGAD\n",
+      ">CETN2\n",
+      "RDGDGEVSEQEFLRI\n",
+      ">RAD1\n",
+      "PDEEVPESES_____\n",
+      ">FNIP1\n",
+      "PRNESSDSALGDSES\n",
+      ">N-Myc\n",
+      "GEDTLSDSDDEDDEE\n",
+      ">SGT1\n",
+      "PRPNESDSDDLDDED\n",
+      ">FNIP1\n",
+      "DIPRNESSDSALGDS\n",
+      ">RIOK1\n",
+      "MEIASQRTKEERSSQ\n",
+      ">N-Myc\n",
+      "TSGEDTLSDSDDEDD\n",
+      ">MYH10\n",
+      "DDTESKTSDVNETQP\n",
+      ">HOXB7\n",
+      "NKTAGPGTTGQDRAE\n",
+      ">SERINC3\n",
+      "ILGDTTTSGASDEED\n",
+      ">CASP2\n",
+      "LYKKLRLSTDTVEHS\n",
+      ">SGT1\n",
+      "EDFECLDSDDDLDFE\n",
+      ">CDC25C\n",
+      "VEKFKDNTIPDKVKK\n",
+      ">HOXB7\n",
+      "KTAGPGTTGQDRAEA\n",
+      ">ZC3H8\n",
+      "RIDDEIDTEVEETQE\n",
+      ">MYH10\n",
+      "EGASLELSDDDTESK\n",
+      ">FAF1\n",
+      "DVHMVSDSDGDDFED\n",
+      ">YY1\n",
+      "EVVGGDDSDGLRAED\n",
+      ">FGF14\n",
+      "VTPSKSTSASAIMNG\n",
+      ">CREB\n",
+      "RKILNDLSSDAPGVP\n",
+      ">TRHR\n",
+      "STELDDITVTDTYVS\n",
+      ">SLC18A2\n",
+      "PIGDDEESESD____\n",
+      ">RFC1\n",
+      "PVTYISETDEDDDFL\n",
+      ">IRS1\n",
+      "DDGYMPMSPGVAPVP\n",
+      ">RIC8A\n",
+      "ETMEGQLSSDPDSDP\n",
+      ">AQP4\n",
+      "AAQQTKGSYMEVEDN\n",
+      ">Sialoprotein-2\n",
+      "KAPKMKESDEEEEEE\n",
+      ">RFC1\n",
+      "RIIYDSDSESEETVQ\n",
+      ">NMDAR2B\n",
+      "EKLSSIESDV_____\n",
+      ">SCN2A\n",
+      "VPIALGESDFENLNT\n",
+      ">CREB\n",
+      "ESEDSQESVDSVTDS\n",
+      ">RIC8A\n",
+      "TMEGQLSSDPDSDPD\n",
+      ">Sialoprotein-2\n",
+      "EENGDGDSSEEEGEE\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">RIC8A\n",
+      "QLSSDPDSDPD____\n",
+      ">TRHR\n",
+      "KESDRFSTELDDITV\n",
+      ">Sialoprotein-2\n",
+      "RRIKAEDSEENGVFK\n",
+      ">CADPS\n",
+      "QGISMKDSDEEDEED\n",
+      ">ARC\n",
+      "SEAVQPRTPEEPELE\n",
+      ">RFC1\n",
+      "KKRIIYDSDSESEET\n",
+      ">TRHR\n",
+      "YVSTTKVSFDDTCLA\n",
+      ">NCL\n",
+      "EEEEEDDSEEEVMEI\n",
+      ">CADPS\n",
+      "_MLDPSSSEEESDEI\n",
+      ">SLC28A2\n",
+      "EEVTQGHSLKDGLGH\n",
+      ">C/EBP-beta\n",
+      "KKAVDKLSDEYKMRR\n",
+      ">RIC8A\n",
+      "QYSEDEDTDTEEYRE\n",
+      ">NCL\n",
+      "DSEDEEMSEDEDDSS\n",
+      ">HMGN1\n",
+      "AEEKEAKSD______\n",
+      ">NHE3\n",
+      "TEGERRGSLAFIRSP\n",
+      ">eEF1B\n",
+      "GSDDEEESEEAKRLR\n",
+      ">GYS1\n",
+      "RHSSPHQSEDEEEPR\n",
+      ">EEF1D\n",
+      "DDIDLFGSDEEEDKE\n",
+      ">eIF2B-epsilon\n",
+      "LKEAEEESSEDD___\n",
+      ">CACNA1S\n",
+      "RTISGDLTAEEELER\n",
+      ">eEF1B\n",
+      "DDIDLFGSDDEEESE\n",
+      ">NHE3\n",
+      "KERELELSDPEEAPD\n",
+      ">calsequestrin 1\n",
+      "VLEGEINTEDDDDED\n",
+      ">CACNA1C\n",
+      "RAISGDLTAEEELDK\n",
+      ">eIF2B-epsilon\n",
+      "KEAEEESSEDD____\n",
+      ">Caldesmon\n",
+      "SEVNAQNSVAEEETK\n",
+      ">CTCF\n",
+      "KKEDSSDSEENAEPD\n",
+      ">CTCF\n",
+      "RSKKEDSSDSEENAE\n",
+      ">GJA8\n",
+      "KAEEEVVSDEVEGPS\n",
+      ">CTCF\n",
+      "GRKRKMRSKKEDSSD\n",
+      ">Caldesmon\n",
+      "RLEAERLSYQRNDDD\n",
+      ">CTCF\n",
+      "MRSKKEDSSDSEENA\n",
+      ">ARRB2 iso2\n",
+      "EFETNYATDDDIVFE\n",
+      ">DDHD1\n",
+      "SDDNYDFSSAESGSS\n",
+      ">CPLX2\n",
+      "EEEEEEESILDTVLK\n",
+      ">NIPP-1\n",
+      "KNSRVTFSEDDEIIN\n",
+      ">NIPP-1\n",
+      "LGLPEEETELDNLTE\n",
+      ">DDHD1\n",
+      "AKDPTSISENEGIST\n",
+      ">HMGN1\n",
+      "KNEESPASDEAEEKE\n",
+      ">Sialoprotein-2\n",
+      "ENGDGDSSEEEGEEE\n",
+      ">SCN2A\n",
+      "TEEFSSESDMEESKE\n",
+      ">SCN2A\n",
+      "LNTEEFSSESDMEES\n",
+      ">DMBT1\n",
+      "AFTLGRRTHIDRGQP\n",
+      ">RPS5\n",
+      "DVQINDISLQDYIAV\n",
+      ">CDH1\n",
+      "LVFDYEGSGSEAASL\n",
+      ">Ikaros\n",
+      "ESPPVSDTPDEGDEP\n",
+      ">PPAR-gamma iso2\n",
+      "GISSVDLSVMEDHSH\n",
+      ">Ikaros\n",
+      "LSDMPYDSANYEKED\n",
+      ">CDH1\n",
+      "SSLNSSESDQDQDYD\n",
+      ">AP-2 alpha\n",
+      "TDNNAKSSDKEEKHR\n",
+      ">CALU iso15\n",
+      "MYSHDGNTDEPEWVK\n",
+      ">Survivin\n",
+      "AGFIHCPTENEPDLA\n",
+      ">C1R\n",
+      "TEASGYISSLEYPRS\n",
+      ">PER2\n",
+      "ETVEDMASGPESLDG\n",
+      ">IRS1\n",
+      "HFAIAADSEAEQDSW\n",
+      ">PPAR-gamma iso2\n",
+      "WPTNFGISSVDLSVM\n",
+      ">CDH1\n",
+      "FDYEGSGSEAASLSS\n",
+      ">N-WASP\n",
+      "RSKAIHSSDEDEDDD\n",
+      ">IRS1\n",
+      "MGTSPALTGDEAAGA\n",
+      ">N-WASP\n",
+      "KRSKAIHSSDEDEDD\n",
+      ">RIC8A\n",
+      "GRPEGQYSEDEDTDT\n",
+      ">SLC18A2\n",
+      "GDDEESESD______\n",
+      ">AQP4\n",
+      "MEVEDNRSQVETEDL\n",
+      ">CADPS\n",
+      "___MLDPSSSEEESD\n",
+      ">CADPS\n",
+      "__MLDPSSSEEESDE\n",
+      ">CREB\n",
+      "QKRREILSRRPSYRK\n",
+      ">AQP4\n",
+      "DEKKGKDSSGEVLSS\n",
+      ">CREB\n",
+      "KILNDLSSDAPGVPR\n",
+      ">STX1A\n",
+      "ELRTAKDSDDDDDVT\n",
+      ">NCL\n",
+      "AAPAAPASEDEDEED\n",
+      ">CDH1\n",
+      "GSEAASLSSLNSSES\n",
+      ">TR-alpha iso5\n",
+      "SSLSSSSSDEDTEVF\n",
+      ">Ikaros\n",
+      "NVKVETQSDEENGRA\n",
+      ">BMAL1\n",
+      "RRRDKMNSFIDELAS\n",
+      ">Ikaros\n",
+      "SNSCQDSTDTESNAE\n",
+      ">Ikaros\n",
+      "GQDMSQVSGKESPPV\n",
+      ">Ikaros\n",
+      "GSHRDQGSSALSGVG\n",
+      ">Ikaros\n",
+      "REASPSNSCQDSTDT\n",
+      ">PER2\n",
+      "TGRDSQGSDCDDNGK\n",
+      ">CDH1\n",
+      "SLSSLNSSESDQDQD\n",
+      ">TR-alpha iso5\n",
+      "ASSLSSSSSDEDTEV\n",
+      ">RPS5\n",
+      "IKLFGKWSTDDVQIN\n",
+      ">PER2\n",
+      "DMASGPESLDGAAGG\n",
+      ">FURIN\n",
+      "QEECPSDSEEDEGRG\n",
+      ">DHFR\n",
+      "RIMQDFESDTFFPEI\n",
+      ">SGT1\n",
+      "LGPRPNESDSDDLDD\n",
+      ">calsequestrin 2\n",
+      "DDDDDDNSDEEDNDD\n",
+      ">FAF1\n",
+      "ITDVHMVSDSDGDDF\n",
+      ">HOXB7\n",
+      "IYPWMRSSGTDRKRG\n",
+      ">MRTO4\n",
+      "ESTEESDSEDDD___\n",
+      ">MYH10\n",
+      "QLHLEGASLELSDDD\n",
+      ">LYN\n",
+      "SKGKDSLSDDGVDLK\n",
+      ">C/EBP-beta\n",
+      "SSSSPPGTPSPADAK\n",
+      ">TFE3\n",
+      "PTGSAPNSPMALLTI\n",
+      ">HuR\n",
+      "LLSQLYHSPARRFGG\n",
+      ">XDH\n",
+      "ELLRLKDTPRKQLRF\n",
+      ">FOXO1A\n",
+      "EGGKSGKSPRRRAAS\n",
+      ">RKIP\n",
+      "DELGKVLTPTQVKNR\n",
+      ">CDK5\n",
+      "DDEGVPSSALREICL\n",
+      ">NFL\n",
+      "YKRRYVETPRVHISS\n",
+      ">VEGFR2\n",
+      "RIYDVVLSPSHGIEL\n",
+      ">PIP5K1C\n",
+      "DERSWVYSPLHYSAQ\n",
+      ">CENTG1 iso2\n",
+      "ACKSLPSSPSHSAAS\n",
+      ">CENTG1 iso2\n",
+      "YSSSLPSSPNVGHRE\n",
+      ">CRMP-2 iso3\n",
+      "FKNLGSGSPKPRQKF\n",
+      ">CRMP-2\n",
+      "PASSAKTSPAKQQAP\n",
+      ">NOXA\n",
+      "ARKNAQPSPARAPAE\n",
+      ">WAVE2\n",
+      "PPPLNNLSPYRDDGK\n",
+      ">MST3\n",
+      "TVLSQCDSPYVTKYY\n",
+      ">CLIC4\n",
+      "PPKYLKLSPKHPESN\n",
+      ">TRPC6\n",
+      "FGPRRGSSPRGAAGA\n",
+      ">PPP1R1A\n",
+      "LKSTLSMSPRQRKKM\n",
+      ">SNTB2\n",
+      "NRGLGPPSPPAPPRG\n",
+      ">TRPV1\n",
+      "IAYSSSETPNRHDML\n",
+      ">ESYT1\n",
+      "QDVAQLRSPLPRGII\n",
+      ">DAB1 iso2\n",
+      "TNDSARSSPQSDKPR\n",
+      ">CACNA1B\n",
+      "TQPAPNASPMKRSIS\n",
+      ">KIF13B\n",
+      "PEGQVMLTPQKNTRT\n",
+      ">Kv-beta2\n",
+      "YPESTTGSPARLSLR\n",
+      ">Huntingtin\n",
+      "EQTSTPMSPKKGGEA\n",
+      ">DYN1\n",
+      "GRRSPTSSPTPQRRA\n",
+      ">STMN1\n",
+      "QAFELILSPRSKESV\n",
+      ">PPAR-gamma\n",
+      "KIKFKHITPLQEQSK\n",
+      ">WAVE1\n",
+      "LIENRPQSPAAGRTP\n",
+      ">ODFP1\n",
+      "SPCYPCTSPCNPCNP\n",
+      ">SAPAP1\n",
+      "FPRRHYTSQQELKDE\n",
+      ">SEPT5\n",
+      "HCCLYFISPFGHGLR\n",
+      ">nNOS\n",
+      "QSPTKNGSPSRCPRF\n",
+      ">Lmr2\n",
+      "LQTSKYFSPPPPARS\n",
+      ">RASGRF1\n",
+      "PLAIGTSSPVRRRKL\n",
+      ">STMN1\n",
+      "SVPEFPLSPPKKKDL\n",
+      ">SEPT5\n",
+      "TQDSRMESPIPILPL\n",
+      ">CACNA1G\n",
+      "DSTAASPSPKKDTLS\n",
+      ">SYN1\n",
+      "TRPPASPSPQRQAGP\n",
+      ">PIP5K1C\n",
+      "KNSSLKSSPSKKGRG\n",
+      ">KCNMA1\n",
+      "QANSQGFTPPGMDRS\n",
+      ">MARCKS\n",
+      "PGEAVAASPSKANGQ\n",
+      ">WAVE1\n",
+      "APPLVQPSPPVARAA\n",
+      ">WAVE1\n",
+      "PPGIRPSSPVTVAAL\n",
+      ">HuR\n",
+      "LLSQLYHSPARRFGG\n",
+      ">talin 1\n",
+      "TMLEDSVSPKKSTVL\n",
+      ">PPAR-gamma\n",
+      "AIKVEPASPPYYSEK\n",
+      ">CTNND2\n",
+      "RGSSPKQSPSRLAKS\n",
+      ">CASK\n",
+      "DKINTKSSPQIRNPP\n",
+      ">Lmr1 iso2\n",
+      "ADFSEQGSPAAAAQT\n",
+      ">CTNND2\n",
+      "IGTYATLSPTKRLVH\n",
+      ">CASK\n",
+      "DVAKFTSSPGLSTED\n",
+      ">PPAR-gamma\n",
+      "PHEEPSNSLMAIECR\n",
+      ">TAL1\n",
+      "DGRMVQLSPPALAAP\n",
+      ">ARRB2\n",
+      "EFDTNYATDDDIVFE\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">PMCA4 iso6\n",
+      "LDGEVTPYANTNNNA\n",
+      ">Cortactin\n",
+      "TYTSEPVYETTEAPG\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">PLCG2\n",
+      "LESEEELYSSCRQLR\n",
+      ">CREB\n",
+      "EILSRRPSYRKILND\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">N-WASP\n",
+      "RETSKVIYDFIEKTG\n",
+      ">N-WASP\n",
+      "LFDMCGISEAQLKDR\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">PRH\n",
+      "QDLDEDVSQEDVPLV\n",
+      ">H3\n",
+      "KQTARKSTGGKAPRK\n",
+      ">MOB1A\n",
+      "LLKHAEATLGSGNLR\n",
+      ">FOXO1A\n",
+      "NEGTGKSSWWMLNPE\n",
+      ">FOXO1A\n",
+      "SSAGWKNSIRHNLSL\n",
+      ">YAP1\n",
+      "PQHVRAHSSPASLQL\n",
+      ">MST1\n",
+      "SEEDEMDSGTMVRAA\n",
+      ">FOXO1A\n",
+      "QNEGTGKSSWWMLNP\n",
+      ">LC3B\n",
+      "QLPVLDKTKFLVPDH\n",
+      ">FOXO1A\n",
+      "NSIRHNLSLHSKFIR\n",
+      ">AMPKB1\n",
+      "NIIQVKKTDFEVFDA\n",
+      ">CGN\n",
+      "GKLLRSHSQASLAGP\n",
+      ">ULK1\n",
+      "SHLASPPSLGEMQQL\n",
+      ">AMPKB1\n",
+      "HKTPRRDSSGGTKDG\n",
+      ">KLC2\n",
+      "GSLRRSGSFGKLRDA\n",
+      ">AMPKB1\n",
+      "MVDSQKCSDVSELSS\n",
+      ">AMPKB1\n",
+      "APAQARPTVFRWTGG\n",
+      ">smMLCK\n",
+      "RAIGRLSSMAMISGM\n",
+      ">AMPKB1\n",
+      "SQKCSDVSELSSSPP\n",
+      ">AMOTL1\n",
+      "SSLRPARSVPSIAAA\n",
+      ">PD-L1\n",
+      "DTNSKKQSDTHLEET\n",
+      ">IRS1\n",
+      "QHLRLSTSSGRLLYA\n",
+      ">NKCC2\n",
+      "GPKVNRPSLLEIHEQ\n",
+      ">KIF4A\n",
+      "KLRRRTFSLTEVRGQ\n",
+      ">ULK1\n",
+      "FDFPKTPSSQNLLAL\n",
+      ">KLC2\n",
+      "PRMKRASSLNFLNKS\n",
+      ">SQSTM1\n",
+      "SSKEVDPSTGELQSL\n",
+      ">SKP2\n",
+      "ATLLSSCSRLDELNL\n",
+      ">KCNMA1 iso4\n",
+      "GRSERDCSCMSGRVR\n",
+      ">eNOS\n",
+      "TSRIRTQSFSLQERH\n",
+      ">CAMKK2\n",
+      "KTMIRKRSFGNPFEG\n",
+      ">GABBR2\n",
+      "VTSVNQASTSRLEGL\n",
+      ">CAMKK2\n",
+      "KDEIGKGSYGVVKLA\n",
+      ">PDE4D iso6\n",
+      "KSMSRNSSIASDIHG\n",
+      ">ARHGEF7\n",
+      "KPSEKPVSPKSGTLK\n",
+      ">CAMKK2\n",
+      "RREERSLSAPGNLLT\n",
+      ">CAMKK2\n",
+      "IKLHPWVTRHGAEPL\n",
+      ">CAMKK2\n",
+      "PRMPRRPTVESHHVS\n",
+      ">CAMKK2\n",
+      "SPASSPQSSPRMPRR\n",
+      ">OGT\n",
+      "EAIASYRTALKLKPD\n",
+      ">CAMKK2\n",
+      "RCICPSLSYSPASSP\n",
+      ">CAMKK2\n",
+      "SPCGGGGSALVKGGP\n",
+      ">TSC2 iso2\n",
+      "PTLPRSNTVASFSSL\n",
+      ">ChREBP\n",
+      "TLLRPPESPDAVPEI\n",
+      ">CAMKK2\n",
+      "RSQGGPASSSSLDMN\n",
+      ">HSL\n",
+      "ESMRRSVSEAALAQP\n",
+      ">ULK1\n",
+      "GLGCRLHSAPNLSDF\n",
+      ">ULK1\n",
+      "SHLASPPSLGEMPQL\n",
+      ">ULK1\n",
+      "TRMFSVGSSSSLGST\n",
+      ">Raptor\n",
+      "DKMRRVSSYSALNSL\n",
+      ">ULK1\n",
+      "SAIRRSGSTTPLGFG\n",
+      ">EEF2K\n",
+      "DSLPSSPSSATPHSQ\n",
+      ">ULK1\n",
+      "GLGCRLHSAPNLSDL\n",
+      ">ZNF9\n",
+      "GHLARECTIEATA__\n",
+      ">PNPLA2\n",
+      "VELRRAQSLPSVPLS\n",
+      ">NRF2\n",
+      "HLLKRRLSTLYLEVF\n",
+      ">FOXO1A\n",
+      "EPLPRPRSCTWPLPR\n",
+      ">PD-L1\n",
+      "EKLFNVTSTLRINTT\n",
+      ">AMPKB1\n",
+      "SKLPLTRSHNNFVAI\n",
+      ">ALDH2\n",
+      "GNPFDSKTEQGPQVD\n",
+      ">AMPKB1\n",
+      "IVTSQLGTVNNIIQV\n",
+      ">FOXO1A\n",
+      "PHSVKTTTHSWVSG_\n",
+      ">NLRP3\n",
+      "KIEINLSTRMDHMVS\n",
+      ">NLRP3\n",
+      "ARLGESVSLNKRYTR\n",
+      ">NLRP3\n",
+      "GKTKTCESPVSPIKM\n",
+      ">MEKK1\n",
+      "RQLRKVRSVELDQLP\n",
+      ">BAD\n",
+      "GRELRRMSDEFVDSF\n",
+      ">PGAM1\n",
+      "QVKIWRRSYDVPPPP\n",
+      ">LC8\n",
+      "VAILLFKSG______\n",
+      ">PGAM1\n",
+      "WNLENRFSGWYDADL\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">G-alpha(z)\n",
+      "EKEAARRSRRIDRHL\n",
+      ">BAD\n",
+      "PFRGRSRSAPPNLWA\n",
+      ">AML2\n",
+      "ERLRMRVTPSTPSPR\n",
+      ">Ebp1\n",
+      "QYGLKMKTSRAFFSE\n",
+      ">BAD\n",
+      "KGLPRPKSAGTATQM\n",
+      ">ARHGEF7\n",
+      "EFAVRKSTAALEEDA\n",
+      ">TIE1\n",
+      "LHRRRTFTYQSGSGE\n",
+      ">JUB\n",
+      "SRPCSNRTSGISMGY\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">PREX2\n",
+      "DTISNRDSYSDCNSN\n",
+      ">BAD\n",
+      "VEIRSRHSSYPAGTE\n",
+      ">CRK\n",
+      "VFLVRDSSTSPGDYV\n",
+      ">PPP1R14A\n",
+      "QKRHARVTVKYDRRE\n",
+      ">MYPT1\n",
+      "ARQSRRSTQGVTLTD\n",
+      ">SHOT1\n",
+      "NKTLKRISMLYMAKL\n",
+      ">SHOT1\n",
+      "QNKLKRQSHLLLQSS\n",
+      ">MEF2D\n",
+      "LTDPRLLSPQQPALQ\n",
+      ">PREX2\n",
+      "DTISNRDSYSDCNSN\n",
+      ">CASP7\n",
+      "WRSPGRGSWFVQALC\n",
+      ">SYN1\n",
+      "PATRPPASPSPQRQA\n",
+      ">smMLCK\n",
+      "VRAIGRLSSMAMISG\n",
+      ">smMLCK\n",
+      "MKSRRPKSSLPPVLG\n",
+      ">Mnk1\n",
+      "RRKKKRKTRATDSLP\n",
+      ">SYN1\n",
+      "NYLRRRLSDSNFMAN\n",
+      ">Mnk1\n",
+      "RKTRATDSLPGKFED\n",
+      ">CASP7\n",
+      "FRGDRCKTLLEKPKL\n",
+      ">CASP7\n",
+      "DAKPDRSSFVPSLFS\n",
+      ">SYN1\n",
+      "AGPTRQASQAGPMPR\n",
+      ">MOB1A\n",
+      "LLKHAEATLGSGNLR\n",
+      ">LC3B\n",
+      "QLPVLDKTKFLVPDH\n",
+      ">MOB1A\n",
+      "QINMLYGTITEFCTE\n",
+      ">MOB1A\n",
+      "FSSRSSKTFKPKKNI\n",
+      ">MEK1\n",
+      "ETPPRPRTPGRPLSS\n",
+      ">NHE3\n",
+      "TMRKRLESFKSAKLG\n",
+      ">NHE3\n",
+      "TEGERRGSLAFIRSP\n",
+      ">NHE3\n",
+      "SLEQRRRSVRDAEDV\n",
+      ">mAChR M3\n",
+      "ITKRKRMSLIKEKKA\n",
+      ">GCAP2\n",
+      "ISQQRRKSAMF____\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">desmin\n",
+      "RVSSYRRTFGGAPGF\n",
+      ">GRF-1\n",
+      "PKPKPRPSITKATWE\n",
+      ">GRF-1\n",
+      "GRFASYRTSFSVGSD\n",
+      ">GRF-1\n",
+      "LERGRKVSIVSKPVL\n",
+      ">desmin\n",
+      "VYQVSRTSGGAGGLG\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">desmin\n",
+      "YSSSQRVSSYRRTFG\n",
+      ">GRF-1\n",
+      "RFASYRTSFSVGSDD\n",
+      ">MRLC1\n",
+      "KKRPQSATSNVFAMF\n",
+      ">MRLC1\n",
+      "KRPQSATSNVFAMFD\n",
+      ">TSC2\n",
+      "EILVRRPTGNTSWLM\n",
+      ">calponin 1\n",
+      "IIGLQMGTNKFASQQ\n",
+      ">calponin 1\n",
+      "QGMTAYGTRRHLYDP\n",
+      ">calponin 1\n",
+      "FASQQGMTAYGTRRH\n",
+      ">calponin 1\n",
+      "GASQQGMTVYGLPRQ\n",
+      ">calponin 1\n",
+      "MGTNKFASQQGMTAY\n",
+      ">desmin\n",
+      "LRASRLGTTRTPSSY\n",
+      ">CRMP-2\n",
+      "DNIPRRTTQRIVAPP\n",
+      ">GRF-1\n",
+      "LRSLRRNTKKPKPKP\n",
+      ">desmin\n",
+      "RASRLGTTRTPSSYG\n",
+      ">ELK1\n",
+      "ISVDGLSTPVVLSPG\n",
+      ">CAMK2G\n",
+      "SMMHRQETVECLRKF\n",
+      ">GSK3A\n",
+      "SGRARTSSFAEPGGG\n",
+      ">GSK3B\n",
+      "SGRPRTTSFAESCKP\n",
+      ">CAMK2G\n",
+      "RNFSAAKSLLNKKSD\n",
+      ">CAMK2G\n",
+      "CQRSTVASMMHRQET\n",
+      ">IP3R2\n",
+      "EKNAMRVSLDAAGNE\n",
+      ">Kir6.2\n",
+      "MQVVRKTTSPEGEVV\n",
+      ">POLR2A\n",
+      "TPQSPSYSPTSPSYS\n",
+      ">SF2\n",
+      "SPRRSRGSPRYSPRH\n",
+      ">NMDAR2A\n",
+      "NRTHSLKSPRYLPEE\n",
+      ">SF2\n",
+      "SRGSPRYSPRHSRSR\n",
+      ">GYS1\n",
+      "YRYPRPASVPPSPSL\n",
+      ">SF2\n",
+      "NSRSRSYSPRRSRGS\n",
+      ">amphiphysin\n",
+      "PAPVRPRSPSQTRKG\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">LIN52\n",
+      "FEKLDRASPDLWPEQ\n",
+      ">FOXO1A\n",
+      "STISGRLSPIMTEQD\n",
+      ">CDKL5\n",
+      "RLLDRSPSRSAKRKP\n",
+      ">DYRK1A\n",
+      "SNSGRARSDPTHQHR\n",
+      ">Titin\n",
+      "REQANLFSEWLRNID\n",
+      ">Titin\n",
+      "REQASLFSEWLRNID\n",
+      ">GSK3B\n",
+      "SGRPRTTSFAESCKP\n",
+      ">PKD2\n",
+      "HSSRRRGSISSGVSY\n",
+      ">Titin\n",
+      "ETSARGLSVQAFDSE\n",
+      ">TRPC3 iso3\n",
+      "SPSLRRMTVMREKGR\n",
+      ">TRPC3\n",
+      "KNDYRKLSMQCKDFV\n",
+      ">VASP\n",
+      "EHMERRVSNAGGPPA\n",
+      ">PKD2\n",
+      "KLKLKRNTVDAISES\n",
+      ">PDE3A\n",
+      "REPQRKASACGTYTS\n",
+      ">SF1\n",
+      "PSKKRKRSRWNQDTM\n",
+      ">IP3R1\n",
+      "RNAARRDSVLAASRD\n",
+      ">RHOA\n",
+      "ARRGKKKSGCLVL__\n",
+      ">TRPC6\n",
+      "KNDYKKLSMQCKDFV\n",
+      ">TXA2-R iso2\n",
+      "TRPRRSLTLWPSLEY\n",
+      ">RAP1GAP2\n",
+      "_MFGRKRSVSFGGFG\n",
+      ">TRPC6\n",
+      "RLAHRRQTVLREKGR\n",
+      ">URB\n",
+      "VITARRPSVSENLYP\n",
+      ">TRPC1\n",
+      "SGYRRKPTCKKIMTV\n",
+      ">TRPC1\n",
+      "SAKNKKDSLRHSRFR\n",
+      ">TXA2-R\n",
+      "STRPRSLSLQPQLTQ\n",
+      ">URB\n",
+      "PQTTRRPSKATSLES\n",
+      ">RGS18\n",
+      "PTNLRRRSRSFTCNE\n",
+      ">TXA2-R iso2\n",
+      "LSTRPRRSLTLWPSL\n",
+      ">GUCY1A1\n",
+      "SHPQRKTSRNRVYLH\n",
+      ">MYPT1\n",
+      "ARQSRRSTQGVTLTD\n",
+      ">IP3R1\n",
+      "RPSGRRESLTSFGNG\n",
+      ">RYR1\n",
+      "KKKTRKISQTAQTYD\n",
+      ">CACNA1C\n",
+      "ASLGRRASFHLECLK\n",
+      ">PFKM\n",
+      "AMKLRGRSFMNNWEV\n",
+      ">PFKM\n",
+      "EHISRKRSGEATV__\n",
+      ">TNNI3\n",
+      "PPVRRRSSANYRAYA\n",
+      ">H2B\n",
+      "DGKKRKRSRKESYSV\n",
+      ">H1C\n",
+      "AGARRKASGPPVSEL\n",
+      ">TNNI3\n",
+      "PPPVRRRSSANYRAY\n",
+      ">smMLCK\n",
+      "GLSGRKSSTGSPTSP\n",
+      ">SERINC5\n",
+      "ARCCFCFSPGGEDTE\n",
+      ">POLR2A\n",
+      "TPQSPSYSPTSPSYS\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">MARK2\n",
+      "IDKTQLNSSSLQKLF\n",
+      ">MARK2\n",
+      "DKTQLNSSSLQKLFR\n",
+      ">NUMB\n",
+      "SPFKRQLSLRINELP\n",
+      ">MARK2\n",
+      "LNPSKRGTLEQIMKD\n",
+      ">ARHGEF7\n",
+      "RKPERKPSDEEFAVR\n",
+      ">QIK\n",
+      "RSGQRRHTLSEVTNQ\n",
+      ">NUMB\n",
+      "EQLARQGSFRGFPAL\n",
+      ">RYR1\n",
+      "KKKTRKISQTAQTYD\n",
+      ">FAF1\n",
+      "EREAIRLSLEQALPP\n",
+      ">PELI1\n",
+      "ISNKDQHSISYTLSR\n",
+      ">TRAF3IP2\n",
+      "DLPGPLRSRELPPQF\n",
+      ">TRAF3IP2\n",
+      "ERPLPLTSSCYLQDL\n",
+      ">TRAF3IP2\n",
+      "KVILNDSSPQDQEER\n",
+      ">TRAF3IP2\n",
+      "ESDKSDPSLPNALAD\n",
+      ">PELI1\n",
+      "FNTLAFPSMKRKDVV\n",
+      ">PELI1\n",
+      "QCPVGFNTLAFPSMK\n",
+      ">STAT1\n",
+      "YIKTELISVSEVHPS\n",
+      ">STAT1\n",
+      "IVGPEFDSMMSTV__\n",
+      ">STAT1\n",
+      "PEFDSMMSTV_____\n",
+      ">PELI1\n",
+      "DQHSISYTLSRAQTV\n",
+      ">TRAF2\n",
+      "ASVTPPGSLELLQPG\n",
+      ">ATG3\n",
+      "QTRTYDLYITYDKYY\n",
+      ">ASK1\n",
+      "GINPCTETFTGTLQY\n",
+      ">OXTR\n",
+      "RVALARVSSVKLISK\n",
+      ">BAD\n",
+      "PFRGRSRSAPPNLWA\n",
+      ">CDH2\n",
+      "GSGSTAGSLSSLNSS\n",
+      ">KIDINS220\n",
+      "RTITRQMSFDLTKLL\n",
+      ">TLR4\n",
+      "VELYRLLSRNTYLEW\n",
+      ">AP-2 alpha\n",
+      "EFLNRQHSDPNEQVT\n",
+      ">TLR5\n",
+      "YQLMKHQSIRGFVQK\n",
+      ">AP-2 alpha\n",
+      "GVLRRAKSKNGGRSL\n",
+      ">CACNA1C\n",
+      "ASLGRRASFHLECLK\n",
+      ">CDH2\n",
+      "STAGSLSSLNSSSSG\n",
+      ">DRD1\n",
+      "EKLSPALSVILDYDT\n",
+      ">CDH2\n",
+      "GSTAGSLSSLNSSSS\n",
+      ">PIP5K1C\n",
+      "NTVFRKNSSLKSSPS\n",
+      ">RTKN iso2\n",
+      "QALAKQGSLYHEMAI\n",
+      ">OSBP\n",
+      "TALQRSLSELESLKL\n",
+      ">BAD\n",
+      "GRELRRMSDEFVDSF\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">PIK3R1\n",
+      "TFLVRESSKQGCYAC\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">Caldesmon\n",
+      "GLKVGVSSRINEWLT\n",
+      ">Caldesmon\n",
+      "SGMKPAHTTAVVSKI\n",
+      ">Caldesmon\n",
+      "TGTPNKETAGLKVGV\n",
+      ">Caldesmon\n",
+      "KPAKPAASDLPVPAE\n",
+      ">Caldesmon\n",
+      "SEVNAQNSVAEEETK\n",
+      ">PIAS2\n",
+      "IAPHSPSSPVASVLL\n",
+      ">PIAS2\n",
+      "STSIAPHSPSSPVAS\n",
+      ">P38B\n",
+      "HARTYIQSLPPMPQK\n",
+      ">STAT1\n",
+      "TDNLLPMSPEEFDEM\n",
+      ">GYS1\n",
+      "PSLSRHSSPHQSEDE\n",
+      ">GYS1\n",
+      "RPASVPPSPSLSRHS\n",
+      ">GYS1\n",
+      "ATSSSLSTPSEPLSP\n",
+      ">GYS1\n",
+      "STPSEPLSPTSSLGE\n",
+      ">P38B\n",
+      "RIMEVVGTPSPEVLA\n",
+      ">EEF2K\n",
+      "TFDSLPSSPSSATPH\n",
+      ">SNRK\n",
+      "QPGKKLTTSCGSLAY\n",
+      ">QIK\n",
+      "KSGELLATWCGSPPY\n",
+      ">MBP\n",
+      "KDHAARTTHYGSLPQ\n",
+      ">LIMK1\n",
+      "PGAGSLGSPASQRKD\n",
+      ">SRC-3\n",
+      "SPVSVGSSPPVKNIS\n",
+      ">ELK1\n",
+      "LSPIAPRSPAKLSFQ\n",
+      ">MAPKAPK2\n",
+      "TSHNSLTTPCYTPYY\n",
+      ">4E-BP1\n",
+      "PPGDYSTTPGGTLFS\n",
+      ">osterix\n",
+      "GLLSPAGSPPAPASG\n",
+      ">MEF2D\n",
+      "QPALQRNSVSPGLPQ\n",
+      ">osterix\n",
+      "SSTNGLLSPAGSPPA\n",
+      ">E2F4\n",
+      "PSSTQPSTPTPSSTQ\n",
+      ">E2F4\n",
+      "STQPSTPTPSSTQDH\n",
+      ">Caldesmon\n",
+      "QSVDKVTSPTKV___\n",
+      ">MZF-1\n",
+      "SLSGQIQSPTTEGGF\n",
+      ">AML3 iso5\n",
+      "SYLSQMTSPSIHSTT\n",
+      ">STAT1\n",
+      "TDNLLPMSPEEFDEM\n",
+      ">SCN8A\n",
+      "SLLSIPGSPFLSRHN\n",
+      ">ULK1\n",
+      "PVVFTVGSPPSGATP\n",
+      ">MZF-1\n",
+      "EEVGGIFSPGFTLQM\n",
+      ">ULK1\n",
+      "GGRPYTPSPQVGTIP\n",
+      ">MZF-1\n",
+      "TAEPDMMSPHLHVPW\n",
+      ">DLX5\n",
+      "MHHPSQESPTLPESS\n",
+      ">SIAH2\n",
+      "KQPPPPQTPHAPSPA\n",
+      ">4E-BP1\n",
+      "GGTLFSTTPGGTRII\n",
+      ">SIAH2\n",
+      "PQTPHAPSPAAPPAA\n",
+      ">4E-BP1\n",
+      "FLMECRNSPVAKTPP\n",
+      ">DLX5\n",
+      "SDPMACNSPQSPAVW\n",
+      ">MEF2D\n",
+      "EDKYRRASEELDGLF\n",
+      ">CRYAB\n",
+      "PSFLRAPSWIDTGLS\n",
+      ">ATG5\n",
+      "IWFEYEGTPLKWHYP\n",
+      ">F3\n",
+      "RKAGVGQSWKENSPL\n",
+      ">SRC-3\n",
+      "SPVAGVHSPMASSGN\n",
+      ">BUB3\n",
+      "AVEYLDPSPEVQKKK\n",
+      ">SRC-3\n",
+      "SLLSTLSSPGPKLDN\n",
+      ">CBX4\n",
+      "SLQVKPETPASAAVA\n",
+      ">ELK1\n",
+      "IHFWSTLSPIAPRSP\n",
+      ">HuR\n",
+      "LNGLRLQSKTIKVSY\n",
+      ">WSTF\n",
+      "KSDGACDSPSSDKEN\n",
+      ">HuR\n",
+      "SGLPRTMTQKDVEDM\n",
+      ">MAPKAPK2\n",
+      "SNHGLAISPGMKTRI\n",
+      ">SRC-3\n",
+      "NRAVSLDSPVSVGSS\n",
+      ">CDX2\n",
+      "RSVPEPLSPVSSLQA\n",
+      ">ZNHIT1\n",
+      "AEGPNYLTACAGPPS\n",
+      ">SMAD9\n",
+      "YHYRRVETPVLPPVL\n",
+      ">C/EBP-alpha\n",
+      "PMSSHLQSPPHAPSN\n",
+      ">F3\n",
+      "GQSWKENSPLNVS__\n",
+      ">ISL1\n",
+      "GTPMVAASPERHDGG\n",
+      ">PAK6\n",
+      "MPWPEPQSPRVLPNG\n",
+      ">MAPKAPK2\n",
+      "QSTKVPQTPLHTSRV\n",
+      ">PXN\n",
+      "YAHQQPPSPSPIYSS\n",
+      ">TAO2 iso2\n",
+      "AAVPGPLSRSTSVAS\n",
+      ">STMN1\n",
+      "QAFELILSPRSKESV\n",
+      ">MAPKAPK2\n",
+      "APPPQPPTPALPHPP\n",
+      ">BIM\n",
+      "GPLAPPASPGPFATR\n",
+      ">CBP\n",
+      "PQLASKQSMVNSLPA\n",
+      ">MYH9\n",
+      "RRIVRKGTGDCSDEE\n",
+      ">QIK\n",
+      "RSGQRRHTLSEVTNQ\n",
+      ">NOVA2\n",
+      "EVVCTKRSNTGEEGE\n",
+      ">NOVA2\n",
+      "EQVHKAVSAIVQKVQ\n",
+      ">NOVA2\n",
+      "VCTKRSNTGEEGEYF\n",
+      ">MKK4\n",
+      "ISGQLVDSIAKTRDA\n",
+      ">MKK4\n",
+      "LVDSIAKTRDAGCRP\n",
+      ">TAB3\n",
+      "HKYQRSSSSGSDDYA\n",
+      ">TTRAP\n",
+      "EMERALNSYFEPPVE\n",
+      ">SRC-3\n",
+      "PPYNRAVSLDSPVSV\n",
+      ">RAB10\n",
+      "AGQERFHTITTSYYR\n",
+      ">RAB29\n",
+      "IAGQERFTSMTRLYY\n",
+      ">RAB12\n",
+      "AGQERFNSITSAYYR\n",
+      ">WAVE2\n",
+      "VSLQGINTRKAFRSS\n",
+      ">WAVE2\n",
+      "VVGNDVATILSRRIA\n",
+      ">SNAPIN\n",
+      "NHSVAKETARRRAML\n",
+      ">ASK1\n",
+      "GINPCTETFTGTLQY\n",
+      ">FZD3\n",
+      "RSRDGRYTPCSYRGM\n",
+      ">ASK1\n",
+      "LKISDFGTSKRLAGI\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">Tau\n",
+      "SGKSGDRSGYSSPGS\n",
+      ">Tau\n",
+      "VVRTPPKSPSAAKSR\n",
+      ">Tau\n",
+      "PVVSGDTSPRHLSNV\n",
+      ">Tau\n",
+      "SSPGSPGTPGSRSRT\n",
+      ">Tau\n",
+      "GAEIVYKSPVVSGDT\n",
+      ">MEK1\n",
+      "DDDFEKISELGAGNG\n",
+      ">MEK1\n",
+      "VSGQLIDSMANSFVG\n",
+      ">MEK1\n",
+      "GSAVNGTSSAETNLE\n",
+      ">MEK1\n",
+      "LIDSMANSFVGTRSY\n",
+      ">PINK1\n",
+      "EGLGHGRTLFLVMKN\n",
+      ">KIF13B\n",
+      "SNKGRWESQQDVSQT\n",
+      ">KIF13B\n",
+      "KLSRRSISSPNVNRL\n",
+      ">Tau\n",
+      "NVRSKIGSTENLKHQ\n",
+      ">RAB11FIP2\n",
+      "QRLSSAHSMSDLSGS\n",
+      ">ASF1A\n",
+      "GWSTSENSLNVMLES\n",
+      ">BAD\n",
+      "EIRSRHSSYPAGTED\n",
+      ">IRS1\n",
+      "GCRRRHSSETFSSTP\n",
+      ">PAGE4\n",
+      "PGQEREGTPPIEERK\n",
+      ">HSP40\n",
+      "TNVNFGRSRSAQEPA\n",
+      ">HSP40\n",
+      "VNFGRSRSAQEPARK\n",
+      ">HSP40\n",
+      "VTHDLRVSLEEIYSG\n",
+      ">PYGB\n",
+      "SEKRKQISVRGLAGL\n",
+      ">BRSK1 iso2\n",
+      "VGDSLLETSCGSPHY\n",
+      ">PACSIN1\n",
+      "DRGQAYATEWSDDES\n",
+      ">BLM\n",
+      "KEDVLSTSKDLLSKP\n",
+      ">SRC-3\n",
+      "LLSNTDATGLEEIDR\n",
+      ">SRC-3\n",
+      "DQLHTLLSNTDATGL\n",
+      ">CSN2\n",
+      "LPLPLLQSWMHQPHQ\n",
+      ">LC3B\n",
+      "QLPVLDKTKFLVPDH\n",
+      ">CSN2\n",
+      "EPFTESQSLTLTDVE\n",
+      ">CSN2\n",
+      "HPFAQTQSLVYPFPG\n",
+      ">BRSK1 iso2\n",
+      "VGDSLLETSCGSPHY\n",
+      ">CDC25C\n",
+      "SGLYRSPSMPENLNR\n",
+      ">ERC2\n",
+      "GGTGKTLSMENIQSL\n",
+      ">Tau\n",
+      "NVRSKIGSTENLKHQ\n",
+      ">BRSK1 iso2\n",
+      "LLETSCGSPHYACPE\n",
+      ">GLI2\n",
+      "AEGLRPASPLGLTQE\n",
+      ">SIAH2\n",
+      "PQPQHTPSPAAPPAA\n",
+      ">4E-BP1\n",
+      "SQSHLRNSPEDKRAG\n",
+      ">CRMP-2\n",
+      "PASSAKTSPAKQQAP\n",
+      ">SIAH2\n",
+      "GGGAGPVSPQHHELT\n",
+      ">SIAH2\n",
+      "PTCRGALTPSIRNLA\n",
+      ">4E-BP1\n",
+      "FLMECRNSPVTKTPP\n",
+      ">SIAH2\n",
+      "PPPQPQHTPSPAAPP\n",
+      ">SIAH2\n",
+      "PSANKPCSKQPPPQP\n",
+      ">GLI2\n",
+      "NLTRNAYSPRPPSIN\n",
+      ">GYS1\n",
+      "YRYPRPASVPPSPSL\n",
+      ">GADS\n",
+      "TLMHRRHTDPVQLQA\n",
+      ">SLP76\n",
+      "IGFQQSASLPPYFSQ\n",
+      ">BLNK\n",
+      "AKARLASTLPAPNSL\n",
+      ">KIF4A\n",
+      "PPKLRRRTFSLTEVR\n",
+      ">desmin\n",
+      "RVSSYRRTFGGAPGF\n",
+      ">INCENP\n",
+      "TSSAVWNSPPLQGAR\n",
+      ">INCENP\n",
+      "RYHKRTSSAVWNSPP\n",
+      ">INCENP\n",
+      "KVVRPLRTFLHTVQR\n",
+      ">INCENP\n",
+      "PRYHKRTSSAVWNSP\n",
+      ">MISP\n",
+      "RRERGRPSLYVQRDI\n",
+      ">CKAP2\n",
+      "EHLLRRKTLFAYKQE\n",
+      ">desmin\n",
+      "YSSSQRVSSYRRTFG\n",
+      ">Survivin\n",
+      "FLEGCACTPERMAEA\n",
+      ">Diaphanous-2 iso4\n",
+      "CLESLRVSLTSNPVS\n",
+      ">Survivin\n",
+      "KNKIAKETNNKKKEF\n",
+      ">LMO7\n",
+      "DMSYRRISAVEPKTA\n",
+      ">LMO7 iso3\n",
+      "KWKDRRKSYTSDLQK\n",
+      ">Diaphanous-2 iso4\n",
+      "ITSFRKSTVKKEKPL\n",
+      ">Diaphanous-2 iso4\n",
+      "KSADQKTTLLHFIAD\n",
+      ">Diaphanous-2 iso4\n",
+      "HINNIKPSIIAVTLA\n",
+      ">HIST2H2BC\n",
+      "ERIAGEASRLAHYNK\n",
+      ">PRRC2C\n",
+      "NDRPVRRSGPIKKPV\n",
+      ">INCENP\n",
+      "KPRYHKRTSSAVWNS\n",
+      ">YY1\n",
+      "GKKSGKKSYLSGGAG\n",
+      ">KIF4A\n",
+      "KLRRRTFSLTEVRGQ\n",
+      ">INCENP\n",
+      "EPELMPKTPSQKNRR\n",
+      ">RPS10\n",
+      "GERPARLTRGEADRD\n",
+      ">SH2D4A\n",
+      "REDYKRLSLGAQKGR\n",
+      ">MYH10\n",
+      "ANKLVRRTEKKLKEI\n",
+      ">KIF23 iso2\n",
+      "IRLRHRRSRSAGDRW\n",
+      ">INCENP\n",
+      "APRSVMKSFIKRNTP\n",
+      ">Plectin-1\n",
+      "PVRNRRLTVNEAVKE\n",
+      ">CKAP2\n",
+      "FLTPVRRSRRLQEKT\n",
+      ">desmin\n",
+      "VYQVSRTSGGAGGLG\n",
+      ">KI-67\n",
+      "EAPTKRKSLVMHTPP\n",
+      ">MIS18A\n",
+      "SLLGKRLSEDSSRHQ\n",
+      ">smMLCK\n",
+      "KTPGGRLSVPPVEHR\n",
+      ">smMLCK\n",
+      "PPVEHRPSIWGESPP\n",
+      ">AML2\n",
+      "YHRAIKVTVDGPREP\n",
+      ">AML2\n",
+      "PSTSRRFTPPSPAFP\n",
+      ">MPHOSPH10\n",
+      "KESLKRVTFALPDDA\n",
+      ">DDA1\n",
+      "KASNRRPSVYLPTRE\n",
+      ">INCENP\n",
+      "RRKKRRISYVQDENR\n",
+      ">KI-67\n",
+      "YTTGRRESVNLGKSE\n",
+      ">KIF23\n",
+      "NGSRKRRSSTVAPAQ\n",
+      ">NUDC\n",
+      "FSFLRRKTDFFIGGE\n",
+      ">NCCT\n",
+      "SHLTHSSTFCMRTFG\n",
+      ">NCCT\n",
+      "SSTFCMRTFGYNTID\n",
+      ">STLK3\n",
+      "KVRRVPGSSGHLHKT\n",
+      ">NCCT\n",
+      "SSHPSHLTHSSTFCM\n",
+      ">ULK1\n",
+      "AEMRGGRSPRPGSSA\n",
+      ">ULK1\n",
+      "IRRSGSTSPLGFARA\n",
+      ">ULK1\n",
+      "GVLARKMSLGGGRPY\n",
+      ">GPSM2\n",
+      "LKGKKYKTNSSTKVL\n",
+      ">VHL\n",
+      "TGRRIHSYRGHLWLF\n",
+      ">VHL\n",
+      "RRLDIVRSLYEDLED\n",
+      ">VHL\n",
+      "QKDLERLTQERIAHQ\n",
+      ">VHL\n",
+      "YPTLPPGTGRRIHSY\n",
+      ">VHL\n",
+      "SLVKPENYRRLDIVR\n",
+      ">VHL\n",
+      "GEPQPYPTLPPGTGR\n",
+      ">VHL\n",
+      "RCLQVVRSLVKPENY\n",
+      ">GYS1\n",
+      "YRYPRPASVPPSPSL\n",
+      ">PACSIN1\n",
+      "DRGQAYATEWSDDES\n",
+      ">CAMKK2\n",
+      "KHIPSLATVILVKTM\n",
+      ">IKKA\n",
+      "AKDVDQGSLCTSFVG\n",
+      ">Moesin\n",
+      "LGRDKYKTLRQIRQG\n",
+      ">JNK1\n",
+      "AGTSFMMTPYVVTRY\n",
+      ">ASK1\n",
+      "CTETFTGTLQYMAPE\n",
+      ">ASK1\n",
+      "NEYLRSISLPVPVLV\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">ASK1\n",
+      "GINPCTETFTGTLQY\n",
+      ">ASK1\n",
+      "GDNVLINTYSGVLKI\n",
+      ">MKK4\n",
+      "LVDSIAKTRDAGCRP\n",
+      ">p47phox\n",
+      "KRGWVPASYLEPLDS\n",
+      ">eIF3-epsilon\n",
+      "PAAAPASSSDPAAAA\n",
+      ">eIF3-epsilon\n",
+      "GAARVIGTLLGTVDK\n",
+      ">PINK1\n",
+      "MWNISAGSSSEAILN\n",
+      ">PINK1\n",
+      "AGEYGAVTYRKSKRG\n",
+      ">ubiquitin\n",
+      "YNIQKESTLHLVLRL\n",
+      ">ubiquitin\n",
+      "DYNIQKESTLHLVLR\n",
+      ">EFTU\n",
+      "ETPVIVGSALCALEG\n",
+      ">PINK1\n",
+      "GLQLPFSSWYVDRGG\n",
+      ">LETM1\n",
+      "ILNGHSLTRRERRQF\n",
+      ">NKCC2\n",
+      "LQTFGHNTMDAVPKI\n",
+      ">NCCT\n",
+      "LRTFGYNTIDVVPAY\n",
+      ">NKCC2\n",
+      "TNTYYLQTFGHNTMD\n",
+      ">SET iso2\n",
+      "KDLTKRSSQTQNKAS\n",
+      ">IRS1\n",
+      "QHLRLSSSSGRLRYT\n",
+      ">QIK\n",
+      "RLKSHRSSFPVEQRL\n",
+      ">QIK\n",
+      "YQVMETKSMLYLVTE\n",
+      ">QIK\n",
+      "DGRQRRPSTIAEQTV\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">PXN\n",
+      "SSPQRVTSSQQQTRI\n",
+      ">CBX4\n",
+      "SLQVKPETPASAAVA\n",
+      ">KLF3\n",
+      "GLSMPSSSPPIKKYS\n",
+      ">KLF3\n",
+      "SPPIKKYSPPSPGVQ\n",
+      ">SIAH2\n",
+      "GGGAGPVSPQHHELT\n",
+      ">SIAH2\n",
+      "PPPQPQHTPSPAAPP\n",
+      ">KLF3\n",
+      "PPLMNSVSPPQALLQ\n",
+      ">KLF3\n",
+      "SPPSAGNSPSSLKFP\n",
+      ">KLF3\n",
+      "IKKYSPPSPGVQPFG\n",
+      ">KLF3\n",
+      "LTVNKRSSPPSAGNS\n",
+      ">KLF3\n",
+      "DYYPEEMSPPLMNSV\n",
+      ">KLF3\n",
+      "PSSHRRASPGLSMPS\n",
+      ">SIAH2\n",
+      "PTCRGALTPSIRNLA\n",
+      ">SIAH2\n",
+      "PQPQHTPSPAAPPAA\n",
+      ">KLF3\n",
+      "KRPLPVESPDTQRKR\n",
+      ">CDC25C\n",
+      "EDQAEEISDELMEFS\n",
+      ">CDC25C\n",
+      "SDELMEFSLKDQEAK\n",
+      ">CCNB1\n",
+      "SPSPMETSGCAPAEE\n",
+      ">SNCB\n",
+      "LMEPEGESYEDPPQE\n",
+      ">SNCA\n",
+      "SEAYEMPSEEGYQDY\n",
+      ">Plectin-1\n",
+      "RAGSRRGSFDATGSG\n",
+      ">EIF4E\n",
+      "DTATKSGSTTKNRFV\n",
+      ">APC\n",
+      "PDGFSCSSSLSALSL\n",
+      ">APC\n",
+      "SSSLSALSLDEPFIQ\n",
+      ">LYN\n",
+      "SKGKDSLSDDGVDLK\n",
+      ">APC\n",
+      "FSCSSSLSALSLDEP\n",
+      ">APC\n",
+      "DGFSCSSSLSALSLD\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">PELI1\n",
+      "DQHSISYTLSRAQTV\n",
+      ">PELI1\n",
+      "NKDQHSISYTLSRAQ\n",
+      ">PELI1\n",
+      "ISNKDQHSISYTLSR\n",
+      ">PELI1\n",
+      "YTLSRAQTVVVEYTH\n",
+      ">PELI1\n",
+      "FNTLAFPSMKRKDVV\n",
+      ">PELI1\n",
+      "QCPVGFNTLAFPSMK\n",
+      ">PELI1\n",
+      "PQAAKAISNKDQHSI\n",
+      ">PELI1\n",
+      "HSISYTLSRAQTVVV\n",
+      ">PELI1\n",
+      "GSQSNSDTQSVQSTI\n",
+      ">POLR2A\n",
+      "TPQSPSYSPTSPSYS\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">SNCB\n",
+      "LMEPEGESYEDPPQE\n",
+      ">HK2\n",
+      "QHRARQKTLEHLQLS\n",
+      ">EIF4B\n",
+      "RPRERHPSWRSEETQ\n",
+      ">PFKFB3\n",
+      "TKKPRINSFEERVAS\n",
+      ">IRS1\n",
+      "GCRRRHSSETFSSTP\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">SRC-3\n",
+      "NRAVSLDSPVSVGSS\n",
+      ">SRC-3\n",
+      "PPYNRAVSLDSPVSV\n",
+      ">SRC-3\n",
+      "SLLSTLSSPGPKLDN\n",
+      ">FOXO1A\n",
+      "STISGRLSPIMTEQD\n",
+      ">SRC-3\n",
+      "KRKLPCDTPGQGLTC\n",
+      ">SRC-3\n",
+      "SPVSVGSSPPVKNIS\n",
+      ">SRC-3\n",
+      "SPVAGVHSPMASSGN\n",
+      ">NCCT\n",
+      "SSTFCMRTFGYNTID\n",
+      ">NKCC2\n",
+      "LQTFGHNTMDAVPKI\n",
+      ">NKCC2\n",
+      "AYDSHTNTYYLQTFG\n",
+      ">NKCC2\n",
+      "TNTYYLQTFGHNTMD\n",
+      ">NCCT\n",
+      "MRTFGYNTIDVVPTY\n",
+      ">NCCT\n",
+      "SSHPSHLTHSSTFCM\n",
+      ">NKCC1\n",
+      "LRTFGHNTMDAVPRI\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">SIKE\n",
+      "LQARKENSMDTASQA\n",
+      ">TRIM56\n",
+      "LEEDRAQTPHEDGGP\n",
+      ">GABARAPL2\n",
+      "DKTVPQSSLTMGQLY\n",
+      ">GABARAPL2\n",
+      "VDKTVPQSSLTMGQL\n",
+      ">RKIP\n",
+      "VLSDYVGSGPPKGTG\n",
+      ">SIKE\n",
+      "PVLKAHQSHSAEIES\n",
+      ">SIKE\n",
+      "RELLSISSESLQARK\n",
+      ">PELI1\n",
+      "FNTLAFPSMKRKDVV\n",
+      ">PELI1\n",
+      "ISNKDQHSISYTLSR\n",
+      ">SIKE\n",
+      "KELRELLSISSESLQ\n",
+      ">SIKE\n",
+      "LLSISSESLQARKEN\n",
+      ">SIKE\n",
+      "LRELLSISSESLQAR\n",
+      ">LMO7 iso3\n",
+      "KWKDRRKSYTSDLQK\n",
+      ">PELI1\n",
+      "QCPVGFNTLAFPSMK\n",
+      ">Raptor\n",
+      "HMHQVGGSPPASSTS\n",
+      ">Nik\n",
+      "TCHQTLPTPPRENPP\n",
+      ">TRAF3IP2\n",
+      "DLPGPLRSRELPPQF\n",
+      ">Nik\n",
+      "PATAKGPSFPDRRAT\n",
+      ">Nik\n",
+      "ALQGSVSSGQAHSLA\n",
+      ">Nik\n",
+      "QSSRDTLSSGVHSWN\n",
+      ">INSR\n",
+      "LRELGQGSFGMVYEG\n",
+      ">Nik\n",
+      "QQYSQSESLDQIPNN\n",
+      ">Nik\n",
+      "AQAECENSQEFSPTF\n",
+      ">Nik\n",
+      "SSRDTLSSGVHSWNS\n",
+      ">MCPIP1\n",
+      "YPSREYWSEPYPLPP\n",
+      ">Nik\n",
+      "GQAHSLASLAKTWSS\n",
+      ">TRAF3IP2\n",
+      "ERPLPLTSSCYLQDL\n",
+      ">Nik\n",
+      "GVKVQIQSLNGEHLH\n",
+      ">Nik\n",
+      "RRKKRSKSLAQAGVA\n",
+      ">TRAF3IP2\n",
+      "ESDKSDPSLPNALAD\n",
+      ">Nik\n",
+      "KLEAVEKSPVFCGKW\n",
+      ">Nik\n",
+      "VSSGQAHSLASLAKT\n",
+      ">optineurin\n",
+      "SGGSSEDSFVEIRMT\n",
+      ">Nik\n",
+      "KAPALNLSKEESGTW\n",
+      ">PELI1\n",
+      "DQHSISYTLSRAQTV\n",
+      ">MCPIP1\n",
+      "AMGAGHFSVPTDYVP\n",
+      ">TAO2\n",
+      "SIMAPANSFVGTPYW\n",
+      ">SEPT7\n",
+      "EQQNSSRTLEKNKKK\n",
+      ">CDK11B iso12\n",
+      "KHEYFRETPLPIDPS\n",
+      ">INCENP\n",
+      "PRYHKRTSSAVWNSP\n",
+      ">INCENP\n",
+      "KPRYHKRTSSAVWNS\n",
+      ">INCENP\n",
+      "RYHKRTSSAVWNSPP\n",
+      ">Survivin\n",
+      "FLKDHRISTFKNWPF\n",
+      ">HSL\n",
+      "ESMRRSVSEAALAQP\n",
+      ">smMLCK\n",
+      "GMSGRKASGSSPTSP\n",
+      ">mGluR1\n",
+      "KLPCRSNTFLNIFRR\n",
+      ">Caldesmon\n",
+      "RNLWEKQSVEKPAAS\n",
+      ">Caldesmon\n",
+      "SEVNAQNSVAEEETK\n",
+      ">Caldesmon\n",
+      "QKEEGDVSGEVTEKS\n",
+      ">Caldesmon\n",
+      "CFSPKGSSLKIEERA\n",
+      ">SYN1\n",
+      "AGPTRQASQAGPMPR\n",
+      ">Caldesmon\n",
+      "QNGERELTTPKLKST\n",
+      ">smMLCK\n",
+      "RAIGRLSSMAMISGM\n",
+      ">Caldesmon\n",
+      "LTTPKLKSTENAFGR\n",
+      ">Caldesmon\n",
+      "AVVSKIDSRLEQYTS\n",
+      ">CACNA1C\n",
+      "GVLSGEFSKEREKAK\n",
+      ">MYH9\n",
+      "RRIVRKGTGDCSDEE\n",
+      ">CAMK2A\n",
+      "MLATRNFSGGKSGGN\n",
+      ">CACNA1S\n",
+      "PEIRRTISGDLTAEE\n",
+      ">CACNA1C\n",
+      "PEIRRAISGDLTAEE\n",
+      ">CACNA1C iso4\n",
+      "DYLTRDWSILGPHHL\n",
+      ">CACNA1C\n",
+      "VACKRLVSMNMPLNS\n",
+      ">Caldesmon\n",
+      "RLEAERLSYQRNDDD\n",
+      ">TNNT2\n",
+      "GYIQKAQTERKSGKR\n",
+      ">RYR2\n",
+      "ISQTSQVSIDAAHGY\n",
+      ">Kv4.2\n",
+      "LLSNQLQSSEDEPAF\n",
+      ">CREB\n",
+      "EILSRRPSYRKILND\n",
+      ">P2X3\n",
+      "ATVEKQSTDSGAYSI\n",
+      ">MOR-1\n",
+      "LMILRLKSVRMLSGS\n",
+      ">IP3R2\n",
+      "EKNAMRVSLDAAGNE\n",
+      ">MOR-1\n",
+      "STRVRQNTREHPSTA\n",
+      ">MECP2\n",
+      "EKMPRAGSLESDGCP\n",
+      ">RIMS1\n",
+      "KQASRSRSEPPRERK\n",
+      ">CACNA1B\n",
+      "ERARPRRSHSKEAPG\n",
+      ">Vimentin\n",
+      "TTSTRTYSLGSALRP\n",
+      ">CAMK2A\n",
+      "ILTTMLATRNFSGGK\n",
+      ">nNOS\n",
+      "SYKVRFNSVSSYSDS\n",
+      ">RYR2\n",
+      "YNRTRRISQTSQVSI\n",
+      ">CACNA1B\n",
+      "SEKQRFYSCDRFGSR\n",
+      ">GluR4\n",
+      "TRNKARLSITGSVGE\n",
+      ">Kv4.2\n",
+      "ARIRAAKSGSANAYM\n",
+      ">rabphilin 3A\n",
+      "QGLRRANSVQASRPA\n",
+      ">RIMS1\n",
+      "RLQERSRSQTPLSTA\n",
+      ">DLG1\n",
+      "SSIERVISIFQSNLF\n",
+      ">CREB\n",
+      "RKILNDLSSDAPGVP\n",
+      ">mAChR M4\n",
+      "TYPARRTTKMAGLMI\n",
+      ">DRD3\n",
+      "RILTRQNSQCISIRP\n",
+      ">CACNA1B\n",
+      "RLQNLRASCEALYSE\n",
+      ">SMARCA2\n",
+      "RPPAEKLSPNPPKLT\n",
+      ">GLO1\n",
+      "ELTHNWGTEDDETQS\n",
+      ">RYR2\n",
+      "YNRTRRISQTSQVSV\n",
+      ">SPR\n",
+      "QQLARETSVDPDMRK\n",
+      ">ITPKA\n",
+      "EHAQRAVTKPRYMQW\n",
+      ">PLCB3\n",
+      "PSLEPQKSLGDEGLN\n",
+      ">FBX43\n",
+      "FSQQKTSTIDDSKDD\n",
+      ">separase\n",
+      "TDNWRKMSFEILRGS\n",
+      ">CPEB3\n",
+      "QALSSGLSSPTRCQN\n",
+      ">CPEB3\n",
+      "PSPLNPISPLKKPFS\n",
+      ">CPEB3\n",
+      "SPLKKPFSSNVIAPP\n",
+      ">CPEB3\n",
+      "GRRRGRSSLFPFEDA\n",
+      ">CPEB3\n",
+      "PLKKPFSSNVIAPPK\n",
+      ">CPEB3\n",
+      "SSGLSSPTRCQNGER\n",
+      ">CPEB3\n",
+      "YGRRRGRSSLFPFED\n",
+      ">Kir6.2\n",
+      "MQVVRKTTSPEGEVV\n",
+      ">Kir6.2\n",
+      "QAHRRAETLIFSKHA\n",
+      ">PTPRA\n",
+      "QAGSHSNSFRLSNGR\n",
+      ">TPH2\n",
+      "YWARRGLSLDSAVPE\n",
+      ">PTPRA\n",
+      "PLLARSPSTNRKYPP\n",
+      ">VEGFR2\n",
+      "FVEEKSLSDVEEEEA\n",
+      ">FosB\n",
+      "RNRRRELTDRLQAET\n",
+      ">KIF17\n",
+      "SKAKRKKSKNSFGGE\n",
+      ">RYR2\n",
+      "ISQTSQVSVDAAHGY\n",
+      ">FosB\n",
+      "SAESQYLSSVDSFGS\n",
+      ">FosB\n",
+      "PRRPREETLTPEEEE\n",
+      ">p47phox\n",
+      "KRGWVPASYLEPLDS\n",
+      ">HDAC5\n",
+      "KVAERRSSPLLRRKD\n",
+      ">HNF1A\n",
+      "IQRGVSPSQAQGLGS\n",
+      ">LIN52\n",
+      "FEKLDRASPDLWPEQ\n",
+      ">GYS1\n",
+      "YRYPRPASVPPSPSL\n",
+      ">ID2\n",
+      "LGISRSKTPVDDPMS\n",
+      ">SIAH2\n",
+      "RRLTWEATPRSIHDG\n",
+      ">SIAH2\n",
+      "__MSRPSSTGPSANK\n",
+      ">LYN\n",
+      "SKGKDSLSDDGVDLK\n",
+      ">MEKK4\n",
+      "KLKNNAQTMPGEVNS\n",
+      ">LMO7 iso3\n",
+      "SPSPRSHSPSMSQSG\n",
+      ">PDHK1\n",
+      "AEDAKAIYDFTDTVI\n",
+      ">ZC3H4\n",
+      "SRGRGRGYRGRGSRG\n",
+      ">VEGFR2\n",
+      "RFRQGKDYVGAIPVD\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">GR\n",
+      "DLEFSAGSPSKDTNE\n",
+      ">ULK1\n",
+      "PVVFTVGSPPSGATP\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">Arg\n",
+      "QGWVPSNYITPVNSL\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">VHL\n",
+      "SLVKPENYRRLDIVR\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">TXK\n",
+      "KIQVKALYDFLPREP\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">RIP140\n",
+      "SSPKNTSYKNSLERN\n",
+      ">Ret\n",
+      "TPSDSLIYDDGLSEE\n",
+      ">RRas\n",
+      "DPTIEDSYTKICSVD\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">BCAP\n",
+      "LGQEEDVYHTVDDDE\n",
+      ">PLCG1\n",
+      "KLAEGSAYEEVPTSV\n",
+      ">PMCA4 iso6\n",
+      "LDGEVTPYANTNNNA\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">PLCG2\n",
+      "LESEEELYSSCRQLR\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">CDKL5\n",
+      "NNANYTEYVATRWYR\n",
+      ">P2X3\n",
+      "QSTDSGAYSIGH___\n",
+      ">PKCD\n",
+      "SSEPVGIYQGFEKKT\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">PKCD\n",
+      "IPDNNGTYGKIWEGS\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">TACE\n",
+      "DKKLDKQYESLSLFH\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">Arg\n",
+      "EKLRVLGYNQNGEWS\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAQKD\n",
+      ">Arg\n",
+      "QGWVPSNYITPVNSL\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">NHE3\n",
+      "AEGERRGSLAFIRSP\n",
+      ">BIM\n",
+      "GPLAPPASPGPFATR\n",
+      ">GAP43\n",
+      "VTDAAATTPAAEDAA\n",
+      ">HCN4\n",
+      "QVPQRRGTPPLTPGR\n",
+      ">MBP\n",
+      "KYLASASTMDHARHG\n",
+      ">hnRNP F\n",
+      "GPYDRPGTARRYIGI\n",
+      ">PDE4A\n",
+      "ATSQRRESFLYRSDS\n",
+      ">TIAM1\n",
+      "DVNAGEGSEFADSGI\n",
+      ">ACF7\n",
+      "ADPKKSASRPGSRAG\n",
+      ">RAPGEF2 iso2\n",
+      "AIREFAVTATPDQYS\n",
+      ">SLC4A1\n",
+      "IDAYMAQSRGELLHS\n",
+      ">E2F4\n",
+      "PSSTQPSTPTPSSTQ\n",
+      ">CASK\n",
+      "DKINTKSSPQIRNPP\n",
+      ">ADRB1\n",
+      "RAGKRRPSRLVALRE\n",
+      ">PPAR-gamma iso2\n",
+      "WPTNFGISSVDLSVM\n",
+      ">ELK1\n",
+      "TLTPVLLTPSSLPPS\n",
+      ">RIMS1\n",
+      "ISVISPTSPGALKDA\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">FGFR3\n",
+      "DVHNLDYYKKTTNGR\n",
+      ">IRTKS\n",
+      "PAPSGRAYTSPLIDM\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">CACNA1C\n",
+      "ELQDSRVYVSSL___\n",
+      ">GRK2\n",
+      "ARPLVEFYEEIKKYE\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">GMPR\n",
+      "GRKLKLFYGMSSDTA\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">VEGFR2\n",
+      "FGLARDIYKDPDYVR\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">Arg\n",
+      "KCNKPTVYGVSPIHD\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">DLC1\n",
+      "SAEDNVNYEGQSAYD\n",
+      ">PKCD\n",
+      "KVKSPSDYSNFDPEF\n",
+      ">RRas\n",
+      "DPTIEDSYTKICSVD\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">CDH1\n",
+      "FDYEGSGSEAASLSS\n",
+      ">SYNE1\n",
+      "EFSKRTESIATQAEN\n",
+      ">TNNT2\n",
+      "GYIQKAQTERKSGKR\n",
+      ">Bcl-2L12\n",
+      "SESPRPCSLPIRPCY\n",
+      ">DOK7\n",
+      "GGDDRSLSSSSSEAS\n",
+      ">HCN4\n",
+      "RHPRRLQSLIPSALG\n",
+      ">GAP43\n",
+      "VTDAAATTPAAEDAA\n",
+      ">SUZ12\n",
+      "RPKRTKASMSEFLES\n",
+      ">PD-L1\n",
+      "GKTTTTNSKREEKLF\n",
+      ">ACE2\n",
+      "PYASIDISKGENNPG\n",
+      ">APC\n",
+      "EFSSGAKSPSKSGAQ\n",
+      ">CPEB\n",
+      "DTRPILDSRSSSPSD\n",
+      ">VHL\n",
+      "PVLRSVNSREPSQVI\n",
+      ">JMJD2B\n",
+      "PTWKEPVSPMELTGP\n",
+      ">MCPIP1\n",
+      "CLDSGIGSLESQMSE\n",
+      ">STX1A\n",
+      "IIMDSSISKQALSEI\n",
+      ">SERINC3\n",
+      "DTTTSGASDEEDGQP\n",
+      ">neurogenin 2\n",
+      "SCTLSPASPGSDVDY\n",
+      ">CACNB1\n",
+      "IVYIKITSPKVLQRL\n",
+      ">CDK11B\n",
+      "QRVKRGTSPRPPEGG\n",
+      ">ULK1\n",
+      "FDFPKTPSSQNLLTL\n",
+      ">N-CoR1\n",
+      "NKSNSRKSKSPIPGQ\n",
+      ">HCN4\n",
+      "PPRPERPSFMAGASG\n",
+      ">eIF3-epsilon\n",
+      "GAARVIGTLLGTVDK\n",
+      ">NRF2\n",
+      "NDSDSGISLNTSPSR\n",
+      ">P2X3\n",
+      "ATVEKQSTDSGAYSI\n",
+      ">Titin\n",
+      "LRTEEGKSLSFPLAL\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">SNCB\n",
+      "EDPPQEEYQEYEPEA\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">MUC1\n",
+      "NGGSSLSYTNPAVAA\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">RAPGEF2 iso2\n",
+      "RECKNFNSMFAIISG\n",
+      ">CK1D\n",
+      "PATRGLPSTASGRLR\n",
+      ">PTPRA\n",
+      "PLLARSPSTNRKYPP\n",
+      ">DLC1\n",
+      "KELKRRNSSSSLSSR\n",
+      ">NCKAP5L\n",
+      "RSTFRGPSPEPPPSP\n",
+      ">MKK4\n",
+      "ISGQLVDSIAKTRDA\n",
+      ">GABARAPL2\n",
+      "DKTVPQSSLTMGQLY\n",
+      ">PINK1\n",
+      "VLRAFTSSVPLLPGA\n",
+      ">CDH1\n",
+      "GSEAASLSSLNSSES\n",
+      ">DENR\n",
+      "AKLTVENSPKQEAGI\n",
+      ">CDC6\n",
+      "TPHLPPCSPPKQGKK\n",
+      ">Nik\n",
+      "AQAECENSQEFSPTF\n",
+      ">CACNA1D\n",
+      "RRWGQAISKSKLRSH\n",
+      ">FMNL2\n",
+      "MEQQDPKSPSHKSKR\n",
+      ">CDH1\n",
+      "GSEAASLSSLNSSES\n",
+      ">PHF23\n",
+      "RLGGPPKSGEP____\n",
+      ">MCPIP1\n",
+      "YPSREYWSEPYPLPP\n",
+      ">ZNF9\n",
+      "GHLARECTIEATA__\n",
+      ">FNIP1\n",
+      "PRNESSDSALGDSES\n",
+      ">AMPKB1\n",
+      "HKTPRRDSSGGTKDG\n",
+      ">MRLC1\n",
+      "KKRPQSATSNVFAMF\n",
+      ">KI-67\n",
+      "QYSQQQNSPQKHKNK\n",
+      ">Tau\n",
+      "SSPGSPGTPGSRSRT\n",
+      ">NOVA2\n",
+      "EQVHKAVSAIVQKVQ\n",
+      ">CAMKK2\n",
+      "KDEIGKGSYGVVKLA\n",
+      ">GCAP2\n",
+      "ISQQRRKSAMF____\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">Ret\n",
+      "PLLLIVEYAKYGSLR\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">PMCA4 iso6\n",
+      "LDGEVTPYANTNNNA\n",
+      ">RIMS1\n",
+      "ISVISPTSPGALKDA\n",
+      ">AMPKG1\n",
+      "TYNNLDVSVTKALQH\n",
+      ">GYS1\n",
+      "MPLSRTLSVSSLPGL\n",
+      ">AQP4\n",
+      "MEVEDNRSQVETEDL\n",
+      ">FBXO4\n",
+      "EPRSGTNSPPPPFSD\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">Ret\n",
+      "AQAFPVSYSSSGARR\n",
+      ">CAMKK1\n",
+      "RREERSMSAPGNLLV\n",
+      ">NONO\n",
+      "NLEKQNHTPRKHHQH\n",
+      ">JMJD2B\n",
+      "IDYGKVATQCTCRKD\n",
+      ">CAAP1\n",
+      "EGDNGMDSDMEEEAD\n",
+      ">GRK5\n",
+      "LDIEQFSTVKGVNLD\n",
+      ">CRK\n",
+      "VFLVRDSSTSPGDYV\n",
+      ">C1orf198\n",
+      "FTYFSSLSPMARKIM\n",
+      ">RASGRF1\n",
+      "QEKAAWTSDIIQCVD\n",
+      ">GR\n",
+      "TSATGCATPTEKEFP\n",
+      ">CACNA1C iso4\n",
+      "DYLTRDWSILGPHHL\n",
+      ">53BP2\n",
+      "NSDMPAPSPGLDYEP\n",
+      ">MEKK1\n",
+      "RQLRKVRSVELDQLP\n",
+      ">TANC1\n",
+      "SSQNPPPSPMPGRIA\n",
+      ">PYGB\n",
+      "SEKRKQISVRGLAGL\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">CDKL5\n",
+      "NNANYTEYVATRWYR\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">CTNND2\n",
+      "ERDRQRPYSSSRTPS\n",
+      ">PKCD\n",
+      "SSEPVGIYQGFEKKT\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">RBM10 iso2\n",
+      "LGARGSSYGVTSTES\n",
+      ">MUC1\n",
+      "SSTDRSPYEKVSAGN\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">STAM2\n",
+      "KSEPEPVYIDEDKMD\n",
+      ">ROMK\n",
+      "SKTKEGKYRVDFHNF\n",
+      ">Tks5\n",
+      "VKYEEPEYDVPAFGF\n",
+      ">ROCK2\n",
+      "LADKNKIYESIEEAK\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">NPHS1\n",
+      "PGAWGPLYDEVRMDP\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">ATG3\n",
+      "QTRTYDLYITYDKYY\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">GluR2\n",
+      "YKEGYNVYGIESVKI\n",
+      ">NPHS1\n",
+      "AEVDPNYYSMRDFSP\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">CCDC50\n",
+      "TDGEDADYTHFTNQQ\n",
+      ">DEPTOR\n",
+      "SSCGSSGYFSSSPTL\n",
+      ">PTPRJ\n",
+      "DSKVDLIYQNTTAMT\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">EphA2\n",
+      "RQSPEDVYFSKSEQL\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">IRS1\n",
+      "TLHTDDGYMPMSPGV\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">LYN\n",
+      "RNTERTIYVRDPTSN\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">GLRB\n",
+      "RDFELSNYDCYGKPI\n",
+      ">DLC1\n",
+      "SAEDNVNYEGQSAYD\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">PLCG2\n",
+      "LESEEELYSSCRQLR\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">FGFR3\n",
+      "DVHNLDYYKKTTNGR\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">MUC1\n",
+      "TYHTHGRYVPPSSTD\n",
+      ">Hck\n",
+      "YTATESQYQQQP___\n",
+      ">PTPRJ\n",
+      "NTTAMTIYENLAPVT\n",
+      ">FLT3\n",
+      "DIMSDSNYVVRGNAR\n",
+      ">TSAd\n",
+      "PDEPIAFYAMGRGSP\n",
+      ">PLCG1\n",
+      "EGSFEARYQQPFEDF\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">DAB1 iso2\n",
+      "VEDPVYQYIVFEAGH\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">BCAP\n",
+      "LGQEEDVYHTVDDDE\n",
+      ">PMCA4 iso6\n",
+      "LDGEVTPYANTNNNA\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">IRTKS\n",
+      "LINLGKNYEKAVNAM\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">Tks5\n",
+      "VKYEEPEYDVPAFGF\n",
+      ">endophilin B1\n",
+      "ARIEEFVYEKLDRKA\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">MAP2 iso3\n",
+      "RSANGFPYREDEEGA\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">RIP140\n",
+      "SSPKNTSYKNSLERN\n",
+      ">N-WASP\n",
+      "RETSKVIYDFIEKTG\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">PD-L1\n",
+      "QVLSGKTTTTNSKRE\n",
+      ">YY1\n",
+      "EVVGGDDSDGLRAED\n",
+      ">CDC20\n",
+      "SKVQTTPSKPGGDRY\n",
+      ">FGF14\n",
+      "PGVTPSKSTSASAIM\n",
+      ">PLXNA2\n",
+      "SKMVSEIYLTRLLAT\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">Cortactin\n",
+      "TYTSEPVYETTEAPG\n",
+      ">Ron\n",
+      "YVQLPATYMNLGPST\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">MAP2 iso3\n",
+      "RSANGFPYREDEEGA\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">LYN\n",
+      "RNTERTIYVRDPTSN\n",
+      ">CACNA1C\n",
+      "ELQDSRVYVSSL___\n",
+      ">FLT3\n",
+      "DIMSDSNYVVRGNAR\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">NPHS1\n",
+      "AEVDPNYYSMRDFSP\n",
+      ">PDHK1\n",
+      "AEDAKAIYDFTDTVI\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">NPHS1\n",
+      "EDRIRNEYEESQWTG\n",
+      ">Ron\n",
+      "YVQLPATYMNLGPST\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">Arg\n",
+      "YVGVWKKYSLTVAVK\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">SOS1\n",
+      "SKAYSPRYSISDRTS\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">BCAP\n",
+      "LGQEEDVYHTVDDDE\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">ENG\n",
+      "TAALWYIYSHTRSPS\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">MEGF10\n",
+      "LSSSENPYATIKDPP\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">endophilin B1\n",
+      "ARIEEFVYEKLDRKA\n",
+      ">PAK6\n",
+      "KSLVGTPYWMAPEVI\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">Ret\n",
+      "TPSDSLIYDDGLSEE\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">IRS1\n",
+      "EETGTEEYMKMDLGP\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">Arg\n",
+      "EKLRVLGYNQNGEWS\n",
+      ">CACNA1C\n",
+      "PEDESCVYALGRGRS\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">PLCG2\n",
+      "LESEEELYSSCRQLR\n",
+      ">P2X3\n",
+      "QSTDSGAYSIGH___\n",
+      ">ROMK\n",
+      "SKTKEGKYRVDFHNF\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">CACNA1C\n",
+      "ELQDSRVYVSSL___\n",
+      ">Hck\n",
+      "YTATESQYQQQP___\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">ENG\n",
+      "LLTAALWYIYSHTRS\n",
+      ">WAVE2\n",
+      "GKEALKFYTNPSYFF\n",
+      ">DEPTOR\n",
+      "SSCGSSGYFSSSPTL\n",
+      ">CRK\n",
+      "QKRVPNAYDKTALAL\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">Diaphanous-2 iso4\n",
+      "KSADQKTTLLHFIAD\n",
+      ">CPEB3\n",
+      "GRRRGRSSLFPFEDA\n",
+      ">POLR2A\n",
+      "SPKYSPTSPTYSPTT\n",
+      ">CBX4\n",
+      "ARSISTPTCLGGSPA\n",
+      ">SEPT5\n",
+      "TQDSRMESPIPILPL\n",
+      ">LMO7 iso3\n",
+      "SVKTSPGSPSPRSHS\n",
+      ">CELSR1\n",
+      "KKLQLDDSATTRATL\n",
+      ">SMARCA2\n",
+      "RPPAEKLSPNPPKLT\n",
+      ">ADCY6\n",
+      "PNALQRLSRSIVRSR\n",
+      ">Trap170\n",
+      "NEDDNPPSPIGGDMM\n",
+      ">CLIC4\n",
+      "PPKYLKLSPKHPESN\n",
+      ">NKCC2\n",
+      "AYDSHTNTYYLQTFG\n",
+      ">FBX43\n",
+      "FSQQKTSTIDDSKDD\n",
+      ">DLG1\n",
+      "YLGQTPASPARYSPI\n",
+      ">HSL\n",
+      "LTESMRRSVSEAALA\n",
+      ">PELI1\n",
+      "HSISYTLSRAQTVVV\n",
+      ">ACF7\n",
+      "KPSSRAASPTRSSSS\n",
+      ">TSC2\n",
+      "FQPSQPLSKSSSSPE\n",
+      ">KI-67\n",
+      "EAPTKRKSLVMHTPP\n",
+      ">NFM\n",
+      "TKVEDEKSEMEDALS\n",
+      ">LMO7\n",
+      "GIMRRGESLDNLDSP\n",
+      ">ELK1\n",
+      "IHFWSTLSPIAPRSP\n",
+      ">neurogenin 2\n",
+      "SPYSCTLSPASPGSD\n",
+      ">SLC14A2\n",
+      "TVFPRRKSVFHIEWS\n",
+      ">TPH2\n",
+      "YWARRGFSLDSAVPE\n",
+      ">CIITA\n",
+      "VQARLERSSSKSLER\n",
+      ">AMPKB1\n",
+      "MVDSQKCSDVSELSS\n",
+      ">GJA8\n",
+      "KASSRARSDDLTV__\n",
+      ">NFM\n",
+      "VEKSPVKSPEAKEEE\n",
+      ">SRC-3\n",
+      "SLLSTLSSPGPKLDN\n",
+      ">palladin\n",
+      "PPPPPVFSPTAAFPV\n",
+      ">Kir6.2\n",
+      "MQVVRKTTSPEGEVV\n",
+      ">PD-L1\n",
+      "CGIQDTNSKKQSDTH\n",
+      ">Kv-beta2\n",
+      "YPESTTGSPARLSLR\n",
+      ">IRS1\n",
+      "HFAIAADSEAEQDSW\n",
+      ">Kv1.2\n",
+      "PDLKKSRSASTISKS\n",
+      ">SRC-3\n",
+      "PAFGRVSSPPNAMMS\n",
+      ">F3\n",
+      "RKAGVGQSWKENSPL\n",
+      ">MEK1\n",
+      "GSAVNGTSSAETNLE\n",
+      ">CAMKK2\n",
+      "KTMIRKRSFGNPFEG\n",
+      ">FGF14\n",
+      "VTPSKSTSASAIMNG\n",
+      ">WDR77\n",
+      "FVRDATWSPLNHSLL\n",
+      ">ZAP\n",
+      "PPSPDVTSCKDSLED\n",
+      ">TXA2-R iso2\n",
+      "RLPGSSDSRASASRA\n",
+      ">CACNA1D\n",
+      "QPNSSKQTVLSWQAA\n",
+      ">PINK1\n",
+      "VLRAFTSSVPLLPGA\n",
+      ">ERC2\n",
+      "GGTGKTLSMENIQSL\n",
+      ">RbBP1\n",
+      "QHNFSVASPLTLSQD\n",
+      ">CRMP-2\n",
+      "KTVTPASSAKTSPAK\n",
+      ">IRS1\n",
+      "QHLRLSTSSGRLLYA\n",
+      ">JNK1 iso3\n",
+      "GGVLFPGTDHIDQWN\n",
+      ">DCUN1D5\n",
+      "QPPARLISGEEDFSR\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">GAS2L1\n",
+      "HPRSRRYSGDSDSSA\n",
+      ">SGT1\n",
+      "LGPRPNESDSDDLDD\n",
+      ">ataxin-1\n",
+      "ATRKRRWSAPESRKL\n",
+      ">CTNND2\n",
+      "RPYSSSRTPSISPVR\n",
+      ">ALDH2\n",
+      "GNPFDSKTEQGPQVD\n",
+      ">GUCY1A1\n",
+      "SHPQRKTSRNRVYLH\n",
+      ">HCN4\n",
+      "LGSRGGGSGGAGGGS\n",
+      ">FBXL21\n",
+      "FYSSLNQTHTHTVLL\n",
+      ">SMAD9\n",
+      "YHYRRVETPVLPPVL\n",
+      ">NCCT\n",
+      "SSHPSHLTHSSTFCM\n",
+      ">CACNA1B\n",
+      "ERARPRRSHSKEAPG\n",
+      ">AP-2 alpha\n",
+      "CSVPGRLSLLSSTSK\n",
+      ">SLC4A1\n",
+      "IDAYMAQSRGELLHS\n",
+      ">PELI1\n",
+      "NKDQHSISYTLSRAQ\n",
+      ">PIAS1\n",
+      "SPMPPTLSPSTIPQL\n",
+      ">FOXO1A\n",
+      "QFSKWPASPGSHSND\n",
+      ">LATS2\n",
+      "HILHPVKSVRVLRPE\n",
+      ">nAChRA4\n",
+      "LIKARSLSVQHVPSS\n",
+      ">BVR\n",
+      "LKRNRYLSFHFKSGS\n",
+      ">ULK1\n",
+      "SHLASPPSLGEMPQL\n",
+      ">PYGB\n",
+      "SEKRKQISVRGLAGL\n",
+      ">APC\n",
+      "ESTPDGFSCSSSLSA\n",
+      ">CDC6\n",
+      "SDAKLEPTNVQTVTC\n",
+      ">NHE3\n",
+      "TEGERRGSLAFIRSP\n",
+      ">SIAH2\n",
+      "RRLTWEATPRSIHDG\n",
+      ">Caldesmon\n",
+      "RNLWEKQSVEKPAAS\n",
+      ">CDC25B\n",
+      "AFTQRPSSAPDLMCL\n",
+      ">PPP2R5B\n",
+      "PDKVDGFSRRSLRRA\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">CDK11B iso12\n",
+      "KHEYFRETPLPIDPS\n",
+      ">CDK9\n",
+      "QSRNPATTNQTEFER\n",
+      ">SCN8A\n",
+      "SLLSIPGSPFLSRHN\n",
+      ">PI4K2A\n",
+      "___MDETSPLVSPER\n",
+      ">calponin 1\n",
+      "FASQQGMTAYGTRRH\n",
+      ">MRLC1\n",
+      "KKRPQSATSNVFAMF\n",
+      ">ZNF592\n",
+      "NHLKRPVSGVGDAPG\n",
+      ">N-Myc\n",
+      "TSGEDTLSDSDDEDD\n",
+      ">Fos\n",
+      "GGLPEASTPESEEAF\n",
+      ">CACNA1S\n",
+      "RTISGDLTAEEELER\n",
+      ">RFC1\n",
+      "TKKARKDSEEGESFS\n",
+      ">DOK7\n",
+      "DDRSLSSSSSEASHS\n",
+      ">MAPKAPK2\n",
+      "APPPQPPTPALPHPP\n",
+      ">PAGE4\n",
+      "PGQEREGTPPIEERK\n",
+      ">SIKE\n",
+      "LLSISSESLQARKEN\n",
+      ">PER2\n",
+      "TGRDSQGSDCDDNGK\n",
+      ">CLK3\n",
+      "HHCKRYRSPEPDPYL\n",
+      ">CEP131\n",
+      "KPIVRSVSVVTGSEQ\n",
+      ">TSC2\n",
+      "ARPTVDLSFQPSQPL\n",
+      ">ROCK2\n",
+      "LHIGLDSSSIGSGPG\n",
+      ">GAP43\n",
+      "TDAAPATSPKAEEPS\n",
+      ">NHE3\n",
+      "SLEQRRRSVRDAEDV\n",
+      ">ULK1\n",
+      "GLGCRLHSAPNLSDF\n",
+      ">IRS1\n",
+      "SGDYMPMSPKSVSAP\n",
+      ">PPAR-gamma iso2\n",
+      "WPTNFGISSVDLSVM\n",
+      ">RASGRF1\n",
+      "LASLGCPSDGYTNIH\n",
+      ">MYH10\n",
+      "DDTESKTSDVNETQP\n",
+      ">MEF2D\n",
+      "VPVSNQSSMQFSNPS\n",
+      ">NKCC1\n",
+      "LRTFGHNTMDAVPRI\n",
+      ">p90RSK\n",
+      "TSRTPKDSPGIPPSA\n",
+      ">SLP76\n",
+      "IGFQQSASLPPYFSQ\n",
+      ">CACNA1D\n",
+      "RRWGQAISKSKLRSH\n",
+      ">RRas\n",
+      "QEQELPPSPPSAPRK\n",
+      ">rabphilin 3A\n",
+      "QGLRRANSVQASRPA\n",
+      ">BIM\n",
+      "GPLAPPASPGPFATR\n",
+      ">ELK1\n",
+      "ISVDGLSTPVVLSPG\n",
+      ">PD-L1\n",
+      "GKTTTTNSKREEKLF\n",
+      ">SPR\n",
+      "QQLARETSVDPDMRK\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">P38B\n",
+      "HARTYIQSLPPMPQK\n",
+      ">Ikaros\n",
+      "LSDMPYDSANYEKED\n",
+      ">RYR2\n",
+      "ISQTSQVSVDAAHGY\n",
+      ">AMPKB1\n",
+      "NIIQVKKTDFEVFDA\n",
+      ">MCPIP1\n",
+      "CLDSGIGSLESQMSE\n",
+      ">CASP7\n",
+      "DAKPDRSSFVPSLFS\n",
+      ">Titin\n",
+      "LRTEEGKSLSFPLAL\n",
+      ">CTTNBP2NL\n",
+      "SSPLSPLSPGIKSPT\n",
+      ">desmin\n",
+      "YSSSQRVSSYRRTFG\n",
+      ">CPEB3\n",
+      "YGRRRGRSSLFPFED\n",
+      ">WT1\n",
+      "KTCQRKFSRSDHLKT\n",
+      ">IP3R1\n",
+      "RPSGRRESLTSFGNG\n",
+      ">JIP1\n",
+      "LIDATGDTPGAEDDE\n",
+      ">NKCC2\n",
+      "EYYRNTGSISGPKVN\n",
+      ">MBP\n",
+      "KGHDAQGTLSKIFKL\n",
+      ">CAPN2\n",
+      "DGNWRRGSTAGGCRN\n",
+      ">MYH10\n",
+      "QLHLEGASLELSDDD\n",
+      ">GCAP2\n",
+      "ISQQRRKSAMF____\n",
+      ">p47phox\n",
+      "KRGWVPASYLEPLDS\n",
+      ">CPEB3\n",
+      "SSGLSSPTRCQNGER\n",
+      ">FAF1\n",
+      "EREAIRLSLEQALPP\n",
+      ">AQP4\n",
+      "MEVEDNRSQVETEDL\n",
+      ">IRS1\n",
+      "MGTSPALTGDEAAGA\n",
+      ">CBX8\n",
+      "PSSPGDSSKKRGPKP\n",
+      ">SERINC3\n",
+      "DTTTSGASDEEDGQP\n",
+      ">MAPKAPK2\n",
+      "QSTKVPQTPLHTSRV\n",
+      ">desmin\n",
+      "RVSSYRRTFGGAPGF\n",
+      ">WT1\n",
+      "KDCERRFSRSDQLKR\n",
+      ">CK1D\n",
+      "QDTSRMSTSQIPGRV\n",
+      ">NHE3\n",
+      "SLEQRRRSIRDTEDM\n",
+      ">PINX1\n",
+      "ATGKDVESYLQPKAK\n",
+      ">ABCC9\n",
+      "FESCKKHTGVQSKPI\n",
+      ">EphB6\n",
+      "SKRRETPYTDRLQQY\n",
+      ">Ret\n",
+      "PLLLIVEYAKYGSLR\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">RIP140\n",
+      "TPTTIDEYSDNNPSF\n",
+      ">TACE\n",
+      "DKKLDKQYESLSLFH\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">ENG\n",
+      "TAALWYIYSHTRSPS\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">PKCD\n",
+      "SSEPVGIYQGFEKKT\n",
+      ">NPHS1\n",
+      "EDRIRNEYEESQWTG\n",
+      ">GRK2\n",
+      "ARPLVEFYEEIKKYE\n",
+      ">SYN1\n",
+      "VVALTKTYATTEPFI\n",
+      ">ARAF\n",
+      "GYRDSGYYWEVPPSE\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">Trap150\n",
+      "AASGGAAYTKRYLEE\n",
+      ">RTCB\n",
+      "GMAAAGNYAWVNRSS\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">GRF-1\n",
+      "DGFDPSDYAEPMDAV\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">iNOS\n",
+      "LPGKPKVYVQDILRQ\n",
+      ">MUC1\n",
+      "SSTDRSPYEKVSAGN\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">FGFR3\n",
+      "ANCTHDLYMIMRECW\n",
+      ">VEGFR2\n",
+      "RFRQGKDYVGAIPVD\n",
+      ">FGFR3\n",
+      "RDVHNLDYYKKTTNG\n",
+      ">DEPTOR\n",
+      "SSCGSSGYFSSSPTL\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">STAM2\n",
+      "KSEPEPVYIDEDKMD\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">PLCG1\n",
+      "EGSFEARYQQPFEDF\n",
+      ">VHL\n",
+      "TGRRIHSYRGHLWLF\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">PDHK1\n",
+      "RRLCDLYYINSPELE\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">CDCP1\n",
+      "VIEDTMVYGHLLQDS\n",
+      ">CDKL5\n",
+      "NNANYTEYVATRWYR\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">GRF-1\n",
+      "LERGRKVSIVSKPVL\n",
+      ">ARRB1\n",
+      "YLKERRVYVTLTCAF\n",
+      ">ZAP\n",
+      "PLGSGPPSPDVTSCK\n",
+      ">eIF2-alpha\n",
+      "IEGRILLSELSR___\n",
+      ">PPP1R1A\n",
+      "LKSTLSMSPRQRKKM\n",
+      ">HCN4\n",
+      "PPRPERPSFMAGASG\n",
+      ">RAB12\n",
+      "AGQERFNSITSAYYR\n",
+      ">TAO2 iso2\n",
+      "AAVPGPLSRSTSVAS\n",
+      ">GR\n",
+      "DLEFSAGSPSKDTNE\n",
+      ">ULK1\n",
+      "IRRSGSTSPLGFARA\n",
+      ">IRS1\n",
+      "SGDYMPMSPKSVSAP\n",
+      ">osterix\n",
+      "GLLSPAGSPPAPASG\n",
+      ">STAT1\n",
+      "YIKTELISVSEVHPS\n",
+      ">SRC-3\n",
+      "SDKESKESSVEGAEN\n",
+      ">PLEKHO1\n",
+      "KAKDPPQSPPDSESE\n",
+      ">NIPP-1\n",
+      "LGLPEEETELDNLTE\n",
+      ">CASK\n",
+      "DKINTKSSPQIRNPP\n",
+      ">Tau\n",
+      "SSPGSPGTPGSRSRT\n",
+      ">CIITA\n",
+      "TVHGLPTSPDRPGST\n",
+      ">KLF3\n",
+      "KRPLPVESPDTQRKR\n",
+      ">eNOS\n",
+      "RKLQTRPSPGPPPAE\n",
+      ">MARK2\n",
+      "DKTQLNSSSLQKLFR\n",
+      ">CdGAP\n",
+      "TPAPPPPTPLEEEPE\n",
+      ">IRTKS\n",
+      "SNVVRKDYDTLSKCS\n",
+      ">vinexin\n",
+      "QHPDPAWYQTWPGPG\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">TSAd\n",
+      "GEAPSNIYVEVEDEG\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">IkB-beta\n",
+      "PRDASDTYLTQSQDH\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">BLK\n",
+      "ARIIDSEYTAQEGAK\n",
+      ">BLM\n",
+      "SHFVRVSTAQKSKKG\n",
+      ">JIP4 iso2\n",
+      "SGYKGSSTPTKGIEN\n",
+      ">Caldesmon\n",
+      "CFSPKGSSLKIEERA\n",
+      ">YY1\n",
+      "EGCGKRFSLDFNLRT\n",
+      ">ChREBP\n",
+      "TLLRPPESPDAVPEI\n",
+      ">MOB1A\n",
+      "FSSRSSKTFKPKKNI\n",
+      ">PKCD\n",
+      "FGENRASTFCGTPDY\n",
+      ">SIAH2\n",
+      "__MSRPSSTGPSANK\n",
+      ">REST\n",
+      "TEDLSPPSPPLPKEN\n",
+      ">galectin-3\n",
+      "__MSDGFSLSDALPA\n",
+      ">AMPKB1\n",
+      "SQKCSDVSELSSSPP\n",
+      ">AKIRIN2\n",
+      "LDFDPLLSPASPKRR\n",
+      ">dUTPase\n",
+      "GPETPAISPSKRARP\n",
+      ">CRMP-2\n",
+      "SVTPKTVTPASSAKT\n",
+      ">NIPP-1\n",
+      "LGLPEEETELDNLTE\n",
+      ">DOK7\n",
+      "IATGSHSSYSGSFSS\n",
+      ">FOXO1A\n",
+      "NSIRHNLSLHSKFIR\n",
+      ">PD-L1\n",
+      "EKLFNVTSTLRINTT\n",
+      ">TGFBR1\n",
+      "KDLIYDMTTSGSGSG\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">CRMP-2\n",
+      "KPFPDFVYKRIKARS\n",
+      ">FGFR3\n",
+      "ANCTHDLYMIMRECW\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">RIP140\n",
+      "SSGDESSYSNCVPID\n",
+      ">Arg\n",
+      "EKLRVLGYNQNGEWS\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">TXK\n",
+      "KIQVKALYDFLPREP\n",
+      ">cGAS\n",
+      "LLNTGSYYEHVKISA\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">PSD-95\n",
+      "VTQMEVHYARPIIIL\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">Arg\n",
+      "RLMTGDTYTAHAGAK\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">VEGFR2\n",
+      "RFRQGKDYVGAIPVD\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">IRS1\n",
+      "VPSSRGDYMTMQMSC\n",
+      ">VEGFR2\n",
+      "DIYKDPDYVRKGDAR\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">FLT3\n",
+      "ADAEEAMYQNVDGRV\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">NPHS1\n",
+      "PGAWGPLYDEVRMDP\n",
+      ">VHL\n",
+      "SLVKPENYRRLDIVR\n",
+      ">VAV1\n",
+      "ALNDEDIYSGLSDQI\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">BCAP\n",
+      "QERPGNFYVSSESIR\n",
+      ">BCAP\n",
+      "DRPQSSIYDPFAGMK\n",
+      ">FCGR2C\n",
+      "PEETNNDYETADGGY\n",
+      ">NPHS1\n",
+      "SGAWGPLYDEVQMGP\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">Arg\n",
+      "YVGVWKKYSLTVAVK\n",
+      ">FGFR3\n",
+      "RDVHNLDYYKKTTNG\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">IRS1\n",
+      "QRVDPNGYMMMSPSG\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">IRS1\n",
+      "GRKGSGDYMPMSPKS\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">Ret\n",
+      "FGLSRDVYEEDSYVK\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">RIP140\n",
+      "SSPKNTSYKNSLERN\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">SOS1\n",
+      "SKAYSPRYSISDRTS\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">NPHS1\n",
+      "AEVDPNYYSMRDFSP\n",
+      ">PLXNA2\n",
+      "SKMVSEIYLTRLLAT\n",
+      ">PLXNA1\n",
+      "VPKQTSAYNISNSST\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">VHL\n",
+      "TGRRIHSYRGHLWLF\n",
+      ">IRS1\n",
+      "LLPCTGDYMNMSPVG\n",
+      ">NIPP-1\n",
+      "NEPKKKKYAKEAWPG\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">CDKL5\n",
+      "NNANYTEYVATRWYR\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">MAP2 iso3\n",
+      "EHGSQGTYSNTKENG\n",
+      ">Arg\n",
+      "PNLFVALYDFVASGD\n",
+      ">SNCB\n",
+      "EDPPQEEYQEYEPEA\n",
+      ">VEGFR2\n",
+      "EEAPEDLYKDFLTLE\n",
+      ">PLCG2\n",
+      "LESEEELYSSCRQLR\n",
+      ">RIP140\n",
+      "TPTTIDEYSDNNPSF\n",
+      ">Ron\n",
+      "YVQLPATYMNLGPST\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">PLCG1\n",
+      "KLAEGSAYEEVPTSV\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">PTP1B\n",
+      "ISEDIKSYYTVRQLE\n",
+      ">P2X3\n",
+      "QSTDSGAYSIGH___\n",
+      ">TRIO\n",
+      "LLNPNYIYDVPPEFV\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">SRC-3\n",
+      "HPQAASIYQSSEMKG\n",
+      ">PDHK1\n",
+      "RRLCDLYYINSPELE\n",
+      ">NMDAR2B\n",
+      "ISTHTVTYGNIEGNA\n",
+      ">WAVE2\n",
+      "GKEALKFYTNPSYFF\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">LAX1\n",
+      "SSQISNDYVNMTGLD\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">IRS1\n",
+      "EETGTEEYMKMDLGP\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">syndecan-3\n",
+      "PDKQEEFYA______\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">syndecan-2\n",
+      "RKPSSAAYQKAPTKE\n",
+      ">Ret\n",
+      "TNTGFPRYPNDSVYA\n",
+      ">RTCB\n",
+      "MEEAPESYKNVTDVV\n",
+      ">VAV2\n",
+      "EDGGDDIYEDIIKVE\n",
+      ">EphA2\n",
+      "RQSPEDVYFSKSEQL\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">GMPR\n",
+      "GRKLKLFYGMSSDTA\n",
+      ">PAK6\n",
+      "KSLVGTPYWMAPEVI\n",
+      ">LAX1\n",
+      "AFQCCRDYENVPAAD\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">RASA1\n",
+      "TVDGKEIYNTIRRKT\n",
+      ">FLT3\n",
+      "DIMSDSNYVVRGNAR\n",
+      ">EphB6\n",
+      "YTDRLQQYISTRGLG\n",
+      ">Arg\n",
+      "QGWVPSNYITPVNSL\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">CRK\n",
+      "QKRVPNAYDKTALAL\n",
+      ">ATG3\n",
+      "QTRTYDLYITYDKYY\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">AFAP1L1\n",
+      "QWPEPRIYDEVPYEK\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">DUSP3\n",
+      "SPTLVIAYLMMRQKM\n",
+      ">Bcr\n",
+      "ADAEKPFYVNVEFHH\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">CENTG1 iso2\n",
+      "QGRTALFYARQAGSQ\n",
+      ">ADRA1D\n",
+      "KGHTFRSSLSVRLLK\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">Ret\n",
+      "TPSDSLIYDDGLSEE\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">Ret\n",
+      "TWIENKLYGMSDPNW\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">RTCB\n",
+      "MEEAPESYKNVTDVV\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">Arg\n",
+      "KCNKPTVYGVSPIHD\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">SRC-3\n",
+      "HPQAASIYQSSEMKG\n",
+      ">Arg\n",
+      "EKLRVLGYNQNGEWS\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">Tks5\n",
+      "VKYEEPEYDVPAFGF\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">VAV1\n",
+      "ALNDEDIYSGLSDQI\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">IRS1\n",
+      "VPSSRGDYMTMQMSC\n",
+      ">CDCP1\n",
+      "LQPEVDTYRPFQGTM\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">PLCG2\n",
+      "LESEEELYSSCRQLR\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">VHL\n",
+      "TGRRIHSYRGHLWLF\n",
+      ">PTTG1IP\n",
+      "LFKEENPYARFENN_\n",
+      ">CRMP-2\n",
+      "KPFPDFVYKRIKARS\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">DYN1\n",
+      "NTEQRNVYKDYRQLE\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">YY1\n",
+      "MASGDTLYIATDGSE\n",
+      ">FGFR3\n",
+      "RDVHNLDYYKKTTNG\n",
+      ">NIPP-1\n",
+      "NEPKKKKYAKEAWPG\n",
+      ">Ret\n",
+      "FGLSRDVYEEDSYVK\n",
+      ">WAVE2\n",
+      "GKEALKFYTNPSYFF\n",
+      ">Arg\n",
+      "YVGVWKKYSLTVAVK\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">GRK2\n",
+      "ARPLVEFYEEIKKYE\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">Ret\n",
+      "TNTGFPRYPNDSVYA\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">DAB1 iso2\n",
+      "KQCEQAVYQTILEED\n",
+      ">BVR\n",
+      "LAEEIQKYCCSRK__\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">AFAP1L1\n",
+      "QWPEPRIYDEVPYEK\n",
+      ">FLOT2\n",
+      "DVYDKVDYLSSLGKT\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">CELF2 iso3\n",
+      "LKELFEPYGAVYQIN\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">PTP1B\n",
+      "ISEDIKSYYTVRQLE\n",
+      ">syndecan-2\n",
+      "RKKDEGSYDLGERKP\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">Tks5\n",
+      "ALEEETIYENEGFRP\n",
+      ">PKCD\n",
+      "STFDAHIYEGRVIQI\n",
+      ">DUSP3\n",
+      "SPTLVIAYLMMRQKM\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">IRTKS\n",
+      "SNVVRKDYDTLSKCS\n",
+      ">TRIO\n",
+      "LLNPNYIYDVPPEFV\n",
+      ">Ret\n",
+      "TPSDSLIYDDGLSEE\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">Ron\n",
+      "YVQLPATYMNLGPST\n",
+      ">PAK6\n",
+      "KSLVGTPYWMAPEVI\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">RASA1\n",
+      "TVDGKEIYNTIRRKT\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">STAM2\n",
+      "KSEPEPVYIDEDKMD\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">IRTKS\n",
+      "YEHKEIEYVETVTSR\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">EphA2\n",
+      "ESIKMQQYTEHFMAA\n",
+      ">Ret\n",
+      "LIVEYAKYGSLRGFL\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">ARRB1\n",
+      "YLKERRVYVTLTCAF\n",
+      ">TSAd\n",
+      "PDEPIAFYAMGRGSP\n",
+      ">DAPP1\n",
+      "KVEEPSIYESVRVHT\n",
+      ">CTNND2\n",
+      "LKERKTDYESAGNNA\n",
+      ">IRS1\n",
+      "TLHTDDGYMPMSPGV\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">ZC3H4\n",
+      "SRGRGRGYRGRGSRG\n",
+      ">Ret\n",
+      "MMVKRRDYLDLAAST\n",
+      ">Trap150\n",
+      "NRGGYGNYRSNWQNY\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">FGFR3\n",
+      "ANCTHDLYMIMRECW\n",
+      ">NPHS1\n",
+      "AEVDPNYYSMRDFSP\n",
+      ">LYN\n",
+      "RNTERTIYVRDPTSN\n",
+      ">BCAP\n",
+      "QERPGNFYVSSESIR\n",
+      ">N-WASP\n",
+      "RETSKVIYDFIEKTG\n",
+      ">Ret\n",
+      "AQAFPVSYSSSGARR\n",
+      ">SLC4A1\n",
+      "MEELQDDYEDMMEEN\n",
+      ">MUC1\n",
+      "NGGSSLSYTNPAVAA\n",
+      ">GRF-1\n",
+      "DGFDPSDYAEPMDAV\n",
+      ">ADAM12\n",
+      "PRPSHNAYIK_____\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">PIP5K1C\n",
+      "TDERSWVYSPLHYSA\n",
+      ">TRPV6\n",
+      "YRPHNLIYYGEHPLS\n",
+      ">ROMK\n",
+      "SKTKEGKYRVDFHNF\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">iNOS\n",
+      "LPGKPKVYVQDILRQ\n",
+      ">ENG\n",
+      "TAALWYIYSHTRSPS\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">SNCB\n",
+      "EDPPQEEYQEYEPEA\n",
+      ">FLT3\n",
+      "ADAEEAMYQNVDGRV\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">Cortactin\n",
+      "TYTSEPVYETTEAPG\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">VEGFR2\n",
+      "DIYKDPDYVRKGDAR\n",
+      ">Trap150\n",
+      "AASGGAAYTKRYLEE\n",
+      ">PKCD\n",
+      "KVKSPSDYSNFDPEF\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">RBM10 iso2\n",
+      "LGARGSSYGVTSTES\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">NPHS1\n",
+      "EDRIRNEYEESQWTG\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">DLC1\n",
+      "SAEDNVNYEGQSAYD\n",
+      ">MAP2 iso3\n",
+      "RSANGFPYREDEEGA\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">VEGFR2\n",
+      "FGLARDIYKDPDYVR\n",
+      ">VAV2\n",
+      "EDGGDDIYEDIIKVE\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">ARAF\n",
+      "GYRDSGYYWEVPPSE\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">CD163L1\n",
+      "DALAEAVYEELDYLL\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">FLT3\n",
+      "VDFREYEYDLKWEFP\n",
+      ">DCC\n",
+      "PTLESAQYPGILPSP\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">VAV2\n",
+      "HDLGEDIYDCVPCED\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">Hck\n",
+      "YTATESQYQQQP___\n",
+      ">TSAd\n",
+      "GEAPSNIYVEVEDEG\n",
+      ">TR-beta1\n",
+      "FLLAFEHYINYRKHH\n",
+      ">NPHS1\n",
+      "PGAWGPLYDEVRMDP\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">BLK\n",
+      "ARIIDSEYTAQEGAK\n",
+      ">CTNND2\n",
+      "QEPSRKDYETYQPFP\n",
+      ">ROCK2\n",
+      "LADKNKIYESIEEAK\n",
+      ">LAX1\n",
+      "AFQCCRDYENVPAAD\n",
+      ">IRTKS\n",
+      "PAPSGRAYTSPLIDM\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">DAB1\n",
+      "EDVEDPVYQYIVFEA\n",
+      ">PTPRJ\n",
+      "DSKVDLIYQNTTAMT\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">IRS1\n",
+      "GRKGSGDYMPMSPKS\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">TBX21\n",
+      "QFIAVTAYQNAEITQ\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">PDHK1\n",
+      "AEDAKAIYDFTDTVI\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">CDKL5\n",
+      "NNANYTEYVATRWYR\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">EphA2\n",
+      "QLKPLKTYVDPHTYE\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">VHL\n",
+      "SLVKPENYRRLDIVR\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">ENG\n",
+      "LLTAALWYIYSHTRS\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">CDCP1\n",
+      "VIEDTMVYGHLLQDS\n",
+      ">Ron\n",
+      "YVQLPATYMNLGPST\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">Nik\n",
+      "SSRDTLSSGVHSWNS\n",
+      ">SNAPIN\n",
+      "NHSVAKETARRRAML\n",
+      ">eNOS\n",
+      "SRAPAPATPHAPDHS\n",
+      ">eIF2-alpha\n",
+      "RILLSELSR______\n",
+      ">PTPRA\n",
+      "QAGSHSNSFRLSNGR\n",
+      ">RIC8A\n",
+      "TMEGQLSSDPDSDPD\n",
+      ">KIF13B\n",
+      "KLSRRSISSPNVNRL\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">endophilin B1\n",
+      "ARIEEFVYEKLDRKA\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">nNOS\n",
+      "QSPTKNGSPSRCPRF\n",
+      ">CDC20\n",
+      "KTCRYIPSLPDRILD\n",
+      ">SRC-3\n",
+      "KRKLPCDTPGQGLTC\n",
+      ">CACNA1C iso4\n",
+      "DYLTRDWSILGPHHL\n",
+      ">CACNA1B\n",
+      "TGLCAPGSPFARASL\n",
+      ">KLC2\n",
+      "GSLRRSGSFGKLRDA\n",
+      ">HuR\n",
+      "SGLPRTMTQKDVEDM\n",
+      ">Caldesmon\n",
+      "QSVDKVTSPTKV___\n",
+      ">ACE2\n",
+      "PYASIDISKGENNPG\n",
+      ">HuR\n",
+      "QAQRFRFSPMGVDHM\n",
+      ">NHE3\n",
+      "SLEQRRRSIRDTEDM\n",
+      ">CACNA1D\n",
+      "SSKQTVLSWQAAIDA\n",
+      ">TAL1\n",
+      "NRVKRRPSPYEMEIT\n",
+      ">TPM1\n",
+      "HALNDMTSI______\n",
+      ">ARHGEF7\n",
+      "RKPERKPSDEEFAVR\n",
+      ">DOK7\n",
+      "GDDRSLSSSSSEASH\n",
+      ">NOVA2\n",
+      "VCTKRSNTGEEGEYF\n",
+      ">CACNA1D\n",
+      "QPNSSKQTVLSWQAA\n",
+      ">GJA8\n",
+      "KASSRARSDDLTV__\n",
+      ">FOXO1A\n",
+      "PHSVKTTTHSWVSG_\n",
+      ">KIF5C\n",
+      "CTERFVSSPEEVMDV\n",
+      ">DEPTOR\n",
+      "KLMSPENTLLQPREE\n",
+      ">M6PR\n",
+      "DDQLGEESEERDDHL\n",
+      ">G-alpha(z)\n",
+      "EKEAARRSRRIDRHL\n",
+      ">RRAD\n",
+      "APPLHRRSMPVDERD\n",
+      ">JunB\n",
+      "YTNLSSYSPASAPSG\n",
+      ">NLRP3\n",
+      "GKTKTCESPVSPIKM\n",
+      ">TLR4\n",
+      "VELYRLLSRNTYLEW\n",
+      ">SLC18A2\n",
+      "PIGDDEESESD____\n",
+      ">CAMKK2\n",
+      "RCICPSLSYSPASSP\n",
+      ">MAD2L1BP\n",
+      "KHFYRKPSPQAEEML\n",
+      ">E2F4\n",
+      "PSSTQPSTPTPSSTQ\n",
+      ">SF2\n",
+      "NSRSRSYSPRRSRGS\n",
+      ">MOR-1\n",
+      "STRVRQNTREHPSTA\n",
+      ">GRK5\n",
+      "LDIEQFSTVKGVNLD\n",
+      ">IRS1\n",
+      "SDGEGTMSRPASVDG\n",
+      ">MBP\n",
+      "KYLASASTMDHARHG\n",
+      ">DLC1\n",
+      "DIPERRDSGVGASLT\n",
+      ">MKK4\n",
+      "LVDSIAKTRDAGCRP\n",
+      ">WAVE2\n",
+      "VVGNDVATILSRRIA\n",
+      ">PD-L1\n",
+      "DTNSKKQSDTHLEET\n",
+      ">ULK1\n",
+      "QSNMMAATLCGSPMY\n",
+      ">MEKK1\n",
+      "RQLRKVRSVELDQLP\n",
+      ">RORC\n",
+      "ASCHLEYSPERGKAE\n",
+      ">ROMK iso2\n",
+      "ATCQVRTSYVPEEVL\n",
+      ">STX1A\n",
+      "ELRTAKDSDDDDDVT\n",
+      ">DMBT1\n",
+      "AFTLGRRTHIDRGQP\n",
+      ">KCNMA1 iso4\n",
+      "GRSERDCSCMSGRVR\n",
+      ">CDK9\n",
+      "APPRRKGSQITQQST\n",
+      ">ACF7\n",
+      "ADPKKSASRPGSRAG\n",
+      ">CDC25B\n",
+      "AFTQRPSSAPDLMCL\n",
+      ">PDE3A\n",
+      "PGLLRRVSSTWTTTT\n",
+      ">neurogenin 2\n",
+      "SCTLSPASPGSDVDY\n",
+      ">RIMS1\n",
+      "ISVISPTSPGALKDA\n",
+      ">PD-L1\n",
+      "QVLSGKTTTTNSKRE\n",
+      ">YY1\n",
+      "EGCGKRFSLDFNLRT\n",
+      ">PPAR-gamma\n",
+      "PHEEPSNSLMAIECR\n",
+      ">KLF3\n",
+      "PPLMNSVSPPQALLQ\n",
+      ">MBP\n",
+      "FLPRHRDTGILDSLG\n",
+      ">ZAP\n",
+      "DVTSCKDSLEDVSVD\n",
+      ">SMAD9\n",
+      "YHYRRVETPVLPPVL\n",
+      ">eNOS\n",
+      "TSRIRTQSFSLQERH\n",
+      ">MARK2\n",
+      "LNPSKRGTLEQIMKD\n",
+      ">SSTR2\n",
+      "GTDDGERSDSKQDKS\n",
+      ">NIPP-1\n",
+      "LGLPEEETELDNLTE\n",
+      ">PELI1\n",
+      "GDRGRRKSRFALFKR\n",
+      ">CACNA1D\n",
+      "NGDMGPISHRQDYEL\n",
+      ">INCENP\n",
+      "TSSAVWNSPPLQGAR\n",
+      ">CACNA1D\n",
+      "DSPIGYDSRRSPRRR\n",
+      ">RASGRF1\n",
+      "GLYLLEGSICKRMPS\n",
+      ">FAF1\n",
+      "ITDVHMVSDSDGDDF\n",
+      ">TFCP2L1\n",
+      "HCISTEFTPRKHGGE\n",
+      ">APC\n",
+      "ESTPDGFSCSSSLSA\n",
+      ">palladin\n",
+      "PTPAVLLSPTKEPPP\n",
+      ">Ezrin\n",
+      "QGRDKYKTLRQIRQG\n",
+      ">N-Myc\n",
+      "LLPTPPLSPSRGFAE\n",
+      ">CIITA\n",
+      "QELPGRLSFLGTRLT\n",
+      ">GABARAPL2\n",
+      "VDKTVPQSSLTMGQL\n",
+      ">ADRB1\n",
+      "RAGKRRPSRLVALRE\n",
+      ">NFM\n",
+      "EEPEVEKSPVKSPEA\n",
+      ">CEP131\n",
+      "PVSRRPGSAATTKPI\n",
+      ">Caldesmon\n",
+      "SGMKPAHTTAVVSKI\n",
+      ">AP-2 alpha\n",
+      "GVLRRAKSKNGGRSL\n",
+      ">TORC1\n",
+      "KAGSRPKSCEVPGIN\n",
+      ">RIL\n",
+      "PATSRRSSVSGISLE\n",
+      ">TRHR\n",
+      "STELDDITVTDTYVS\n",
+      ">ROCK2\n",
+      "MKIQQNQSIRRPSRQ\n",
+      ">PKCD\n",
+      "FGESRASTFCGTPDY\n",
+      ">SRC-3\n",
+      "LLSNTDATGLEEIDR\n",
+      ">CACNA1C\n",
+      "PEIRRAISGDLTAEE\n",
+      ">MEK1\n",
+      "LIDSMANSFVGTRSY\n",
+      ">CDC25B\n",
+      "FTIKRFRSLPVRLLE\n",
+      ">MOR-1\n",
+      "LMILRLKSVRMLSGS\n",
+      ">CIITA\n",
+      "QELPGRLSFLGTRLT\n",
+      ">HNF1A\n",
+      "IQRGVSPSQAQGLGS\n",
+      ">ADCY6\n",
+      "PNALQRLSRSIVRSR\n",
+      ">BNIP3\n",
+      "IYIGRRLTTSTSTF_\n",
+      ">Kv4.2\n",
+      "ARIRAAKSGSANAYM\n",
+      ">GAP43\n",
+      "TDAAPATSPKAEEPS\n",
+      ">JMJD2B\n",
+      "AKRPRVGTPLATEDS\n",
+      ">STAT1\n",
+      "PEFDSMMSTV_____\n",
+      ">SHARPIN\n",
+      "PEADLPRSPGNLTER\n",
+      ">MEK1\n",
+      "VSGQLIDSMANSFVG\n",
+      ">BNIP3\n",
+      "QEESLQGSWVELHFS\n",
+      ">RSHL2\n",
+      "AFLDRPPTPLFIPAK\n",
+      ">EIF4B\n",
+      "RPRERHPSWRSEETQ\n",
+      ">HMGA2\n",
+      "AQETEETSSQESAEE\n",
+      ">PDCD5\n",
+      "NRRKVMDSDEDDDY_\n",
+      ">VHL\n",
+      "EESGAEESGPEESGP\n",
+      ">PELI1\n",
+      "QCPVGFNTLAFPSMK\n",
+      ">TPT1\n",
+      "PEGEGTESTVVTGVD\n",
+      ">JUB\n",
+      "SRPCSNRTSGISMGY\n",
+      ">TR-alpha iso5\n",
+      "ASSLSSSSSDEDTEV\n",
+      ">HSP40\n",
+      "TNVNFGRSRSAQEPA\n",
+      ">DYNC1I2\n",
+      "PSSKSVSTPSEAGSQ\n",
+      ">VHL\n",
+      "EEDGGEESGAEESGP\n",
+      ">syndecan-2\n",
+      "RKPSSAAYQKAPTKE\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAQKD\n",
+      ">N-WASP\n",
+      "RETSKVIYDFIEKTG\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">eNOS\n",
+      "WELGSITYDTLCAQS\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">Trap150\n",
+      "NRGGYGNYRSNWQNY\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">Ret\n",
+      "TWIENKLYGMSDPNW\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">IRS1\n",
+      "TLHTDDGYMPMSPGV\n",
+      ">IRTKS\n",
+      "LINLGKNYEKAVNAM\n",
+      ">iNOS\n",
+      "LPGKPKVYVQDILRQ\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">CELF2 iso3\n",
+      "LKELFEPYGAVYQIN\n",
+      ">TSAd\n",
+      "PDEPIAFYAMGRGSP\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">GMPR\n",
+      "GRKLKLFYGMSSDTA\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">SNCB\n",
+      "EDPPQEEYQEYEPEA\n",
+      ">VEGFR2\n",
+      "EEAPEDLYKDFLTLE\n",
+      ">CRMP-2\n",
+      "KPFPDFVYKRIKARS\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">SYN1\n",
+      "VVALTKTYATTEPFI\n",
+      ">ephexin-1\n",
+      "IEQIGLLYQEYRDKS\n",
+      ">ARAF\n",
+      "LGYRDSGYYWEVPPS\n",
+      ">STAM2\n",
+      "KSEPEPVYIDEDKMD\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">PTPRJ\n",
+      "NTTAMTIYENLAPVT\n",
+      ">GRK2\n",
+      "ARPLVEFYEEIKKYE\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">Ret\n",
+      "TPSDSLIYDDGLSEE\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">PTTG1IP\n",
+      "LFKEENPYARFENN_\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">EphB6\n",
+      "SKRRETPYTDRLQQY\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">GRF-1\n",
+      "DGFDPSDYAEPMDAV\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">TIAM1\n",
+      "DRARQGVYENFRREL\n",
+      ">TSAd\n",
+      "GEAPSNIYVEVEDEG\n",
+      ">NPHS1\n",
+      "PGAWGPLYDEVRMDP\n",
+      ">PSD-95\n",
+      "VTQMEVHYARPIIIL\n",
+      ">EphA2\n",
+      "RQSPEDVYFSKSEQL\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">ZC3H4\n",
+      "SRGRGRGYRGRGSRG\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">ARAF\n",
+      "GYRDSGYYWEVPPSE\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">IRS1\n",
+      "VPSSRGDYMTMQMSC\n",
+      ">IkB-beta\n",
+      "PRDASDTYLTQSQDH\n",
+      ">LAX1\n",
+      "SSQISNDYVNMTGLD\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">FGFR3\n",
+      "RDVHNLDYYKKTTNG\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">Ret\n",
+      "PLLLIVEYAKYGSLR\n",
+      ">Arg\n",
+      "QGWVPSNYITPVNSL\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">IREM-1\n",
+      "VDQVEVEYVTMASLP\n",
+      ">Arg\n",
+      "KCNKPTVYGVSPIHD\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">NMDAR2B\n",
+      "ISTHTVTYGNIEGNA\n",
+      ">PKCD\n",
+      "KVKSPSDYSNFDPEF\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">GluR4\n",
+      "TRNKARLSITGSVGE\n",
+      ">CCNB1\n",
+      "PILVDTASPSPMETS\n",
+      ">CEP170B\n",
+      "QGLPVPGSPGGQKWV\n",
+      ">PELI1\n",
+      "DQHSISYTLSRAQTV\n",
+      ">PIK3CG\n",
+      "YLALRHHTNLLIILF\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">WAVE2\n",
+      "GKEALKFYTNPSYFF\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">IRS1\n",
+      "LLPCTGDYMNMSPVG\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">PTPRJ\n",
+      "DSKVDLIYQNTTAMT\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">BCAP\n",
+      "AKVEFGVYESGPRKS\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">Tks5\n",
+      "ALEEETIYENEGFRP\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">GRF-1\n",
+      "DGFDPSDYAEPMDAV\n",
+      ">RIP140\n",
+      "SSGDESSYSNCVPID\n",
+      ">PTP1B\n",
+      "ISEDIKSYYTVRQLE\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">AFAP1L1\n",
+      "KPPPEDYYEEALPLG\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">Trap150\n",
+      "WQNYRQAYSPRRGRS\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">CTNND2\n",
+      "ERDRQRPYSSSRTPS\n",
+      ">syndecan-2\n",
+      "RKPSSAAYQKAPTKE\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">endophilin B1\n",
+      "ARIEEFVYEKLDRKA\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">ROCK2\n",
+      "LADKNKIYESIEEAK\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">TRIO\n",
+      "LLNPNYIYDVPPEFV\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">PKCD\n",
+      "STFDAHIYEGRVIQI\n",
+      ">IRS1\n",
+      "VPSSRGDYMTMQMSC\n",
+      ">PDHK1\n",
+      "ARRLCDLYYINSPEL\n",
+      ">SRC-3\n",
+      "HPQAASIYQSSEMKG\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">PKCD\n",
+      "ELKGRGEYFAIKALK\n",
+      ">EphA2\n",
+      "KYLANMNYVHRDLAA\n",
+      ">ARAF\n",
+      "LGYRDSGYYWEVPPS\n",
+      ">FGFR3\n",
+      "RDVHNLDYYKKTTNG\n",
+      ">VEGFR2\n",
+      "DIYKDPDYVRKGDAR\n",
+      ">BCAP\n",
+      "LGQEEDVYHTVDDDE\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">YY1\n",
+      "MASGDTLYIATDGSE\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">syndecan-2\n",
+      "RKKDEGSYDLGERKP\n",
+      ">RASA1\n",
+      "TVDGKEIYNTIRRKT\n",
+      ">PLXNA1\n",
+      "VPKQTSAYNISNSST\n",
+      ">NELFCD iso4\n",
+      "__MDEDYYGSAAEWG\n",
+      ">VAV1\n",
+      "ALNDEDIYSGLSDQI\n",
+      ">PKCD\n",
+      "SSEPVGIYQGFEKKT\n",
+      ">Ret\n",
+      "SRKVGPGYLGSGGSR\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">TSAd\n",
+      "GEAPSNIYVEVEDEG\n",
+      ">Ret\n",
+      "LIVEYAKYGSLRGFL\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">CCDC50\n",
+      "MAEEKKAYKKAKERE\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">RBM10 iso2\n",
+      "LGARGSSYGVTSTES\n",
+      ">FLOT2\n",
+      "DVYDKVDYLSSLGKT\n",
+      ">Arg\n",
+      "KCNKPTVYGVSPIHD\n",
+      ">TSAd\n",
+      "PDEPIAFYAMGRGSP\n",
+      ">CENTG1 iso2\n",
+      "QGRTALFYARQAGSQ\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">Ret\n",
+      "RYPNDSVYANWMLSP\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">DCC\n",
+      "PTLESAQYPGILPSP\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">IRS1\n",
+      "GRKGSGDYMPMSPKS\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">TBX21\n",
+      "QFIAVTAYQNAEITQ\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">LAX1\n",
+      "AFQCCRDYENVPAAD\n",
+      ">GLRB\n",
+      "RDFELSNYDCYGKPI\n",
+      ">MAP2 iso3\n",
+      "EHGSQGTYSNTKENG\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">MUC1\n",
+      "SSTDRSPYEKVSAGN\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">Trap150\n",
+      "WQNYRQAYSPRRGRS\n",
+      ">IRS1\n",
+      "TLHTDDGYMPMSPGV\n",
+      ">RBM10 iso2\n",
+      "RGDRTGRYGATDRSQ\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">ENG\n",
+      "LLTAALWYIYSHTRS\n",
+      ">NPHS1\n",
+      "EDRIRNEYEESQWTG\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">NKCC1\n",
+      "LRTFGHNTMDAVPRI\n",
+      ">CXCR4\n",
+      "SVSTESESSSFHSS_\n",
+      ">APC\n",
+      "ESTPDGFSCSSSLSA\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">DEPTOR\n",
+      "SSCGSSGYFSSSPTL\n",
+      ">IRTKS\n",
+      "PAPSGRAYTSPLIDM\n",
+      ">AFAP1L1\n",
+      "QWPEPRIYDEVPYEK\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">Ezrin\n",
+      "KEVHKSGYLSSERLI\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">VEGFR2\n",
+      "FGLARDIYKDPDYVR\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">CCDC50\n",
+      "MAEEKKAYKKAKERE\n",
+      ">Arg\n",
+      "PNLFVALYDFVASGD\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">Arg\n",
+      "EKLRVLGYNQNGEWS\n",
+      ">ADAM12\n",
+      "PRPSHNAYIK_____\n",
+      ">JunB\n",
+      "YTNLSSYSPASAPSG\n",
+      ">Plectin-1\n",
+      "PVRNRRLTVNEAVKE\n",
+      ">AMPKB1\n",
+      "MVDSQKCSDVSELSS\n",
+      ">ANPA\n",
+      "RHLRSAGSRLTLSGR\n",
+      ">AARSL\n",
+      "VTTQTPLTPEQLRAV\n",
+      ">DEPTOR\n",
+      "SMSSCGSSGYFSSSP\n",
+      ">GAP43\n",
+      "PPTETAESSQAEEEK\n",
+      ">eIF3-epsilon\n",
+      "PAAAPASSSDPAAAA\n",
+      ">SIKE\n",
+      "RELLSISSESLQARK\n",
+      ">Ret\n",
+      "DNCSEEMYRLMLQCW\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">POLR2A\n",
+      "QSPSYSPTSPSYSPT\n",
+      ">SIKE\n",
+      "RELLSISSESLQARK\n",
+      ">ubiquitin\n",
+      "YNIQKESTLHLVLRL\n",
+      ">ARHGEF7\n",
+      "KPSEKPVSPKSGTLK\n",
+      ">WAVE2\n",
+      "VVGNDVATILSRRIA\n",
+      ">Caldesmon\n",
+      "RNLWEKQSVEKPAAS\n",
+      ">NLRP3\n",
+      "HKIVRKPSRILFLMD\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">IRTKS\n",
+      "LINLGKNYEKAVNAM\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">VAV2\n",
+      "EDGGDDIYEDIIKVE\n",
+      ">CTNND2\n",
+      "IGTYATLSPTKRLVH\n",
+      ">PI4K2A\n",
+      "___MDETSPLVSPER\n",
+      ">TRPC6\n",
+      "RLAHRRQTVLREKGR\n",
+      ">Raptor\n",
+      "DKMRRVSSYSALNSL\n",
+      ">STX1A\n",
+      "SDDDDDVTVTVDRDR\n",
+      ">TFE3\n",
+      "PTGSAPNSPMALLTI\n",
+      ">TXA2-R iso2\n",
+      "LSTRPRRSLTLWPSL\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">IRTKS\n",
+      "SNVVRKDYDTLSKCS\n",
+      ">IRTKS\n",
+      "VVIPPPDYLECLSMG\n",
+      ">AFAP1L1\n",
+      "KPPPEDYYEEALPLG\n",
+      ">Arg\n",
+      "YVGVWKKYSLTVAVK\n",
+      ">RAP1GAP2\n",
+      "_MFGRKRSVSFGGFG\n",
+      ">ULK1\n",
+      "CSSSPSPSGRPGPFS\n",
+      ">RALY\n",
+      "PLVRRVKTNVPVKLF\n",
+      ">SKA3\n",
+      "ENLLRTPTPPEVTKI\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">VAV1\n",
+      "AEEDEDLYDCVENEE\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">TRIO\n",
+      "LLNPNYIYDVPPEFV\n",
+      ">PLXNA2\n",
+      "VPKQTSSYNIPASAS\n",
+      ">ARAF\n",
+      "GYRDSGYYWEVPPSE\n",
+      ">BVR\n",
+      "LAEEIQKYCCSRK__\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">MUC1\n",
+      "SSTDRSPYEKVSAGN\n",
+      ">MAP2 iso3\n",
+      "EHGSQGTYSNTKENG\n",
+      ">VHL\n",
+      "TGRRIHSYRGHLWLF\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">GluR2\n",
+      "YKEGYNVYGIESVKI\n",
+      ">TRPV6\n",
+      "YRPHNLIYYGEHPLS\n",
+      ">Arg\n",
+      "KCNKPTVYGVSPIHD\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">NPHS1\n",
+      "SGAWGPLYDEVQMGP\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">HSL\n",
+      "LTESMRRSVSEAALA\n",
+      ">TRHR\n",
+      "YSVALNYSVIKESDR\n",
+      ">DLC1\n",
+      "KELKRRNSSSSLSSR\n",
+      ">KIF4A\n",
+      "FFNPVCATPNSKILK\n",
+      ">Caldesmon\n",
+      "INEWLTKTPEGNKSP\n",
+      ">PAH\n",
+      "GVLSRKLSDFGQETS\n",
+      ">RAPGEF2 iso2\n",
+      "RECKNFNSMFAIISG\n",
+      ">IRS1\n",
+      "SDGEGTMSRPASVDG\n",
+      ">MEF2D\n",
+      "MPVTVPVSNQSSMQF\n",
+      ">NOB1P\n",
+      "SSIQHPETPLHISGF\n",
+      ">ALDH5A1\n",
+      "VYGDIIHTPAKDRRA\n",
+      ">ARHGEF17\n",
+      "APSLEDVTKQYMLNL\n",
+      ">NOLC1\n",
+      "KKGEKRASSPFRRVR\n",
+      ">INCENP\n",
+      "RRKKRRISYVQDENR\n",
+      ">ZAP\n",
+      "EFLSPVVSPLGSGPP\n",
+      ">TRPA1\n",
+      "ETMLHRASLFDHHEL\n",
+      ">SNRK\n",
+      "QPGKKLTTSCGSLAY\n",
+      ">PD-L1\n",
+      "EKLFNVTSTLRINTT\n",
+      ">QIK\n",
+      "YQVMETKSMLYLVTE\n",
+      ">CDC25C\n",
+      "SDELMEFSLKDQEAK\n",
+      ">53BP2\n",
+      "NSDMPAPSPGLDYEP\n",
+      ">JNK1 iso3\n",
+      "DVLFPADSEHNKLKA\n",
+      ">CA9\n",
+      "RRQHRRGTKGGVSYR\n",
+      ">PPP1R1A\n",
+      "LKSTLAMSPRQRKKM\n",
+      ">CAPN2\n",
+      "GALFQDPSFPALPSS\n",
+      ">WDR77\n",
+      "FVRDATWSPLNHSLL\n",
+      ">CFTR\n",
+      "ITALKEETEEEVQET\n",
+      ">JNK1 iso3\n",
+      "GVIRGQPSPLAQVQQ\n",
+      ">SIAH2\n",
+      "__MSRPSSTGPSANK\n",
+      ">INCENP\n",
+      "RYHKRTSSAVWNSPP\n",
+      ">F3\n",
+      "GQSWKENSPLNVS__\n",
+      ">CPEB3\n",
+      "SPLKKPFSSNVIAPP\n",
+      ">FOXO1A\n",
+      "QFSKWPASPGSHSND\n",
+      ">Survivin\n",
+      "AGFIHCPTENEPDLA\n",
+      ">IkB-alpha\n",
+      "LVDDRHDSGLDSMKD\n",
+      ">ULK1\n",
+      "SAIRRSGSTTPLGFG\n",
+      ">RAP1GAP2\n",
+      "_MFGRKRSVSFGGFG\n",
+      ">AP-2 alpha\n",
+      "TDNNAKSSDKEEKHR\n",
+      ">calsequestrin 2\n",
+      "DEEDNDDSDDDDDE_\n",
+      ">GAB2\n",
+      "ALDFQPGSPSPHRKP\n",
+      ">CIITA\n",
+      "TVHGLPTSPDRPGST\n",
+      ">TRPC1\n",
+      "SGYRRKPTCKKIMTV\n",
+      ">SYT12\n",
+      "GPPSRKGSLSIEDTF\n",
+      ">NKX2-1\n",
+      "DLAHHAASPAALQGQ\n",
+      ">CDK5\n",
+      "DDEGVPSSALREICL\n",
+      ">SYN1\n",
+      "NYLRRRLSDSNFMAN\n",
+      ">ADRA1D\n",
+      "KGHTFRSSLSVRLLK\n",
+      ">HCN4\n",
+      "SGGAGGGSSLGHLHD\n",
+      ">ELK1\n",
+      "LLPTHTLTPVLLTPS\n",
+      ">MAP2\n",
+      "GAEIITQSPGRSSVA\n",
+      ">palladin\n",
+      "PPPPPVFSPTAAFPV\n",
+      ">PXN\n",
+      "KQKSAEPSPTVMSSS\n",
+      ">AML2\n",
+      "GRSGRGKSFTLTITV\n",
+      ">N-Myc\n",
+      "LLPTPPLSPSRGFAE\n",
+      ">RIC8A\n",
+      "GRPEGQYSEDEDTDT\n",
+      ">NMDAR2A\n",
+      "NRTHSLKSPRYLPEE\n",
+      ">GCAP2\n",
+      "ISQQRRKSAMF____\n",
+      ">PRAS40\n",
+      "LPRPRLNTSDFQKLK\n",
+      ">CEP131\n",
+      "NNLRRSNSTTQVSQP\n",
+      ">ADCY6\n",
+      "IVRSRVHSTAVGVFS\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">PTP1B\n",
+      "ISEDIKSYYTVRQLE\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">syndecan-2\n",
+      "RKKDEGSYDLGERKP\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">CDCP1\n",
+      "LQPEVDTYRPFQGTM\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">Trap150\n",
+      "AASGGAAYTKRYLEE\n",
+      ">CENTG1 iso2\n",
+      "QGRTALFYARQAGSQ\n",
+      ">TIAM1\n",
+      "DRARQGVYENFRREL\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">YY1\n",
+      "MASGDTLYIATDGSE\n",
+      ">EphB6\n",
+      "SKRRETPYTDRLQQY\n",
+      ">IRTKS\n",
+      "VVIPPPDYLECLSMG\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">CDCP1\n",
+      "VIEDTMVYGHLLQDS\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">CRIK\n",
+      "LENIQVLYSHEKVKM\n",
+      ">Bcr\n",
+      "ADAEKPFYVNVEFHH\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">Ret\n",
+      "DNCSEEMYRLMLQCW\n",
+      ">PLCG1\n",
+      "KLAEGSAYEEVPTSV\n",
+      ">SORBS1 iso5\n",
+      "RAEPKSIYEYQPGKS\n",
+      ">PLXNA1\n",
+      "VPKQTSAYNISNSST\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">CDK5\n",
+      "EKIGEGTYGTVFKAK\n",
+      ">MUC1\n",
+      "NGGSSLSYTNPAVAA\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">iNOS\n",
+      "LPGKPKVYVQDILRQ\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">DUSP3\n",
+      "SPTLVIAYLMMRQKM\n",
+      ">ROMK\n",
+      "SKTKEGKYRVDFHNF\n",
+      ">CRMP-2\n",
+      "KPFPDFVYKRIKARS\n",
+      ">TGFBR2\n",
+      "AKGNLQEYLTRHVIS\n",
+      ">PSD-95\n",
+      "PTSPRRYSPVAKDLL\n",
+      ">SF2\n",
+      "NSRSRSYSPRRSRGS\n",
+      ">CDK11B iso12\n",
+      "KHEYFRETPLPIDPS\n",
+      ">CDC25C\n",
+      "VEKFKDNTIPDKVKK\n",
+      ">TXA2-R\n",
+      "RRLQPRLSTRPRSLS\n",
+      ">JIP4 iso2\n",
+      "SGYKGSSTPTKGIEN\n",
+      ">FANCE\n",
+      "LFLGRILSLTSSASR\n",
+      ">RIT1\n",
+      "SVWKRLKSPFRKKKD\n",
+      ">CEP55\n",
+      "PTAALNESLVECPKC\n",
+      ">ENG\n",
+      "HSIGSTQSTPCSTSS\n",
+      ">VEGFR2\n",
+      "FVEEKSLSDVEEEEA\n",
+      ">ULK1\n",
+      "GGRPYTPSPQVGTIP\n",
+      ">AQP4\n",
+      "MEVEDNRSQVETEDL\n",
+      ">PPP1R1A\n",
+      "LKSTLAMSPRQRKKM\n",
+      ">Raptor\n",
+      "DKMRRVSSYSALNSL\n",
+      ">CES1D iso2\n",
+      "ANFARNGSPNGGGLP\n",
+      ">ADRB1\n",
+      "RAGKRRPSRLVALRE\n",
+      ">MDM2\n",
+      "SSSESTETPSHQDLD\n",
+      ">MYBPC3\n",
+      "RSAFRRTSLAGAGRR\n",
+      ">osterix\n",
+      "SSTNGLLSPAGSPPA\n",
+      ">SEPT5\n",
+      "HCCLYFISPFGHGLR\n",
+      ">QIK\n",
+      "RSGQRRHTLSEVTNQ\n",
+      ">INCENP\n",
+      "TSSAVWNSPPLQGAR\n",
+      ">APC\n",
+      "FSCSSSLSALSLDEP\n",
+      ">MBP\n",
+      "RGAPKRGSGKDGHHA\n",
+      ">IkB-alpha\n",
+      "LVDDRHDSGLDSMKD\n",
+      ">CCDC6\n",
+      "EKLDQPVSAPPSPRD\n",
+      ">PELI1\n",
+      "VPGSQSNSDTQSVQS\n",
+      ">TIAM1\n",
+      "SDAVSASSPEKESQQ\n",
+      ">DNMT3A\n",
+      "QQPTDPASPNVATTP\n",
+      ">Src\n",
+      "DPSQRRRSLEPPDST\n",
+      ">FOXO1A\n",
+      "NEGTGKSSWWMLNPE\n",
+      ">CFTR\n",
+      "TETLRRFSVDDSSAP\n",
+      ">TGFBR1\n",
+      "DLIYDMTTSGSGSGL\n",
+      ">calponin 1\n",
+      "MGTNKFASQQGMTAY\n",
+      ">CDH1\n",
+      "FDYEGSGSEAASLSS\n",
+      ">ASF1A\n",
+      "KLEDAESSNPNLQSL\n",
+      ">smMLCK\n",
+      "ASGSSPTSPINADKV\n",
+      ">Nik\n",
+      "KAPALNLSKEESGTW\n",
+      ">PTTG1IP\n",
+      "LFKEENPYARFENN_\n",
+      ">Ret\n",
+      "TWIENKLYGMSDPNW\n",
+      ">ENG\n",
+      "LLTAALWYIYSHTRS\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">GluR2\n",
+      "YKEGYNVYGIESVKI\n",
+      ">CRMP-2\n",
+      "RGVPRGLYDGPVCEV\n",
+      ">CD33\n",
+      "EMDEELHYASLNFHG\n",
+      ">VEGFR2\n",
+      "FGLARDIYKDPDYVR\n",
+      ">ULK1\n",
+      "SHLASPPSLGEMPQL\n",
+      ">ULK1\n",
+      "GVLARKMSLGGGRPY\n",
+      ">GYS1\n",
+      "SSSLSTPSEPLSPTS\n",
+      ">CACNA1B\n",
+      "ERARPRRSHSKEAPG\n",
+      ">4E-BP1\n",
+      "RNSPVTKTPPRDLPT\n",
+      ">JMJD2B\n",
+      "IDYGKVATQCTCRKD\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">CACNA1C\n",
+      "PEDESCVYALGRGRS\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">PLCG1\n",
+      "EGSFEARYQQPFEDF\n",
+      ">IRTKS\n",
+      "PAPSGRAYTSPLIDM\n",
+      ">CTNND2\n",
+      "ERDRQRPYSSSRTPS\n",
+      ">VAV2\n",
+      "HDLGEDIYDCVPCED\n",
+      ">Ret\n",
+      "TNTGFPRYPNDSVYA\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">PKCD\n",
+      "ELKGRGEYFAIKALK\n",
+      ">PLXNA2\n",
+      "SKMVSEIYLTRLLAT\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">Ret\n",
+      "PLLLIVEYAKYGSLR\n",
+      ">CDCP1\n",
+      "VIEDTMVYGHLLQDS\n",
+      ">CCDC50\n",
+      "MAEEKKAYKKAKERE\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">TRPV6\n",
+      "YRPHNLIYYGEHPLS\n",
+      ">IRS1\n",
+      "TLHTDDGYMPMSPGV\n",
+      ">CTNND2\n",
+      "QEPSRKDYETYQPFP\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">RBM10 iso2\n",
+      "SEEPPVDYSYYQQDE\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">endophilin B1\n",
+      "ARIEEFVYEKLDRKA\n",
+      ">EphA2\n",
+      "AGEFGEVYKGMLKTS\n",
+      ">IRS1\n",
+      "EPKSPGEYVNIEFGS\n",
+      ">Ret\n",
+      "DNCSEEMYRLMLQCW\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">VAV1\n",
+      "ALNDEDIYSGLSDQI\n",
+      ">vinexin\n",
+      "QHPDPAWYQTWPGPG\n",
+      ">N-WASP\n",
+      "RETSKVIYDFIEKTG\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">MEGF10\n",
+      "LSSSENPYATIKDPP\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">SRC-3\n",
+      "HPQAASIYQSSEMKG\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">P2X3\n",
+      "QSTDSGAYSIGH___\n",
+      ">TXK\n",
+      "KIQVKALYDFLPREP\n",
+      ">IRS1\n",
+      "GRKGSGDYMPMSPKS\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">PLCG1\n",
+      "KLAEGSAYEEVPTSV\n",
+      ">DYN1\n",
+      "LLPLRRGYIGVVNRS\n",
+      ">BCAP\n",
+      "AKVEFGVYESGPRKS\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">SNCB\n",
+      "EDPPQEEYQEYEPEA\n",
+      ">EphA2\n",
+      "QLKPLKTYVDPHTYE\n",
+      ">PIP5K1C\n",
+      "TDERSWVYSPLHYSA\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">MUC1\n",
+      "TYHTHGRYVPPSSTD\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">IRTKS\n",
+      "YEHKEIEYVETVTSR\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">Trap150\n",
+      "WQNYRQAYSPRRGRS\n",
+      ">IRS1\n",
+      "EETGTEEYMKMDLGP\n",
+      ">PAK6\n",
+      "KSLVGTPYWMAPEVI\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">TBX21\n",
+      "QFIAVTAYQNAEITQ\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">cGAS\n",
+      "LLNTGSYYEHVKISA\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">Trap150\n",
+      "AASGGAAYTKRYLEE\n",
+      ">SDHA\n",
+      "CEKVSQLYGDLQHLK\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">ephexin-1\n",
+      "IEQIGLLYQEYRDKS\n",
+      ">NPHS1\n",
+      "SGAWGPLYDEVQMGP\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">FCGR2C\n",
+      "PEETNNDYETADGGY\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">IRS1\n",
+      "LLPCTGDYMNMSPVG\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">CENTG1 iso2\n",
+      "QGRTALFYARQAGSQ\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">Ret\n",
+      "MMVKRRDYLDLAAST\n",
+      ">VHL\n",
+      "TGRRIHSYRGHLWLF\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">ARRB1\n",
+      "YLKERRVYVTLTCAF\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">DEPTOR\n",
+      "SSCGSSGYFSSSPTL\n",
+      ">CASKIN1\n",
+      "TKDYCNNYDLTSLNV\n",
+      ">SLC4A1\n",
+      "EEEGRDEYDEVAMPV\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">STAM2\n",
+      "KSEPEPVYIDEDKMD\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">Arg\n",
+      "QGWVPSNYITPVNSL\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">TR-beta1\n",
+      "FLLAFEHYINYRKHH\n",
+      ">ARAF\n",
+      "GYRDSGYYWEVPPSE\n",
+      ">IRS1\n",
+      "EETGTEEYMKMDLGP\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">NPHS1\n",
+      "EDRIRNEYEESQWTG\n",
+      ">CDCP1\n",
+      "VIEDTMVYGHLLQDS\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">LAX1\n",
+      "SSEDSHDYVNVPTAE\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAQKD\n",
+      ">GAB2\n",
+      "SASSDDNYVPMNPGS\n",
+      ">ARAF\n",
+      "LGYRDSGYYWEVPPS\n",
+      ">DRD3\n",
+      "RILTRQNSQCISIRP\n",
+      ">CAMKK1\n",
+      "PRAWRRPTIESHHVA\n",
+      ">RAB11FIP2\n",
+      "QRLSSAHSMSDLSGS\n",
+      ">SGT1\n",
+      "LGPRPNESDSDDLDD\n",
+      ">desmin\n",
+      "YSSSQRVSSYRRTFG\n",
+      ">PDHA1\n",
+      "NRYGMGTSVERAAAS\n",
+      ">ANPA\n",
+      "RHLRSAGSRLTLSGR\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">ZC3H4\n",
+      "GHRKYREYSPPYAPS\n",
+      ">NCKAP5L\n",
+      "PTSEKSPSPGGPQLS\n",
+      ">CA9\n",
+      "RRQHRRGTKGGVSYR\n",
+      ">MKK4\n",
+      "ISGQLVDSIAKTRDA\n",
+      ">LAX1\n",
+      "SSQISNDYVNMTGLD\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">EphA2\n",
+      "QLKPLKTYVDPHTYE\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">NMDAR2B\n",
+      "ISTHTVTYGNIEGNA\n",
+      ">Ikaros\n",
+      "ESPPVSDTPDEGDEP\n",
+      ">AQP4\n",
+      "MEVEDNRSQVETEDL\n",
+      ">SKA3\n",
+      "PLVPTFCTPGLKIPS\n",
+      ">Claudin-16\n",
+      "AGVSMAKSYKAPRTE\n",
+      ">NCCT\n",
+      "LRTFGYNTIDVVPAY\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">CDK9\n",
+      "QSRNPATTNQTEFER\n",
+      ">RHOA\n",
+      "ENIPEKWTPEVKHFC\n",
+      ">mAChR M3\n",
+      "ITKRKRMSLIKEKKA\n",
+      ">Nik\n",
+      "RRKKRSKSLAQAGVA\n",
+      ">ULK1\n",
+      "PVVFTVGSPPSGATP\n",
+      ">GABARAPL2\n",
+      "DKTVPQSSLTMGQLY\n",
+      ">CIITA\n",
+      "TVHGLPTSPDRPGST\n",
+      ">SHC4\n",
+      "GHRATALTPDSCPLP\n",
+      ">53BP2\n",
+      "NSDMPAPSPGLDYEP\n",
+      ">PIK3CG\n",
+      "YLALRHHTNLLIILF\n",
+      ">H3\n",
+      "KQTARKSTGGKAPRK\n",
+      ">TNNI3\n",
+      "KKSKISASRKLQLKT\n",
+      ">URB\n",
+      "PQTTRRPSKATSLES\n",
+      ">RFC1\n",
+      "GSPTKRESVSPEDSE\n",
+      ">VEGFR2\n",
+      "FVEEKSLSDVEEEEA\n",
+      ">SLC4A1\n",
+      "IDAYMAQSRGELLHS\n",
+      ">KIDINS220\n",
+      "RTITRQMSFDLTKLL\n",
+      ">TRPC6\n",
+      "KNDYKKLSMQCKDFV\n",
+      ">GLRA1\n",
+      "PPPAPSKSPEEMRKL\n",
+      ">TGFBR1\n",
+      "DLIYDMTTSGSGSGL\n",
+      ">PDE4A\n",
+      "ATSQRRESFLYRSDS\n",
+      ">PXN\n",
+      "KQKSAEPSPTVMSSS\n",
+      ">FTO\n",
+      "CEGSEDESEDESSFE\n",
+      ">PLA2G4A\n",
+      "LNTSYPLSPLSDFAT\n",
+      ">ADRB3\n",
+      "GRFSPEESPPSPSRS\n",
+      ">NOLC1\n",
+      "VKLQTPNTFPKRKKG\n",
+      ">smMLCK\n",
+      "SSTGSPTSPLTAERL\n",
+      ">GYS1\n",
+      "MPLSRTLSVSSLPGL\n",
+      ">ACF7\n",
+      "RASSRRGSDASDFDL\n",
+      ">SMAD2\n",
+      "QSNYIPETPPPGYIS\n",
+      ">CDH1\n",
+      "LVFDYEGSGSEAASL\n",
+      ">CDH1\n",
+      "SLSSLNSSESDQDQD\n",
+      ">SYN1\n",
+      "NYLRRRLSDSNFMAN\n",
+      ">CAP1\n",
+      "SAPKPQTSPSPKRAT\n",
+      ">GRK4\n",
+      "SLAYAYETKDALCLV\n",
+      ">CSN2\n",
+      "HPFAQTQSLVYPFPG\n",
+      ">RRas\n",
+      "QEQELPPSPPSAPRK\n",
+      ">HIST2H2BC\n",
+      "ERIAGEASRLAHYNK\n",
+      ">osterix\n",
+      "GLLSPAGSPPAPASG\n",
+      ">desmin\n",
+      "SLGSPLSSPVFPRAG\n",
+      ">REL\n",
+      "SNTTVFVSQSDAFEG\n",
+      ">CDX2\n",
+      "RSVPEPLSPVSSLQA\n",
+      ">RKIP\n",
+      "DELGKVLTPTQVKNR\n",
+      ">PFKP\n",
+      "VSASPRGSYRKFLEH\n",
+      ">PAK1\n",
+      "VIEPLPVTPTRDVAT\n",
+      ">MAP2 iso3\n",
+      "RTPGTPGTPSYPRTP\n",
+      ">MYH10\n",
+      "ANKLVRRTEKKLKEI\n",
+      ">CXCR4\n",
+      "SVSTESESSSFHSS_\n",
+      ">NCKAP5L\n",
+      "PSPEPPPSPLQVPTY\n",
+      ">RIC8A\n",
+      "QLSSDPDSDPD____\n",
+      ">DNCLI1\n",
+      "ASPQRRATAAQEDRD\n",
+      ">NMDAR2A\n",
+      "NRTHSLKSPRYLPEE\n",
+      ">POLR2A\n",
+      "SPTYSPTSPKYSPTS\n",
+      ">SMARCA2\n",
+      "RPPAEKLSPNPPKLT\n",
+      ">MEF2D\n",
+      "EDKYRRASEELDGLF\n",
+      ">MAP2\n",
+      "HVTSKCGSLKNIRHR\n",
+      ">MAPKAPK2\n",
+      "TSHNSLTTPCYTPYY\n",
+      ">ZAP3\n",
+      "GLVRPGSSREKVPGG\n",
+      ">Lmr2\n",
+      "LQTSKYFSPPPPARS\n",
+      ">S6\n",
+      "IAKRRRLSSLRASTS\n",
+      ">N-Myc\n",
+      "LLPTPPLSPSRGFAE\n",
+      ">iNOS\n",
+      "KSRQNLQSPTSSRAT\n",
+      ">Ikaros\n",
+      "GSHRDQGSSALSGVG\n",
+      ">CIITA\n",
+      "PDRPGSTSPFAPSAT\n",
+      ">WSTF\n",
+      "KSDGACDSPSSDKEN\n",
+      ">TORC2\n",
+      "DAKKLSSSSSRPRSC\n",
+      ">VEGFR2\n",
+      "RIYDVVLSPSHGIEL\n",
+      ">AML2\n",
+      "ERLRMRVTPSTPSPR\n",
+      ">PER2\n",
+      "DMASGPESLDGAAGG\n",
+      ">ARHGEF17\n",
+      "APSLEDVTKQYMLNL\n",
+      ">desmin\n",
+      "RASRLGTTRTPSSYG\n",
+      ">DHFR\n",
+      "RIMQDFESDTFFPEI\n",
+      ">TIAM1\n",
+      "DVNAGEGSEFADSGI\n",
+      ">MUC1\n",
+      "PPSSTDRSPYEKVSA\n",
+      ">SRC-3\n",
+      "PPYNRAVSLDSPVSV\n",
+      ">AMPKB2\n",
+      "KLDSMESSETSCRDL\n",
+      ">Titin\n",
+      "REQANLFSEWLRNID\n",
+      ">SKA3\n",
+      "SYENLLRTPTPPEVT\n",
+      ">MIS18A\n",
+      "SLLGKRLSEDSSRHQ\n",
+      ">CGN\n",
+      "GKLLRSHSQASLAGP\n",
+      ">JMJD2B\n",
+      "AKRPRVGTPLATEDS\n",
+      ">P38B\n",
+      "HARTYIQSLPPMPQK\n",
+      ">CADPS\n",
+      "QGISMKDSDEEDEED\n",
+      ">HCN4\n",
+      "LGSRGGGSGGAGGGS\n",
+      ">NKCC2\n",
+      "LQTFGHNTMDAVPKI\n",
+      ">TSC2\n",
+      "EILVRRPTGNTSWLM\n",
+      ">CACNA1D\n",
+      "PTSQPNSSKQTVLSW\n",
+      ">NKCC2\n",
+      "TNTYYLQTFGHNTMD\n",
+      ">TRPC3\n",
+      "KNDYRKLSMQCKDFV\n",
+      ">PELI1\n",
+      "ISNKDQHSISYTLSR\n",
+      ">MBP\n",
+      "KYLASASTMDHARHG\n",
+      ">ZNF609\n",
+      "FTVNPALTPAKDKKK\n",
+      ">HMGN1\n",
+      "KNEESPASDEAEEKE\n",
+      ">SMARCA2\n",
+      "RPPAEKLSPNPPKLT\n",
+      ">APC\n",
+      "SSSLSALSLDEPFIQ\n",
+      ">FOXO1A\n",
+      "SSAGWKNSIRHNLSL\n",
+      ">WAVE1\n",
+      "PPGIRPSSPVTVAAL\n",
+      ">ULK1\n",
+      "SAIRRSGSTTPLGFG\n",
+      ">BCAP\n",
+      "QLPDNEPYIFKVFAE\n",
+      ">Arg\n",
+      "RLMTGDTYTAHAGAK\n",
+      ">RBM10 iso2\n",
+      "RGDRTGRYGATDRSQ\n",
+      ">Diaphanous-2 iso4\n",
+      "HINNIKPSIIAVTLA\n",
+      ">PTPRA\n",
+      "QAGSHSNSFRLSNGR\n",
+      ">CDC20\n",
+      "NRLKVLYSQKATPGS\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">eNOS\n",
+      "WELGSITYDTLCAQS\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">PIP5K1C\n",
+      "TDERSWVYSPLHYSA\n",
+      ">IRTKS\n",
+      "PAPSGRAYTSPLIDM\n",
+      ">CTNND2\n",
+      "LKERKTDYESAGNNA\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">TGFBR2\n",
+      "GQVGTARYMAPEVLE\n",
+      ">cGAS\n",
+      "LLNTGSYYEHVKISA\n",
+      ">IRS1\n",
+      "EETGTEEYMKMDLGP\n",
+      ">Ron\n",
+      "DILDREYYSVQQHRH\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">ROCK2\n",
+      "LADKNKIYESIEEAK\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">MUC1\n",
+      "NGGSSLSYTNPAVAA\n",
+      ">FLT3\n",
+      "ADAEEAMYQNVDGRV\n",
+      ">CRK\n",
+      "NLQNGPIYARVIQKR\n",
+      ">TBX21\n",
+      "VLQSLHKYQPRLHIV\n",
+      ">Cortactin\n",
+      "YQAEDDTYDGYESDL\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">DAPP1\n",
+      "KVEEPSIYESVRVHT\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">Claudin-11\n",
+      "AFGENRFYYTAGSSS\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">NPHS1\n",
+      "CEDPRGIYDQVAADM\n",
+      ">calponin 2\n",
+      "QFNKGPSYGLSAEVK\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">SLC4A1\n",
+      "MEELQDDYEDMMEEN\n",
+      ">LAX1\n",
+      "AFQCCRDYENVPAAD\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">VAV2\n",
+      "HDLGEDIYDCVPCED\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAQKD\n",
+      ">EphB6\n",
+      "YTDRLQQYISTRGLG\n",
+      ">RIP140\n",
+      "TPTTIDEYSDNNPSF\n",
+      ">NPHS1\n",
+      "PTLEEVLYHQGAEGE\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">BLK\n",
+      "ARIIDSEYTAQEGAK\n",
+      ">Claudin-11\n",
+      "FGENRFYYTAGSSSP\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">PKCD\n",
+      "ELKGKERYFAIKYLK\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">GMPR\n",
+      "GRKLKLFYGMSSDTA\n",
+      ">CD163L1\n",
+      "DALAEAVYEELDYLL\n",
+      ">Trap150\n",
+      "AASGGAAYTKRYLEE\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">FLT3\n",
+      "VSECPHTYQNRRPFS\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">BVR\n",
+      "EERKEDQYMKMTVCL\n",
+      ">CRMP-2\n",
+      "RGVPRGLYDGPVCEV\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">RBM10 iso2\n",
+      "LGARGSSYGVTSTES\n",
+      ">GLRB\n",
+      "RDFELSNYDCYGKPI\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">YY1\n",
+      "SPPDYSEYMTGKKLP\n",
+      ">GAB2\n",
+      "SASSDDNYVPMNPGS\n",
+      ">IRS1\n",
+      "GLENGLNYIDLDLVK\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">IRTKS\n",
+      "YEHKEIEYVETVTSR\n",
+      ">iNOS\n",
+      "LPGKPKVYVQDILRQ\n",
+      ">Tks5\n",
+      "ALEEETIYENEGFRP\n",
+      ">LAX1\n",
+      "SNEDSSDYENVLTAK\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">ephexin-1\n",
+      "IEQIGLLYQEYRDKS\n",
+      ">Ezrin\n",
+      "KEVHKSGYLSSERLI\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">BCAP\n",
+      "DRPQSSIYDPFAGMK\n",
+      ">PAK6\n",
+      "KSLVGTPYWMAPEVI\n",
+      ">SOS1\n",
+      "SKAYSPRYSISDRTS\n",
+      ">ENG\n",
+      "TAALWYIYSHTRSPS\n",
+      ">TACE\n",
+      "DKKLDKQYESLSLFH\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">PLCG1\n",
+      "KLAEGSAYEEVPTSV\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">PSD-95\n",
+      "VTQMEVHYARPIIIL\n",
+      ">PTPRJ\n",
+      "NTTAMTIYENLAPVT\n",
+      ">PLXNA2\n",
+      "VPKQTSSYNIPASAS\n",
+      ">PTPRJ\n",
+      "DSKVDLIYQNTTAMT\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">BCAP\n",
+      "LGQEEDVYHTVDDDE\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">FLOT2\n",
+      "DVYDKVDYLSSLGKT\n",
+      ">iNOS\n",
+      "IEFVNQYYGSFKEAK\n",
+      ">Cortactin\n",
+      "RPPSSPIYEDAAPFK\n",
+      ">CTNND2\n",
+      "ERDRQRPYSSSRTPS\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">NPHS1\n",
+      "PGAWGPLYDEVRMDP\n",
+      ">ZC3H4\n",
+      "SRGRGRGYRGRGSRG\n",
+      ">NMDAR2B\n",
+      "ISTHTVTYGNIEGNA\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">VEGFR2\n",
+      "RFRQGKDYVGAIPVD\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">CCDC50\n",
+      "SSHKGFHYKH_____\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">syndecan-2\n",
+      "RKKDEGSYDLGERKP\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">IRTKS\n",
+      "SNVVRKDYDTLSKCS\n",
+      ">DCC\n",
+      "PTLESAQYPGILPSP\n",
+      ">EphA2\n",
+      "ESIKMQQYTEHFMAA\n",
+      ">MUC1\n",
+      "TYHTHGRYVPPSSTD\n",
+      ">MAP2 iso3\n",
+      "EHGSQGTYSNTKENG\n",
+      ">IREM-1\n",
+      "VDQVEVEYVTMASLP\n",
+      ">IRTKS\n",
+      "VVIPPPDYLECLSMG\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">FGFR3\n",
+      "DVHNLDYYKKTTNGR\n",
+      ">ARRB1\n",
+      "YLKERRVYVTLTCAF\n",
+      ">VEGFR2\n",
+      "EEAPEDLYKDFLTLE\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">STAM2\n",
+      "EAPVYSVYSKLHPPA\n",
+      ">HK2\n",
+      "GTGSNACYMEEMRNV\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">MUC1\n",
+      "SSTDRSPYEKVSAGN\n",
+      ">RTCB\n",
+      "MEEAPESYKNVTDVV\n",
+      ">Ret\n",
+      "PLLLIVEYAKYGSLR\n",
+      ">SORBS1 iso5\n",
+      "LCSYQALYSYVPQND\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">YY1\n",
+      "MASGDTLYIATDGSE\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">ZC3H4\n",
+      "PTDRYNSYNRPRPKA\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">Hck\n",
+      "YTATESQYQQQP___\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">EphA2\n",
+      "GHQKRIAYSLLGLKD\n",
+      ">Arg\n",
+      "YVGVWKKYSLTVAVK\n",
+      ">VEGFR2\n",
+      "AQQDGKDYIVLPISE\n",
+      ">VAV2\n",
+      "EDGGDDIYEDIIKVE\n",
+      ">IkB-beta\n",
+      "PRDASDTYLTQSQDH\n",
+      ">EphA2\n",
+      "RQSPEDVYFSKSEQL\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">NCAM-L1\n",
+      "KDETFGEYRSLESEA\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">CAMKK2\n",
+      "SPASSPQSSPRMPRR\n",
+      ">ROMK iso2\n",
+      "RVANLRKSLLIGSHI\n",
+      ">ZAP3\n",
+      "GLVRPGSSREKVPGG\n",
+      ">TRHR\n",
+      "IKESDRFSTELDDIT\n",
+      ">Titin\n",
+      "QELLSKETLFPSMPE\n",
+      ">TPM1\n",
+      "HALNDMTSI______\n",
+      ">HOXB7\n",
+      "NKTAGPGTTGQDRAE\n",
+      ">STAT1\n",
+      "IVGPEFDSMMSTV__\n",
+      ">PRRC2C\n",
+      "NDRPVRRSGPIKKPV\n",
+      ">CDK9\n",
+      "NSQPNRYTNRVVTLW\n",
+      ">H1C\n",
+      "AGARRKASGPPVSEL\n",
+      ">MYBPC3\n",
+      "SLLKKRDSFRRDSKL\n",
+      ">NIPP-1\n",
+      "KNSRVTFSEDDEIIN\n",
+      ">GAP43\n",
+      "PTETAESSQAEEEKD\n",
+      ">DNMT3A\n",
+      "QQPTDPASPNVATTP\n",
+      ">N-WASP\n",
+      "LFDMCGISEAQLKDR\n",
+      ">INSR\n",
+      "LRELGQGSFGMVYEG\n",
+      ">RFC1\n",
+      "PVTYISETDEDDDFL\n",
+      ">PINX1\n",
+      "SDKKEKKSFSLEEKS\n",
+      ">EEF2\n",
+      "NVLCLSKSPNKHNRL\n",
+      ">NPFFR2\n",
+      "ELKETTNSSEI____\n",
+      ">CELSR1\n",
+      "TTRATLLTRSLNCNN\n",
+      ">SIAH2\n",
+      "PSANKPCSKQPPPQP\n",
+      ">CAMKK1\n",
+      "KSMLRKRSFGNPFEP\n",
+      ">BUB3\n",
+      "AVEYLDPSPEVQKKK\n",
+      ">CRMP-2\n",
+      "KTVTPASSAKTSPAK\n",
+      ">GRK5\n",
+      "LENIVANTVLLKARE\n",
+      ">FOXO1A\n",
+      "NSIRHNLSLHSKFIR\n",
+      ">MBP\n",
+      "KYLASASTMDHARHG\n",
+      ">AMPKB2\n",
+      "KLDSMESSETSCRDL\n",
+      ">Caldesmon\n",
+      "LTTPKLKSTENAFGR\n",
+      ">MBP\n",
+      "HDAQGTLSKIFKLGG\n",
+      ">Nik\n",
+      "PATAKGPSFPDRRAT\n",
+      ">MEF2D\n",
+      "LTDPRLLSPQQPALQ\n",
+      ">KLF3\n",
+      "PSSHRRASPGLSMPS\n",
+      ">Bcl-2L12\n",
+      "SESPRPCSLPIRPCY\n",
+      ">TIAM1\n",
+      "SDAVSASSPEKESQQ\n",
+      ">NHE3\n",
+      "SLEQRRRSVRDAEDV\n",
+      ">RHOA\n",
+      "ENIPEKWTPEVKHFC\n",
+      ">TPI1 iso3\n",
+      "KMNGRKQSLGELIGT\n",
+      ">AML2\n",
+      "ERLRMRVTPSTPSPR\n",
+      ">RAB11FIP5\n",
+      "GPGAELLTRSPSRSS\n",
+      ">NIPP-1\n",
+      "KNSRVTFSEDDEIIN\n",
+      ">REL\n",
+      "SNTTVFVSQSDAFEG\n",
+      ">SKP2\n",
+      "ATLLSSCSRLDELNL\n",
+      ">RIMS1 iso7\n",
+      "ARHERRHSDVALPHT\n",
+      ">HMGN1\n",
+      "KNEESPASDEAEEKE\n",
+      ">eIF2B-epsilon\n",
+      "LKEAEEESSEDD___\n",
+      ">MOB1A\n",
+      "FSSRSSKTFKPKKNI\n",
+      ">KCNJ12\n",
+      "ERPYRRESEI_____\n",
+      ">HuR\n",
+      "LNGLRLQSKTIKVSY\n",
+      ">ARHGEF17\n",
+      "AATSEEPTGFSVDSN\n",
+      ">MDM2\n",
+      "SLDSEDYSLSDEGHE\n",
+      ">NIPP-1\n",
+      "PKRKRKNSRVTFSED\n",
+      ">BLNK\n",
+      "AKARLASTLPAPNSL\n",
+      ">PAGE4\n",
+      "MDLEKTRSERGDGSD\n",
+      ">LIMK1\n",
+      "PDRKKRYTVVGNPYW\n",
+      ">AMPKB2\n",
+      "WQQDLDDSVKPTQQA\n",
+      ">PPP1R1A\n",
+      "LKPSLAMSPRQRKKM\n",
+      ">DGCR8\n",
+      "AECGLLLSPVSGDVH\n",
+      ">CACNA1D\n",
+      "GPTSQPNSSKQTVLS\n",
+      ">SUV39H1\n",
+      "GLAGLPGSPKKRVRI\n",
+      ">MAP2 iso3\n",
+      "ISSARRTTRSEPIRR\n",
+      ">RbBP1\n",
+      "QHNFSVASPLTLSQD\n",
+      ">SET iso2\n",
+      "KDLTKRSSQTQNKAS\n",
+      ">FOXO1A\n",
+      "SSAGWKNSIRHNLSL\n",
+      ">IRS1\n",
+      "GYLRKPKSMHKRFFV\n",
+      ">CACNB1\n",
+      "IVYIKITSPKVLQRL\n",
+      ">DYNC1I2\n",
+      "PSSKSVSTPSEAGSQ\n",
+      ">MZF-1\n",
+      "SLSGQIQSPTTEGGF\n",
+      ">VHL\n",
+      "GEPQPYPTLPPGTGR\n",
+      ">PINX1\n",
+      "DLSSRSKTDLDCIFG\n",
+      ">syndecan-2\n",
+      "RKPSSAAYQKAPTKE\n",
+      ">CRK\n",
+      "QKRVPNAYDKTALAL\n",
+      ">TGFBR2\n",
+      "KGRFAEVYKAKLKQN\n",
+      ">PSD-95\n",
+      "VTQMEVHYARPIIIL\n",
+      ">GluR2\n",
+      "YKEGYNVYGIESVKI\n",
+      ">RRas\n",
+      "DPTIEDSYTKICSVD\n",
+      ">YY1\n",
+      "MASGDTLYIATDGSE\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">RIPK2\n",
+      "DLIMKEDYELVSTKP\n",
+      ">Kv4.3\n",
+      "GDCCYEEYKDRKREN\n",
+      ">RIP140\n",
+      "SSPKNTSYKNSLERN\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">GLRB\n",
+      "RDFELSNYDCYGKPI\n",
+      ">Hck\n",
+      "RVIEDNEYTAREGAK\n",
+      ">Ron\n",
+      "RDILDREYYSVQQHR\n",
+      ">CCDC50\n",
+      "SSHKGFHYKH_____\n",
+      ">BVR\n",
+      "LAEEIQKYCCSRK__\n",
+      ">ITGB2\n",
+      "HLSDLREYRRFEKEK\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">AFAP1L1\n",
+      "KPPPEDYYEEALPLG\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">DCC\n",
+      "TEDPASVYEQDDLSE\n",
+      ">EphB6\n",
+      "SKRRETPYTDRLQQY\n",
+      ">IRS1\n",
+      "LLPCTGDYMNMSPVG\n",
+      ">CELF2 iso3\n",
+      "LKELFEPYGAVYQIN\n",
+      ">DUSP3\n",
+      "NEVTPRIYVGNASVA\n",
+      ">Ret\n",
+      "DVYEEDSYVKRSQGR\n",
+      ">DYRK1A\n",
+      "SNSGRARSDPTHQHR\n",
+      ">desmin\n",
+      "VYQVSRTSGGAGGLG\n",
+      ">Ikaros\n",
+      "SNSCQDSTDTESNAE\n",
+      ">AMPKB2\n",
+      "KLDSMESSETSCRDL\n",
+      ">MRTO4\n",
+      "ASESTEESDSEDDD_\n",
+      ">ZRANB1\n",
+      "RWRGSCSSGNSQRRS\n",
+      ">TSAd\n",
+      "PDEPIAFYAMGRGSP\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">NOVA2\n",
+      "EQVHKAVSAIVQKVQ\n",
+      ">AQP5\n",
+      "STDSRRTSPVGSPAL\n",
+      ">PD-L1\n",
+      "EKLFNVTSTLRINTT\n",
+      ">ENG\n",
+      "STNHSIGSTQSTPCS\n",
+      ">RASGRF1\n",
+      "KEIYRRMSLANTGYS\n",
+      ">RPS5\n",
+      "IKLFGKWSTDDVQIN\n",
+      ">Ret\n",
+      "SSGARRPSLDSMENQ\n",
+      ">BLM\n",
+      "SHFVRVSTAQKSKKG\n",
+      ">MAPKAPK2\n",
+      "LSNSQGQSPPVPFPA\n",
+      ">ULK1\n",
+      "KVAELLSSGLQTAID\n",
+      ">RBM7\n",
+      "QIIQRSFSSPENFQR\n",
+      ">WAVE2\n",
+      "VVGNDVATILSRRIA\n",
+      ">IkB-alpha\n",
+      "LVDDRHDSGLDSMKD\n",
+      ">KIF20B\n",
+      "VKHPGCTTPVTVKIP\n",
+      ">HCN4\n",
+      "RHPRRLQSLIPSALG\n",
+      ">Diaphanous-2 iso4\n",
+      "CLESLRVSLTSNPVS\n",
+      ">HCN4\n",
+      "SPHSSGESVAAFSLY\n",
+      ">CACNA1D\n",
+      "NGDMGPISHRQDYEL\n",
+      ">SYN1\n",
+      "PATRPPASPSPQRQA\n",
+      ">AMPKG1\n",
+      "NNLDVSVTKALQHRS\n",
+      ">MEF2D\n",
+      "LTDPRLLSPQQPALQ\n",
+      ">ULK1\n",
+      "HGRTPSPSPTCSSSP\n",
+      ">RAB11FIP2\n",
+      "QRLSSAHSMSDLSGS\n",
+      ">Myb\n",
+      "KYGPKRWSVIAKHLK\n",
+      ">TSC2\n",
+      "FQPSQPLSKSSSSPE\n",
+      ">eIF2B-epsilon\n",
+      "LKEAEEESSEDD___\n",
+      ">CACNA1D\n",
+      "ANSDNKVTIDDYQEE\n",
+      ">KIF17\n",
+      "SKAKRKKSKNSFGGE\n",
+      ">YY1\n",
+      "EGCGKRFSLDFNLRT\n",
+      ">TPH2\n",
+      "YWARRGFSLDSAVPE\n",
+      ">ATAD5\n",
+      "TVPFDSESPIRMKFT\n",
+      ">CETN2\n",
+      "RDGDGEVSEQEFLRI\n",
+      ">NFM\n",
+      "AVEEEAVSEKAAEQA\n",
+      ">HDAC5\n",
+      "KVAERRSSPLLRRKD\n",
+      ">FYTTD1\n",
+      "KVQAQLNTEQLLDDV\n",
+      ">PDE3B\n",
+      "PQQPRRCSPFCRARL\n",
+      ">DOK7\n",
+      "EKRLSLLSHSGRPGS\n",
+      ">DLX5\n",
+      "MHHPSQESPTLPESS\n",
+      ">MAPKAPK2\n",
+      "TSHNSLTTPCYTPYY\n",
+      ">SGO1\n",
+      "LALENEKSKVREAQD\n",
+      ">CACNA1C\n",
+      "VACKRLVSMNMPLNS\n",
+      ">ubiquitin\n",
+      "DYNIQKESTLHLVLR\n",
+      ">SHOT1\n",
+      "NKTLKRISMLYMAKL\n",
+      ">CdGAP\n",
+      "TPAPPPPTPLEEEPE\n",
+      ">axin 1\n",
+      "LDSNGIVSRQTKPAT\n",
+      ">FAK iso5\n",
+      "DVRLSRGSIEREDGG\n",
+      ">MCPIP1\n",
+      "AMGAGHFSVPTDYVP\n",
+      ">DUSP5\n",
+      "IGHLQTLSPDMQGAY\n",
+      ">TRPV1\n",
+      "IAYSSSETPNRHDML\n",
+      ">osterix\n",
+      "SSTNGLLSPAGSPPA\n",
+      ">nAChRA4\n",
+      "EDGIRCRSRSIQYCV\n",
+      ">GLI2\n",
+      "NLTRNAYSPRPPSIN\n",
+      ">RIPK2\n",
+      "SLSQSRSSKSAPEGG\n",
+      ">desmin\n",
+      "RASRLGTTRTPSSYG\n",
+      ">SQSTM1\n",
+      "SSKEVDPSTGELQSL\n",
+      ">RRas\n",
+      "QEQELPPSPPSAPRK\n",
+      ">M6PR\n",
+      "DDQLGEESEERDDHL\n",
+      ">ASK1\n",
+      "LKISDFGTSKRLAGI\n",
+      ">RIMS1\n",
+      "ISVISPTSPGALKDA\n",
+      ">ELK1\n",
+      "ISVDGLSTPVVLSPG\n",
+      ">NKCC2\n",
+      "LQTFGHNTMDAVPKI\n",
+      ">Caldesmon\n",
+      "RLEAERLSYQRNDDD\n",
+      ">SNCB\n",
+      "LMEPEGESYEDPPQE\n",
+      ">MAPKAPK2\n",
+      "SNHGLAISPGMKTRI\n",
+      ">MYH10\n",
+      "QLHLEGASLELSDDD\n",
+      ">VHL\n",
+      "SVNSREPSQVIFCNR\n",
+      ">Kv1.2\n",
+      "PDLKKSRSASTISKS\n",
+      ">CDH2\n",
+      "GSGSTAGSLSSLNSS\n",
+      ">CACNA1C\n",
+      "PEDESCVYALGRGRS\n",
+      ">CENTG1 iso2\n",
+      "QGRTALFYARQAGSQ\n",
+      ">GRK5\n",
+      "LENIVANTVLLKARE\n",
+      ">desmin\n",
+      "_MSQAYSSSQRVSSY\n",
+      ">RFC1\n",
+      "KKRIIYDSDSESEET\n",
+      ">E2F4\n",
+      "STQPSTPTPSSTQDH\n",
+      ">PAK6\n",
+      "MPWPEPQSPRVLPNG\n",
+      ">PDE4A\n",
+      "SFLYRSDSDYDMSPK\n",
+      ">AKIP\n",
+      "MLVPRKMSVSPLESW\n",
+      ">Titin\n",
+      "QELLSKETLFPSMPE\n",
+      ">MKK4\n",
+      "ISGQLVDSIAKTRDA\n",
+      ">SKA3\n",
+      "SYENLLRTPTPPEVT\n",
+      ">Diaphanous-2 iso4\n",
+      "CLESLRVSLTSNPVS\n",
+      ">MEF2D\n",
+      "VPVSNQSSMQFSNPS\n",
+      ">PRRC2C\n",
+      "QPRPAVLSGYFKQFQ\n",
+      ">PPP5C\n",
+      "LFSEDGVTLDDIRKI\n",
+      ">CDC25C\n",
+      "SDELMEFSLKDQEAK\n",
+      ">MARK2\n",
+      "DKTQLNSSSLQKLFR\n",
+      ">PAGE4\n",
+      "MDLEKTRSERGDGSD\n",
+      ">CAAP1\n",
+      "EGDNGMDSDMEEEAD\n",
+      ">SCN2A\n",
+      "TEEFSSESDMEESKE\n",
+      ">P38B\n",
+      "RIMEVVGTPSPEVLA\n",
+      ">CACNB1\n",
+      "IVYIKITSPKVLQRL\n",
+      ">SRI\n",
+      "DSFRRRDSGQQGVVN\n",
+      ">ADRA1D\n",
+      "KRERGKASEVVLRIH\n",
+      ">ULK1\n",
+      "ARQGVVMTPPRNRTL\n",
+      ">RAP1A\n",
+      "KKKPKKKSCLLL___\n",
+      ">CAMKK2\n",
+      "RSQGGPASSSSLDMN\n",
+      ">CACNA1D\n",
+      "NGDMGPISHRQDYEL\n",
+      ">ACF7\n",
+      "RAASPTRSSSSASQS\n",
+      ">ZNF592\n",
+      "NHLKRPVSGVGDAPG\n",
+      ">NFL\n",
+      "YKRRYVETPRVHISS\n",
+      ">GRK4\n",
+      "VLDIEQFSVVKGIYL\n",
+      ">GAB2\n",
+      "DFQPGSPSPHRKPST\n",
+      ">NCCT\n",
+      "SSTFCMRTFGYNTID\n",
+      ">CPEB3\n",
+      "YGRRRGRSSLFPFED\n",
+      ">HMGA2\n",
+      "PAQETEETSSQESAE\n",
+      ">SLC28A2\n",
+      "EEVTQGHSLKDGLGH\n",
+      ">AML3 iso5\n",
+      "SYLSQMTSPSIHSTT\n",
+      ">Nik\n",
+      "PATAKGPSFPDRRAT\n",
+      ">DDA1\n",
+      "KASNRRPSVYLPTRE\n",
+      ">SIKE\n",
+      "PVLKAHQSHSAEIES\n",
+      ">TPH2\n",
+      "YWARRGLSLDSAVPE\n",
+      ">SKA3\n",
+      "SLVKVLKTPKCALKM\n",
+      ">ULK1\n",
+      "GGRPYTPSPQVGTIP\n",
+      ">GR\n",
+      "PSKDTNESPWRSDLL\n",
+      ">CTNND2\n",
+      "IGTYATLSPTKRLVH\n",
+      ">PER2\n",
+      "DMASGPESLDGAAGG\n",
+      ">POLR2A\n",
+      "SYSPTSPSYSPTSPS\n",
+      ">CdGAP\n",
+      "RNLSPPLTPAPPPPT\n",
+      ">NCKAP5L\n",
+      "PTSEKSPSPGGPQLS\n",
+      ">SHARPIN\n",
+      "PEADLPRSPGNLTER\n",
+      ">PDE3B\n",
+      "PQQPRRCSPFCRARL\n",
+      ">CAPN2\n",
+      "GALFQDPSFPALPSS\n",
+      ">Titin\n",
+      "ETSARGLSVQAFDSE\n",
+      ">TOB1\n",
+      "PASSVSSSPSPPFGH\n",
+      ">HMGA2\n",
+      "QEPTCEPSPKRPRGR\n",
+      ">RIC8A\n",
+      "GRPEGQYSEDEDTDT\n",
+      ">CEP55\n",
+      "KVAASPKSPTAALNE\n",
+      ">ubiquitin\n",
+      "DYNIQKESTLHLVLR\n",
+      ">eIF2B-epsilon\n",
+      "LKEAEEESSEDD___\n",
+      ">PXN\n",
+      "SSPQRVTSSQQQTRI\n",
+      ">NFH\n",
+      "GGEEETKSPPAEEAA\n",
+      ">DOK7\n",
+      "EKRLSLLSHSGRPGS\n",
+      ">Titin\n",
+      "REQASLFSEWLRNID\n",
+      ">ACF7\n",
+      "FRSRGRRSKPSSRAA\n",
+      ">ROCK2\n",
+      "ELTEKDATIASLEET\n",
+      ">PIK3R1\n",
+      "EPYNLYSSLKELVLH\n",
+      ">SHC4\n",
+      "GHRATALTPDSCPLP\n",
+      ">URB\n",
+      "PQTTRRPSKATSLES\n",
+      ">TIAM1\n",
+      "DVNAGEGSEFADSGI\n",
+      ">MAP2 iso3\n",
+      "VASPRRLSNVSSSGS\n",
+      ">separase\n",
+      "TDNWRKMSFEILRGS\n",
+      ">NLRP3\n",
+      "KIEINLSTRMDHMVS\n",
+      ">RbBP1\n",
+      "RKILGQSSPEKKIRI\n",
+      ">HCN4\n",
+      "LGSRGGGSGGAGGGS\n",
+      ">ROCK2\n",
+      "MKIQQNQSIRRPSRQ\n",
+      ">SLC14A2\n",
+      "WSSIRRRSKVFGKSE\n",
+      ">INCENP\n",
+      "TSSAVWNSPPLQGAR\n",
+      ">FRAT1\n",
+      "RLQQRRGSQPETRTG\n",
+      ">FYTTD1\n",
+      "KVQAQLNTEQLLDDV\n",
+      ">NKCC2\n",
+      "GPKVNRPSLLEIHEQ\n",
+      ">TXA2-R\n",
+      "RRLQPRLSTRPRSLS\n",
+      ">CFTR\n",
+      "SNGDRKHSSDENNVS\n",
+      ">PGAM1\n",
+      "QVKIWRRSYDVPPPP\n",
+      ">CAPN2\n",
+      "DGNWRRGSTAGGCRN\n",
+      ">Caldesmon\n",
+      "LTTPKLKSTENAFGR\n",
+      ">Ikaros\n",
+      "LSDMPYDSANYEKED\n",
+      ">NCCT\n",
+      "LRTFGYNTIDVVPAY\n",
+      ">SOS1\n",
+      "SKAYSPRYSISDRTS\n",
+      ">ARAF\n",
+      "LGYRDSGYYWEVPPS\n",
+      ">LAX1\n",
+      "SSQISNDYVNMTGLD\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">C1orf198\n",
+      "FTYFSSLSPMARKIM\n",
+      ">TIE1\n",
+      "LHRRRTFTYQSGSGE\n",
+      ">BIM\n",
+      "GDRCPHGSPQGPLAP\n",
+      ">ULK1\n",
+      "GKAPFQASSPQDLRL\n",
+      ">KIF4A\n",
+      "KLRRRTFSLTEVRGQ\n",
+      ">Vimentin\n",
+      "LRPSTSRSLYSSSPG\n",
+      ">Kv-beta2\n",
+      "YPESTTGSPARLSLR\n",
+      ">MDM2\n",
+      "SSSESTETPSHQDLD\n",
+      ">VHL\n",
+      "GTGRRIHSYRGHLWL\n",
+      ">CLTB\n",
+      "LCDFNPKSSKQCKDV\n",
+      ">NONO\n",
+      "NLEKQNHTPRKHHQH\n",
+      ">KIF17\n",
+      "SKAKRKKSKNSFGGE\n",
+      ">DARPP-32\n",
+      "MIRRRRPTPAMLFRL\n",
+      ">SNTB2\n",
+      "NRGLGPPSPPAPPRG\n",
+      ">GRF-1\n",
+      "LERGRKVSIVSKPVL\n",
+      ">MYH10\n",
+      "EGASLELSDDDTESK\n",
+      ">LMO7 iso3\n",
+      "KTSPGSPSPRSHSPS\n",
+      ">CAMKK2\n",
+      "SPCGGGGSALVKGGP\n",
+      ">SLC14A2\n",
+      "TVFPRRKSVFHIEWS\n",
+      ">PCM-1\n",
+      "RRQAESLSLTREVSQ\n",
+      ">AP-2 alpha\n",
+      "AEVQRRLSPPECLNA\n",
+      ">PELI1\n",
+      "QCPVGFNTLAFPSMK\n",
+      ">CETN2\n",
+      "RDGDGEVSEQEFLRI\n",
+      ">CADPS\n",
+      "QGISMKDSDEEDEED\n",
+      ">DCC\n",
+      "QYPGILPSPTCGYPH\n",
+      ">RBM7\n",
+      "QMVQRSFSSPEDYQR\n",
+      ">NUDC\n",
+      "FSFLRRKTDFFIGGE\n",
+      ">KI-67\n",
+      "RSLRKADTEEEFLAF\n",
+      ">VHL\n",
+      "EEDGGEESGAEESGP\n",
+      ">CALU iso15\n",
+      "MYSHDGNTDEPEWVK\n",
+      ">CK1D\n",
+      "PATRGLPSTASGRLR\n",
+      ">DDHD1\n",
+      "AKDPTSISENEGIST\n",
+      ">CADPS\n",
+      "_MLDPSSSEEESDEI\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">CACNA1C\n",
+      "ELQDSRVYVSSL___\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">RYR2\n",
+      "ISQTSQVSIDAAHGY\n",
+      ">Ret\n",
+      "AQAFPVSYSSSGARR\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">RTCB\n",
+      "MEEAPESYKNVTDVV\n",
+      ">FLT3\n",
+      "VDFREYEYDLKWEFP\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">DAB1\n",
+      "SQKKEGVYDVPKSQP\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">TBX21\n",
+      "SMPGNRLYVHPDSPN\n",
+      ">IRTKS\n",
+      "VVIPPPDYLECLSMG\n",
+      ">CCDC50\n",
+      "MAEEKKAYKKAKERE\n",
+      ">NPHS1\n",
+      "AEVDPNYYSMRDFSP\n",
+      ">ADAM12\n",
+      "PRPSHNAYIK_____\n",
+      ">ARRB1\n",
+      "YLKERRVYVTLTCAF\n",
+      ">VAV1\n",
+      "ALNDEDIYSGLSDQI\n",
+      ">CRIK\n",
+      "TERSDLEYQLENIQV\n",
+      ">GluR2\n",
+      "NSQNFATYKEGYNVY\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">NMDAR2C\n",
+      "SCTWRRVSSLESEV_\n",
+      ">E2F4\n",
+      "STQPSTPTPSSTQDH\n",
+      ">PDE3B\n",
+      "CKIFRRPSLPCISRE\n",
+      ">PDE3A\n",
+      "REPQRKASACGTYTS\n",
+      ">GTSE1\n",
+      "LLLPRAASVRGRSIP\n",
+      ">MYBPC1 iso2\n",
+      "ERKDSEWSLGESPAG\n",
+      ">TXA2-R iso2\n",
+      "RLPGSSDSRASASRA\n",
+      ">MDM2\n",
+      "SSSESTETPSHQDLD\n",
+      ">TRPC6\n",
+      "RLTHRRQTVLREKGR\n",
+      ">Diaphanous-2 iso4\n",
+      "KSADQKTTLLHFIAD\n",
+      ">CPEB3\n",
+      "GRRRGRSSLFPFEDA\n",
+      ">TFE3\n",
+      "PTGSAPNSPMALLTI\n",
+      ">DOK7\n",
+      "EKRLSLLSHSGRPGS\n",
+      ">ARRB2 iso2\n",
+      "EFETNYATDDDIVFE\n",
+      ">M6PR\n",
+      "DDQLGEESEERDDHL\n",
+      ">ACC1 iso2\n",
+      "TSHPNRMSFASNLNH\n",
+      ">CACNA1C\n",
+      "PEIRRAISGDLTAEE\n",
+      ">LC8\n",
+      "VAILLFKSG______\n",
+      ">PPM1J\n",
+      "PPLCLPSTPGTPGAP\n",
+      ">BLM\n",
+      "QKYSEWTSPAEDSSP\n",
+      ">RIT1\n",
+      "SVWKRLKSPFRKKKD\n",
+      ">P2X3\n",
+      "QSTDSGAYSIGH___\n",
+      ">PXN\n",
+      "FLSEEPPYSYPTGNH\n",
+      ">FLT3\n",
+      "TGSSDNEYFYVDFRE\n",
+      ">PIP5K1C\n",
+      "TDERSWVYSPLHYSA\n",
+      ">IRS1\n",
+      "LLPCTGDYMNMSPVG\n",
+      ">GRF-1\n",
+      "RNEEENIYSVPHDST\n",
+      ">VEGFR2\n",
+      "RFRQGKDYVGAIPVD\n",
+      ">VAV1\n",
+      "EAEGDEIYEDLMRLE\n",
+      ">PSD-95\n",
+      "VTQMEVHYARPIIIL\n",
+      ">BCAP\n",
+      "AKVEFGVYESGPRKS\n",
+      ">VHL\n",
+      "SLVKPENYRRLDIVR\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">JNK1\n",
+      "TSFMMTPYVVTRYYR\n",
+      ">DAG1\n",
+      "PYRSPPPYVPP____\n",
+      ">Ret\n",
+      "FGLSRDVYEEDSYVK\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">Arg\n",
+      "RLMTGDTYTAHAGAK\n",
+      ">IRTKS\n",
+      "YEHKEIEYVETVTSR\n",
+      ">Ret\n",
+      "TWIENKLYGMSDPNW\n",
+      ">IRTKS\n",
+      "VVIPPPDYLECLSMG\n",
+      ">EphB6\n",
+      "YTDRLQQYISTRGLG\n",
+      ">SDHA\n",
+      "YKVRIDEYDYSKPIE\n",
+      ">EphA2\n",
+      "EDDPEATYTTSGGKI\n",
+      ">SLC4A1\n",
+      "AKPDSSFYKGLDLNG\n",
+      ">Cortactin\n",
+      "TYTSEPVYETTEAPG\n",
+      ">SRC-3\n",
+      "HPQAASIYQSSEMKG\n",
+      ">EphA2\n",
+      "TYVDPHTYEDPNQAV\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">GAB2\n",
+      "SASSDDNYVPMNPGS\n",
+      ">Ret\n",
+      "DNCSEEMYRLMLQCW\n",
+      ">TRIP6\n",
+      "PLPPEHCYQPPGVPE\n",
+      ">Kv4.3\n",
+      "GKLHYPRYECISAYD\n",
+      ">FCGR2C\n",
+      "PEETNNDYETADGGY\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">MACC1\n",
+      "KESEKVSYVIKKLKE\n",
+      ">TBX21\n",
+      "VLQSLHKYQPRLHIV\n",
+      ">DAB1 iso2\n",
+      "VEDPVYQYIVFEAGH\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">PIP5K1C\n",
+      "DAPSTDIYFPTDERS\n",
+      ">IREM-1\n",
+      "AEDQEPTYCNMGHLS\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">Yes\n",
+      "FTATEPQYQPGENL_\n",
+      ">CD163L1\n",
+      "DALAEAVYEELDYLL\n",
+      ">Arg\n",
+      "GGQYGEVYVGVWKKY\n",
+      ">RHOA\n",
+      "KDQFPEVYVPTVFEN\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">YY1\n",
+      "IHTGDRPYVCPFDGC\n",
+      ">DYN1\n",
+      "LLPLRRGYIGVVNRS\n",
+      ">IkB-beta\n",
+      "PRDASDTYLTQSQDH\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">Trap150\n",
+      "NRGGYGNYRSNWQNY\n",
+      ">TRPV6\n",
+      "RPHNLIYYGEHPLSF\n",
+      ">SYN1\n",
+      "VVALTKTYATTEPFI\n",
+      ">IRTKS\n",
+      "LINLGKNYEKAVNAM\n",
+      ">Ret\n",
+      "MMVKRRDYLDLAAST\n",
+      ">PPAR-gamma\n",
+      "SSISAPHYEDIPFTR\n",
+      ">RBM10 iso2\n",
+      "SEEPPVDYSYYQQDE\n",
+      ">TSAd\n",
+      "PKPSNPIYNEPDEPI\n",
+      ">MACC1\n",
+      "VLADVLGYSHLSLED\n",
+      ">VHL\n",
+      "PVLRSVNSREPSQVI\n",
+      ">RAPGEF2 iso2\n",
+      "RECKNFNSMFAIISG\n",
+      ">Caldesmon\n",
+      "EKGNVFSSPGGTGTP\n",
+      ">NHERF\n",
+      "PALARSASSDTSEEL\n",
+      ">GluR2\n",
+      "FATYKEGYNVYGIES\n",
+      ">NIPP-1\n",
+      "NEPKKKKYAKEAWPG\n",
+      ">NKCC2\n",
+      "KIEYYRNTGSISGPK\n",
+      ">HCN4\n",
+      "TLPRKTSSGSLPPPL\n",
+      ">CIITA\n",
+      "AASLLRLSLYNNCIC\n",
+      ">LATS2\n",
+      "ATLARRDSLQKPGLE\n",
+      ">CDH2\n",
+      "GSTAGSLSSLNSSSS\n",
+      ">CDC25C\n",
+      "PAQLLCSTPNGLDRG\n",
+      ">AP-2 alpha\n",
+      "TDNNAKSSDKEEKHR\n",
+      ">Catalase\n",
+      "NANGEAVYCKFHYKT\n",
+      ">Ezrin\n",
+      "LMLRLQDYEEKTKKA\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAQKD\n",
+      ">RTCB\n",
+      "ASPEGQDYLKGMAAA\n",
+      ">RTCB\n",
+      "GMAAAGNYAWVNRSS\n",
+      ">Lmr1 iso2\n",
+      "ENAEGDEYVADFSEQ\n",
+      ">CRK\n",
+      "GGPEPGPYAQPSVNT\n",
+      ">VAV2\n",
+      "TENDDDVYRSLEELA\n",
+      ">EphB3\n",
+      "VYIDPFTYEDPNEAV\n",
+      ">MACC1\n",
+      "KPAYDFLYTWSAHYG\n",
+      ">BCAP\n",
+      "QERPGNFYVSSESIR\n",
+      ">PXN\n",
+      "ASEEEHVYSFPNKQK\n",
+      ">GLO1\n",
+      "GIAVPDVYSACKRFE\n",
+      ">ENG\n",
+      "TAALWYIYSHTRSPS\n",
+      ">RIP140\n",
+      "SSPKNTSYKNSLERN\n",
+      ">CCDC50\n",
+      "SSHKGFHYKH_____\n",
+      ">IRS1\n",
+      "QRVDPNGYMMMSPSG\n",
+      ">TSAd\n",
+      "PQLPPEVYTIPVPRH\n",
+      ">CACNA1C\n",
+      "ELQDSRVYVSSL___\n",
+      ">LYN\n",
+      "RNTERTIYVRDPTSN\n",
+      ">Ezrin\n",
+      "PPPPPPVYEPVSYHV\n",
+      ">eNOS\n",
+      "TSRIRTQSFSLQERH\n",
+      ">ACF7\n",
+      "RAASPTRSSSSASQS\n",
+      ">SHOT1\n",
+      "QNKLKRQSHLLLQSS\n",
+      ">MAP2 iso2\n",
+      "ETVNLPPSPPPSPAS\n",
+      ">CDC25B\n",
+      "FTIKRFRSLPVRLLE\n",
+      ">DAB1\n",
+      "PETEENIYQVPTSQK\n",
+      ">QIK\n",
+      "DGRQRRPSTIAEQTV\n",
+      ">IRS1\n",
+      "YMPMSPKSVSAPQQI\n",
+      ">SIKE\n",
+      "PVLKAHQSHSAEIES\n",
+      ">SCARB1\n",
+      "AYSESLMSPAAKGTV\n",
+      ">PPAR-gamma\n",
+      "KIKFKHITPLQEQSK\n",
+      ">TSC2\n",
+      "EILVRRPTGNTSWLM\n",
+      ">APC\n",
+      "PDGFSCSSSLSALSL\n",
+      ">IKKA\n",
+      "AKDVDQGSLCTSFVG\n",
+      ">Raptor\n",
+      "DKMRRVSSYSALNSL\n",
+      ">CDC25B\n",
+      "FTIKRFRSLPVRLLE\n",
+      ">MISP\n",
+      "RRERGRPSLYVQRDI\n",
+      ">Caldesmon\n",
+      "KPAKPAASDLPVPAE\n",
+      ">desmin\n",
+      "RVSSYRRTFGGAPGF\n",
+      ">PXN\n",
+      "KQKSAEPSPTVMSSS\n",
+      ">FBXL21\n",
+      "FYSSLNQTHTHTVLL\n",
+      ">P38B\n",
+      "RIMEVVGTPSPEVLA\n",
+      ">PD-L1\n",
+      "DTNSKKQSDTHLEET\n",
+      ">FZD3\n",
+      "RSRDGRYTPCSYRGM\n",
+      ">BLM\n",
+      "SFVTPPQSHFVRVST\n",
+      ">PDE4A\n",
+      "ATSQRRESFLYRSDS\n",
+      ">SOX2\n",
+      "TGGNQKNSPDRVKRP\n",
+      ">JMJD1A\n",
+      "GAVKRKSSENNGTLV\n",
+      ">PPP1R16B\n",
+      "KKVSFEASVALLEAS\n",
+      ">PSD-95\n",
+      "PTSPRRYSPVAKDLL\n",
+      ">KCNJ12\n",
+      "ERPYRRESEI_____\n",
+      ">MAZ\n",
+      "ALEKKRKSKGPYICA\n",
+      ">PPM1J\n",
+      "HAGRAVQSPPDTGRR\n",
+      ">AMPKG1\n",
+      "TKALQHRSHYFEGVL\n",
+      ">ABCC9\n",
+      "FESCKKHTGVQSKPI\n",
+      ">BTG1\n",
+      "ELLLGRTSPSKNYNM\n",
+      ">Tau\n",
+      "PVVSGDTSPRHLSNV\n",
+      ">VEGFR2\n",
+      "FVEEKSLSDVEEEEA\n",
+      ">Diaphanous-2 iso4\n",
+      "KSADQKTTLLHFIAD\n",
+      ">BCAP\n",
+      "AKVEFGVYESGPRKS\n",
+      ">PAG\n",
+      "EEEISAMYSSVNKPG\n",
+      ">syndecan-2\n",
+      "RKPSSAAYQKAPTKE\n",
+      ">TSAd\n",
+      "GEAPSNIYVEVEDEG\n",
+      ">IRTKS\n",
+      "GSRNALKYEHKEIEY\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">GRK4\n",
+      "SICRMLLTKNPSKRL\n",
+      ">CACNA1D\n",
+      "WGQAISKSKLRSHGA\n",
+      ">SULT4A1\n",
+      "SEAETPSTPGEFESK\n",
+      ">SMARCA2\n",
+      "RPPAEKLSPNPPKLT\n",
+      ">TXA2-R\n",
+      "RLSTRPRSLSLQPQL\n",
+      ">APC\n",
+      "TPDGFSCSSSLSALS\n",
+      ">DENR\n",
+      "AKLTVENSPKQEAGI\n",
+      ">TR-alpha iso5\n",
+      "SSLSSSSSDEDTEVF\n",
+      ">p47phox\n",
+      "QDTYRRNSVRFLQQR\n",
+      ">SNCB\n",
+      "LMEPEGESYEDPPQE\n",
+      ">Arg\n",
+      "HKLGGGQYGEVYVGV\n",
+      ">Ret\n",
+      "LIVEYAKYGSLRGFL\n",
+      ">ZC3H4\n",
+      "SRGRGRGYRGRGSRG\n",
+      ">calponin 2\n",
+      "QFNKGPSYGLSAEVK\n",
+      ">PLXNA2\n",
+      "VPKQTSSYNIPASAS\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">DLC1\n",
+      "NVPGSILYSSSGELA\n",
+      ">Hck\n",
+      "YTATESQYQQQP___\n",
+      ">SORBS1 iso5\n",
+      "SEPPGYIYSSNFHAV\n",
+      ">BVR\n",
+      "PGLKRNRYLSFHFKS\n",
+      ">syndecan-3\n",
+      "PDKQEEFYA______\n",
+      ">cGAS\n",
+      "LLNTGSYYEHVKISA\n",
+      ">CDCP1\n",
+      "LQPEVDTYRPFQGTM\n",
+      ">NPHS1\n",
+      "DEVRMDPYDLRWPEV\n",
+      ">GRK2\n",
+      "FYEEIKKYEKLETEE\n",
+      ">Tks5\n",
+      "ALEEETIYENEGFRP\n",
+      ">FCGR2C\n",
+      "PEETNNDYETADGGY\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">BCAP\n",
+      "AKVEFGVYESGPRKS\n",
+      ">MUC1\n",
+      "TYHTHGRYVPPSSTD\n",
+      ">ROMK\n",
+      "SKTKEGKYRVDFHNF\n",
+      ">SLC4A1\n",
+      "ENLEQEEYEDPDIPE\n",
+      ">EphA2\n",
+      "RQSPEDVYFSKSEQL\n",
+      ">EphA2\n",
+      "ESIKMQQYTEHFMAA\n",
+      ">TEC\n",
+      "RLERGQEYLILEKND\n",
+      ">MAP2 iso3\n",
+      "RSANGFPYREDEEGA\n",
+      ">ZC3H4\n",
+      "GHRKYREYSPPYAPS\n",
+      ">TBX21\n",
+      "SMPGNRLYVHPDSPN\n",
+      ">Catalase\n",
+      "YRARVANYQRDGPMC\n",
+      ">IREM-1\n",
+      "VDQVEVEYVTMASLP\n",
+      ">CHCHD2\n",
+      "PARPDITYQEPQGTQ\n",
+      ">TXK\n",
+      "KIQVKALYDFLPREP\n",
+      ">MUC1\n",
+      "IFPARDTYHPMSEYP\n",
+      ">Ret\n",
+      "TNTGFPRYPNDSVYA\n",
+      ">NIPP-1\n",
+      "NEPKKKKYAKEAWPG\n",
+      ">TGFBR2\n",
+      "KIFPYEEYASWKTEK\n",
+      ">FLOT2\n",
+      "DVYDKVDYLSSLGKT\n",
+      ">PMCA4 iso6\n",
+      "LDGEVTPYANTNNNA\n",
+      ">TXK\n",
+      "RYVLDDEYVSSFGAK\n",
+      ">STAT5B\n",
+      "TAKAADGYVKPQIKQ\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">Lmr1 iso2\n",
+      "AQTGPDVYVLPLTEV\n",
+      ">Ret\n",
+      "AQAFPVSYSSSGARR\n",
+      ">PIP5K1C\n",
+      "TDERSWVYSPLHYSA\n",
+      ">CTNND2\n",
+      "LKERKTDYESAGNNA\n",
+      ">CRK\n",
+      "QKRVPNAYDKTALAL\n",
+      ">TRPA1\n",
+      "CRQGGPGSVNNLLGF\n",
+      ">ACF7\n",
+      "ADPKKSASRPGSRAG\n",
+      ">E2F4\n",
+      "STQPSTPTPSSTQDH\n",
+      ">SIK\n",
+      "GSTGRRHTLAEVSTH\n",
+      ">Nik\n",
+      "TCHQTLPTPPRENPP\n",
+      ">IGF2BP1\n",
+      "SVSGAAPYSSFMPPE\n",
+      ">JMJD1A\n",
+      "ITPEDRKYGTTNLHL\n",
+      ">TLR3\n",
+      "EQFEYTAYIIHAHKD\n",
+      ">STAT1\n",
+      "YIKTELISVSEVHPS\n",
+      ">IRS1\n",
+      "QRVDPNGYMMMSPSG\n",
+      ">CDCP1\n",
+      "KDNDSHVYAVIEDTM\n",
+      ">GRF-1\n",
+      "DGFDPSDYAEPMDAV\n",
+      ">Trap150\n",
+      "WQNYRQAYSPRRGRS\n",
+      ">CENTG1 iso2\n",
+      "ESWIRAKYEQLLFLA\n",
+      ">EphA2\n",
+      "EDDPEATYTTSGGKI\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">CASK\n",
+      "DKINTKSSPQIRNPP\n",
+      ">CENTG1 iso2\n",
+      "YSSSLPSSPNVGHRE\n",
+      ">DAB1 iso2\n",
+      "TNDSARSSPQSDKPR\n",
+      ">FAK iso5\n",
+      "LKPDVRLSRGSIERE\n",
+      ">PINX1\n",
+      "SDKKEKKSFSLEEKS\n",
+      ">AML2\n",
+      "SGRGKSFTLTITVFT\n",
+      ">Tau\n",
+      "NVRSKIGSTENLKHQ\n",
+      ">MYPT1\n",
+      "ARQSRRSTQGVTLTD\n",
+      ">ELK1\n",
+      "IHFWSTLSPIAPRSP\n",
+      ">MRTO4\n",
+      "ASESTEESDSEDDD_\n",
+      ">SETD8\n",
+      "SKIYSYMSPNKCSGM\n",
+      ">SF2\n",
+      "NSRSRSYSPRRSRGS\n",
+      ">eIF2B-epsilon\n",
+      "LKEAEEESSEDD___\n",
+      ">CdGAP\n",
+      "RNLSPPLTPAPPPPT\n",
+      ">Survivin\n",
+      "FLKDHRISTFKNWPF\n",
+      ">CTTNBP2NL\n",
+      "SSPLSPLSPGIKSPT\n",
+      ">IRTKS\n",
+      "PSLQRSVSVATGLNM\n",
+      ">DENR\n",
+      "PNEFAKLTVENSPKQ\n",
+      ">Nik\n",
+      "RRKKRSKSLAQAGVA\n",
+      ">JNK1 iso3\n",
+      "GVIRGQPSPLAQVQQ\n",
+      ">GRF-1\n",
+      "LERGRKVSIVSKPVL\n",
+      ">CDCP1\n",
+      "LQPEVDTYRPFQGTM\n",
+      ">FGFR3\n",
+      "DVHNLDYYKKTTNGR\n",
+      ">NPHS1\n",
+      "TAEVDPNYYSMRDFS\n",
+      ">PKCD\n",
+      "MQDNSGTYGKIWEGS\n",
+      ">FLT3\n",
+      "KEHNFSFYPTFQSHP\n",
+      ">PKCD\n",
+      "IRVDTPHYPRWITKE\n",
+      ">TBX21\n",
+      "SMPGNRLYVHPDSPN\n",
+      ">GLRB\n",
+      "RDFELSNYDCYGKPI\n",
+      ">Trap150\n",
+      "ERNHPRVYQNRDFRG\n",
+      ">TBX21\n",
+      "QFIAVTAYQNAEITQ\n",
+      ">POLR2A\n",
+      "TPWNQGATPAYGAWS\n",
+      ">NCCT\n",
+      "SSTFCMRTFGYNTID\n",
+      ">FBXL21\n",
+      "FYSSLNQTHTHTVLL\n",
+      ">Diaphanous-2 iso4\n",
+      "ITSFRKSTVKKEKPL\n",
+      ">MEN1\n",
+      "RRGPRRESKPEEPPP\n",
+      ">NRF2\n",
+      "MEFNDSDSGISLNTS\n",
+      ">Nik\n",
+      "TCHQTLPTPPRENPP\n",
+      ">CASKIN1\n",
+      "TGNDRVGYFPSSLGE\n",
+      ">FGFR3\n",
+      "ANCTHDLYMIMRECW\n",
+      ">EphA2\n",
+      "PMMIITEYMENGALD\n",
+      ">Arg\n",
+      "GLVTTLHYPAPKCNK\n",
+      ">CLCN3 iso2\n",
+      "FSLEEVSYYFPLKTL\n",
+      ">CACNA1D\n",
+      "GSAFFILSKTNPIRV\n",
+      ">RGC32\n",
+      "ALLSATVTPQKAKLG\n",
+      ">RIMS1\n",
+      "ISVISPTSPGALKDA\n",
+      ">AMOTL1\n",
+      "SSLRPARSVPSIAAA\n",
+      ">WAVE1\n",
+      "APPLVQPSPPVARAA\n",
+      ">RFC1\n",
+      "TKKARKDSEEGESFS\n",
+      ">neurogenin 2\n",
+      "SCTLSPASPGSDVDY\n",
+      ">CGN\n",
+      "GKLLRSHSQASLAGP\n",
+      ">ZAP\n",
+      "KDSLEDVSVDVTQKF\n",
+      ">FOXO1A\n",
+      "AGQPRKSSSSRRNAW\n",
+      ">GRK4\n",
+      "MLLTKNPSKRLGCRG\n",
+      ">BNIP3\n",
+      "QEESLQGSWVELHFS\n",
+      ">DYNC1I2\n",
+      "PSSKSVSTPSEAGSQ\n",
+      ">SHOT1\n",
+      "QNKLKRQSHLLLQSS\n",
+      ">Vimentin\n",
+      "SRSLYSSSPGGAYVT\n",
+      ">FGF14\n",
+      "VTPSKSTSASAIMNG\n",
+      ">DEPTOR\n",
+      "KLMSPENTLLQPREE\n",
+      ">FTO\n",
+      "CEGSEDESEDESSFE\n",
+      ">MYH10\n",
+      "LELSDDDTESKTSDV\n",
+      ">EEF2K\n",
+      "GTEEKCGSPQVRTLS\n",
+      ">MAP2\n",
+      "HVTSKCGSLKNIRHR\n",
+      ">ANP32B\n",
+      "GEKRKRETDDEGEDD\n",
+      ">SKA3\n",
+      "SDAEYTNSPLVPTFC\n",
+      ">amphiphysin\n",
+      "PAPVRPRSPSQTRKG\n",
+      ">TRAF3IP2\n",
+      "DLPGPLRSRELPPQF\n",
+      ">RFC1\n",
+      "RIIYDSDSESEETVQ\n",
+      ">MBP\n",
+      "KDHAARTTHYGSLPQ\n",
+      ">ABCC9\n",
+      "FESCKKHTGVQSKPI\n",
+      ">AP-2 alpha\n",
+      "TDNNAKSSDKEEKHR\n",
+      ">Survivin\n",
+      "FLEGCACTPERMAEA\n",
+      ">GJA8\n",
+      "KAEEEVVSDEVEGPS\n",
+      ">NOXA\n",
+      "ARKNAQPSPARAPAE\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">NCCT\n",
+      "LRTFGYNTIDVVPAY\n",
+      ">BNIP3\n",
+      "IYIGRRLTTSTSTF_\n",
+      ">CXCR4\n",
+      "VSTESESSSFHSS__\n",
+      ">optineurin\n",
+      "SGGSSEDSFVEIRMT\n",
+      ">CDH1\n",
+      "SSLNSSESDQDQDYD\n",
+      ">FNIP1\n",
+      "WDIPRNESSDSALGD\n",
+      ">HSP40\n",
+      "VTHDLRVSLEEIYSG\n",
+      ">PELI1\n",
+      "FNTLAFPSMKRKDVV\n",
+      ">PPP1R1A\n",
+      "LKSTLSMSPRQRKKM\n",
+      ">IRS1\n",
+      "GYLRKPKSMHKRFFV\n",
+      ">GYS1\n",
+      "RPASVPPSPSLSRHS\n",
+      ">NFAT2\n",
+      "ARGSRPTSPCNKRKY\n",
+      ">SIAH2\n",
+      "PQTPHAPSPAAPPAA\n",
+      ">mAChR M3\n",
+      "ITKRKRMSLIKEKKA\n",
+      ">NHE3\n",
+      "KERELELSDPEEAPD\n",
+      ">eEF1B\n",
+      "DDIDLFGSDDEEESE\n",
+      ">RASGRF1\n",
+      "PLAIGTSSPVRRRKL\n",
+      ">TGFBR2\n",
+      "LRLDPTLSVDDLANS\n",
+      ">SIAH2\n",
+      "KQPPPPQTPHAPSPA\n",
+      ">14-3-3 gamma\n",
+      "DNLTLWTSDQQDDDG\n",
+      ">RASGRF1\n",
+      "KEKYRRMSLASAGFP\n",
+      ">ARHGEF17\n",
+      "DEGSQDQTGSLSRAR\n",
+      ">eNOS\n",
+      "TSRIRTQSFSLQERH\n",
+      ">OXTR\n",
+      "RVALARVSSVKLISK\n",
+      ">MZF-1\n",
+      "SLSGQIQSPTTEGGF\n",
+      ">POLR2A\n",
+      "SPSYSPTSPSYSPTS\n",
+      ">MARCKS\n",
+      "PGEAVAASPSKANGQ\n",
+      ">PFKFB3\n",
+      "TKKPRINSFEERVAS\n",
+      ">GRK4\n",
+      "KFSEDAKSICRMLLT\n",
+      ">CPEB3\n",
+      "GRRRGRSSLFPFEDA\n",
+      ">NPHS1\n",
+      "HDEVERAYGPPGAWG\n",
+      ">VEGFR2\n",
+      "VCDPKFHYDNTAGIS\n",
+      ">GRK2\n",
+      "AVLADVSYLMAMEKS\n",
+      ">DDHD1\n",
+      "AKDPTSISENEGIST\n",
+      ">EEF2K\n",
+      "PPLLRPLSENSGDEN\n",
+      ">NIPP-1\n",
+      "NEPKKKKYAKEAWPG\n",
+      ">FLT3\n",
+      "SSDNEYFYVDFREYE\n",
+      ">CRK\n",
+      "QKRVPNAYDKTALAL\n",
+      ">WAVE2\n",
+      "GKEALKFYTNPSYFF\n",
+      ">WAVE2\n",
+      "PPPLNNLSPYRDDGK\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">NIPP-1\n",
+      "LGLPEEETELDNLTE\n",
+      ">ASF1A\n",
+      "GWSTSENSLNVMLES\n",
+      ">PFKFB3\n",
+      "TKKPRINSFEERVAS\n",
+      ">DYNC1I2\n",
+      "PSSKSVSTPSEAGSQ\n",
+      ">SIKE\n",
+      "PVLKAHQSHSAEIES\n",
+      ">PDE4A\n",
+      "ATSQRRESFLYRSDS\n",
+      ">rabphilin 3A\n",
+      "GPPTRRASEARMSTT\n",
+      ">NHE3\n",
+      "SLEQRRRSIRDTEDM\n",
+      ">HOXB7\n",
+      "IYPWMRSSGTDRKRG\n",
+      ">RRAD\n",
+      "APPLHRRSMPVDERD\n",
+      ">PD-L1\n",
+      "DTNSKKQSDTHLEET\n",
+      ">MCM3\n",
+      "EEMPQVHTPKTADSQ\n",
+      ">p90RSK\n",
+      "TSRTPRDSPGIPPSA\n",
+      ">CKAP2\n",
+      "EHLLRRKTLFAYKQE\n",
+      ">ULK1\n",
+      "ARQGVVMTPPRNRTL\n",
+      ">desmin\n",
+      "RVSSYRRTFGGAPGF\n",
+      ">ADRA1D\n",
+      "DGAHGMRSAKGHTFR\n",
+      ">PDE3A\n",
+      "REPQRKASACGTYTS\n",
+      ">RFC1\n",
+      "TKKARKDSEEGESFS\n",
+      ">DCC\n",
+      "QYPGILPSPTCGYPH\n",
+      ">PINK1\n",
+      "MWNISAGSSSEAILN\n",
+      ">MYBPC3\n",
+      "RDSFRRDSKLEAPAE\n",
+      ">nNOS\n",
+      "QSPTKNGSPSRCPRF\n",
+      ">WSTF\n",
+      "KSDGACDSPSSDKEN\n",
+      ">AARSL\n",
+      "VTTQTPLTPEQLRAV\n",
+      ">MYH10\n",
+      "QLHLEGASLELSDDD\n",
+      ">CDC6\n",
+      "RVKALPLSPRKRLGD\n",
+      ">NUMB\n",
+      "EQLARQGSFRGFPAL\n",
+      ">ULK1\n",
+      "TRMFSVGSSSSLGST\n",
+      ">MCM3\n",
+      "SSDTARTSPVTARTL\n",
+      ">CSN2\n",
+      "HPFAQTQSLVYPFPG\n",
+      ">desmin\n",
+      "RASRLGTTRTPSSYG\n",
+      ">CCDC6\n",
+      "QPVSAPPSPRDISME\n",
+      ">IRS1\n",
+      "TESITATSPASMVGG\n",
+      ">POLR2A\n",
+      "SPKYSPTSPTYSPTT\n",
+      ">TNNI3\n",
+      "KKSKISASRKLQLKT\n",
+      ">SCN2A\n",
+      "LNTEEFSSESDMEES\n",
+      ">PPM1J\n",
+      "CLPSTPGTPGAPSPS\n",
+      ">TFCP2L1\n",
+      "HCISTEFTPRKHGGE\n",
+      ">CADPS\n",
+      "___MLDPSSSEEESD\n",
+      ">LMO7\n",
+      "GIMRRGESLDNLDSP\n",
+      ">HCN4\n",
+      "HVTLPRKTSSGSLPP\n",
+      ">GR\n",
+      "DLEFSAGSPSKDTNE\n",
+      ">ELK1\n",
+      "LSPIAPRSPAKLSFQ\n",
+      ">Tau\n",
+      "PVVSGDTSPRHLSNV\n",
+      ">SUFU\n",
+      "LAHDRAPSRKDSLES\n",
+      ">CTCF\n",
+      "RSKKEDSSDSEENAE\n",
+      ">ID2\n",
+      "LGISRSKTPVDDPMS\n",
+      ">NCCT\n",
+      "SSTFCMRTFGYNTID\n",
+      ">TRIM56\n",
+      "LEEDRAQTPHEDGGP\n",
+      ">HMGN1\n",
+      "KNEESPASDEAEEKE\n",
+      ">SKP2\n",
+      "ATLLSSCSRLDELNL\n",
+      ">MEF2D\n",
+      "QPALQRNSVSPGLPQ\n",
+      ">RAB11FIP5\n",
+      "GPGAELLTRSPSRSS\n",
+      ">TGFBR1\n",
+      "LPLLVQRTIARTIVL\n",
+      ">RAB11FIP5\n",
+      "SMKDKPRSPFSKIRD\n",
+      ">Ron\n",
+      "SALLGDHYVQLPATY\n",
+      ">LYN\n",
+      "YTATEGQYQQQP___\n",
+      ">STAM2\n",
+      "LVNEAPVYSVYSKLH\n",
+      ">Ebp1\n",
+      "IANRVLRSLVEASSS\n",
+      ">F3\n",
+      "GQSWKENSPLNVS__\n",
+      ">LATS2\n",
+      "HILHPVKSVRVLRPE\n",
+      ">AMPKG1\n",
+      "TYNNLDVSVTKALQH\n"
+     ]
+    }
+   ],
+   "source": [
+    "df_test.reset_index(drop=True, inplace=True)\n",
+    "\n",
+    "for idx in range(len(df_test)):\n",
+    "    if df_test.subseq[idx] in sub_subseq_dict.keys():\n",
+    "        df_test.substrate[idx] = sub_subseq_dict[df_test.subseq[idx]]\n",
+    "\n",
+    "t = [\">\" + x + \"\\n\" + y for x, y in zip(df_test['substrate'], df_test['subseq'])]\n",
+    "print(\"\\n\".join(t))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 63,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "dff_dropna = dff_.dropna(subset=['ensemble_id'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 71,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "ensemble_id_list = list(dff_dropna.ensemble_id.unique())[:-3]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 86,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "ensembl_id_dict = {}\n",
+    "for i in range(len(dff_)):\n",
+    "    if dff_.ensemble_id[i] in ensemble_id_list:\n",
+    "        ensembl_id_dict[dff_.substrate[i]] = dff_.ensemble_id[i]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 91,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df_test['subseq_'] = df_test['subseq'].apply(lambda x: x[:7] + x[7].lower() + x[8:])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 99,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "for i in range(len(df_test)):\n",
+    "    if df_test.substrate[i] in ensembl_id_dict.keys():\n",
+    "        df_test.ensemble_id[i] = ensembl_id_dict[df_test.substrate[i]]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.8678644618100564"
+      ]
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "def set_pred(model_name, df, type):\n",
+    "    probs = ensemble_5fold(model_name, df, type)\n",
+    "    df[[f'{type}_probs']] = probs\n",
+    "    auc = sklearn.metrics.roc_auc_score(df['answer'], df[f'{type}_probs'])\n",
+    "    return probs, auc"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 56,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>GSK3B</td>\n",
+       "      <td>P49841</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTDTKVIGNGSFGVVYQAKLCDSGELVAIKKVLQDKRFKNRELQIM...</td>\n",
+       "      <td>EIEILLRYGQHPNII</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8650222931107413, 1.187677833213906, 0.86...</td>\n",
+       "      <td>ENSP00000388512</td>\n",
+       "      <td>GSK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>P38A</td>\n",
+       "      <td>Q16539</td>\n",
+       "      <td>STAT3</td>\n",
+       "      <td>P40763</td>\n",
+       "      <td>YQNLSPVGSGAYGSVCAAFDTKTGLRVAVKKLSRPFQSIIHAKRTY...</td>\n",
+       "      <td>NTIDLPMSPRTLDSL</td>\n",
+       "      <td>S727</td>\n",
+       "      <td>448191.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.003004504503377, 1.0273678027634894, 1.18...</td>\n",
+       "      <td>ENSP00000384943</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>CDK1</td>\n",
+       "      <td>P06493</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...</td>\n",
+       "      <td>NNGGNEDSDENEDEE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.003004504503377, 1.003004504503377, 0.981...</td>\n",
+       "      <td>ENSBTAP00000000595</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>ERK2</td>\n",
+       "      <td>P28482</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>QTDPSGTYHAWKANA</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.003004504503377, 1.0273678027634894, 0.84...</td>\n",
+       "      <td>ENSP00000359895</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>PPEQETFYEQPPLVQ</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8702280284582515, 0.8702280284582515, 0.8...</td>\n",
+       "      <td>ENSP00000397855</td>\n",
+       "      <td>PKA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21156</th>\n",
+       "      <td>CDK1</td>\n",
+       "      <td>P06493</td>\n",
+       "      <td>NEDD1</td>\n",
+       "      <td>Q8NHV4</td>\n",
+       "      <td>YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...</td>\n",
+       "      <td>PPINGSSTPNPKIAS</td>\n",
+       "      <td>T550</td>\n",
+       "      <td>6225645.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8860339595928756, 0.8860339595928756, 1.1...</td>\n",
+       "      <td>ENSP00000407964</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21157</th>\n",
+       "      <td>CDK2</td>\n",
+       "      <td>P24941</td>\n",
+       "      <td>BCLAF1</td>\n",
+       "      <td>Q9NYF8</td>\n",
+       "      <td>FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...</td>\n",
+       "      <td>EEWDPEYTPKSKKYF</td>\n",
+       "      <td>T840</td>\n",
+       "      <td>455929.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8798533791446438, 0.8798533791446438, 1.1...</td>\n",
+       "      <td>ENSP00000487249</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21158</th>\n",
+       "      <td>CDK2</td>\n",
+       "      <td>P24941</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...</td>\n",
+       "      <td>SFSVKDPSPLYDMLR</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.078962574157284, 1.2969300866657718, 1.07...</td>\n",
+       "      <td>ENSP00000395254</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21159</th>\n",
+       "      <td>ERK1</td>\n",
+       "      <td>P27361</td>\n",
+       "      <td>eplin</td>\n",
+       "      <td>Q9UHB6</td>\n",
+       "      <td>YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>ASSLSESSPPKAMKK</td>\n",
+       "      <td>S374</td>\n",
+       "      <td>452503.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.1241194296905368, 1.0232665395472176, 1.0...</td>\n",
+       "      <td>ENSP00000449890</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21160</th>\n",
+       "      <td>ERK2</td>\n",
+       "      <td>P28482</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>APTICFVYQDPQGRH</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1241194296905368, 0.8860339595928756, 1.0...</td>\n",
+       "      <td>ENSP00000444105</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>21161 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "      kinase  kin_id substrate  sub_id  \\\n",
+       "0      GSK3B  P49841       NaN     NaN   \n",
+       "1       P38A  Q16539     STAT3  P40763   \n",
+       "2       CDK1  P06493       NaN     NaN   \n",
+       "3       ERK2  P28482       NaN     NaN   \n",
+       "4      PKACA  P17612       NaN     NaN   \n",
+       "...      ...     ...       ...     ...   \n",
+       "21156   CDK1  P06493     NEDD1  Q8NHV4   \n",
+       "21157   CDK2  P24941    BCLAF1  Q9NYF8   \n",
+       "21158   CDK2  P24941       NaN     NaN   \n",
+       "21159   ERK1  P27361     eplin  Q9UHB6   \n",
+       "21160   ERK2  P28482       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      YTDTKVIGNGSFGVVYQAKLCDSGELVAIKKVLQDKRFKNRELQIM...  EIEILLRYGQHPNII   \n",
+       "1      YQNLSPVGSGAYGSVCAAFDTKTGLRVAVKKLSRPFQSIIHAKRTY...  NTIDLPMSPRTLDSL   \n",
+       "2      YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...  NNGGNEDSDENEDEE   \n",
+       "3      YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...  QTDPSGTYHAWKANA   \n",
+       "4      FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  PPEQETFYEQPPLVQ   \n",
+       "...                                                  ...              ...   \n",
+       "21156  YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...  PPINGSSTPNPKIAS   \n",
+       "21157  FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...  EEWDPEYTPKSKKYF   \n",
+       "21158  FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...  SFSVKDPSPLYDMLR   \n",
+       "21159  YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...  ASSLSESSPPKAMKK   \n",
+       "21160  YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...  APTICFVYQDPQGRH   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0             NaN          NaN          NaN          NaN      0    NaN   \n",
+       "1            S727     448191.0        human        human      1  263.0   \n",
+       "2             NaN          NaN          NaN          NaN      0    NaN   \n",
+       "3             NaN          NaN          NaN          NaN      0    NaN   \n",
+       "4             NaN          NaN          NaN          NaN      0    NaN   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "21156        T550    6225645.0        human        human      1  263.0   \n",
+       "21157        T840     455929.0        human        human      1  263.0   \n",
+       "21158         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "21159        S374     452503.0        human        human      1  263.0   \n",
+       "21160         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix         ensemble_id  \\\n",
+       "0      [[[0.8650222931107413, 1.187677833213906, 0.86...     ENSP00000388512   \n",
+       "1      [[[1.003004504503377, 1.0273678027634894, 1.18...     ENSP00000384943   \n",
+       "2      [[[1.003004504503377, 1.003004504503377, 0.981...  ENSBTAP00000000595   \n",
+       "3      [[[1.003004504503377, 1.0273678027634894, 0.84...     ENSP00000359895   \n",
+       "4      [[[0.8702280284582515, 0.8702280284582515, 0.8...     ENSP00000397855   \n",
+       "...                                                  ...                 ...   \n",
+       "21156  [[[0.8860339595928756, 0.8860339595928756, 1.1...     ENSP00000407964   \n",
+       "21157  [[[0.8798533791446438, 0.8798533791446438, 1.1...     ENSP00000487249   \n",
+       "21158  [[[1.078962574157284, 1.2969300866657718, 1.07...     ENSP00000395254   \n",
+       "21159  [[[1.1241194296905368, 1.0232665395472176, 1.0...     ENSP00000449890   \n",
+       "21160  [[[1.1241194296905368, 0.8860339595928756, 1.0...     ENSP00000444105   \n",
+       "\n",
+       "      family  \n",
+       "0        GSK  \n",
+       "1       MAPK  \n",
+       "2        CDK  \n",
+       "3       MAPK  \n",
+       "4        PKA  \n",
+       "...      ...  \n",
+       "21156    CDK  \n",
+       "21157    CDK  \n",
+       "21158    CDK  \n",
+       "21159   MAPK  \n",
+       "21160   MAPK  \n",
+       "\n",
+       "[21161 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 56,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_train"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>pair</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>HNPISSVS_______</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>O00238_Q15797</td>\n",
+       "      <td>[[[1.0273678027634894, 0.9579113900670306, 0.7...</td>\n",
+       "      <td>STKR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD2</td>\n",
+       "      <td>Q15796</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>GSPSVRCSSMS____</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>O00238_Q15796</td>\n",
+       "      <td>[[[0.9550419621907147, 1.0253151205244289, 0.7...</td>\n",
+       "      <td>STKR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>SPHNPISSVS_____</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>O00238_Q15797</td>\n",
+       "      <td>[[[1.0253151205244289, 0.7268755493063382, 1.0...</td>\n",
+       "      <td>STKR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD2</td>\n",
+       "      <td>Q15796</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>SPSVRCSSMS_____</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>O00238_Q15796</td>\n",
+       "      <td>[[[1.0253151205244289, 0.7268755493063382, 1.0...</td>\n",
+       "      <td>STKR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>BMPR1B</td>\n",
+       "      <td>O00238</td>\n",
+       "      <td>SMAD1</td>\n",
+       "      <td>Q15797</td>\n",
+       "      <td>IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...</td>\n",
+       "      <td>GSPHNPISSVS____</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>O00238_Q15797</td>\n",
+       "      <td>[[[0.9550419621907147, 1.0253151205244289, 0.7...</td>\n",
+       "      <td>STKR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26521</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>SLSARKLSLQERPAG</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26522</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>SPVLAEDSEGEG___</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26523</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>GPGAELLTRSPSRSS</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26524</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>LEQLTGQTPVFSKAR</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26535</th>\n",
+       "      <td>MEKK4</td>\n",
+       "      <td>Q9Y6R4</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0QRGNKIGEGQYGKVYTCISVDTGELMAMKEIRFQPNDHKTIKETA...</td>\n",
+       "      <td>AELVRTDSPNFLCSV</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>STE11</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>4400 rows √ó 11 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "0      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "1      BMPR1B  O00238     SMAD2  Q15796   \n",
+       "2      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "3      BMPR1B  O00238     SMAD2  Q15796   \n",
+       "4      BMPR1B  O00238     SMAD1  Q15797   \n",
+       "...       ...     ...       ...     ...   \n",
+       "26521   RIPK3  Q9Y572       NaN     NaN   \n",
+       "26522   RIPK3  Q9Y572       NaN     NaN   \n",
+       "26523   RIPK3  Q9Y572       NaN     NaN   \n",
+       "26524   RIPK3  Q9Y572       NaN     NaN   \n",
+       "26535   MEKK4  Q9Y6R4       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  HNPISSVS_______   \n",
+       "1      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  GSPSVRCSSMS____   \n",
+       "2      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  SPHNPISSVS_____   \n",
+       "3      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  SPSVRCSSMS_____   \n",
+       "4      IQMVKQIGKGRYGEVWMGKWRGEKVAVKVFFTTEEASWFRETEIYQ...  GSPHNPISSVS____   \n",
+       "...                                                  ...              ...   \n",
+       "26521  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  SLSARKLSLQERPAG   \n",
+       "26522  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  SPVLAEDSEGEG___   \n",
+       "26523  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  GPGAELLTRSPSRSS   \n",
+       "26524  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  LEQLTGQTPVFSKAR   \n",
+       "26535  0QRGNKIGEGQYGKVYTCISVDTGELMAMKEIRFQPNDHKTIKETA...  AELVRTDSPNFLCSV   \n",
+       "\n",
+       "      answer length           pair  \\\n",
+       "0          1  263.0  O00238_Q15797   \n",
+       "1          1  263.0  O00238_Q15796   \n",
+       "2          1  263.0  O00238_Q15797   \n",
+       "3          1  263.0  O00238_Q15796   \n",
+       "4          1  263.0  O00238_Q15797   \n",
+       "...      ...    ...            ...   \n",
+       "26521      0    NaN            NaN   \n",
+       "26522      0    NaN            NaN   \n",
+       "26523      0    NaN            NaN   \n",
+       "26524      0    NaN            NaN   \n",
+       "26535      0    NaN            NaN   \n",
+       "\n",
+       "                                                  matrix family  \n",
+       "0      [[[1.0273678027634894, 0.9579113900670306, 0.7...   STKR  \n",
+       "1      [[[0.9550419621907147, 1.0253151205244289, 0.7...   STKR  \n",
+       "2      [[[1.0253151205244289, 0.7268755493063382, 1.0...   STKR  \n",
+       "3      [[[1.0253151205244289, 0.7268755493063382, 1.0...   STKR  \n",
+       "4      [[[0.9550419621907147, 1.0253151205244289, 0.7...   STKR  \n",
+       "...                                                  ...    ...  \n",
+       "26521  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...   RIPK  \n",
+       "26522  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...   RIPK  \n",
+       "26523  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...   RIPK  \n",
+       "26524  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...   RIPK  \n",
+       "26535  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  STE11  \n",
+       "\n",
+       "[4400 rows x 11 columns]"
+      ]
+     },
+     "execution_count": 15,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_test"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "86e43d8f50284ebeac6cdfe01dff0967",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/5 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "881dc1aeb9da4e7c93702b7fb934ae5b",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/5 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "4f165af09453419db682ef839374f200",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/5 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "c1ab28abdacb4c0cada89c43e91a0914",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/5 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "aef52a3af7ef4ccebbe084f4c8cfb79e",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "  0%|          | 0/5 [00:00<?, ?it/s]"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "ename": "ValueError",
+     "evalue": "unknown format is not supported",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn [28], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m random1_probs, random1_auc \u001b[39m=\u001b[39m set_pred(model_list_random1, df_test, \u001b[39m'\u001b[39;49m\u001b[39mmatrix\u001b[39;49m\u001b[39m'\u001b[39;49m)\n",
+      "Cell \u001b[0;32mIn [26], line 4\u001b[0m, in \u001b[0;36mset_pred\u001b[0;34m(model_name, df, type)\u001b[0m\n\u001b[1;32m      2\u001b[0m probs \u001b[39m=\u001b[39m ensemble_5fold(model_name, df, \u001b[39mtype\u001b[39m)\n\u001b[1;32m      3\u001b[0m df[[\u001b[39mf\u001b[39m\u001b[39m'\u001b[39m\u001b[39m{\u001b[39;00m\u001b[39mtype\u001b[39m\u001b[39m}\u001b[39;00m\u001b[39m_probs\u001b[39m\u001b[39m'\u001b[39m]] \u001b[39m=\u001b[39m probs\n\u001b[0;32m----> 4\u001b[0m auc \u001b[39m=\u001b[39m sklearn\u001b[39m.\u001b[39;49mmetrics\u001b[39m.\u001b[39;49mroc_auc_score(df[\u001b[39m'\u001b[39;49m\u001b[39manswer\u001b[39;49m\u001b[39m'\u001b[39;49m], df[\u001b[39mf\u001b[39;49m\u001b[39m'\u001b[39;49m\u001b[39m{\u001b[39;49;00m\u001b[39mtype\u001b[39;49m\u001b[39m}\u001b[39;49;00m\u001b[39m_probs\u001b[39;49m\u001b[39m'\u001b[39;49m])\n\u001b[1;32m      5\u001b[0m \u001b[39mreturn\u001b[39;00m probs, auc\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/sklearn/metrics/_ranking.py:575\u001b[0m, in \u001b[0;36mroc_auc_score\u001b[0;34m(y_true, y_score, average, sample_weight, max_fpr, multi_class, labels)\u001b[0m\n\u001b[1;32m    567\u001b[0m     \u001b[39mreturn\u001b[39;00m _average_binary_score(\n\u001b[1;32m    568\u001b[0m         partial(_binary_roc_auc_score, max_fpr\u001b[39m=\u001b[39mmax_fpr),\n\u001b[1;32m    569\u001b[0m         y_true,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    572\u001b[0m         sample_weight\u001b[39m=\u001b[39msample_weight,\n\u001b[1;32m    573\u001b[0m     )\n\u001b[1;32m    574\u001b[0m \u001b[39melse\u001b[39;00m:  \u001b[39m# multilabel-indicator\u001b[39;00m\n\u001b[0;32m--> 575\u001b[0m     \u001b[39mreturn\u001b[39;00m _average_binary_score(\n\u001b[1;32m    576\u001b[0m         partial(_binary_roc_auc_score, max_fpr\u001b[39m=\u001b[39;49mmax_fpr),\n\u001b[1;32m    577\u001b[0m         y_true,\n\u001b[1;32m    578\u001b[0m         y_score,\n\u001b[1;32m    579\u001b[0m         average,\n\u001b[1;32m    580\u001b[0m         sample_weight\u001b[39m=\u001b[39;49msample_weight,\n\u001b[1;32m    581\u001b[0m     )\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/sklearn/metrics/_base.py:72\u001b[0m, in \u001b[0;36m_average_binary_score\u001b[0;34m(binary_metric, y_true, y_score, average, sample_weight)\u001b[0m\n\u001b[1;32m     70\u001b[0m y_type \u001b[39m=\u001b[39m type_of_target(y_true)\n\u001b[1;32m     71\u001b[0m \u001b[39mif\u001b[39;00m y_type \u001b[39mnot\u001b[39;00m \u001b[39min\u001b[39;00m (\u001b[39m\"\u001b[39m\u001b[39mbinary\u001b[39m\u001b[39m\"\u001b[39m, \u001b[39m\"\u001b[39m\u001b[39mmultilabel-indicator\u001b[39m\u001b[39m\"\u001b[39m):\n\u001b[0;32m---> 72\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39m{0}\u001b[39;00m\u001b[39m format is not supported\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(y_type))\n\u001b[1;32m     74\u001b[0m \u001b[39mif\u001b[39;00m y_type \u001b[39m==\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mbinary\u001b[39m\u001b[39m\"\u001b[39m:\n\u001b[1;32m     75\u001b[0m     \u001b[39mreturn\u001b[39;00m binary_metric(y_true, y_score, sample_weight\u001b[39m=\u001b[39msample_weight)\n",
+      "\u001b[0;31mValueError\u001b[0m: unknown format is not supported"
+     ]
+    }
+   ],
+   "source": [
+    "random1_probs, random1_auc = set_pred(model_list_random1, df_test, 'matrix')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train = pd.read_pickle(\"/home/hb/python/phospho/data/after1227_new_data/syt_false_dataset/train_test/train2.pickle\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 16,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "test = pd.read_pickle(\"/home/hb/python/phospho/data/after1227_new_data/syt_false_dataset/train_test/test2.pickle\")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 17,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>ERK1</td>\n",
+       "      <td>P27361</td>\n",
+       "      <td>BIM</td>\n",
+       "      <td>O43521</td>\n",
+       "      <td>YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>GPLAPPASPGPFATR</td>\n",
+       "      <td>S69</td>\n",
+       "      <td>449330.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.981179362242806, 0.8860339595928756, 1.15...</td>\n",
+       "      <td>ENSP00000389225</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>GRK6</td>\n",
+       "      <td>P43250</td>\n",
+       "      <td>NHERF</td>\n",
+       "      <td>O14745</td>\n",
+       "      <td>0RQYRVLGKGGFGEVCACQVRATGKMYACKKLEKKRIKKRKGAMAL...</td>\n",
+       "      <td>PALVRSASSDTSEEL</td>\n",
+       "      <td>S290</td>\n",
+       "      <td>450313.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000464117</td>\n",
+       "      <td>GRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>ITK</td>\n",
+       "      <td>Q08881</td>\n",
+       "      <td>PLCG1</td>\n",
+       "      <td>P19174</td>\n",
+       "      <td>LTFVQEIGSGQFGLVHLGYWLNKDKVAIKTIREGAMSEEDFIEEAE...</td>\n",
+       "      <td>EGRNPGFYVEANPMP</td>\n",
+       "      <td>Y783</td>\n",
+       "      <td>447667.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9841273200552851, 0.9121051495450904, 1.0...</td>\n",
+       "      <td>ENSP00000476454</td>\n",
+       "      <td>Tec</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>SFRS2</td>\n",
+       "      <td>Q01130</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>GYGRRSRSPRRRRRS</td>\n",
+       "      <td>S121</td>\n",
+       "      <td>6422897.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0191816486174081, 1.2104594520812995, 1.0...</td>\n",
+       "      <td>ENSP00000350877</td>\n",
+       "      <td>PKA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>AURA</td>\n",
+       "      <td>O14965</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FEIGRPLGKGKFGNVYLAREKQSKFILALKVLFKAQLEKAGVHQLR...</td>\n",
+       "      <td>VDSGNDIYGNPIKRI</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1606729892090855, 0.8607079764250578, 1.0...</td>\n",
+       "      <td>ENSP00000464930</td>\n",
+       "      <td>AUR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21147</th>\n",
+       "      <td>CDK1</td>\n",
+       "      <td>P06493</td>\n",
+       "      <td>NEDD1</td>\n",
+       "      <td>Q8NHV4</td>\n",
+       "      <td>YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...</td>\n",
+       "      <td>PPINGSSTPNPKIAS</td>\n",
+       "      <td>T550</td>\n",
+       "      <td>6225645.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8860339595928756, 0.8860339595928756, 1.1...</td>\n",
+       "      <td>ENSP00000407964</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21148</th>\n",
+       "      <td>CDK2</td>\n",
+       "      <td>P24941</td>\n",
+       "      <td>BCLAF1</td>\n",
+       "      <td>Q9NYF8</td>\n",
+       "      <td>FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...</td>\n",
+       "      <td>EEWDPEYTPKSKKYF</td>\n",
+       "      <td>T840</td>\n",
+       "      <td>455929.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.8798533791446438, 0.8798533791446438, 1.1...</td>\n",
+       "      <td>ENSP00000487249</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21149</th>\n",
+       "      <td>CDK2</td>\n",
+       "      <td>P24941</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...</td>\n",
+       "      <td>ASSSTSVTPDVSDNE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1151623503414478, 1.078962574157284, 1.07...</td>\n",
+       "      <td>ENSP00000514759</td>\n",
+       "      <td>CDK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21150</th>\n",
+       "      <td>ERK1</td>\n",
+       "      <td>P27361</td>\n",
+       "      <td>eplin</td>\n",
+       "      <td>Q9UHB6</td>\n",
+       "      <td>YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>ASSLSESSPPKAMKK</td>\n",
+       "      <td>S374</td>\n",
+       "      <td>452503.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.1241194296905368, 1.0232665395472176, 1.0...</td>\n",
+       "      <td>ENSP00000449890</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21151</th>\n",
+       "      <td>ERK2</td>\n",
+       "      <td>P28482</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>TDSIRDEYAFLQKKY</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0273678027634894, 0.8478937040879159, 1.0...</td>\n",
+       "      <td>ENSP00000515282</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>21152 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "      kinase  kin_id substrate  sub_id  \\\n",
+       "0       ERK1  P27361       BIM  O43521   \n",
+       "1       GRK6  P43250     NHERF  O14745   \n",
+       "2        ITK  Q08881     PLCG1  P19174   \n",
+       "3      PKACA  P17612     SFRS2  Q01130   \n",
+       "4       AURA  O14965       NaN     NaN   \n",
+       "...      ...     ...       ...     ...   \n",
+       "21147   CDK1  P06493     NEDD1  Q8NHV4   \n",
+       "21148   CDK2  P24941    BCLAF1  Q9NYF8   \n",
+       "21149   CDK2  P24941       NaN     NaN   \n",
+       "21150   ERK1  P27361     eplin  Q9UHB6   \n",
+       "21151   ERK2  P28482       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...  GPLAPPASPGPFATR   \n",
+       "1      0RQYRVLGKGGFGEVCACQVRATGKMYACKKLEKKRIKKRKGAMAL...  PALVRSASSDTSEEL   \n",
+       "2      LTFVQEIGSGQFGLVHLGYWLNKDKVAIKTIREGAMSEEDFIEEAE...  EGRNPGFYVEANPMP   \n",
+       "3      FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  GYGRRSRSPRRRRRS   \n",
+       "4      FEIGRPLGKGKFGNVYLAREKQSKFILALKVLFKAQLEKAGVHQLR...  VDSGNDIYGNPIKRI   \n",
+       "...                                                  ...              ...   \n",
+       "21147  YTKIEKIGEGTYGVVYKGRHKTTGQVVAMKKIRLESEEEGVPSTAI...  PPINGSSTPNPKIAS   \n",
+       "21148  FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...  EEWDPEYTPKSKKYF   \n",
+       "21149  FQKVEKIGEGTYGVVYKARNKLTGEVVALKKIRLDTETEGVPSTAI...  ASSSTSVTPDVSDNE   \n",
+       "21150  YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...  ASSLSESSPPKAMKK   \n",
+       "21151  YTNLSYIGEGAYGMVCSAYDNVNKVRVAIKKISPFEHQTYCQRTLR...  TDSIRDEYAFLQKKY   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0             S69     449330.0        human        human      1  263.0   \n",
+       "1            S290     450313.0        human        human      1  263.0   \n",
+       "2            Y783     447667.0        human        human      1  263.0   \n",
+       "3            S121    6422897.0        human        human      1  263.0   \n",
+       "4             NaN          NaN          NaN          NaN      0    NaN   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "21147        T550    6225645.0        human        human      1  263.0   \n",
+       "21148        T840     455929.0        human        human      1  263.0   \n",
+       "21149         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "21150        S374     452503.0        human        human      1  263.0   \n",
+       "21151         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix      ensemble_id  \\\n",
+       "0      [[[0.981179362242806, 0.8860339595928756, 1.15...  ENSP00000389225   \n",
+       "1      [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000464117   \n",
+       "2      [[[0.9841273200552851, 0.9121051495450904, 1.0...  ENSP00000476454   \n",
+       "3      [[[1.0191816486174081, 1.2104594520812995, 1.0...  ENSP00000350877   \n",
+       "4      [[[1.1606729892090855, 0.8607079764250578, 1.0...  ENSP00000464930   \n",
+       "...                                                  ...              ...   \n",
+       "21147  [[[0.8860339595928756, 0.8860339595928756, 1.1...  ENSP00000407964   \n",
+       "21148  [[[0.8798533791446438, 0.8798533791446438, 1.1...  ENSP00000487249   \n",
+       "21149  [[[1.1151623503414478, 1.078962574157284, 1.07...  ENSP00000514759   \n",
+       "21150  [[[1.1241194296905368, 1.0232665395472176, 1.0...  ENSP00000449890   \n",
+       "21151  [[[1.0273678027634894, 0.8478937040879159, 1.0...  ENSP00000515282   \n",
+       "\n",
+       "      family  \n",
+       "0       MAPK  \n",
+       "1        GRK  \n",
+       "2        Tec  \n",
+       "3        PKA  \n",
+       "4        AUR  \n",
+       "...      ...  \n",
+       "21147    CDK  \n",
+       "21148    CDK  \n",
+       "21149    CDK  \n",
+       "21150   MAPK  \n",
+       "21151   MAPK  \n",
+       "\n",
+       "[21152 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 17,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "train"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>7</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>CEP131</td>\n",
+       "      <td>Q9UPN4</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>NNLRRSNSTTQVSQP</td>\n",
+       "      <td>S78</td>\n",
+       "      <td>1211822.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>15</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PCM-1</td>\n",
+       "      <td>Q15154</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>RRQAESLSLTREVSQ</td>\n",
+       "      <td>S372</td>\n",
+       "      <td>11536118.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>PPP1R16B</td>\n",
+       "      <td>Q96T49</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>KKVSFEASVALLEAS</td>\n",
+       "      <td>S69</td>\n",
+       "      <td>17549547.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>CEP131</td>\n",
+       "      <td>Q9UPN4</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>SPAGVDLSLTGLPPP</td>\n",
+       "      <td>S21</td>\n",
+       "      <td>41451326.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>27</th>\n",
+       "      <td>PLK4</td>\n",
+       "      <td>O00444</td>\n",
+       "      <td>CEP131</td>\n",
+       "      <td>Q9UPN4</td>\n",
+       "      <td>0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...</td>\n",
+       "      <td>PLKSSNQTAPSLNNI</td>\n",
+       "      <td>T205</td>\n",
+       "      <td>1868722300.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td></td>\n",
+       "      <td>PLK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26387</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>GHRKYREYSPPYAPS</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.981179362242806, 1.0639623447280337, 1.06...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26389</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>SMPGNRLYVHPDSPN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 1.1936310931271388, 0.8...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26390</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>SVSGAAPYSSFMPPE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 1.1653249789427378, 1.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26392</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>EEEGRDEYDEVAMPV</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8650222931107413, 0.8650222931107413, 0.8...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26394</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>ARQSRRSTQGVTLTD</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>5266 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "7        PLK4  O00444    CEP131  Q9UPN4   \n",
+       "15       PLK4  O00444     PCM-1  Q15154   \n",
+       "22       PLK4  O00444  PPP1R16B  Q96T49   \n",
+       "25       PLK4  O00444    CEP131  Q9UPN4   \n",
+       "27       PLK4  O00444    CEP131  Q9UPN4   \n",
+       "...       ...     ...       ...     ...   \n",
+       "26387  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26389  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26390  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26392  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26394   RIPK3  Q9Y572       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "7      0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  NNLRRSNSTTQVSQP   \n",
+       "15     0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  RRQAESLSLTREVSQ   \n",
+       "22     0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  KKVSFEASVALLEAS   \n",
+       "25     0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  SPAGVDLSLTGLPPP   \n",
+       "27     0KVGNLLGKGSFAGVYRAESIHTGLEVAIKMIDKKAMYKAGMQRVQ...  PLKSSNQTAPSLNNI   \n",
+       "...                                                  ...              ...   \n",
+       "26387  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  GHRKYREYSPPYAPS   \n",
+       "26389  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  SMPGNRLYVHPDSPN   \n",
+       "26390  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  SVSGAAPYSSFMPPE   \n",
+       "26392  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  EEEGRDEYDEVAMPV   \n",
+       "26394  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  ARQSRRSTQGVTLTD   \n",
+       "\n",
+       "      sub_mod_rsd  sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "7             S78     1211822.0        human        human      1  263.0   \n",
+       "15           S372    11536118.0        human        human      1  263.0   \n",
+       "22            S69    17549547.0        human        human      1  263.0   \n",
+       "25            S21    41451326.0        human        human      1  263.0   \n",
+       "27           T205  1868722300.0        human        human      1  263.0   \n",
+       "...           ...           ...          ...          ...    ...    ...   \n",
+       "26387         NaN           NaN          NaN          NaN      0    NaN   \n",
+       "26389         NaN           NaN          NaN          NaN      0    NaN   \n",
+       "26390         NaN           NaN          NaN          NaN      0    NaN   \n",
+       "26392         NaN           NaN          NaN          NaN      0    NaN   \n",
+       "26394         NaN           NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix ensemble_id family  \n",
+       "7      [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                PLK  \n",
+       "15     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0    PLK  \n",
+       "22     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                PLK  \n",
+       "25     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                PLK  \n",
+       "27     [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                PLK  \n",
+       "...                                                  ...         ...    ...  \n",
+       "26387  [[[0.981179362242806, 1.0639623447280337, 1.06...               DYRK  \n",
+       "26389  [[[1.0232665395472176, 1.1936310931271388, 0.8...               DYRK  \n",
+       "26390  [[[1.0232665395472176, 1.1653249789427378, 1.0...           0   DYRK  \n",
+       "26392  [[[0.8650222931107413, 0.8650222931107413, 0.8...               DYRK  \n",
+       "26394  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...           0   RIPK  \n",
+       "\n",
+       "[5266 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 18,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "test"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "t = pd.concat([train, test], ignore_index=True)\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 26,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "Empty DataFrame\n",
+       "Columns: [kinase, kin_id, substrate, sub_id, kinseq, subseq, sub_mod_rsd, sub_position, kin_oragnism, sub_oragnism, answer, length, matrix, ensemble_id, family]\n",
+       "Index: []"
+      ]
+     },
+     "execution_count": 26,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "t[t.duplicated(subset=['kinseq', 'subseq'])]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>kinase</th>\n",
+       "      <th>kin_id</th>\n",
+       "      <th>substrate</th>\n",
+       "      <th>sub_id</th>\n",
+       "      <th>kinseq</th>\n",
+       "      <th>subseq</th>\n",
+       "      <th>sub_mod_rsd</th>\n",
+       "      <th>sub_position</th>\n",
+       "      <th>kin_oragnism</th>\n",
+       "      <th>sub_oragnism</th>\n",
+       "      <th>answer</th>\n",
+       "      <th>length</th>\n",
+       "      <th>matrix</th>\n",
+       "      <th>ensemble_id</th>\n",
+       "      <th>family</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>ERK1</td>\n",
+       "      <td>P27361</td>\n",
+       "      <td>BIM</td>\n",
+       "      <td>O43521</td>\n",
+       "      <td>YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...</td>\n",
+       "      <td>GPLAPPASPGPFATR</td>\n",
+       "      <td>S69</td>\n",
+       "      <td>449330.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.981179362242806, 0.8860339595928756, 1.15...</td>\n",
+       "      <td>ENSP00000389225</td>\n",
+       "      <td>MAPK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>GRK6</td>\n",
+       "      <td>P43250</td>\n",
+       "      <td>NHERF</td>\n",
+       "      <td>O14745</td>\n",
+       "      <td>0RQYRVLGKGGFGEVCACQVRATGKMYACKKLEKKRIKKRKGAMAL...</td>\n",
+       "      <td>PALVRSASSDTSEEL</td>\n",
+       "      <td>S290</td>\n",
+       "      <td>450313.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>ENSP00000464117</td>\n",
+       "      <td>GRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>ITK</td>\n",
+       "      <td>Q08881</td>\n",
+       "      <td>PLCG1</td>\n",
+       "      <td>P19174</td>\n",
+       "      <td>LTFVQEIGSGQFGLVHLGYWLNKDKVAIKTIREGAMSEEDFIEEAE...</td>\n",
+       "      <td>EGRNPGFYVEANPMP</td>\n",
+       "      <td>Y783</td>\n",
+       "      <td>447667.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[0.9841273200552851, 0.9121051495450904, 1.0...</td>\n",
+       "      <td>ENSP00000476454</td>\n",
+       "      <td>Tec</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>PKACA</td>\n",
+       "      <td>P17612</td>\n",
+       "      <td>SFRS2</td>\n",
+       "      <td>Q01130</td>\n",
+       "      <td>FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...</td>\n",
+       "      <td>GYGRRSRSPRRRRRS</td>\n",
+       "      <td>S121</td>\n",
+       "      <td>6422897.0</td>\n",
+       "      <td>human</td>\n",
+       "      <td>human</td>\n",
+       "      <td>1</td>\n",
+       "      <td>263.0</td>\n",
+       "      <td>[[[1.0191816486174081, 1.2104594520812995, 1.0...</td>\n",
+       "      <td>ENSP00000350877</td>\n",
+       "      <td>PKA</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>AURA</td>\n",
+       "      <td>O14965</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>FEIGRPLGKGKFGNVYLAREKQSKFILALKVLFKAQLEKAGVHQLR...</td>\n",
+       "      <td>VDSGNDIYGNPIKRI</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.1606729892090855, 0.8607079764250578, 1.0...</td>\n",
+       "      <td>ENSP00000464930</td>\n",
+       "      <td>AUR</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26413</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>GHRKYREYSPPYAPS</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.981179362242806, 1.0639623447280337, 1.06...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26414</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>SMPGNRLYVHPDSPN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 1.1936310931271388, 0.8...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26415</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>SVSGAAPYSSFMPPE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[1.0232665395472176, 1.1653249789427378, 1.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26416</th>\n",
+       "      <td>DYRK1B</td>\n",
+       "      <td>Q9Y463</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...</td>\n",
+       "      <td>EEEGRDEYDEVAMPV</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.8650222931107413, 0.8650222931107413, 0.8...</td>\n",
+       "      <td></td>\n",
+       "      <td>DYRK</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>26417</th>\n",
+       "      <td>RIPK3</td>\n",
+       "      <td>Q9Y572</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...</td>\n",
+       "      <td>ARQSRRSTQGVTLTD</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>[[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...</td>\n",
+       "      <td>0</td>\n",
+       "      <td>RIPK</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>26418 rows √ó 15 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "       kinase  kin_id substrate  sub_id  \\\n",
+       "0        ERK1  P27361       BIM  O43521   \n",
+       "1        GRK6  P43250     NHERF  O14745   \n",
+       "2         ITK  Q08881     PLCG1  P19174   \n",
+       "3       PKACA  P17612     SFRS2  Q01130   \n",
+       "4        AURA  O14965       NaN     NaN   \n",
+       "...       ...     ...       ...     ...   \n",
+       "26413  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26414  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26415  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26416  DYRK1B  Q9Y463       NaN     NaN   \n",
+       "26417   RIPK3  Q9Y572       NaN     NaN   \n",
+       "\n",
+       "                                                  kinseq           subseq  \\\n",
+       "0      YTQLQYIGEGAYGMVSSAYDHVRKTRVAIKKISPFEHQTYCQRTLR...  GPLAPPASPGPFATR   \n",
+       "1      0RQYRVLGKGGFGEVCACQVRATGKMYACKKLEKKRIKKRKGAMAL...  PALVRSASSDTSEEL   \n",
+       "2      LTFVQEIGSGQFGLVHLGYWLNKDKVAIKTIREGAMSEEDFIEEAE...  EGRNPGFYVEANPMP   \n",
+       "3      FERIKTLGTGSFGRVMLVKHKETGNHYAMKILDKQKVVKLKQEHTL...  GYGRRSRSPRRRRRS   \n",
+       "4      FEIGRPLGKGKFGNVYLAREKQSKFILALKVLFKAQLEKAGVHQLR...  VDSGNDIYGNPIKRI   \n",
+       "...                                                  ...              ...   \n",
+       "26413  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  GHRKYREYSPPYAPS   \n",
+       "26414  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  SMPGNRLYVHPDSPN   \n",
+       "26415  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  SVSGAAPYSSFMPPE   \n",
+       "26416  YEIDSLIGKGSFGQVVKAYDHQTQELVAIKIIKNKKAFLNQAQIEL...  EEEGRDEYDEVAMPV   \n",
+       "26417  0ENQELVGKGGFGTVFRAQHRKWGYDVAVKIVNSKAISREVKAMAS...  ARQSRRSTQGVTLTD   \n",
+       "\n",
+       "      sub_mod_rsd sub_position kin_oragnism sub_oragnism answer length  \\\n",
+       "0             S69     449330.0        human        human      1  263.0   \n",
+       "1            S290     450313.0        human        human      1  263.0   \n",
+       "2            Y783     447667.0        human        human      1  263.0   \n",
+       "3            S121    6422897.0        human        human      1  263.0   \n",
+       "4             NaN          NaN          NaN          NaN      0    NaN   \n",
+       "...           ...          ...          ...          ...    ...    ...   \n",
+       "26413         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26414         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26415         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26416         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "26417         NaN          NaN          NaN          NaN      0    NaN   \n",
+       "\n",
+       "                                                  matrix      ensemble_id  \\\n",
+       "0      [[[0.981179362242806, 0.8860339595928756, 1.15...  ENSP00000389225   \n",
+       "1      [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...  ENSP00000464117   \n",
+       "2      [[[0.9841273200552851, 0.9121051495450904, 1.0...  ENSP00000476454   \n",
+       "3      [[[1.0191816486174081, 1.2104594520812995, 1.0...  ENSP00000350877   \n",
+       "4      [[[1.1606729892090855, 0.8607079764250578, 1.0...  ENSP00000464930   \n",
+       "...                                                  ...              ...   \n",
+       "26413  [[[0.981179362242806, 1.0639623447280337, 1.06...                    \n",
+       "26414  [[[1.0232665395472176, 1.1936310931271388, 0.8...                    \n",
+       "26415  [[[1.0232665395472176, 1.1653249789427378, 1.0...                0   \n",
+       "26416  [[[0.8650222931107413, 0.8650222931107413, 0.8...                    \n",
+       "26417  [[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0...                0   \n",
+       "\n",
+       "      family  \n",
+       "0       MAPK  \n",
+       "1        GRK  \n",
+       "2        Tec  \n",
+       "3        PKA  \n",
+       "4        AUR  \n",
+       "...      ...  \n",
+       "26413   DYRK  \n",
+       "26414   DYRK  \n",
+       "26415   DYRK  \n",
+       "26416   DYRK  \n",
+       "26417   RIPK  \n",
+       "\n",
+       "[26418 rows x 15 columns]"
+      ]
+     },
+     "execution_count": 28,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "t"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "TypeError",
+     "evalue": "unhashable type: 'numpy.ndarray'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn [27], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m t[t\u001b[39m.\u001b[39;49mduplicated(subset\u001b[39m=\u001b[39;49m[\u001b[39m'\u001b[39;49m\u001b[39mmatrix\u001b[39;49m\u001b[39m'\u001b[39;49m])]\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/frame.py:6247\u001b[0m, in \u001b[0;36mDataFrame.duplicated\u001b[0;34m(self, subset, keep)\u001b[0m\n\u001b[1;32m   6244\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mKeyError\u001b[39;00m(diff)\n\u001b[1;32m   6246\u001b[0m vals \u001b[39m=\u001b[39m (col\u001b[39m.\u001b[39mvalues \u001b[39mfor\u001b[39;00m name, col \u001b[39min\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mitems() \u001b[39mif\u001b[39;00m name \u001b[39min\u001b[39;00m subset)\n\u001b[0;32m-> 6247\u001b[0m labels, shape \u001b[39m=\u001b[39m \u001b[39mmap\u001b[39m(\u001b[39mlist\u001b[39m, \u001b[39mzip\u001b[39;49m(\u001b[39m*\u001b[39;49m\u001b[39mmap\u001b[39;49m(f, vals)))\n\u001b[1;32m   6249\u001b[0m ids \u001b[39m=\u001b[39m get_group_index(\n\u001b[1;32m   6250\u001b[0m     labels,\n\u001b[1;32m   6251\u001b[0m     \u001b[39m# error: Argument 1 to \"tuple\" has incompatible type \"List[_T]\";\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   6255\u001b[0m     xnull\u001b[39m=\u001b[39m\u001b[39mFalse\u001b[39;00m,\n\u001b[1;32m   6256\u001b[0m )\n\u001b[1;32m   6257\u001b[0m result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_constructor_sliced(duplicated(ids, keep), index\u001b[39m=\u001b[39m\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mindex)\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/frame.py:6220\u001b[0m, in \u001b[0;36mDataFrame.duplicated.<locals>.f\u001b[0;34m(vals)\u001b[0m\n\u001b[1;32m   6219\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mf\u001b[39m(vals) \u001b[39m-\u001b[39m\u001b[39m>\u001b[39m \u001b[39mtuple\u001b[39m[np\u001b[39m.\u001b[39mndarray, \u001b[39mint\u001b[39m]:\n\u001b[0;32m-> 6220\u001b[0m     labels, shape \u001b[39m=\u001b[39m algorithms\u001b[39m.\u001b[39;49mfactorize(vals, size_hint\u001b[39m=\u001b[39;49m\u001b[39mlen\u001b[39;49m(\u001b[39mself\u001b[39;49m))\n\u001b[1;32m   6221\u001b[0m     \u001b[39mreturn\u001b[39;00m labels\u001b[39m.\u001b[39mastype(\u001b[39m\"\u001b[39m\u001b[39mi8\u001b[39m\u001b[39m\"\u001b[39m, copy\u001b[39m=\u001b[39m\u001b[39mFalse\u001b[39;00m), \u001b[39mlen\u001b[39m(shape)\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/algorithms.py:763\u001b[0m, in \u001b[0;36mfactorize\u001b[0;34m(values, sort, na_sentinel, size_hint)\u001b[0m\n\u001b[1;32m    760\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[1;32m    761\u001b[0m         na_value \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m\n\u001b[0;32m--> 763\u001b[0m     codes, uniques \u001b[39m=\u001b[39m factorize_array(\n\u001b[1;32m    764\u001b[0m         values, na_sentinel\u001b[39m=\u001b[39;49mna_sentinel, size_hint\u001b[39m=\u001b[39;49msize_hint, na_value\u001b[39m=\u001b[39;49mna_value\n\u001b[1;32m    765\u001b[0m     )\n\u001b[1;32m    767\u001b[0m \u001b[39mif\u001b[39;00m sort \u001b[39mand\u001b[39;00m \u001b[39mlen\u001b[39m(uniques) \u001b[39m>\u001b[39m \u001b[39m0\u001b[39m:\n\u001b[1;32m    768\u001b[0m     uniques, codes \u001b[39m=\u001b[39m safe_sort(\n\u001b[1;32m    769\u001b[0m         uniques, codes, na_sentinel\u001b[39m=\u001b[39mna_sentinel, assume_unique\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m, verify\u001b[39m=\u001b[39m\u001b[39mFalse\u001b[39;00m\n\u001b[1;32m    770\u001b[0m     )\n",
+      "File \u001b[0;32m~/anaconda3/envs/pp_predict/lib/python3.9/site-packages/pandas/core/algorithms.py:560\u001b[0m, in \u001b[0;36mfactorize_array\u001b[0;34m(values, na_sentinel, size_hint, na_value, mask)\u001b[0m\n\u001b[1;32m    557\u001b[0m hash_klass, values \u001b[39m=\u001b[39m _get_data_algo(values)\n\u001b[1;32m    559\u001b[0m table \u001b[39m=\u001b[39m hash_klass(size_hint \u001b[39mor\u001b[39;00m \u001b[39mlen\u001b[39m(values))\n\u001b[0;32m--> 560\u001b[0m uniques, codes \u001b[39m=\u001b[39m table\u001b[39m.\u001b[39;49mfactorize(\n\u001b[1;32m    561\u001b[0m     values, na_sentinel\u001b[39m=\u001b[39;49mna_sentinel, na_value\u001b[39m=\u001b[39;49mna_value, mask\u001b[39m=\u001b[39;49mmask\n\u001b[1;32m    562\u001b[0m )\n\u001b[1;32m    564\u001b[0m codes \u001b[39m=\u001b[39m ensure_platform_int(codes)\n\u001b[1;32m    565\u001b[0m \u001b[39mreturn\u001b[39;00m codes, uniques\n",
+      "File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5394\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.factorize\u001b[0;34m()\u001b[0m\n",
+      "File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5310\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable._unique\u001b[0;34m()\u001b[0m\n",
+      "\u001b[0;31mTypeError\u001b[0m: unhashable type: 'numpy.ndarray'"
+     ]
+    }
+   ],
+   "source": [
+    "t[t.duplicated(subset=['matrix'])]"
+   ]
+  },
+  {
+   "attachments": {},
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## GPS"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "df = pd.read_csv(\"/home/hb/python/phospho/GPS6.0/20221220-201905-775/20221220-201905-775.gps\", sep='\\t')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th>ID</th>\n",
+       "      <th>Position</th>\n",
+       "      <th>Code</th>\n",
+       "      <th>Kinase</th>\n",
+       "      <th>Peptide</th>\n",
+       "      <th>Score</th>\n",
+       "      <th>Cutoff</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th rowspan=\"11\" valign=\"top\">AML3</th>\n",
+       "      <th>2</th>\n",
+       "      <th>S</th>\n",
+       "      <th>AGC/DMPK/CRIK</th>\n",
+       "      <td>******DSEDYSLSE</td>\n",
+       "      <td>0.4892</td>\n",
+       "      <td>0.4021</td>\n",
+       "      <td>--</td>\n",
+       "      <td>*****************************DSEDYSLSEEGQELS**...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <th>S</th>\n",
+       "      <th>AGC/DMPK/CRIK</th>\n",
+       "      <td>**DSEDYSLSEEGQE</td>\n",
+       "      <td>0.4600</td>\n",
+       "      <td>0.4021</td>\n",
+       "      <td>--</td>\n",
+       "      <td>*************************DSEDYSLSEEGQELS******...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <th>S</th>\n",
+       "      <th>AGC/DMPK/CRIK</th>\n",
+       "      <td>DSEDYSLSEEGQELS</td>\n",
+       "      <td>0.4600</td>\n",
+       "      <td>0.4021</td>\n",
+       "      <td>--</td>\n",
+       "      <td>***********************DSEDYSLSEEGQELS********...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>15</th>\n",
+       "      <th>S</th>\n",
+       "      <th>AGC/DMPK/CRIK</th>\n",
+       "      <td>SEEGQELS*******</td>\n",
+       "      <td>0.4892</td>\n",
+       "      <td>0.4021</td>\n",
+       "      <td>--</td>\n",
+       "      <td>****************DSEDYSLSEEGQELS***************...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <th>S</th>\n",
+       "      <th>AGC/DMPK/CRIK/CIT</th>\n",
+       "      <td>******DSEDYSLSE</td>\n",
+       "      <td>0.4892</td>\n",
+       "      <td>0.4021</td>\n",
+       "      <td>--</td>\n",
+       "      <td>*****************************DSEDYSLSEEGQELS**...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <th>...</th>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <th>S</th>\n",
+       "      <th>Dual/TK/Abl</th>\n",
+       "      <td>DSEDYSLSEEGQELS</td>\n",
+       "      <td>0.3257</td>\n",
+       "      <td>0.3237</td>\n",
+       "      <td>--</td>\n",
+       "      <td>***********************DSEDYSLSEEGQELS********...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <th>S</th>\n",
+       "      <th>Dual/TK/Abl/ABL1</th>\n",
+       "      <td>******DSEDYSLSE</td>\n",
+       "      <td>0.3308</td>\n",
+       "      <td>0.2858</td>\n",
+       "      <td>--</td>\n",
+       "      <td>*****************************DSEDYSLSEEGQELS**...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <th>S</th>\n",
+       "      <th>Dual/TK/Abl/ABL1</th>\n",
+       "      <td>**DSEDYSLSEEGQE</td>\n",
+       "      <td>0.4532</td>\n",
+       "      <td>0.2858</td>\n",
+       "      <td>--</td>\n",
+       "      <td>*************************DSEDYSLSEEGQELS******...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <th>S</th>\n",
+       "      <th>Dual/TK/Abl/ABL1</th>\n",
+       "      <td>DSEDYSLSEEGQELS</td>\n",
+       "      <td>0.4532</td>\n",
+       "      <td>0.2858</td>\n",
+       "      <td>--</td>\n",
+       "      <td>***********************DSEDYSLSEEGQELS********...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>15</th>\n",
+       "      <th>S</th>\n",
+       "      <th>Dual/TK/Abl/ABL1</th>\n",
+       "      <td>SEEGQELS*******</td>\n",
+       "      <td>0.3303</td>\n",
+       "      <td>0.2858</td>\n",
+       "      <td>--</td>\n",
+       "      <td>****************DSEDYSLSEEGQELS***************...</td>\n",
+       "      <td>Pred.</td>\n",
+       "      <td>&lt;a href =https://thebiogrid.org/  target='_bla...</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>561 rows √ó 7 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                                          ID  Position    Code Kinase  \\\n",
+       "AML3 2  S AGC/DMPK/CRIK      ******DSEDYSLSE    0.4892  0.4021     --   \n",
+       "     6  S AGC/DMPK/CRIK      **DSEDYSLSEEGQE    0.4600  0.4021     --   \n",
+       "     8  S AGC/DMPK/CRIK      DSEDYSLSEEGQELS    0.4600  0.4021     --   \n",
+       "     15 S AGC/DMPK/CRIK      SEEGQELS*******    0.4892  0.4021     --   \n",
+       "     2  S AGC/DMPK/CRIK/CIT  ******DSEDYSLSE    0.4892  0.4021     --   \n",
+       "...                                      ...       ...     ...    ...   \n",
+       "     8  S Dual/TK/Abl        DSEDYSLSEEGQELS    0.3257  0.3237     --   \n",
+       "     2  S Dual/TK/Abl/ABL1   ******DSEDYSLSE    0.3308  0.2858     --   \n",
+       "     6  S Dual/TK/Abl/ABL1   **DSEDYSLSEEGQE    0.4532  0.2858     --   \n",
+       "     8  S Dual/TK/Abl/ABL1   DSEDYSLSEEGQELS    0.4532  0.2858     --   \n",
+       "     15 S Dual/TK/Abl/ABL1   SEEGQELS*******    0.3303  0.2858     --   \n",
+       "\n",
+       "                                                                       Peptide  \\\n",
+       "AML3 2  S AGC/DMPK/CRIK      *****************************DSEDYSLSEEGQELS**...   \n",
+       "     6  S AGC/DMPK/CRIK      *************************DSEDYSLSEEGQELS******...   \n",
+       "     8  S AGC/DMPK/CRIK      ***********************DSEDYSLSEEGQELS********...   \n",
+       "     15 S AGC/DMPK/CRIK      ****************DSEDYSLSEEGQELS***************...   \n",
+       "     2  S AGC/DMPK/CRIK/CIT  *****************************DSEDYSLSEEGQELS**...   \n",
+       "...                                                                        ...   \n",
+       "     8  S Dual/TK/Abl        ***********************DSEDYSLSEEGQELS********...   \n",
+       "     2  S Dual/TK/Abl/ABL1   *****************************DSEDYSLSEEGQELS**...   \n",
+       "     6  S Dual/TK/Abl/ABL1   *************************DSEDYSLSEEGQELS******...   \n",
+       "     8  S Dual/TK/Abl/ABL1   ***********************DSEDYSLSEEGQELS********...   \n",
+       "     15 S Dual/TK/Abl/ABL1   ****************DSEDYSLSEEGQELS***************...   \n",
+       "\n",
+       "                             Score  \\\n",
+       "AML3 2  S AGC/DMPK/CRIK      Pred.   \n",
+       "     6  S AGC/DMPK/CRIK      Pred.   \n",
+       "     8  S AGC/DMPK/CRIK      Pred.   \n",
+       "     15 S AGC/DMPK/CRIK      Pred.   \n",
+       "     2  S AGC/DMPK/CRIK/CIT  Pred.   \n",
+       "...                            ...   \n",
+       "     8  S Dual/TK/Abl        Pred.   \n",
+       "     2  S Dual/TK/Abl/ABL1   Pred.   \n",
+       "     6  S Dual/TK/Abl/ABL1   Pred.   \n",
+       "     8  S Dual/TK/Abl/ABL1   Pred.   \n",
+       "     15 S Dual/TK/Abl/ABL1   Pred.   \n",
+       "\n",
+       "                                                                        Cutoff  \n",
+       "AML3 2  S AGC/DMPK/CRIK      <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     6  S AGC/DMPK/CRIK      <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     8  S AGC/DMPK/CRIK      <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     15 S AGC/DMPK/CRIK      <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     2  S AGC/DMPK/CRIK/CIT  <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "...                                                                        ...  \n",
+       "     8  S Dual/TK/Abl        <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     2  S Dual/TK/Abl/ABL1   <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     6  S Dual/TK/Abl/ABL1   <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     8  S Dual/TK/Abl/ABL1   <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "     15 S Dual/TK/Abl/ABL1   <a href =https://thebiogrid.org/  target='_bla...  \n",
+       "\n",
+       "[561 rows x 7 columns]"
+      ]
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "phos",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.10.9"
+  },
+  "orig_nbformat": 4,
+  "vscode": {
+   "interpreter": {
+    "hash": "349d5b8602be48b8d49e955d206518dd9dc4b4a50dd1043b885f06ba702c39e3"
+   }
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
diff --git a/code/EarlyStopping.py b/code/EarlyStopping.py
new file mode 100644
index 0000000..ae24432
--- /dev/null
+++ b/code/EarlyStopping.py
@@ -0,0 +1,58 @@
+import torch
+import numpy as np
+class EarlyStopping:
+    """Ï£ºÏñ¥ÏßÑ patience Ïù¥ÌõÑÎ°ú validation lossÍ∞Ä Í∞úÏÑ†ÎêòÏßÄ ÏïäÏúºÎ©¥ ÌïôÏäµÏùÑ Ï°∞Í∏∞ Ï§ëÏßÄ"""
+    def __init__(self, patience=7, verbose=False, delta=0, path='checkpoint.pt'):
+        """
+        Args:
+            patience (int): validation lossÍ∞Ä Í∞úÏÑ†Îêú ÌõÑ Í∏∞Îã§Î¶¨Îäî Í∏∞Í∞Ñ
+                            Default: 7
+            verbose (bool): TrueÏùº Í≤ΩÏö∞ Í∞Å validation lossÏùò Í∞úÏÑ† ÏÇ¨Ìï≠ Î©îÏÑ∏ÏßÄ Ï∂úÎ†•
+                            Default: False
+            delta (float): Í∞úÏÑ†ÎêòÏóàÎã§Í≥† Ïù∏Ï†ïÎêòÎäî monitered quantityÏùò ÏµúÏÜå Î≥ÄÌôî
+                            Default: 0
+            path (str): checkpointÏ†ÄÏû• Í≤ΩÎ°ú
+                            Default: 'checkpoint.pt'
+        """
+        self.patience = patience
+        self.verbose = verbose
+        self.counter = 0
+        self.best_score = None
+        self.early_stop = False
+        self.val_loss_min = np.Inf
+        self.delta = delta
+        self.path = path
+
+    def __call__(self, epoch_val_loss, model, optimizer, savePath):
+
+        score = -epoch_val_loss
+
+        if self.best_score is None:
+            self.best_score = score
+            self.save_checkpoint(epoch_val_loss, model, optimizer, savePath)
+        elif score < self.best_score + self.delta:
+            self.counter += 1
+            print(f'EarlyStopping counter: {self.counter} out of {self.patience}')
+            if self.counter >= self.patience:
+                self.early_stop = True
+        else:
+            self.best_score = score
+            self.save_checkpoint(epoch_val_loss, model, optimizer, savePath)
+            self.counter = 0
+# checkpoint = {'model': model,
+#                           #'state_dict': model.module.state_dict(),
+#                               'state_dict': model.state_dict(),
+#                           'optimizer' : optimizer.state_dict()}
+    def save_checkpoint(self, epoch_val_loss, model, optimizer, savePath):
+        '''validation lossÍ∞Ä Í∞êÏÜåÌïòÎ©¥ Î™®Îç∏ÏùÑ Ï†ÄÏû•ÌïúÎã§.'''
+        if self.verbose:
+            print(f'Validation loss decreased ({self.val_loss_min:.6f} --> {epoch_val_loss:.6f}).  Saving model ...')
+        checkpoint = {'model': model,
+                          #'state_dict': model.module.state_dict(),
+                              'state_dict': model.state_dict(),
+                          'optimizer' : optimizer.state_dict()}
+        torch.save(checkpoint, savePath)
+        self.val_loss_min = epoch_val_loss
+
+            # savePath = "{}/{}fold_erls_{}.pth".format(save_dir, fold, epoch+1)
+            # early_stopping(epoch_val_loss, model, optimizer, savePath)
diff --git a/code/Radam.py b/code/Radam.py
new file mode 100644
index 0000000..90c4fe4
--- /dev/null
+++ b/code/Radam.py
@@ -0,0 +1,96 @@
+#https://github.com/LiyuanLucasLiu/RAdam
+
+import math
+import torch
+from torch.optim.optimizer import Optimizer, required
+
+class RAdam(Optimizer):
+
+    def __init__(self, params, lr=1e-4, betas=(0.9, 0.999), eps=1e-8, weight_decay=0, degenerated_to_sgd=True):
+        if not 0.0 <= lr:
+            raise ValueError("Invalid learning rate: {}".format(lr))
+        if not 0.0 <= eps:
+            raise ValueError("Invalid epsilon value: {}".format(eps))
+        if not 0.0 <= betas[0] < 1.0:
+            raise ValueError("Invalid beta parameter at index 0: {}".format(betas[0]))
+        if not 0.0 <= betas[1] < 1.0:
+            raise ValueError("Invalid beta parameter at index 1: {}".format(betas[1]))
+        
+        self.degenerated_to_sgd = degenerated_to_sgd
+        if isinstance(params, (list, tuple)) and len(params) > 0 and isinstance(params[0], dict):
+            for param in params:
+                if 'betas' in param and (param['betas'][0] != betas[0] or param['betas'][1] != betas[1]):
+                    param['buffer'] = [[None, None, None] for _ in range(10)]
+        defaults = dict(lr=lr, betas=betas, eps=eps, weight_decay=weight_decay, buffer=[[None, None, None] for _ in range(10)])
+        super(RAdam, self).__init__(params, defaults)
+
+    def __setstate__(self, state):
+        super(RAdam, self).__setstate__(state)
+
+    def step(self, closure=None):
+
+        loss = None
+        if closure is not None:
+            loss = closure()
+
+        for group in self.param_groups:
+
+            for p in group['params']:
+                if p.grad is None:
+                    continue
+                grad = p.grad.data.float()
+                if grad.is_sparse:
+                    raise RuntimeError('RAdam does not support sparse gradients')
+
+                p_data_fp32 = p.data.float()
+
+                state = self.state[p]
+
+                if len(state) == 0:
+                    state['step'] = 0
+                    state['exp_avg'] = torch.zeros_like(p_data_fp32)
+                    state['exp_avg_sq'] = torch.zeros_like(p_data_fp32)
+                else:
+                    state['exp_avg'] = state['exp_avg'].type_as(p_data_fp32)
+                    state['exp_avg_sq'] = state['exp_avg_sq'].type_as(p_data_fp32)
+
+                exp_avg, exp_avg_sq = state['exp_avg'], state['exp_avg_sq']
+                beta1, beta2 = group['betas']
+
+                exp_avg_sq.mul_(beta2).addcmul_(1 - beta2, grad, grad)
+                exp_avg.mul_(beta1).add_(1 - beta1, grad)
+
+                state['step'] += 1
+                buffered = group['buffer'][int(state['step'] % 10)]
+                if state['step'] == buffered[0]:
+                    N_sma, step_size = buffered[1], buffered[2]
+                else:
+                    buffered[0] = state['step']
+                    beta2_t = beta2 ** state['step']
+                    N_sma_max = 2 / (1 - beta2) - 1
+                    N_sma = N_sma_max - 2 * state['step'] * beta2_t / (1 - beta2_t)
+                    buffered[1] = N_sma
+
+                    # more conservative since it's an approximated value
+                    if N_sma >= 5:
+                        step_size = math.sqrt((1 - beta2_t) * (N_sma - 4) / (N_sma_max - 4) * (N_sma - 2) / N_sma * N_sma_max / (N_sma_max - 2)) / (1 - beta1 ** state['step'])
+                    elif self.degenerated_to_sgd:
+                        step_size = 1.0 / (1 - beta1 ** state['step'])
+                    else:
+                        step_size = -1
+                    buffered[2] = step_size
+
+                # more conservative since it's an approximated value
+                if N_sma >= 5:
+                    if group['weight_decay'] != 0:
+                        p_data_fp32.add_(-group['weight_decay'] * group['lr'], p_data_fp32)
+                    denom = exp_avg_sq.sqrt().add_(group['eps'])
+                    p_data_fp32.addcdiv_(-step_size * group['lr'], exp_avg, denom)
+                    p.data.copy_(p_data_fp32)
+                elif step_size > 0:
+                    if group['weight_decay'] != 0:
+                        p_data_fp32.add_(-group['weight_decay'] * group['lr'], p_data_fp32)
+                    p_data_fp32.add_(-step_size * group['lr'], exp_avg)
+                    p.data.copy_(p_data_fp32)
+
+        return loss
\ No newline at end of file
diff --git a/code/benchmark_util.py b/code/benchmark_util.py
new file mode 100644
index 0000000..84b89c9
--- /dev/null
+++ b/code/benchmark_util.py
@@ -0,0 +1,291 @@
+from multiprocessing import Manager, Pool
+import time
+import os
+import re
+import numpy as np
+import pandas as pd
+import multiprocessing
+from collections import OrderedDict
+import parmap
+import torch
+from tqdm import tqdm
+
+class LoadingModel():
+    """
+    Model Î∂àÎü¨Ïò§Îäî ÌÅ¥ÎûòÏä§ ÎßåÎì§Í∏∞
+    """
+    # filedir_list = []
+
+    def __init__(self, _args):
+        self._path = _args.path
+        self._filedir_list = []
+        self._bs = _args.batch_size
+    def __repr__(self):
+        return 'Model Saved path : {}'.format(self._path)
+        
+    def set_saved_dir(self):
+        os.chdir(self._path)
+        self._filedir_list = []
+        self._filedir_list = [f'{self._path}/{i}' for i in os.listdir()]
+        self._filedir_list.sort()
+        return self._filedir_list
+
+    def loading_model(self):
+        for idx, filedir in enumerate(self._filedir_list):
+            filedir_found = re.search('HLA-(.+?)_bs', filedir).group(1)
+            print(filedir_found)
+            globals()[f'model_list_{filedir_found}_bs{self._bs}'] = load_multiple_model(filedir, filedir_found)
+
+def load_hlaseq():
+
+    hla_a_prot = pd.read_csv('../data/need/HLA_A_prot.txt', sep='\t', header = None)
+    hla_b_prot = pd.read_csv('../data/need/HLA_B_prot.txt', sep='\t', header = None)
+    hla_c_prot = pd.read_csv('../data/need/HLA_C_prot.txt', sep='\t', header = None)
+    hla_prot = pd.concat([hla_a_prot, hla_b_prot, hla_c_prot], axis = 0)
+
+    hla = {}
+    for line in hla_prot.to_numpy():
+        hla[line[0]] = line[1]
+        
+    return hla
+    
+def parallelize_dataframe(df, func, num_cores):
+    df_split = np.array_split(df, num_cores) # ÏΩîÏñ¥ Ïàò ÎßåÌÅº Îç∞Ïù¥ÌÑ∞ ÌîÑÎ†àÏûÑ Ï™ºÍ∞úÍ∏∞
+    data = parmap.map(func, df_split, pm_pbar = True, pm_processes=num_cores)
+    try:
+        data = pd.concat(data, ignore_index = True)
+        return data
+    except:
+        return data
+    
+
+def make_matrix(df):
+    # Ìï¥ÏãúÍ∞í Î∂àÎü¨Ïò§Í∏∞
+    hash_data = pd.read_csv('../data/need/Calpha.txt', sep='\t')
+    hash_data.set_index(hash_data['Unnamed: 0'], inplace=True)
+    # Î∂àÌïÑÏöîÌïú ÏπºÎüº Ï†ïÎ¶¨
+    del hash_data['Unnamed: 0']
+    hash_data = np.exp(-1*hash_data)
+       
+    hash_data_list = []
+    #hla = load_hlaseq()
+    
+    for amino in hla[df['allele']]:
+        if amino in hash_data.columns:
+            for target in df['Peptide seq']:
+                if target == '*' or target == 'X' or target == 'U':
+                    hash_data_list.append(0)
+                else:
+                    hash_data_list.append(hash_data[amino][target])
+        else:
+            for target in df['Peptide seq']:
+                hash_data_list.append(0)
+    
+    if 'HLA-A' in df['allele'] and len(df['Peptide seq'])==9:
+        matrix = np.array(hash_data_list).reshape(1,276,9).astype('float32')
+    elif 'HLA-B' in df['allele'] and len(df['Peptide seq'])==9:
+        matrix = np.array(hash_data_list).reshape(1,252,9).astype('float32')
+    elif 'HLA-C' in df['allele'] and len(df['Peptide seq'])==9:
+        matrix = np.array(hash_data_list).reshape(1,268,9).astype('float32')
+    elif 'HLA-A' in df['allele'] and len(df['Peptide seq'])==10:
+        matrix = np.array(hash_data_list).reshape(1,276,10).astype('float32')
+    elif 'HLA-B' in df['allele'] and len(df['Peptide seq'])==10:
+        matrix = np.array(hash_data_list).reshape(1,252,10).astype('float32')
+    elif 'HLA-C' in df['allele'] and len(df['Peptide seq'])==10:
+        matrix = np.array(hash_data_list).reshape(1,268,10).astype('float32')
+    return matrix
+
+
+def make_df(df):
+    df['matrix'] = df.apply(make_matrix_short_hla, axis = 1)
+    return df
+
+
+def use_multicore(df, num_cores = multiprocessing.cpu_count()):
+    df = parallelize_dataframe(df, make_df, num_cores)
+    return df
+
+
+
+def load_short_hlaseq():
+
+    hla_a_prot = pd.read_csv('../HLA_A_prot.txt', sep='\t', header = None)
+    hla_b_prot = pd.read_csv('../HLA_B_prot.txt', sep='\t', header = None)
+    hla_c_prot = pd.read_csv('../HLA_C_prot.txt', sep='\t', header = None)
+    
+    hla_a_prot[1] = hla_a_prot[1].map(lambda x: x[24:-65])
+    hla_c_prot[1] = hla_c_prot[1].map(lambda x: x[4:-66])
+    hla_b_prot[1] = hla_b_prot[1].map(lambda x: x[12:-62])
+    
+    hla_prot = pd.concat([hla_a_prot, hla_b_prot, hla_c_prot], axis = 0)
+    hla = {}
+    for line in hla_prot.to_numpy():
+        hla[line[0]] = line[1]
+        
+    return hla
+
+
+def load_hlaseq():
+
+    hla_a_prot = pd.read_csv('../data/need/HLA_A_prot.txt', sep='\t', header = None)
+    hla_b_prot = pd.read_csv('../data/need/HLA_B_prot.txt', sep='\t', header = None)
+    hla_c_prot = pd.read_csv('../data/need/HLA_C_prot.txt', sep='\t', header = None)
+    hla_prot = pd.concat([hla_a_prot, hla_b_prot, hla_c_prot], axis = 0)
+
+    hla = {}
+    for line in hla_prot.to_numpy():
+        hla[line[0]] = line[1]
+        
+    return hla
+
+
+def make_matrix_short_hla(df):
+    # Ìï¥ÏãúÍ∞í Î∂àÎü¨Ïò§Í∏∞
+    hash_data = pd.read_csv('../data/need/Calpha.txt', sep='\t')
+    hash_data.set_index(hash_data['Unnamed: 0'], inplace=True)
+    # Î∂àÌïÑÏöîÌïú ÏπºÎüº Ï†ïÎ¶¨
+    del hash_data['Unnamed: 0']
+    hash_data = np.exp(-1*hash_data)
+       
+    hash_data_list = []
+    hla = load_short_hlaseq()
+    
+    for amino in hla[df['allele']]:
+        if amino in hash_data.columns:
+            for target in df['Peptide seq']:
+                if target == '*' or target == 'X' or target == 'U':
+                    hash_data_list.append(0)
+                else:
+                    hash_data_list.append(hash_data[amino][target])
+        else:
+            for target in df['Peptide seq']:
+                hash_data_list.append(0)
+    
+    if 'HLA-A' in df['allele'] and len(df['Peptide seq'])==9:
+        matrix = np.array(hash_data_list).reshape(1,276,9).astype('float32')
+    elif 'HLA-B' in df['allele'] and len(df['Peptide seq'])==9:
+        matrix = np.array(hash_data_list).reshape(1,252,9).astype('float32')
+    elif 'HLA-C' in df['allele'] and len(df['Peptide seq'])==9:
+        matrix = np.array(hash_data_list).reshape(1,268,9).astype('float32')
+    elif 'HLA-A' in df['allele'] and len(df['Peptide seq'])==10:
+        matrix = np.array(hash_data_list).reshape(1,276,10).astype('float32')
+    elif 'HLA-B' in df['allele'] and len(df['Peptide seq'])==10:
+        matrix = np.array(hash_data_list).reshape(1,252,10).astype('float32')
+    elif 'HLA-C' in df['allele'] and len(df['Peptide seq'])==10:
+        matrix = np.array(hash_data_list).reshape(1,268,10).astype('float32')
+    
+    return matrix
+
+
+# ÌïôÏäµÏãúÏºúÎÜìÏùÄ Î™®Îç∏ÏùÑ Î∂àÎü¨Ïò§Îäî Ìï®Ïàò Ï†ïÏùò
+def load_multiple_model(filedir, datatype):
+    model_path_list = [f'{filedir}/{file}' for file in os.listdir(filedir) if "best" in file]
+    print(model_path_list)
+    globals()['model_list_' + datatype] = []
+    # estimators = []
+    for i in range(len(model_path_list)):
+        checkpoint = torch.load(model_path_list[i], map_location='cpu')
+        globals()[datatype + '_fold' + str(i)] = checkpoint['model']
+        globals()[datatype + '_fold' + str(i)].load_state_dict(checkpoint['state_dict'])
+        globals()['model_list_'+datatype].append(globals()[datatype + '_fold' + str(i)])
+    
+    return globals()['model_list_'+datatype]
+
+def predict(model_name, df):
+    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
+    BATCH_SIZE = 1024
+    matrix = []
+    for i in df['matrix']:
+        matrix.append(i)
+
+    matrix = np.array(matrix).astype('float32')
+    dataset = torch.utils.data.TensorDataset(torch.tensor(matrix))
+    test_loader = torch.utils.data.DataLoader(dataset, batch_size=BATCH_SIZE)
+
+    model = model_name.to(device)
+    model.eval()
+    preds_list = []
+    probs_list = []
+    with torch.no_grad():
+        for matrix in tqdm(test_loader):
+            matrix = torch.as_tensor(matrix[0], device=device, dtype=torch.float32)
+            preds = model(matrix)
+            probs_list.extend(preds.cpu().tolist())
+            preds = torch.softmax(preds, dim=1)
+            preds_list.extend(preds.cpu().tolist())
+
+    return np.array(probs_list)
+
+# ÏòàÏ∏°Í∞íÏùÑ ensembleÌïòÎäî Ìï®Ïàò Ï†ïÏùò
+def ensemble_5fold(model_list, df):
+    predict_list = []
+    for model in model_list:
+        prediction = predict(model_name=model, df=df)
+        predict_list.append(prediction)
+    ensemble = (predict_list[0] + predict_list[1] + predict_list[2] + predict_list[3] + predict_list[4])/len(predict_list)
+
+    return ensemble
+
+
+
+# test datasetÏùÑ ÎßåÎìúÎäî Ìï®Ïàò Ï†ïÏùò
+def prepare_test_dataset(df, dataset_mode):
+    df['length'] = df['Peptide_seq'].map(lambda x: len(x))
+    df_A = df[df['allele'].str.contains('HLA-A')]
+    df_B = df[df['allele'].str.contains('HLA-B')]
+    df_C = df[df['allele'].str.contains('HLA-C')]
+
+    globals()[dataset_mode + '_A_9'] = df_A[df_A['length']==9]
+    globals()[dataset_mode + '_A_10'] = df_A[df_A['length']==10]
+    globals()[dataset_mode + '_B_9'] = df_B[df_B['length']==9]
+    globals()[dataset_mode + '_B_10']= df_B[df_B['length']==10]
+    globals()[dataset_mode + '_C_9'] = df_C[df_C['length']==9]
+    globals()[dataset_mode + '_C_10'] = df_C[df_C['length']==10]
+    
+    return globals()[dataset_mode + '_A_9'], globals()[dataset_mode + '_A_10'], globals()[dataset_mode + '_B_9'], globals()[dataset_mode + '_B_10'], globals()[dataset_mode + '_C_9'], globals()[dataset_mode + '_C_10']
+
+def peptide_seq(df):
+    df_answer1 = df[df['answer']==1]
+    df_answer1_len9 = df_answer1[df_answer1['length']==9]
+    df_answer1_len10 = df_answer1[df_answer1['length']==10]
+    
+    peptide_len9 = list(df_answer1_len9['Peptide seq'])
+    peptide_len10 = list(df_answer1_len10['Peptide seq'])
+
+    return peptide_len9, peptide_len10
+
+
+class LoadingModel():
+    """
+    Model Î∂àÎü¨Ïò§Îäî ÌÅ¥ÎûòÏä§ ÎßåÎì§Í∏∞
+    """
+    # filedir_list = []
+
+    def __init__(self, _args):
+        self._path = _args.path
+        self._filedir_list = []
+        self._bs = _args.batch_size
+    def __repr__(self):
+        return 'Model Saved path : {}'.format(self._path)
+        
+    def set_saved_dir(self):
+        os.chdir(self._path)
+        self._filedir_list = []
+        self._filedir_list = [f'{self._path}/{i}' for i in os.listdir()]
+        self._filedir_list.sort()
+        return self._filedir_list
+
+    def loading_model(self):
+        for idx, filedir in enumerate(self._filedir_list):
+            filedir_found = re.search('HLA-(.+?)_bs', filedir).group(1)
+            print(filedir_found)
+            globals()[f'model_list_{filedir_found}_bs{self._bs}'] = load_multiple_model(filedir, filedir_found)
+
+        return globals()[f'model_list_{filedir_found}_bs{self._bs}'] 
+
+class AttrDict(dict):
+    def __init__(self, *args, **kwargs):
+        super(AttrDict, self).__init__(*args, **kwargs)
+        self.__dict__ = self
+
+
diff --git a/code/evaluation.py b/code/evaluation.py
new file mode 100644
index 0000000..905f3d8
--- /dev/null
+++ b/code/evaluation.py
@@ -0,0 +1,63 @@
+import torch
+
+from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score
+from tqdm import tqdm
+import numpy as np
+import sklearn
+import os 
+def load_multiple_model(filedir, datatype):
+    model_path_list = [f'{filedir}/{file}' for file in os.listdir(filedir) if "best" in file]
+    print(model_path_list)
+    globals()['model_list_' + datatype] = []
+    # estimators = []
+    for i in range(len(model_path_list)):
+        checkpoint = torch.load(model_path_list[i], map_location='cpu')
+        globals()[datatype + '_fold' + str(i)] = checkpoint['model']
+        globals()[datatype + '_fold' + str(i)].load_state_dict(checkpoint['state_dict'])
+        globals()['model_list_'+datatype].append(globals()[datatype + '_fold' + str(i)])
+    
+    return globals()['model_list_'+datatype]
+
+
+def predict_model(model_name, df, matrix_name):
+    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
+    BATCH_SIZE = 1024
+    matrix = []
+    for i in df[matrix_name]:
+        matrix.append(i)
+
+    matrix = np.array(matrix).astype('float64')
+    dataset = torch.utils.data.TensorDataset(torch.tensor(matrix))
+    test_loader = torch.utils.data.DataLoader(dataset, batch_size=BATCH_SIZE)
+
+    model = model_name.to(device)
+    model.eval()
+    preds_list = []
+    probs_list = []
+    with torch.no_grad():
+        for matrix in tqdm(test_loader):
+            matrix = torch.as_tensor(matrix[0], device=device, dtype=torch.float32)
+            preds = model(matrix)
+            probs_list.extend(preds.cpu().tolist())
+            preds = torch.softmax(preds, dim=1)
+            preds_list.extend(preds.cpu().tolist())
+
+    return np.array(probs_list)
+
+def ensemble_5fold(model_list, df, matrix_name):
+    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
+    predict_list = []
+    for model in model_list:
+        prediction = predict_model(model_name=model, df=df, matrix_name=matrix_name)
+        predict_list.append(prediction)
+    ensemble = (predict_list[0] + predict_list[1] + predict_list[2] + predict_list[3] + predict_list[4])/len(predict_list)
+    return ensemble
+
+def ensemble(modelname, df):
+    ensemble = ensemble_5fold(modelname, df, 'matrix')
+
+    df['probs'] = ensemble
+    if 'answer' in df.columns :
+        df['answer'] = df['answer'].apply(lambda x: int(x)) 
+        auc = sklearn.metrics.roc_auc_score(df['answer'], df[f'probs'])
+        return auc
\ No newline at end of file
diff --git a/code/phospho_preprocessing.py b/code/phospho_preprocessing.py
new file mode 100644
index 0000000..9cee016
--- /dev/null
+++ b/code/phospho_preprocessing.py
@@ -0,0 +1,142 @@
+from collections import namedtuple
+import pandas as pd
+import numpy as np
+# Ïó¨Í∏∞ÏÑúÎ∂ÄÌÑ∞ ÌïòÎ©¥Îê®
+import sys
+sys.path.append('/home/hb/python/phospho/code/module')
+import pandas as pd
+import numpy as np
+from sklearn import datasets
+import torch.utils.data as data_utils
+from sklearn.model_selection import train_test_split
+import torch
+from torch import nn
+from torch.nn import functional as F
+import pickle
+
+def prepare_dataset(dataset_mode):
+    
+    if dataset_mode == 'kincnn1':
+        
+        df = pd.read_pickle("/home/hb/python/phospho/data/required/0308_final_train_test/train1.pkl")
+        print(df.iloc[-1:])
+    elif dataset_mode == 'kincnn2':
+        
+        df = pd.read_pickle("/home/hb/python/phospho/data/required/0308_final_train_test/train2.pkl")
+        print(df.iloc[-1:])
+    elif dataset_mode == 'kincnn3':
+        
+        df = pd.read_pickle("/home/hb/python/phospho/data/required/0308_final_train_test/train3.pkl")
+        print(df.iloc[-1:])
+    elif dataset_mode == 'kincnn4':
+        
+        df = pd.read_pickle("/home/hb/python/phospho/data/required/0308_final_train_test/train4.pkl")
+        print(df.iloc[-1:])
+    # elif dataset_mode == 'transfer_learning_5':
+        
+    #     df = pd.read_pickle("/home/hb/python/phospho/data/required/0308_final_train_test/train5.pkl")
+    #     print(df.iloc[-1:])
+    #     # [f'{x}-{y}' for x, y in zip(train['kin_id'], train['answer'])]
+    df = df.sample(frac=1, random_state=42).reset_index(drop=True)
+    # df['stratify'] Ïª¨ÎüºÏùò unique valueÍ∞Ä 1Ïù∏ Í∞íÎì§ÏùÄ df_Î°ú Îî∞Î°ú ÎπºÍ≥†, ÎÇòÎ®∏ÏßÄÎäî dfÎ°ú
+    # df['stratify'].value_counts() : df['stratify'] Ïª¨ÎüºÏùò unique valueÎì§ÏùÑ countÌï¥Ï£ºÎäî Ìï®Ïàò
+    # [df['stratify'].value_counts()==1].index.tolist() : df['stratify'] Ïª¨ÎüºÏóêÏÑú unique valueÍ∞Ä 1Ïù∏ indexÎßå Î¶¨Ïä§Ìä∏Î°ú Ï∂îÏ∂ú
+    df['stratify'] = df.apply(lambda x: x['kin_id'] + '-' + str(x['answer']), axis=1)
+    df_ = df[df['stratify'].isin(df['stratify'].value_counts()[df['stratify'].value_counts()==1].index.tolist())]
+    df = df[~df['stratify'].isin(df['stratify'].value_counts()[df['stratify'].value_counts()==1].index.tolist())]
+
+# df['matrix']Îäî pandas.series typeÏù¥ÎØÄÎ°ú listÌòïÌÉúÎ°ú Î∞îÍøîÏ§ÄÎã§.
+    matrix = np.array([x for x in df['matrix']], dtype=np.float32)
+    
+# answerÏóê df['answer']Ïùò Í∞íÏùÑ listÌòïÌÉúÎ°ú ÎÑ£Ïñ¥Ï§ÄÎã§
+    answer = list(df['answer'].astype('int'))
+
+# ÏïÑÍπå Îî∞Î°ú Îó¥Ïñ¥ÎÜ®Îçò df_Ïóê ÎåÄÌï¥ÏÑúÎèÑ ÎòëÍ∞ôÏù¥ matrix_Î•º ÎßåÏñ¥Ï§ÄÎã§.
+    matrix_ = np.array([x for x in df_['matrix']], dtype=np.float32)
+    answer_ = list(df_['answer'].astype('int'))
+    
+    # matrix = np.concatenate([matrix, matrix_])
+    # answer = np.concatenate([answer, answer_])
+    
+    # dataset = data_utils.TensorDataset(torch.tensor(matrix), torch.tensor(answer))
+    # return dataset
+    # answer = np.array(answer, dtype=np.int64)
+    # answer_ = np.array(answer_, dtype=np.int64) 
+    # print(matrix.shape, answer.shape)
+    xTrain, xTest, yTrain, yTest = train_test_split(matrix, 
+                                                    answer, 
+                                                    test_size=0.2, 
+                                                    random_state=42,
+                                                stratify=df['stratify'])
+    try:
+        xTrain = np.concatenate([xTrain, matrix_])
+        yTrain = np.concatenate([yTrain, answer_])
+    except:
+        pass
+    # print(type(yTrain[0]))
+    print(yTrain)
+    counts = np.bincount(yTrain)
+    print('Number of positive samples in training data: {} ({:.2f}% of total)'.format(counts[1], 100 * float(counts[1]) / len(yTrain)))
+    counts = np.bincount(yTest)
+    print('Number of positive samples in validation data: {} ({:.2f}% of total)'.format(counts[1], 100 * float(counts[1]) / len(yTest))) # counts[1] : answer = 1 Ïù∏ Í∞í
+    # globals()['counts'] = counts
+    # BATCH_SIZE = batch_size
+    train_set = data_utils.TensorDataset(torch.tensor(xTrain), torch.tensor(yTrain))
+    valid_set = data_utils.TensorDataset(torch.tensor(xTest), torch.tensor(yTest))
+
+    return train_set, valid_set
+
+    # elif dataset_mode == 'pretrain_nonrepl':
+    #     # df_nonreplicated = pd.read_pickle("/home/hb/python/phospho/data/atlas/ats_nonreplicated_with_psph.pkl")
+    #     # # with open("/home/hb/python/phospho/data/atlas/matrix_0595.pickle", 'rb') as f:
+    #     #     # matrix = pickle.load(f)
+    #     # # with open("/home/hb/python/phospho/data/atlas/label_0595.pickle", 'rb') as f:
+    #     #     # label = pickle.load(f)
+    #     # matrix = df_nonreplicated['matrix'].to_list()
+    #     # matrix = np.array([x for x in matrix], dtype=np.float32)
+    #     # answer = df_nonreplicated['answer'].to_numpy().astype(int)
+    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_mtx_nonrepl_with_psph.pkl", 'rb') as f:
+    #         matrix = pickle.load(f)
+    #     print('matrix loaded!')
+    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_ans_nonrepl_with_psph.pkl", 'rb') as f:
+    #         label = pickle.load(f)
+    #     print('label loaded!')
+    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix, 
+    #                                                     label, 
+    #                                                     test_size=0.2, 
+    #                                                     random_state=42,)
+                                                            
+    #     train_set = data_utils.TensorDataset(
+    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+    #     valid_set = data_utils.TensorDataset(
+    #                             torch.tensor(xTest), torch.tensor(yTest))
+    #     print('train_set loaded! :',len(train_set))
+    #     print('valid_set loaded! :', len(valid_set))
+        
+    # elif dataset_mode == 'pretrain_1090':
+    #     with open("/home/hb/python/phospho/data/atlas/1090/matrix1090.pkl", 'rb') as f:
+    #         matrix = pickle.load(f)
+    #     print('matrix loaded!')
+    #     with open("/home/hb/python/phospho/data/atlas/1090/label1090.pkl", 'rb') as f:
+    #         label = pickle.load(f)
+    #     print('label loaded!')
+    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix, 
+    #                                                     label, 
+    #                                                     test_size=0.2, 
+    #                                                     random_state=42,)
+                                                            
+    #     train_set = data_utils.TensorDataset(
+    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+    #     valid_set = data_utils.TensorDataset(
+    #                             torch.tensor(xTest), torch.tensor(yTest))
+    #     print('train_set loaded! :',len(train_set))
+    #     print('valid_set loaded! :', len(valid_set))
+        
+        
+    # return train_set, valid_set  
+
+class AttrDict(dict):
+    def __init__(self, *args, **kwargs):
+        super(AttrDict, self).__init__(*args, **kwargs)
+        self.__dict__ = self
+config = AttrDict()
\ No newline at end of file
diff --git a/code/precision_recall.py b/code/precision_recall.py
new file mode 100644
index 0000000..5910978
--- /dev/null
+++ b/code/precision_recall.py
@@ -0,0 +1,83 @@
+
+import torch
+
+def precision_recall(y_true, y_pred):
+    '''Calculate F1 score. Can work with gpu tensors
+    
+    The original implmentation is written by Michal Haltuf on Kaggle.
+    
+    Returns
+    -------
+    torch.Tensor
+        `ndim` == 1. epsilon <= val <= 1
+    
+    Reference
+    ---------
+    - https://www.kaggle.com/rejpalcz/best-loss-function-for-f1-score-metric
+    - https://scikit-learn.org/stable/modules/generated/sklearn.metrics.f1_score.html#sklearn.metrics.f1_score
+    - https://discuss.pytorch.org/t/calculating-precision-recall-and-f1-score-in-case-of-multi-label-classification/28265/6
+    - http://www.ryanzhang.info/python/writing-your-own-loss-function-module-for-pytorch/
+    '''
+
+    tp = (y_true * y_pred).sum().to(torch.float32)
+    tn = ((1 - y_true) * (1 - y_pred)).sum().to(torch.float32)
+    fp = ((1 - y_true) * y_pred).sum().to(torch.float32)
+    fn = (y_true * (1 - y_pred)).sum().to(torch.float32)
+    
+    epsilon = 1e-7
+    
+    precision = tp / (tp + fp + epsilon)
+    recall = tp / (tp + fn + epsilon)
+    
+    f1 = 2 * (precision*recall) / (precision + recall + epsilon)
+
+    return precision, recall, f1
+
+
+
+# def epoch_record(fold, mode, loss_, dataset_sizes, precision_, recall_, f1_, corrects_):
+    
+#     if mode == 'train': 
+#         epoch_train_loss = loss_ / dataset_sizes[f'train']
+#         epoch_train_precision = precision_ / dataset_sizes[f'train']
+#         epoch_train_recall = recall_ / dataset_sizes[f'train']
+#         epoch_train_f1 = f1_ / dataset_sizes[f'train']
+#         epoch_train_acc = corrects_ / dataset_sizes[f'train']
+#         print(f'''train Loss: {epoch_train_loss:.4f} Acc: {epoch_train_acc:.4f} 
+#             F1: {epoch_train_f1:.4f} Precision: {epoch_train_precision:.4f} Recall: {epoch_train_recall:.4f}''')
+            
+#         return epoch_train_loss, epoch_train_acc, epoch_train_f1, epoch_train_precision, epoch_train_recall
+
+#     else:
+#         epoch_val_loss = loss_ / dataset_sizes[f'valid']
+#         epoch_val_precision = precision_ / dataset_sizes[f'valid']
+#         epoch_val_recall = recall_ / dataset_sizes[f'valid']
+#         epoch_val_f1 = f1_ / dataset_sizes[f'valid']
+#         epoch_val_acc = corrects_ / dataset_sizes[f'valid']
+#         globals()[f'{fold}_result'].append(epoch_val_loss)
+#         print(f'''valid Loss: {epoch_val_loss:.4f} Acc: {epoch_val_acc:.4f} 
+#             F1: {epoch_val_f1:.4f} Precision: {epoch_val_precision:.4f} Recall: {epoch_val_recall:.4f}''')
+
+#         return epoch_train_loss, epoch_val_loss, epoch_train_acc, epoch_val_acc, epoch_train_f1, epoch_val_f1, epoch_train_precision, epoch_val_precision, epoch_train_recall, epoch_val_recall
+
+
+# def epoch_best_record(loss_, dataset_sizes, precision_, recall_, f1_, corrects_):
+#     epoch_train_loss = loss_ / dataset_sizes
+#     epoch_train_precision = precision_ / dataset_sizes
+#     epoch_train_recall = recall_ / dataset_sizes
+#     epoch_train_f1 = f1_ / dataset_sizes
+#     epoch_train_acc = corrects_ / dataset_sizes
+#     print(f'''train Loss: {epoch_train_loss:.4f} Acc: {epoch_train_acc:.4f} 
+#     F1: {epoch_train_f1:.4f} Precision: {epoch_train_precision:.4f} Recall: {epoch_train_recall:.4f}''')
+
+    
+#     return epoch_train_loss, epoch_train_acc, epoch_train_f1, epoch_train_precision,  epoch_train_recall
+
+
+
+# # epochÎßàÎã§ ÏïÑÎûò Ï†ïÎ≥¥Î•º Ï∂úÎ†•
+#     writer.add_scalars('Loss' , {f'train_{fold}':epoch_train_loss, f'validation_{fold}':epoch_val_loss}, epoch)
+#     writer.add_scalars('Accuracy' , {f'train_{fold}':epoch_train_acc, f'validation_{fold}':epoch_val_acc},  epoch)
+#     writer.add_scalars('F1' , {f'train_{fold}':epoch_train_f1, f'validation_{fold}':epoch_val_f1},  epoch)
+#     writer.add_scalars('precision' , {f'train_{fold}':epoch_train_precision, f'validation_{fold}':epoch_val_precision},  epoch)
+#     writer.add_scalars('recall' , {f'train_{fold}':epoch_train_recall, f'validation_{fold}':epoch_val_recall},  epoch)
diff --git a/prepare_dataset.py b/code/prepare_dataset.py
similarity index 98%
rename from prepare_dataset.py
rename to code/prepare_dataset.py
index 5350a37..51df11a 100644
--- a/prepare_dataset.py
+++ b/code/prepare_dataset.py
@@ -8,7 +8,7 @@ from sklearn.model_selection import train_test_split
 
 
 def prepare_dataset(dataset_mode=None):
-    df = pd.read_pickle("test1.pkl")
+    df = pd.read_pickle("/home/hb/python/phospho/data/required/0308_final_train_test/train1.pkl")
     df = df.sample(frac=1, random_state=42).reset_index(drop=True)
     # df['stratify'] Ïª¨ÎüºÏùò unique valueÍ∞Ä 1Ïù∏ Í∞íÎì§ÏùÄ df_Î°ú Îî∞Î°ú ÎπºÍ≥†, ÎÇòÎ®∏ÏßÄÎäî dfÎ°ú
     # df['stratify'].value_counts() : df['stratify'] Ïª¨ÎüºÏùò unique valueÎì§ÏùÑ countÌï¥Ï£ºÎäî Ìï®Ïàò
diff --git a/gpu_0.sh b/gpu_0.sh
new file mode 100755
index 0000000..a903d1f
--- /dev/null
+++ b/gpu_0.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-B 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural Normalize 512 500 1e-3 5 7 0.5 25 
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 10 Natural Normalize 512 500 1e-3 5 7 0.5 25
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural Normalize 512 500 1e-3df_test_st 5 7 0.5 25 
+#     config.gpu_num = sys.argv[1]
+#     config.batch_size = int(sys.argv[2])
+#     config.n_epoch = int(sys.argv[3])
+#     config.defalut_learning_rate = float(sys.argv[4])
+#     config.fold_num = int(sys.argv[5])
+#     config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+#     config.erls_patience = int(sys.argv[8])
+#     config.dataset = sys.argv[9]
+#     config.pretrain_fold_num = sys.argv[10]
+#     config.model = f'efficientnet-phospho-B-15'
+#     config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+python3 /home/hb/python/efficientnet_kincnn/DeepPhospho.py 0 1024 500 1e-3 5 7 0.7 50 kincnn1 0
+
+
diff --git a/gpu_1.sh b/gpu_1.sh
new file mode 100755
index 0000000..17d2aab
--- /dev/null
+++ b/gpu_1.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-B 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural Normalize 512 500 1e-3 5 7 0.5 25 
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 10 Natural Normalize 512 500 1e-3 5 7 0.5 25
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural Normalize 512 500 1e-3df_test_st 5 7 0.5 25 
+#     config.gpu_num = sys.argv[1]
+#     config.batch_size = int(sys.argv[2])
+#     config.n_epoch = int(sys.argv[3])
+#     config.defalut_learning_rate = float(sys.argv[4])
+#     config.fold_num = int(sys.argv[5])
+#     config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+#     config.erls_patience = int(sys.argv[8])
+#     config.dataset = sys.argv[9]
+#     config.pretrain_fold_num = sys.argv[10]
+#     config.model = f'efficientnet-phospho-B-15'
+#     config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+python3 /home/hb/python/efficientnet_kincnn/DeepPhospho2.py 2 512 500 1e-3 5 7 0.7 50 kincnn2 0
+
+
diff --git a/gpu_2.sh b/gpu_2.sh
new file mode 100755
index 0000000..1f6c054
--- /dev/null
+++ b/gpu_2.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-B 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural Normalize 512 500 1e-3 5 7 0.5 25 
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 10 Natural Normalize 512 500 1e-3 5 7 0.5 25
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural Normalize 512 500 1e-3df_test_st 5 7 0.5 25 
+#     config.gpu_num = sys.argv[1]
+#     config.batch_size = int(sys.argv[2])
+#     config.n_epoch = int(sys.argv[3])
+#     config.defalut_learning_rate = float(sys.argv[4])
+#     config.fold_num = int(sys.argv[5])
+#     config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+#     config.erls_patience = int(sys.argv[8])
+#     config.dataset = sys.argv[9]
+#     config.pretrain_fold_num = sys.argv[10]
+#     config.model = f'efficientnet-phospho-B-15'
+#     config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+python3 /home/hb/python/efficientnet_kincnn/DeepPhospho3.py 2 1024 500 1e-3 5 7 0.7 50 kincnn3 0
+
+
diff --git a/gpu_3.sh b/gpu_3.sh
new file mode 100755
index 0000000..e44751e
--- /dev/null
+++ b/gpu_3.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-B 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural log 512 500 1e-3 5 7 0.5 25 
+
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 9 Natural Normalize 512 500 1e-3 5 7 0.5 25 
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-A 10 Natural Normalize 512 500 1e-3 5 7 0.5 25
+
+# python /home/hb/neoantigen/code/DeepNeo_.py 0 HLA-C 9 Natural Normalize 512 500 1e-3df_test_st 5 7 0.5 25 
+#     config.gpu_num = sys.argv[1]
+#     config.batch_size = int(sys.argv[2])
+#     config.n_epoch = int(sys.argv[3])
+#     config.defalut_learning_rate = float(sys.argv[4])
+#     config.fold_num = int(sys.argv[5])
+#     config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+#     config.erls_patience = int(sys.argv[8])
+#     config.dataset = sys.argv[9]
+#     config.pretrain_fold_num = sys.argv[10]
+#     config.model = f'efficientnet-phospho-B-15'
+#     config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+python3 /home/hb/python/efficientnet_kincnn/DeepPhospho4.py 3 1024 500 1e-3 5 7 0.7 50 kincnn4 0
+
+
diff --git a/kincnn.py b/kincnn.py
index 7f518f0..eb8e344 100644
--- a/kincnn.py
+++ b/kincnn.py
@@ -7,9 +7,9 @@ import torch
 from torch import nn
 from torch.nn import functional as F
 
-from utils import (Conv2dStaticSamePadding, MemoryEfficientSwish, Swish,
-                   calculate_output_image_size, drop_connect,
-                   efficientnet_params, get_model_params,
+from utils import (Conv2dStaticSamePadding, MaxPool2dStaticSamePadding,
+                   MemoryEfficientSwish, Swish, calculate_output_image_size,
+                   drop_connect, efficientnet_params, get_model_params,
                    get_same_padding_conv2d, load_pretrained_weights,
                    round_filters, round_repeats)
 
@@ -45,8 +45,12 @@ class MBConvBlock(nn.Module):
         )  # number of output channels
         if self._block_args.expand_ratio != 1:
             Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+            MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
             self._expand_conv = Conv2d(
-                in_channels=inp, out_channels=oup, kernel_size=1, bias=False
+                in_channels=inp,
+                out_channels=oup,
+                kernel_size=1,
+                bias=False,  # kernel_size Í±¥ÎìúÎ¶¨ÏßÄ ÎßêÍ∏∞
             )
             self._bn0 = nn.BatchNorm2d(
                 num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
@@ -54,21 +58,27 @@ class MBConvBlock(nn.Module):
             # image_size = calculate_output_image_size(image_size, 1) <-- this wouldn't modify image_size
 
         # Depthwise convolution phase
-        k = self._block_args.kernel_size
-        s = self._block_args.stride
+        ck = self._block_args.conv_kernel_size
+        pk = self._block_args.pool_kernel_size
+        cs = self._block_args.conv_stride
+        ps = self._block_args.pool_stride
         Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
         self._depthwise_conv = Conv2d(
             in_channels=oup,
             out_channels=oup,
             groups=oup,  # groups makes it depthwise
-            kernel_size=k,
-            stride=s,
+            kernel_size=ck,
+            stride=cs,
             bias=False,
         )
+        image_size = calculate_output_image_size(image_size, cs)
         self._bn1 = nn.BatchNorm2d(
             num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
         )
-        image_size = calculate_output_image_size(image_size, s)
+        if pk:
+            self._depthwise_max_pooling = MaxPool2d(kernel_size=pk, stride=ps)
+            image_size = calculate_output_image_size(image_size, ps)
 
         # Squeeze and Excitation layer, if desired
         if self.has_se:
@@ -104,24 +114,26 @@ class MBConvBlock(nn.Module):
         # Expansion and Depthwise Convolution
         x = inputs
         if self._block_args.expand_ratio != 1:
-            x = self._expand_conv(inputs)
+            x = self._expand_conv(inputs)  # 1
             x = self._bn0(x)
             x = self._swish(x)
 
-        x = self._depthwise_conv(x)
+        x = self._depthwise_conv(x)  # 2
         x = self._bn1(x)
+        if self._block_args.pool_kernel_size:
+            x = self._depthwise_max_pooling(x)
         x = self._swish(x)
 
         # Squeeze and Excitation
         if self.has_se:
             x_squeezed = F.adaptive_avg_pool2d(x, 1)
-            x_squeezed = self._se_reduce(x_squeezed)
+            x_squeezed = self._se_reduce(x_squeezed)  # 3
             x_squeezed = self._swish(x_squeezed)
-            x_squeezed = self._se_expand(x_squeezed)
+            x_squeezed = self._se_expand(x_squeezed)  # 4
             x = torch.sigmoid(x_squeezed) * x
 
         # Pointwise Convolution
-        x = self._project_conv(x)
+        x = self._project_conv(x)  # 5
         x = self._bn2(x)
 
         # Skip connection and drop connect
@@ -131,7 +143,7 @@ class MBConvBlock(nn.Module):
         )
         if (
             self.id_skip
-            and self._block_args.stride == 1
+            and self._block_args.conv_stride == 1
             and input_filters == output_filters
         ):
             # The combination of skip connection and drop connect brings about stochastic depth.
@@ -173,19 +185,31 @@ class EfficientNet(nn.Module):
         # Get static or dynamic convolution depending on image size
         image_size = global_params.image_size
         Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
 
         # Stem
-        in_channels = 1  # rgb # Ïù¥ Î∂ÄÎ∂Ñ ÏàòÏ†ïÌñàÏùå
-        out_channels = round_filters(
-            3, self._global_params
-        )  # number of output channels
+        in_channels = 1  
+        out_channels = 8
+        conv_kernel_size = (3, 1)
+        conv_stride_size = (1, 1)
+        pool_kernel_size = (2, 1)
+        pool_stride_size = pool_kernel_size
+
+        # out_channels = round_filters(
+        #     3, self._global_params
+        # )  # number of output channels
         self._conv_stem = Conv2d(
-            in_channels, out_channels, kernel_size=(15, 1), stride=(2, 1), bias=False
+            in_channels, out_channels, kernel_size=conv_kernel_size, stride=conv_stride_size, bias=False
         )
         self._bn0 = nn.BatchNorm2d(
             num_features=out_channels, momentum=bn_mom, eps=bn_eps
         )
-        image_size = calculate_output_image_size(image_size, stride=2)
+        image_size = calculate_output_image_size(image_size, stride=conv_stride_size)  # ! TODO
+        if pool_kernel_size:
+            self._max_pooling = MaxPool2d(kernel_size=pool_kernel_size, stride=pool_stride_size)
+            image_size = calculate_output_image_size(image_size, stride=pool_stride_size)
+        else:
+            self._max_pooling = None
 
         # Build blocks
         self._blocks = nn.ModuleList([])
@@ -195,7 +219,6 @@ class EfficientNet(nn.Module):
                 input_filters=round_filters(
                     block_args.input_filters, self._global_params
                 ),
-                # input_filters=8,
                 output_filters=round_filters(
                     block_args.output_filters, self._global_params
                 ),
@@ -206,10 +229,10 @@ class EfficientNet(nn.Module):
             self._blocks.append(
                 MBConvBlock(block_args, self._global_params, image_size=image_size)
             )
-            image_size = calculate_output_image_size(image_size, block_args.stride)
+            image_size = calculate_output_image_size(image_size, block_args.conv_stride)
             if block_args.num_repeat > 1:  # modify block_args to keep same output size
                 block_args = block_args._replace(
-                    input_filters=block_args.output_filters, stride=1
+                    input_filters=block_args.output_filters, conv_stride=(1, 1)
                 )
             for _ in range(block_args.num_repeat - 1):
                 self._blocks.append(
@@ -221,15 +244,18 @@ class EfficientNet(nn.Module):
         out_channels = round_filters(3, self._global_params)
         # out_channels = round_filters(1280, self._global_params) <-- ÏõêÎ≥∏
         # out_channels = 1280
+        print(image_size[0]*image_size[1]*out_channels)
+        out_features = image_size[0]*image_size[1]*out_channels
         self._conv_head = Conv2d(in_channels, out_channels, kernel_size=1, bias=False)
         self._bn1 = nn.BatchNorm2d(
             num_features=out_channels, momentum=bn_mom, eps=bn_eps
         )
 
         # Final linear layer
-        # self._avg_pooling = nn.AdaptiveAvgPool2d(1) <-- ÏõêÎ≥∏
+        # self._avg_pooling = nn.AdaptiveAvgPool2d(1)  # <-- ÏõêÎ≥∏
+        out_features = image_size[0] * image_size[1] * out_channels
         self._dropout = nn.Dropout(self._global_params.dropout_rate)
-        self._fc = nn.Linear(self.define_last_fcn(), self._global_params.num_classes)
+        self._fc = nn.Linear(out_features, self._global_params.num_classes)
 
         # set activation to memory efficient swish by default
         self._swish = MemoryEfficientSwish()
@@ -311,6 +337,8 @@ class EfficientNet(nn.Module):
         # Stem
         x = self._conv_stem(inputs)
         x = self._bn0(x)
+        if self._max_pooling:
+            x = self._max_pooling(x)
         x = self._swish(x)
 
         # Blocks
@@ -335,14 +363,12 @@ class EfficientNet(nn.Module):
         x = self.extract_features(inputs)
 
         # Pooling and final linear layer
-        x = self._avg_pooling(x)
+        # x = self._avg_pooling(x)
         # x = x.view(bs, -1)
-        # print(x.shape)
 
         x = x.flatten(start_dim=1)
         x = self._dropout(x)
         x = self._fc(x)
-        # print(x.shape)
 
         return torch.sigmoid(x)
 
diff --git a/kincnn2.py b/kincnn2.py
new file mode 100644
index 0000000..3796947
--- /dev/null
+++ b/kincnn2.py
@@ -0,0 +1,392 @@
+"""model.py - Model and module class for EfficientNet.
+   They are built to mirror those in the official TensorFlow implementation.
+"""
+from functools import partial
+
+import torch
+from torch import nn
+from torch.nn import functional as F
+
+from utils2 import (Conv2dStaticSamePadding, MaxPool2dStaticSamePadding,
+                   MemoryEfficientSwish, Swish, calculate_output_image_size,
+                   drop_connect, efficientnet_params, get_model_params,
+                   get_same_padding_conv2d, load_pretrained_weights,
+                   round_filters, round_repeats)
+
+# Author: HongbiKim (github username)
+# Github repo: https://github.com/lukemelas/EfficientNet-PyTorch
+# With adjustments and added comments by workingcoder (github username).
+
+
+class MBConvBlock(nn.Module):
+    """
+    Mobile Inverted Residual Bottleneck Block
+    Args:
+        block_args (namedtuple): BlockArgs, see above
+        global_params (namedtuple): GlobalParam, see above
+    Attributes:
+        has_se (bool): Whether the block contains a Squeeze and Excitation layer.
+    """
+
+    def __init__(self, block_args, global_params, image_size=None):
+        super().__init__()
+        self._block_args = block_args
+        self._bn_mom = 1 - global_params.batch_norm_momentum
+        self._bn_eps = global_params.batch_norm_epsilon
+        self.has_se = (self._block_args.se_ratio is not None) and (
+            0 < self._block_args.se_ratio <= 1
+        )
+        self.id_skip = block_args.id_skip  # skip connection and drop connect
+
+        # Expansion phase (Inverted Bottleneck)
+        inp = self._block_args.input_filters  # number of input channels
+        oup = (
+            self._block_args.input_filters * self._block_args.expand_ratio
+        )  # number of output channels
+        if self._block_args.expand_ratio != 1:
+            Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+            MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+            self._expand_conv = Conv2d(
+                in_channels=inp,
+                out_channels=oup,
+                kernel_size=1,
+                bias=False,  # kernel_size Í±¥ÎìúÎ¶¨ÏßÄ ÎßêÍ∏∞
+            )
+            self._bn0 = nn.BatchNorm2d(
+                num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
+            )
+            # image_size = calculate_output_image_size(image_size, 1) <-- this wouldn't modify image_size
+
+        # Depthwise convolution phase
+        ck = self._block_args.conv_kernel_size
+        pk = self._block_args.pool_kernel_size
+        cs = self._block_args.conv_stride
+        ps = self._block_args.pool_stride
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+        self._depthwise_conv = Conv2d(
+            in_channels=oup,
+            out_channels=oup,
+            groups=oup,  # groups makes it depthwise
+            kernel_size=ck,
+            stride=cs,
+            bias=False,
+        )
+        image_size = calculate_output_image_size(image_size, cs)
+        self._bn1 = nn.BatchNorm2d(
+            num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
+        )
+        if pk:
+            self._depthwise_max_pooling = MaxPool2d(kernel_size=pk, stride=ps)
+            image_size = calculate_output_image_size(image_size, ps)
+
+        # Squeeze and Excitation layer, if desired
+        if self.has_se:
+            Conv2d = get_same_padding_conv2d(image_size=(1, 1))
+            num_squeezed_channels = max(
+                1, int(self._block_args.input_filters * self._block_args.se_ratio)
+            )
+            self._se_reduce = Conv2d(
+                in_channels=oup, out_channels=num_squeezed_channels, kernel_size=1
+            )
+            self._se_expand = Conv2d(
+                in_channels=num_squeezed_channels, out_channels=oup, kernel_size=1
+            )
+
+        # Output phase (Pointwise convolution phase)
+        final_oup = self._block_args.output_filters
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        self._project_conv = Conv2d(
+            in_channels=oup, out_channels=final_oup, kernel_size=1, bias=False
+        )
+        self._bn2 = nn.BatchNorm2d(
+            num_features=final_oup, momentum=self._bn_mom, eps=self._bn_eps
+        )
+        self._swish = MemoryEfficientSwish()
+
+    def forward(self, inputs, drop_connect_rate=None):
+        """
+        :param inputs: input tensor
+        :param drop_connect_rate: drop connect rate (float, between 0 and 1)
+        :return: output of block
+        """
+
+        # Expansion and Depthwise Convolution
+        x = inputs
+        if self._block_args.expand_ratio != 1:
+            x = self._expand_conv(inputs)  # 1
+            x = self._bn0(x)
+            x = self._swish(x)
+
+        x = self._depthwise_conv(x)  # 2
+        # x = partial()
+        x = self._bn1(x)
+        if self._block_args.pool_kernel_size:
+            x = self._depthwise_max_pooling(x)
+        x = self._swish(x)
+
+        # Squeeze and Excitation
+        if self.has_se:
+            x_squeezed = F.adaptive_avg_pool2d(x, 1)
+            x_squeezed = self._se_reduce(x_squeezed)  # 3
+            x_squeezed = self._swish(x_squeezed)
+            x_squeezed = self._se_expand(x_squeezed)  # 4
+            x = torch.sigmoid(x_squeezed) * x
+
+        # Pointwise Convolution
+        x = self._project_conv(x)  # 5
+        x = self._bn2(x)
+
+        # Skip connection and drop connect
+        input_filters, output_filters = (
+            self._block_args.input_filters,
+            self._block_args.output_filters,
+        )
+        if (
+            self.id_skip
+            and self._block_args.conv_stride == 1
+            and input_filters == output_filters
+        ):
+            # The combination of skip connection and drop connect brings about stochastic depth.
+            if drop_connect_rate:
+                x = drop_connect(x, p=drop_connect_rate, training=self.training)
+            x = x + inputs  # skip connection
+        return x
+
+    def set_swish(self, memory_efficient=True):
+        """Sets swish function as memory efficient (for training) or standard (for export).
+
+        Args:
+            memory_efficient (bool): Whether to use memory-efficient version of swish.
+        """
+        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()
+
+
+class EfficientNet(nn.Module):
+    """
+    An EfficientNet model. Most easily loaded with the .from_name or .from_pretrained methods
+    Args:
+        blocks_args (list): A list of BlockArgs to construct blocks
+        global_params (namedtuple): A set of GlobalParams shared between blocks
+    Example:
+        model = EfficientNet.from_pretrained('efficientnet-b0')
+    """
+
+    def __init__(self, blocks_args=None, global_params=None):
+        super().__init__()
+        assert isinstance(blocks_args, list), "blocks_args should be a list"
+        assert len(blocks_args) > 0, "block args must be greater than 0"
+        self._global_params = global_params
+        self._blocks_args = blocks_args
+
+        # Batch norm parameters
+        bn_mom = 1 - self._global_params.batch_norm_momentum
+        bn_eps = self._global_params.batch_norm_epsilon
+
+        # Get static or dynamic convolution depending on image size
+        image_size = global_params.image_size
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+
+        # Stem
+        in_channels = 1  
+        out_channels = round_filters(
+            3, self._global_params
+        )  # number of output channels
+        conv_kernel_size = (3, 1)
+        conv_stride_size = (1, 1)
+        pool_kernel_size = (2, 1)
+        pool_stride_size = pool_kernel_size
+
+        self._conv_stem = Conv2d(
+            in_channels, out_channels, kernel_size=conv_kernel_size, stride=conv_stride_size, bias=False
+        )
+        self._bn0 = nn.BatchNorm2d(
+            num_features=out_channels, momentum=bn_mom, eps=bn_eps
+        )
+        image_size = calculate_output_image_size(image_size, stride=conv_stride_size)  # ! TODO
+        if pool_kernel_size:
+            self._max_pooling = MaxPool2d(kernel_size=pool_kernel_size, stride=pool_stride_size)
+            image_size = calculate_output_image_size(image_size, stride=pool_stride_size)
+        else:
+            self._max_pooling = None
+
+        # Build blocks
+        self._blocks = nn.ModuleList([])
+        for block_args in self._blocks_args:
+            # Update block input and output filters based on depth multiplier.
+            block_args = block_args._replace(
+                input_filters=round_filters(
+                    block_args.input_filters, self._global_params
+                ),
+                output_filters=round_filters(
+                    block_args.output_filters, self._global_params
+                ),
+                num_repeat=round_repeats(block_args.num_repeat, self._global_params),
+            )
+
+            # The first block needs to take care of stride and filter size increase.
+            self._blocks.append(
+                MBConvBlock(block_args, self._global_params, image_size=image_size)
+            )
+            image_size = calculate_output_image_size(image_size, block_args.conv_stride)
+            if block_args.num_repeat > 1:  # modify block_args to keep same output size
+                block_args = block_args._replace(
+                    input_filters=block_args.output_filters, conv_stride=(1, 1)
+                )
+            for _ in range(block_args.num_repeat - 1):
+                self._blocks.append(
+                    MBConvBlock(block_args, self._global_params, image_size=image_size)
+                )
+
+        # Head
+        in_channels = block_args.output_filters  # output of final block
+        out_channels = round_filters(3, self._global_params)
+        out_features = image_size[0]*image_size[1]*out_channels
+        # out_channels = round_filters(1280, self._global_params) <-- ÏõêÎ≥∏
+        # out_channels = 1280
+        self._conv_head = Conv2d(in_channels, out_channels, kernel_size=1, bias=False)
+        self._bn1 = nn.BatchNorm2d(
+            num_features=out_channels, momentum=bn_mom, eps=bn_eps
+        )
+
+        # Final linear layer
+        # self._avg_pooling = nn.AdaptiveAvgPool2d(1)  # <-- ÏõêÎ≥∏
+        self._dropout = nn.Dropout(self._global_params.dropout_rate)
+        self._fc = nn.Linear(out_features, self._global_params.num_classes)
+
+        # set activation to memory efficient swish by default
+        self._swish = MemoryEfficientSwish()
+
+    def set_swish(self, memory_efficient=True):
+        """Sets swish function as memory efficient (for training) or standard (for export).
+
+        Args:
+            memory_efficient (bool): Whether to use memory-efficient version of swish.
+        """
+        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()
+        for block in self._blocks:
+            block.set_swish(memory_efficient)
+
+    def extract_endpoints(self, inputs):
+        """Use convolution layer to extract features
+        from reduction levels i in [1, 2, 3, 4, 5].
+
+        Args:
+            inputs (tensor): Input tensor.
+
+        Returns:
+            Dictionary of last intermediate features
+            with reduction levels i in [1, 2, 3, 4, 5].
+            Example:
+                >>> import torch
+                >>> from efficientnet.model import EfficientNet
+                >>> inputs = torch.rand(1, 3, 224, 224)
+                >>> model = EfficientNet.from_pretrained('efficientnet-b0')
+                >>> endpoints = model.extract_endpoints(inputs)
+                >>> print(endpoints['reduction_1'].shape)  # torch.Size([1, 16, 112, 112])
+                >>> print(endpoints['reduction_2'].shape)  # torch.Size([1, 24, 56, 56])
+                >>> print(endpoints['reduction_3'].shape)  # torch.Size([1, 40, 28, 28])
+                >>> print(endpoints['reduction_4'].shape)  # torch.Size([1, 112, 14, 14])
+                >>> print(endpoints['reduction_5'].shape)  # torch.Size([1, 320, 7, 7])
+                >>> print(endpoints['reduction_6'].shape)  # torch.Size([1, 1280, 7, 7])
+        """
+        endpoints = dict()
+
+        # Stem
+        x = self._swish(self._bn0(self._conv_stem(inputs)))
+        prev_x = x
+
+        # Blocks
+        for idx, block in enumerate(self._blocks):
+            drop_connect_rate = self._global_params.drop_connect_rate
+            if drop_connect_rate:
+                drop_connect_rate *= float(idx) / len(
+                    self._blocks
+                )  # scale drop connect_rate
+            x = block(x, drop_connect_rate=drop_connect_rate)
+            if prev_x.size(2) > x.size(2):
+                endpoints["reduction_{}".format(len(endpoints) + 1)] = prev_x
+            elif idx == len(self._blocks) - 1:
+                endpoints["reduction_{}".format(len(endpoints) + 1)] = x
+            prev_x = x
+
+        # Head
+        x = self._swish(self._bn1(self._conv_head(x)))
+        endpoints["reduction_{}".format(len(endpoints) + 1)] = x
+
+        return endpoints
+
+    def define_last_fcn(self):
+        global allele
+        print(allele)
+        if "phospho-A" in allele:
+            return 132096
+        elif "phospho-B" in allele:
+            return 8448
+        elif "HLA-B" in allele:
+            return 11392
+        elif "HLA-C" in allele:
+            return 6760
+
+    def extract_features(self, inputs):
+        """Returns output of the final convolution layer"""
+
+        # Stem
+        x = self._conv_stem(inputs)
+        x = self._bn0(x)
+        if self._max_pooling:
+            x = self._max_pooling(x)
+        x = self._swish(x)
+
+        # Blocks
+        for idx, block in enumerate(self._blocks):
+            drop_connect_rate = self._global_params.drop_connect_rate
+            if drop_connect_rate:
+                drop_connect_rate *= float(idx) / len(self._blocks)
+            x = block(x, drop_connect_rate=drop_connect_rate)
+
+        # Head
+        x = self._conv_head(x)
+        x = self._bn1(x)
+        x = self._swish(x)
+
+        return x
+
+    def forward(self, inputs):
+        """Calls extract_features to extract features, applies final linear layer, and returns logits."""
+        # bs = inputs.size(0)
+        # print(bs)
+        # Convolution layers
+        x = self.extract_features(inputs)
+
+        # Pooling and final linear layer
+        # x = self._avg_pooling(x)
+        # x = x.view(bs, -1)
+
+        x = x.flatten(start_dim=1)
+        x = self._dropout(x)
+        x = self._fc(x)
+
+        return torch.sigmoid(x)
+
+    @classmethod
+    def from_name(cls, model_name, override_params=None):
+        # cls._check_model_name_is_valid(model_name)
+        global allele
+        allele = model_name
+        blocks_args, global_params = get_model_params(model_name, override_params)
+        return cls(blocks_args, global_params)
+
+    @classmethod
+    def get_image_size(cls, model_name):
+        cls._check_model_name_is_valid(model_name)
+        _, _, res, _ = efficientnet_params(model_name)
+        return res
+
+    @classmethod
+    def _check_model_name_is_valid(cls, model_name):
+        """Validates model name."""
+        valid_models = ["efficientnet-b" + str(i) for i in range(9)]
+        if model_name not in valid_models:
+            raise ValueError("model_name should be one of: " + ", ".join(valid_models))
diff --git a/kincnn3.py b/kincnn3.py
new file mode 100644
index 0000000..6f7b7dd
--- /dev/null
+++ b/kincnn3.py
@@ -0,0 +1,392 @@
+"""model.py - Model and module class for EfficientNet.
+   They are built to mirror those in the official TensorFlow implementation.
+"""
+from functools import partial
+
+import torch
+from torch import nn
+from torch.nn import functional as F
+
+from utils3 import (Conv2dStaticSamePadding, MaxPool2dStaticSamePadding,
+                   MemoryEfficientSwish, Swish, calculate_output_image_size,
+                   drop_connect, efficientnet_params, get_model_params,
+                   get_same_padding_conv2d, load_pretrained_weights,
+                   round_filters, round_repeats)
+
+# Author: HongbiKim (github username)
+# Github repo: https://github.com/lukemelas/EfficientNet-PyTorch
+# With adjustments and added comments by workingcoder (github username).
+
+
+class MBConvBlock(nn.Module):
+    """
+    Mobile Inverted Residual Bottleneck Block
+    Args:
+        block_args (namedtuple): BlockArgs, see above
+        global_params (namedtuple): GlobalParam, see above
+    Attributes:
+        has_se (bool): Whether the block contains a Squeeze and Excitation layer.
+    """
+
+    def __init__(self, block_args, global_params, image_size=None):
+        super().__init__()
+        self._block_args = block_args
+        self._bn_mom = 1 - global_params.batch_norm_momentum
+        self._bn_eps = global_params.batch_norm_epsilon
+        self.has_se = (self._block_args.se_ratio is not None) and (
+            0 < self._block_args.se_ratio <= 1
+        )
+        self.id_skip = block_args.id_skip  # skip connection and drop connect
+
+        # Expansion phase (Inverted Bottleneck)
+        inp = self._block_args.input_filters  # number of input channels
+        oup = (
+            self._block_args.input_filters * self._block_args.expand_ratio
+        )  # number of output channels
+        if self._block_args.expand_ratio != 1:
+            Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+            MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+            self._expand_conv = Conv2d(
+                in_channels=inp,
+                out_channels=oup,
+                kernel_size=1,
+                bias=False,  # kernel_size Í±¥ÎìúÎ¶¨ÏßÄ ÎßêÍ∏∞
+            )
+            self._bn0 = nn.BatchNorm2d(
+                num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
+            )
+            # image_size = calculate_output_image_size(image_size, 1) <-- this wouldn't modify image_size
+
+        # Depthwise convolution phase
+        ck = self._block_args.conv_kernel_size
+        pk = self._block_args.pool_kernel_size
+        cs = self._block_args.conv_stride
+        ps = self._block_args.pool_stride
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+        self._depthwise_conv = Conv2d(
+            in_channels=oup,
+            out_channels=oup,
+            groups=oup,  # groups makes it depthwise
+            kernel_size=ck,
+            stride=cs,
+            bias=False,
+        )
+        image_size = calculate_output_image_size(image_size, cs)
+        self._bn1 = nn.BatchNorm2d(
+            num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
+        )
+        if pk:
+            self._depthwise_max_pooling = MaxPool2d(kernel_size=pk, stride=ps)
+            image_size = calculate_output_image_size(image_size, ps)
+
+        # Squeeze and Excitation layer, if desired
+        if self.has_se:
+            Conv2d = get_same_padding_conv2d(image_size=(1, 1))
+            num_squeezed_channels = max(
+                1, int(self._block_args.input_filters * self._block_args.se_ratio)
+            )
+            self._se_reduce = Conv2d(
+                in_channels=oup, out_channels=num_squeezed_channels, kernel_size=1
+            )
+            self._se_expand = Conv2d(
+                in_channels=num_squeezed_channels, out_channels=oup, kernel_size=1
+            )
+
+        # Output phase (Pointwise convolution phase)
+        final_oup = self._block_args.output_filters
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        self._project_conv = Conv2d(
+            in_channels=oup, out_channels=final_oup, kernel_size=1, bias=False
+        )
+        self._bn2 = nn.BatchNorm2d(
+            num_features=final_oup, momentum=self._bn_mom, eps=self._bn_eps
+        )
+        self._swish = MemoryEfficientSwish()
+
+    def forward(self, inputs, drop_connect_rate=None):
+        """
+        :param inputs: input tensor
+        :param drop_connect_rate: drop connect rate (float, between 0 and 1)
+        :return: output of block
+        """
+
+        # Expansion and Depthwise Convolution
+        x = inputs
+        if self._block_args.expand_ratio != 1:
+            x = self._expand_conv(inputs)  # 1
+            x = self._bn0(x)
+            x = self._swish(x)
+
+        x = self._depthwise_conv(x)  # 2
+        # x = partial()
+        x = self._bn1(x)
+        if self._block_args.pool_kernel_size:
+            x = self._depthwise_max_pooling(x)
+        x = self._swish(x)
+
+        # Squeeze and Excitation
+        if self.has_se:
+            x_squeezed = F.adaptive_avg_pool2d(x, 1)
+            x_squeezed = self._se_reduce(x_squeezed)  # 3
+            x_squeezed = self._swish(x_squeezed)
+            x_squeezed = self._se_expand(x_squeezed)  # 4
+            x = torch.sigmoid(x_squeezed) * x
+
+        # Pointwise Convolution
+        x = self._project_conv(x)  # 5
+        x = self._bn2(x)
+
+        # Skip connection and drop connect
+        input_filters, output_filters = (
+            self._block_args.input_filters,
+            self._block_args.output_filters,
+        )
+        if (
+            self.id_skip
+            and self._block_args.conv_stride == 1
+            and input_filters == output_filters
+        ):
+            # The combination of skip connection and drop connect brings about stochastic depth.
+            if drop_connect_rate:
+                x = drop_connect(x, p=drop_connect_rate, training=self.training)
+            x = x + inputs  # skip connection
+        return x
+
+    def set_swish(self, memory_efficient=True):
+        """Sets swish function as memory efficient (for training) or standard (for export).
+
+        Args:
+            memory_efficient (bool): Whether to use memory-efficient version of swish.
+        """
+        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()
+
+
+class EfficientNet(nn.Module):
+    """
+    An EfficientNet model. Most easily loaded with the .from_name or .from_pretrained methods
+    Args:
+        blocks_args (list): A list of BlockArgs to construct blocks
+        global_params (namedtuple): A set of GlobalParams shared between blocks
+    Example:
+        model = EfficientNet.from_pretrained('efficientnet-b0')
+    """
+
+    def __init__(self, blocks_args=None, global_params=None):
+        super().__init__()
+        assert isinstance(blocks_args, list), "blocks_args should be a list"
+        assert len(blocks_args) > 0, "block args must be greater than 0"
+        self._global_params = global_params
+        self._blocks_args = blocks_args
+
+        # Batch norm parameters
+        bn_mom = 1 - self._global_params.batch_norm_momentum
+        bn_eps = self._global_params.batch_norm_epsilon
+
+        # Get static or dynamic convolution depending on image size
+        image_size = global_params.image_size
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+
+        # Stem
+        in_channels = 1  
+        out_channels = round_filters(
+            3, self._global_params
+        )  # number of output channels
+        conv_kernel_size = (3, 1)
+        conv_stride_size = (1, 1)
+        pool_kernel_size = (2, 1)   
+        pool_stride_size = pool_kernel_size
+        
+        self._conv_stem = Conv2d(
+            in_channels, out_channels, kernel_size=conv_kernel_size, stride=conv_stride_size, bias=False
+        )
+        self._bn0 = nn.BatchNorm2d(
+            num_features=out_channels, momentum=bn_mom, eps=bn_eps
+        )
+        image_size = calculate_output_image_size(image_size, stride=conv_stride_size)  # ! TODO
+        if pool_kernel_size:
+            self._max_pooling = MaxPool2d(kernel_size=pool_kernel_size, stride=pool_stride_size)
+            image_size = calculate_output_image_size(image_size, stride=pool_stride_size)
+        else:
+            self._max_pooling = None
+
+        # Build blocks
+        self._blocks = nn.ModuleList([])
+        for block_args in self._blocks_args:
+            # Update block input and output filters based on depth multiplier.
+            block_args = block_args._replace(
+                input_filters=round_filters(
+                    block_args.input_filters, self._global_params
+                ),
+                output_filters=round_filters(
+                    block_args.output_filters, self._global_params
+                ),
+                num_repeat=round_repeats(block_args.num_repeat, self._global_params),
+            )
+
+            # The first block needs to take care of stride and filter size increase.
+            self._blocks.append(
+                MBConvBlock(block_args, self._global_params, image_size=image_size)
+            )
+            image_size = calculate_output_image_size(image_size, block_args.conv_stride)
+            if block_args.num_repeat > 1:  # modify block_args to keep same output size
+                block_args = block_args._replace(
+                    input_filters=block_args.output_filters, stride=1
+                )
+            for _ in range(block_args.num_repeat - 1):
+                self._blocks.append(
+                    MBConvBlock(block_args, self._global_params, image_size=image_size)
+                )
+
+        # Head
+        in_channels = block_args.output_filters  # output of final block
+        out_channels = round_filters(3, self._global_params)
+        out_features = image_size[0]*image_size[1]*out_channels
+        # out_channels = round_filters(1280, self._global_params) <-- ÏõêÎ≥∏
+        # out_channels = 1280
+        self._conv_head = Conv2d(in_channels, out_channels, kernel_size=1, bias=False)
+        self._bn1 = nn.BatchNorm2d(
+            num_features=out_channels, momentum=bn_mom, eps=bn_eps
+        )
+
+        # Final linear layer
+        # self._avg_pooling = nn.AdaptiveAvgPool2d(1)  # <-- ÏõêÎ≥∏
+        self._dropout = nn.Dropout(self._global_params.dropout_rate)
+        self._fc = nn.Linear(out_features, self._global_params.num_classes)
+
+        # set activation to memory efficient swish by default
+        self._swish = MemoryEfficientSwish()
+
+    def set_swish(self, memory_efficient=True):
+        """Sets swish function as memory efficient (for training) or standard (for export).
+
+        Args:
+            memory_efficient (bool): Whether to use memory-efficient version of swish.
+        """
+        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()
+        for block in self._blocks:
+            block.set_swish(memory_efficient)
+
+    def extract_endpoints(self, inputs):
+        """Use convolution layer to extract features
+        from reduction levels i in [1, 2, 3, 4, 5].
+
+        Args:
+            inputs (tensor): Input tensor.
+
+        Returns:
+            Dictionary of last intermediate features
+            with reduction levels i in [1, 2, 3, 4, 5].
+            Example:
+                >>> import torch
+                >>> from efficientnet.model import EfficientNet
+                >>> inputs = torch.rand(1, 3, 224, 224)
+                >>> model = EfficientNet.from_pretrained('efficientnet-b0')
+                >>> endpoints = model.extract_endpoints(inputs)
+                >>> print(endpoints['reduction_1'].shape)  # torch.Size([1, 16, 112, 112])
+                >>> print(endpoints['reduction_2'].shape)  # torch.Size([1, 24, 56, 56])
+                >>> print(endpoints['reduction_3'].shape)  # torch.Size([1, 40, 28, 28])
+                >>> print(endpoints['reduction_4'].shape)  # torch.Size([1, 112, 14, 14])
+                >>> print(endpoints['reduction_5'].shape)  # torch.Size([1, 320, 7, 7])
+                >>> print(endpoints['reduction_6'].shape)  # torch.Size([1, 1280, 7, 7])
+        """
+        endpoints = dict()
+
+        # Stem
+        x = self._swish(self._bn0(self._conv_stem(inputs)))
+        prev_x = x
+
+        # Blocks
+        for idx, block in enumerate(self._blocks):
+            drop_connect_rate = self._global_params.drop_connect_rate
+            if drop_connect_rate:
+                drop_connect_rate *= float(idx) / len(
+                    self._blocks
+                )  # scale drop connect_rate
+            x = block(x, drop_connect_rate=drop_connect_rate)
+            if prev_x.size(2) > x.size(2):
+                endpoints["reduction_{}".format(len(endpoints) + 1)] = prev_x
+            elif idx == len(self._blocks) - 1:
+                endpoints["reduction_{}".format(len(endpoints) + 1)] = x
+            prev_x = x
+
+        # Head
+        x = self._swish(self._bn1(self._conv_head(x)))
+        endpoints["reduction_{}".format(len(endpoints) + 1)] = x
+
+        return endpoints
+
+    def define_last_fcn(self):
+        global allele
+        print(allele)
+        if "phospho-A" in allele:
+            return 132096
+        elif "phospho-B" in allele:
+            return 8448
+        elif "HLA-B" in allele:
+            return 11392
+        elif "HLA-C" in allele:
+            return 6760
+
+    def extract_features(self, inputs):
+        """Returns output of the final convolution layer"""
+
+        # Stem
+        x = self._conv_stem(inputs)
+        x = self._bn0(x)
+        if self._max_pooling:
+            x = self._max_pooling(x)
+        x = self._swish(x)
+
+        # Blocks
+        for idx, block in enumerate(self._blocks):
+            drop_connect_rate = self._global_params.drop_connect_rate
+            if drop_connect_rate:
+                drop_connect_rate *= float(idx) / len(self._blocks)
+            x = block(x, drop_connect_rate=drop_connect_rate)
+
+        # Head
+        x = self._conv_head(x)
+        x = self._bn1(x)
+        x = self._swish(x)
+
+        return x
+
+    def forward(self, inputs):
+        """Calls extract_features to extract features, applies final linear layer, and returns logits."""
+        # bs = inputs.size(0)
+        # print(bs)
+        # Convolution layers
+        x = self.extract_features(inputs)
+
+        # Pooling and final linear layer
+        # x = self._avg_pooling(x)
+        # x = x.view(bs, -1)
+
+        x = x.flatten(start_dim=1)
+        x = self._dropout(x)
+        x = self._fc(x)
+
+        return torch.sigmoid(x)
+
+    @classmethod
+    def from_name(cls, model_name, override_params=None):
+        # cls._check_model_name_is_valid(model_name)
+        global allele
+        allele = model_name
+        blocks_args, global_params = get_model_params(model_name, override_params)
+        return cls(blocks_args, global_params)
+
+    @classmethod
+    def get_image_size(cls, model_name):
+        cls._check_model_name_is_valid(model_name)
+        _, _, res, _ = efficientnet_params(model_name)
+        return res
+
+    @classmethod
+    def _check_model_name_is_valid(cls, model_name):
+        """Validates model name."""
+        valid_models = ["efficientnet-b" + str(i) for i in range(9)]
+        if model_name not in valid_models:
+            raise ValueError("model_name should be one of: " + ", ".join(valid_models))
diff --git a/kincnn4.py b/kincnn4.py
new file mode 100644
index 0000000..665674d
--- /dev/null
+++ b/kincnn4.py
@@ -0,0 +1,391 @@
+"""model.py - Model and module class for EfficientNet.
+   They are built to mirror those in the official TensorFlow implementation.
+"""
+from functools import partial
+
+import torch
+from torch import nn
+from torch.nn import functional as F
+
+from utils4 import (Conv2dStaticSamePadding, MaxPool2dStaticSamePadding,
+                   MemoryEfficientSwish, Swish, calculate_output_image_size,
+                   drop_connect, efficientnet_params, get_model_params,
+                   get_same_padding_conv2d, load_pretrained_weights,
+                   round_filters, round_repeats)
+
+# Author: HongbiKim (github username)
+# Github repo: https://github.com/lukemelas/EfficientNet-PyTorch
+# With adjustments and added comments by workingcoder (github username).
+
+
+class MBConvBlock(nn.Module):
+    """
+    Mobile Inverted Residual Bottleneck Block
+    Args:
+        block_args (namedtuple): BlockArgs, see above
+        global_params (namedtuple): GlobalParam, see above
+    Attributes:
+        has_se (bool): Whether the block contains a Squeeze and Excitation layer.
+    """
+
+    def __init__(self, block_args, global_params, image_size=None):
+        super().__init__()
+        self._block_args = block_args
+        self._bn_mom = 1 - global_params.batch_norm_momentum
+        self._bn_eps = global_params.batch_norm_epsilon
+        self.has_se = (self._block_args.se_ratio is not None) and (
+            0 < self._block_args.se_ratio <= 1
+        )
+        self.id_skip = block_args.id_skip  # skip connection and drop connect
+
+        # Expansion phase (Inverted Bottleneck)
+        inp = self._block_args.input_filters  # number of input channels
+        oup = (
+            self._block_args.input_filters * self._block_args.expand_ratio
+        )  # number of output channels
+        if self._block_args.expand_ratio != 1:
+            Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+            MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+            self._expand_conv = Conv2d(
+                in_channels=inp,
+                out_channels=oup,
+                kernel_size=1,
+                bias=False,  # kernel_size Í±¥ÎìúÎ¶¨ÏßÄ ÎßêÍ∏∞
+            )
+            self._bn0 = nn.BatchNorm2d(
+                num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
+            )
+            # image_size = calculate_output_image_size(image_size, 1) <-- this wouldn't modify image_size
+
+        # Depthwise convolution phase
+        ck = self._block_args.conv_kernel_size
+        pk = self._block_args.pool_kernel_size
+        cs = self._block_args.conv_stride
+        ps = self._block_args.pool_stride
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+        self._depthwise_conv = Conv2d(
+            in_channels=oup,
+            out_channels=oup,
+            groups=oup,  # groups makes it depthwise
+            kernel_size=ck,
+            stride=cs,
+            bias=False,
+        )
+        image_size = calculate_output_image_size(image_size, cs)
+        self._bn1 = nn.BatchNorm2d(
+            num_features=oup, momentum=self._bn_mom, eps=self._bn_eps
+        )
+        if pk:
+            self._depthwise_max_pooling = MaxPool2d(kernel_size=pk, stride=ps)
+            image_size = calculate_output_image_size(image_size, ps)
+
+        # Squeeze and Excitation layer, if desired
+        if self.has_se:
+            Conv2d = get_same_padding_conv2d(image_size=(1, 1))
+            num_squeezed_channels = max(
+                1, int(self._block_args.input_filters * self._block_args.se_ratio)
+            )
+            self._se_reduce = Conv2d(
+                in_channels=oup, out_channels=num_squeezed_channels, kernel_size=1
+            )
+            self._se_expand = Conv2d(
+                in_channels=num_squeezed_channels, out_channels=oup, kernel_size=1
+            )
+
+        # Output phase (Pointwise convolution phase)
+        final_oup = self._block_args.output_filters
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        self._project_conv = Conv2d(
+            in_channels=oup, out_channels=final_oup, kernel_size=1, bias=False
+        )
+        self._bn2 = nn.BatchNorm2d(
+            num_features=final_oup, momentum=self._bn_mom, eps=self._bn_eps
+        )
+        self._swish = MemoryEfficientSwish()
+
+    def forward(self, inputs, drop_connect_rate=None):
+        """
+        :param inputs: input tensor
+        :param drop_connect_rate: drop connect rate (float, between 0 and 1)
+        :return: output of block
+        """
+
+        # Expansion and Depthwise Convolution
+        x = inputs
+        if self._block_args.expand_ratio != 1:
+            x = self._expand_conv(inputs)  # 1
+            x = self._bn0(x)
+            x = self._swish(x)
+
+        x = self._depthwise_conv(x)  # 2
+        # x = partial()
+        x = self._bn1(x)
+        if self._block_args.pool_kernel_size:
+            x = self._depthwise_max_pooling(x)
+        x = self._swish(x)
+
+        # Squeeze and Excitation
+        if self.has_se:
+            x_squeezed = F.adaptive_avg_pool2d(x, 1)
+            x_squeezed = self._se_reduce(x_squeezed)  # 3
+            x_squeezed = self._swish(x_squeezed)
+            x_squeezed = self._se_expand(x_squeezed)  # 4
+            x = torch.sigmoid(x_squeezed) * x
+
+        # Pointwise Convolution
+        x = self._project_conv(x)  # 5
+        x = self._bn2(x)
+
+        # Skip connection and drop connect
+        input_filters, output_filters = (
+            self._block_args.input_filters,
+            self._block_args.output_filters,
+        )
+        if (
+            self.id_skip
+            and self._block_args.conv_stride == 1
+            and input_filters == output_filters
+        ):
+            # The combination of skip connection and drop connect brings about stochastic depth.
+            if drop_connect_rate:
+                x = drop_connect(x, p=drop_connect_rate, training=self.training)
+            x = x + inputs  # skip connection
+        return x
+
+    def set_swish(self, memory_efficient=True):
+        """Sets swish function as memory efficient (for training) or standard (for export).
+
+        Args:
+            memory_efficient (bool): Whether to use memory-efficient version of swish.
+        """
+        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()
+
+
+class EfficientNet(nn.Module):
+    """
+    An EfficientNet model. Most easily loaded with the .from_name or .from_pretrained methods
+    Args:
+        blocks_args (list): A list of BlockArgs to construct blocks
+        global_params (namedtuple): A set of GlobalParams shared between blocks
+    Example:
+        model = EfficientNet.from_pretrained('efficientnet-b0')
+    """
+
+    def __init__(self, blocks_args=None, global_params=None):
+        super().__init__()
+        assert isinstance(blocks_args, list), "blocks_args should be a list"
+        assert len(blocks_args) > 0, "block args must be greater than 0"
+        self._global_params = global_params
+        self._blocks_args = blocks_args
+
+        # Batch norm parameters
+        bn_mom = 1 - self._global_params.batch_norm_momentum
+        bn_eps = self._global_params.batch_norm_epsilon
+
+        # Get static or dynamic convolution depending on image size
+        image_size = global_params.image_size
+        Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)
+        MaxPool2d = partial(MaxPool2dStaticSamePadding, image_size=image_size)
+
+        # Stem
+        in_channels = 1  
+        out_channels = round_filters(
+            3, self._global_params
+        )  # number of output channels
+        conv_kernel_size = (3, 1)
+        conv_stride_size = (1, 1)
+        pool_kernel_size = (2, 1)
+        pool_stride_size = pool_kernel_size
+                
+        self._conv_stem = Conv2d(
+            in_channels, out_channels, kernel_size=conv_kernel_size, stride=conv_stride_size, bias=False
+        )
+        self._bn0 = nn.BatchNorm2d(
+            num_features=out_channels, momentum=bn_mom, eps=bn_eps
+        )
+        image_size = calculate_output_image_size(image_size, stride=conv_stride_size)  # ! TODO
+        if pool_kernel_size:
+            self._max_pooling = MaxPool2d(kernel_size=pool_kernel_size, stride=pool_stride_size)
+            image_size = calculate_output_image_size(image_size, stride=pool_stride_size)
+        else:
+            self._max_pooling = None
+
+        # Build blocks
+        self._blocks = nn.ModuleList([])
+        for block_args in self._blocks_args:
+            # Update block input and output filters based on depth multiplier.
+            block_args = block_args._replace(
+                input_filters=round_filters(
+                    block_args.input_filters, self._global_params
+                ),
+                output_filters=round_filters(
+                    block_args.output_filters, self._global_params
+                ),
+                num_repeat=round_repeats(block_args.num_repeat, self._global_params),
+            )
+
+            # The first block needs to take care of stride and filter size increase.
+            self._blocks.append(
+                MBConvBlock(block_args, self._global_params, image_size=image_size)
+            )
+            image_size = calculate_output_image_size(image_size, block_args.conv_stride)
+            if block_args.num_repeat > 1:  # modify block_args to keep same output size
+                block_args = block_args._replace(
+                    input_filters=block_args.output_filters, stride=1
+                )
+            for _ in range(block_args.num_repeat - 1):
+                self._blocks.append(
+                    MBConvBlock(block_args, self._global_params, image_size=image_size)
+                )
+
+        # Head
+        in_channels = block_args.output_filters  # output of final block
+        out_channels = round_filters(3, self._global_params)
+        # out_channels = round_filters(1280, self._global_params) <-- ÏõêÎ≥∏
+        # out_channels = 1280
+        out_features = image_size[0]*image_size[1]*out_channels
+        self._conv_head = Conv2d(in_channels, out_channels, kernel_size=1, bias=False)
+        self._bn1 = nn.BatchNorm2d(
+            num_features=out_channels, momentum=bn_mom, eps=bn_eps
+        )
+
+        # Final linear layer
+        # self._avg_pooling = nn.AdaptiveAvgPool2d(1)  # <-- ÏõêÎ≥∏
+        self._dropout = nn.Dropout(self._global_params.dropout_rate)
+        self._fc = nn.Linear(out_features, self._global_params.num_classes)
+
+        # set activation to memory efficient swish by default
+        self._swish = MemoryEfficientSwish()
+
+    def set_swish(self, memory_efficient=True):
+        """Sets swish function as memory efficient (for training) or standard (for export).
+
+        Args:
+            memory_efficient (bool): Whether to use memory-efficient version of swish.
+        """
+        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()
+        for block in self._blocks:
+            block.set_swish(memory_efficient)
+
+    def extract_endpoints(self, inputs):
+        """Use convolution layer to extract features
+        from reduction levels i in [1, 2, 3, 4, 5].
+
+        Args:
+            inputs (tensor): Input tensor.
+
+        Returns:
+            Dictionary of last intermediate features
+            with reduction levels i in [1, 2, 3, 4, 5].
+            Example:
+                >>> import torch
+                >>> from efficientnet.model import EfficientNet
+                >>> inputs = torch.rand(1, 3, 224, 224)
+                >>> model = EfficientNet.from_pretrained('efficientnet-b0')
+                >>> endpoints = model.extract_endpoints(inputs)
+                >>> print(endpoints['reduction_1'].shape)  # torch.Size([1, 16, 112, 112])
+                >>> print(endpoints['reduction_2'].shape)  # torch.Size([1, 24, 56, 56])
+                >>> print(endpoints['reduction_3'].shape)  # torch.Size([1, 40, 28, 28])
+                >>> print(endpoints['reduction_4'].shape)  # torch.Size([1, 112, 14, 14])
+                >>> print(endpoints['reduction_5'].shape)  # torch.Size([1, 320, 7, 7])
+                >>> print(endpoints['reduction_6'].shape)  # torch.Size([1, 1280, 7, 7])
+        """
+        endpoints = dict()
+
+        # Stem
+        x = self._swish(self._bn0(self._conv_stem(inputs)))
+        prev_x = x
+
+        # Blocks
+        for idx, block in enumerate(self._blocks):
+            drop_connect_rate = self._global_params.drop_connect_rate
+            if drop_connect_rate:
+                drop_connect_rate *= float(idx) / len(
+                    self._blocks
+                )  # scale drop connect_rate
+            x = block(x, drop_connect_rate=drop_connect_rate)
+            if prev_x.size(2) > x.size(2):
+                endpoints["reduction_{}".format(len(endpoints) + 1)] = prev_x
+            elif idx == len(self._blocks) - 1:
+                endpoints["reduction_{}".format(len(endpoints) + 1)] = x
+            prev_x = x
+
+        # Head
+        x = self._swish(self._bn1(self._conv_head(x)))
+        endpoints["reduction_{}".format(len(endpoints) + 1)] = x
+
+        return endpoints
+
+    def define_last_fcn(self):
+        global allele
+        print(allele)
+        if "phospho-A" in allele:
+            return 132096
+        elif "phospho-B" in allele:
+            return 8448
+        elif "HLA-B" in allele:
+            return 11392
+        elif "HLA-C" in allele:
+            return 6760
+
+    def extract_features(self, inputs):
+        """Returns output of the final convolution layer"""
+
+        # Stem
+        x = self._conv_stem(inputs)
+        x = self._bn0(x)
+        if self._max_pooling:
+            x = self._max_pooling(x)
+        x = self._swish(x)
+        # Blocks
+        for idx, block in enumerate(self._blocks):
+            drop_connect_rate = self._global_params.drop_connect_rate
+            if drop_connect_rate:
+                drop_connect_rate *= float(idx) / len(self._blocks)
+            x = block(x, drop_connect_rate=drop_connect_rate)
+
+        # Head
+        x = self._conv_head(x)
+        x = self._bn1(x)
+        x = self._swish(x)
+
+        return x
+
+    def forward(self, inputs):
+        """Calls extract_features to extract features, applies final linear layer, and returns logits."""
+        # bs = inputs.size(0)
+        # print(bs)
+        # Convolution layers
+        x = self.extract_features(inputs)
+
+        # Pooling and final linear layer
+        # x = self._avg_pooling(x)
+        # x = x.view(bs, -1)
+
+        x = x.flatten(start_dim=1)
+        x = self._dropout(x)
+        x = self._fc(x)
+
+        return torch.sigmoid(x)
+
+    @classmethod
+    def from_name(cls, model_name, override_params=None):
+        # cls._check_model_name_is_valid(model_name)
+        global allele
+        allele = model_name
+        blocks_args, global_params = get_model_params(model_name, override_params)
+        return cls(blocks_args, global_params)
+
+    @classmethod
+    def get_image_size(cls, model_name):
+        cls._check_model_name_is_valid(model_name)
+        _, _, res, _ = efficientnet_params(model_name)
+        return res
+
+    @classmethod
+    def _check_model_name_is_valid(cls, model_name):
+        """Validates model name."""
+        valid_models = ["efficientnet-b" + str(i) for i in range(9)]
+        if model_name not in valid_models:
+            raise ValueError("model_name should be one of: " + ", ".join(valid_models))
diff --git a/model_info.csv b/model_info.csv
new file mode 100644
index 0000000..f9930b1
--- /dev/null
+++ b/model_info.csv
@@ -0,0 +1,5 @@
+,conv_stem_kernel_size,conv_stem_stride_size,conv_stem_pooling,conv_stem_pooling_kernel_size,MBconv0_inp,MBconv0_oup,MBconv0_kernel_size,MBconv0_stride,last_features,AUC,model_path
+0,"(3, 1)","(1, 1)",True,"(2, 1)",8,16,"(3, 1)","(1, 1)",15840,0.8273,0517/DeepPP_kincnn1_1846_bs1024_weight0
+1,"(3, 1)","(1, 1)",True,"(2, 1)",8,16,"(5, 5)","(2, 1)",7920,0.8202,0517/DeepPP_kincnn2_1846_bs1024_weight0
+2,"(3, 1)","(1, 1)",True,"(2, 1)",8,16,"(5, 3)","(2, 1)",7920,0.8243,0517/DeepPP_kincnn3_1846_bs1024_weight0
+3,"(3, 1)","(1, 1)",True,"(2, 1)",8,16,"(5, 1)","(2, 1)",7920,0.8262,0517/DeepPP_kincnn4_1846_bs1024_weight0
diff --git a/output.onnx b/output.onnx
new file mode 100644
index 0000000..8f5e885
Binary files /dev/null and b/output.onnx differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0/config.yaml b/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..aa827ca
--- /dev/null
+++ b/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 25
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0/config.yaml b/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..8457d92
--- /dev/null
+++ b/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 25
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/0fold_best_model.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..a62b348
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..aed3ae2
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/1fold_best_model.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..65ceada
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..c72fd5a
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/2fold_best_model.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..6a18060
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..840d8ae
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/3fold_best_model.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..9652de8
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..949804f
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/4fold_best_model.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..2888464
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..2e46a70
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/config.yaml b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..d8e0bfe
--- /dev/null
+++ b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 25
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/fig_saved.png b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..6bc0687
Binary files /dev/null and b/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/0fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..ea77319
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..adfd8fe
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/1fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..653992e
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..5ea02b0
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/2fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..c2f11eb
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..3f05f7a
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/3fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..98f3444
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..d2f50b4
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/4fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..f6cb638
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..7974375
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..a2790a6
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 25
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/fig_saved.png b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..765bb57
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1755_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/0fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..fefb9c4
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..552b933
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/1fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..c7eb913
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..c86083e
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/2fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..6994ad4
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..6f8cae7
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/3fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..b4c9f8d
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..3a26891
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/4fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..e6055ed
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..d9f0629
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..0ac443a
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/fig_saved.png b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..cec5c3d
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_1804_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2225_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_2225_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..2d6a6ed
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_2225_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_2225_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2229_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_2229_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..5419f40
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_2229_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_2229_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2233_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_2233_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..081550f
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_2233_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_2233_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2234_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_2234_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..b87f064
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_2234_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_2234_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/0fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..f047974
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..90385d8
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/1fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..c999c22
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..d06f4fd
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/2fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..34b08b1
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..7f7772a
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/3fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..5d92a9f
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..81f2a47
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/4fold_best_model.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..8ec0858
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..00b58ea
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/config.yaml b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..9670983
--- /dev/null
+++ b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/fig_saved.png b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..880fd85
Binary files /dev/null and b/saved_model/0516/DeepPP_transfer_learning_1_2237_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..d7396eb
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..c793ef2
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..b4f52f3
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..90d43ed
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..0cd9e72
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..7b94a3b
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..3eb8b85
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..79b4724
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..607e34c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..8b08084
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..a04926a
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..6d36cfa
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..f124ff5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..cb9d8de
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..f4f78d8
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..d669f9b
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..7fa6ccb
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..95c89ea
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..9baca87
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..a8fbd9f
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..f1558b4
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..4a43ae6
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..bb0ade4
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..226d5a7
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1546_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..a60a659
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..1e7c377
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..4e70de3
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..871d7d9
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..2da5873
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..f1529fc
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..47f3d7c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..f8fe27c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..6efd607
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..8d66637
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..408335a
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..399bf22
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1801_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..c54a731
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..75a0b48
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..d1dfc83
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..d2f0008
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..16f0255
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..057ab9e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..28bade6
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..b858690
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..f7032f8
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..f52f28e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..304134e
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..9154b76
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn1_1846_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..7d37a62
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..3b40947
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..305034d
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..5b02965
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..cef0920
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..2560233
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..e469791
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..a4f49dc
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..e89cf72
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..2ada644
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..49d84f1
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn2
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '1'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..64f1d2b
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1515_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..b17ddef
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..c036349
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..d30f61d
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..aadbb7a
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..b6359d9
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..81178ae
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..a7ceeb1
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..9dc1ec1
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..68261c1
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..9869aa0
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..a70ae63
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn2
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '1'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..02b854e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1546_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..3e084b9
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..a0e95f2
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..7811309
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..6de9a58
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..083cddd
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..12c222d
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..c341a92
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..d0f8d04
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..e9a0f14
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..3f3814a
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..189b6de
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn2
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '1'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..6e99cbf
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1801_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..2213ed5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..59cd949
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..ee3c8f4
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..8d95668
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..b6b2e67
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..2f810fb
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..6184d90
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..b97986d
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..8ff1d2e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..82cb900
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..36cabcb
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn2
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '1'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..83c9f6f
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn2_1846_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..2bbff8c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..442880b
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..c5b0135
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..bb47182
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..fa5e12e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..83a9508
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..2792375
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..6e613f0
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..2f2cc21
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..2ee1078
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..2b6839c
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn3
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '2'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..cdeb85f
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1516_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..6a59b3a
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..afe9a8e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..d81d143
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..277add2
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..0cc04eb
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..17d0d56
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..6bbfbf0
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..b0c397d
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..2eade53
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..d0fd5e7
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..d930315
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn3
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '2'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..90f1c71
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1547_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..bb8b4eb
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..c93b960
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..eb754a5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..8a502bc
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..2b550fa
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..bc57cda
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..652a5c9
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..80bd6ec
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..1eaee4c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..1044cd1
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..52757d8
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn3
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '2'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..68c26c5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1801_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..61062c3
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..c4241c5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..2310893
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..e068754
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..bc8ba68
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..0dd6e79
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..729a33f
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..d49110c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..2ced0c5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..f17c77e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..e79441a
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn3
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '2'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..ea7c0fb
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn3_1846_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..6d3eeb8
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..154fdbe
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..ce34b0c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..49e26e1
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..39933c9
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..3c01058
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..476901c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..a26e34a
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..d4dfb4c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..78ef204
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..22f2273
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn4
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '3'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..68c26c5
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1516_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..2f072be
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..47cd4cf
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..90914c3
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..2f3603e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..9b5a684
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..0702bd6
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..cb3cf42
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..7c33084
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..e526d16
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..97a0adc
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..b9f04e6
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn4
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '3'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..7d4c586
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1546_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..b1f7587
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..368095c
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..3b09f03
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..e7accc6
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..5008885
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..b10eb97
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..25c3808
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..fd87dd8
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..a6fa4b1
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..6815e8e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..c35190f
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn4
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '3'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..ea7b1ed
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1801_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..88b58aa
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..7102b45
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..6638daa
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..6449f84
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..9d2a24b
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..cada8ff
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..0e0de44
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..21d120e
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..dc32728
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..f57c54f
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..0568f4f
--- /dev/null
+++ b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: kincnn4
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '3'
+  model: KINCNN
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..2e36e3b
Binary files /dev/null and b/saved_model/0517/DeepPP_kincnn4_1846_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..2e8c3d7
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..4c292c8
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..8621081
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..4720ebe
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..8933a09
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..386a731
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..1383494
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..e9a94cc
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..9d396ac
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..b703003
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..6823de8
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..eeff7fe
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1003_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..eed95c0
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..9729bd7
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..925b071
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..098e8f6
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..01cc173
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..4bcf448
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..d3cf279
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..236b759
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..f5da623
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..77b2c1f
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..acd6e18
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..271c91e
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1027_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..31226b4
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..53ce2e5
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..351022b
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..7cee00d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..25dfb73
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..afef465
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..77f427d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..cb4ead8
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..84df603
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..21edc85
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..fc0441c
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..6596805
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1143_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..f292928
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..6f37501
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..8456b67
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..6cc4546
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..5aedb3b
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..009e447
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..e2d3eef
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..57e0abe
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..ee13124
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..a8d2bba
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..f43d797
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.0001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..6c34f6d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1209_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..7d58bc7
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..a79efc5
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..62d3e69
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..4f58261
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..ce7790e
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..fe5f1dd
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..4572feb
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..c66c8a3
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..c267d61
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..76fa996
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..9ef8e0b
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..8e37258
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1225_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..ff468e0
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..5e70be5
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..4039146
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..96b53db
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..d411768
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..2068f59
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..4f69c39
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..bcf47b1
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..9d7bb5a
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..a4d056e
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..853a183
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '1'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..71ebbe7
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1231_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..6781e0a
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..037020c
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..8d1a408
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..ccd274f
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..50f2729
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..5e1c14d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..1583126
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..a4344ae
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..a96c837
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..21d81d6
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..de18851
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '2'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..2f0d415
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1232_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..bad9466
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..aca9ced
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..4222f34
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..781b02d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..12831c0
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..c899d88
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..e3a6820
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..606492d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..0547b6c
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..98920de
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..661be73
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '3'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..8b538a9
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1233_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..d660b6d
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..c778c21
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/1fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/1fold_best_model.pth
new file mode 100644
index 0000000..655e0af
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/1fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/1fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/1fold_latest_epoch.pth
new file mode 100644
index 0000000..0a1c238
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/1fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/2fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/2fold_best_model.pth
new file mode 100644
index 0000000..bd0e847
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/2fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/2fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/2fold_latest_epoch.pth
new file mode 100644
index 0000000..75b5db6
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/2fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/3fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/3fold_best_model.pth
new file mode 100644
index 0000000..70bfb8e
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/3fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/3fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/3fold_latest_epoch.pth
new file mode 100644
index 0000000..4619335
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/3fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/4fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/4fold_best_model.pth
new file mode 100644
index 0000000..204c8e3
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/4fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/4fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/4fold_latest_epoch.pth
new file mode 100644
index 0000000..7a92b4a
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/4fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..c65b0b2
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/fig_saved.png b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/fig_saved.png
new file mode 100644
index 0000000..513fcfe
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1237_bs1024_weight0/fig_saved.png differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/0fold_best_model.pth b/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/0fold_best_model.pth
new file mode 100644
index 0000000..82c5047
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/0fold_best_model.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/0fold_latest_epoch.pth b/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/0fold_latest_epoch.pth
new file mode 100644
index 0000000..c769955
Binary files /dev/null and b/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/0fold_latest_epoch.pth differ
diff --git a/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/config.yaml b/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/config.yaml
new file mode 100644
index 0000000..b186549
--- /dev/null
+++ b/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0/config.yaml
@@ -0,0 +1,15 @@
+&id001 !!python/object/new:phospho_preprocessing.AttrDict
+dictitems:
+  batch_size: 1024
+  dataset: transfer_learning_1
+  defalut_learning_rate: 0.001
+  erls_patience: 50
+  fold_num: 5
+  gpu_num: '0'
+  model: efficientnet-phospho-B-15
+  n_epoch: 500
+  pretrain_fold_num: '0'
+  save_dir: /home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_transfer_learning_1_1515_bs1024_weight0
+  scheduler_factor: 0.7
+  scheduler_patience: 7
+state: *id001
diff --git a/test.ipynb b/test.ipynb
index 35aa171..49d2b72 100644
--- a/test.ipynb
+++ b/test.ipynb
@@ -2,7 +2,64 @@
  "cells": [
   {
    "cell_type": "code",
+<<<<<<< HEAD
+   "execution_count": 3,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import kincnn\n",
+    "import torchvision\n",
+    "import torch.onnx"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 7,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "15840\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/onnx/_internal/jit_utils.py:258: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at /opt/conda/conda-bld/pytorch_1670525552843/work/torch/csrc/jit/passes/onnx/constant_fold.cpp:179.)\n",
+      "  _C._jit_pass_onnx_node_shape_type_inference(node, params_dict, opset_version)\n",
+      "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/onnx/utils.py:687: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at /opt/conda/conda-bld/pytorch_1670525552843/work/torch/csrc/jit/passes/onnx/constant_fold.cpp:179.)\n",
+      "  _C._jit_pass_onnx_graph_shape_type_inference(\n",
+      "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/onnx/utils.py:1178: UserWarning: Constant folding - Only steps=1 can be constant folded for opset >= 10 onnx::Slice op. Constant folding not applied. (Triggered internally at /opt/conda/conda-bld/pytorch_1670525552843/work/torch/csrc/jit/passes/onnx/constant_fold.cpp:179.)\n",
+      "  _C._jit_pass_onnx_graph_shape_type_inference(\n"
+     ]
+    }
+   ],
+   "source": [
+    "model = kincnn.EfficientNet.from_name(\"efficientnet-phospho-B-15\")\n",
+    "state_dict = torch.load(f'/home/hb/python/efficientnet_kincnn/saved_model/0517/DeepPP_kincnn1_1516_bs1024_weight0/0fold_best_model.pth')\n",
+    "model.load_state_dict(state_dict['state_dict']) \n",
+    "params = model.state_dict()\n",
+    "dummy_data = torch.empty(1, 1, 263, 15  , dtype = torch.float32)\n",
+    "torch.onnx.export(model, dummy_data, \"output.onnx\")\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
    "execution_count": 2,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -30,14 +87,14 @@
     "dataloaders = {'train':train_loader,'valid':valid_loader}\n",
     "dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}\n",
     "dataset = ConcatDataset([train_set, valid_set])"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 3,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -53,7 +110,7 @@
      "output_type": "stream",
      "text": [
       "  0%|          | 0/20 [00:00<?, ?it/s]\n",
-      "  0%|          | 0/50 [00:00<?, ?it/s]\u001B[A\n",
+      "  0%|          | 0/50 [00:00<?, ?it/s]\u001b[A\n",
       "  0%|          | 0/20 [00:00<?, ?it/s]\n"
      ]
     },
@@ -62,20 +119,20 @@
      "evalue": "Given groups=32, weight of size [32, 1, 3, 3], expected input[64, 8, 134, 17] to have 32 channels, but got 8 channels instead",
      "output_type": "error",
      "traceback": [
-      "\u001B[0;31m---------------------------------------------------------------------------\u001B[0m",
-      "\u001B[0;31mRuntimeError\u001B[0m                              Traceback (most recent call last)",
-      "Cell \u001B[0;32mIn[3], line 38\u001B[0m\n\u001B[1;32m     36\u001B[0m inputs \u001B[38;5;241m=\u001B[39m Variable(inputs\u001B[38;5;241m.\u001B[39mto(device, dtype\u001B[38;5;241m=\u001B[39mtorch\u001B[38;5;241m.\u001B[39mfloat), requires_grad\u001B[38;5;241m=\u001B[39m\u001B[38;5;28;01mTrue\u001B[39;00m)\n\u001B[1;32m     37\u001B[0m labels \u001B[38;5;241m=\u001B[39m Variable(labels\u001B[38;5;241m.\u001B[39mto(device))\n\u001B[0;32m---> 38\u001B[0m pred \u001B[38;5;241m=\u001B[39m \u001B[43mmodel\u001B[49m\u001B[43m(\u001B[49m\u001B[43minputs\u001B[49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001B[0m, in \u001B[0;36mModule._wrapped_call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1500\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_compiled_call_impl(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)  \u001B[38;5;66;03m# type: ignore[misc]\u001B[39;00m\n\u001B[1;32m   1501\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m-> 1502\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_impl\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001B[0m, in \u001B[0;36mModule._call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1506\u001B[0m \u001B[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001B[39;00m\n\u001B[1;32m   1507\u001B[0m \u001B[38;5;66;03m# this function, and just call forward.\u001B[39;00m\n\u001B[1;32m   1508\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m (\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_pre_hooks\n\u001B[1;32m   1509\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_backward_hooks\n\u001B[1;32m   1510\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_forward_pre_hooks):\n\u001B[0;32m-> 1511\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mforward_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1512\u001B[0m \u001B[38;5;66;03m# Do not call functions when jit is used\u001B[39;00m\n\u001B[1;32m   1513\u001B[0m full_backward_hooks, non_full_backward_hooks \u001B[38;5;241m=\u001B[39m [], []\n",
-      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/model.py:292\u001B[0m, in \u001B[0;36mEfficientNet.forward\u001B[0;34m(self, inputs)\u001B[0m\n\u001B[1;32m    288\u001B[0m \u001B[38;5;250m\u001B[39m\u001B[38;5;124;03m\"\"\" Calls extract_features to extract features, applies final linear layer, and returns logits. \"\"\"\u001B[39;00m\n\u001B[1;32m    289\u001B[0m \u001B[38;5;66;03m# bs = inputs.size(0)\u001B[39;00m\n\u001B[1;32m    290\u001B[0m \u001B[38;5;66;03m# print(bs)\u001B[39;00m\n\u001B[1;32m    291\u001B[0m \u001B[38;5;66;03m# Convolution layers\u001B[39;00m\n\u001B[0;32m--> 292\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mextract_features\u001B[49m\u001B[43m(\u001B[49m\u001B[43minputs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    294\u001B[0m \u001B[38;5;66;03m# Pooling and final linear layer\u001B[39;00m\n\u001B[1;32m    295\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_avg_pooling(x)\n",
-      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/model.py:278\u001B[0m, in \u001B[0;36mEfficientNet.extract_features\u001B[0;34m(self, inputs)\u001B[0m\n\u001B[1;32m    276\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m drop_connect_rate:\n\u001B[1;32m    277\u001B[0m         drop_connect_rate \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m=\u001B[39m \u001B[38;5;28mfloat\u001B[39m(idx) \u001B[38;5;241m/\u001B[39m \u001B[38;5;28mlen\u001B[39m(\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_blocks)\n\u001B[0;32m--> 278\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[43mblock\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdrop_connect_rate\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdrop_connect_rate\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    280\u001B[0m \u001B[38;5;66;03m# Head\u001B[39;00m\n\u001B[1;32m    281\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_conv_head(x)\n",
-      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001B[0m, in \u001B[0;36mModule._wrapped_call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1500\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_compiled_call_impl(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)  \u001B[38;5;66;03m# type: ignore[misc]\u001B[39;00m\n\u001B[1;32m   1501\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m-> 1502\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_impl\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001B[0m, in \u001B[0;36mModule._call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1506\u001B[0m \u001B[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001B[39;00m\n\u001B[1;32m   1507\u001B[0m \u001B[38;5;66;03m# this function, and just call forward.\u001B[39;00m\n\u001B[1;32m   1508\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m (\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_pre_hooks\n\u001B[1;32m   1509\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_backward_hooks\n\u001B[1;32m   1510\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_forward_pre_hooks):\n\u001B[0;32m-> 1511\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mforward_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1512\u001B[0m \u001B[38;5;66;03m# Do not call functions when jit is used\u001B[39;00m\n\u001B[1;32m   1513\u001B[0m full_backward_hooks, non_full_backward_hooks \u001B[38;5;241m=\u001B[39m [], []\n",
-      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/model.py:91\u001B[0m, in \u001B[0;36mMBConvBlock.forward\u001B[0;34m(self, inputs, drop_connect_rate)\u001B[0m\n\u001B[1;32m     88\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bn0(x)\n\u001B[1;32m     89\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_mish(x)\n\u001B[0;32m---> 91\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_depthwise_conv\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m     92\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bn1(x)\n\u001B[1;32m     93\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_mish(x)\n",
-      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001B[0m, in \u001B[0;36mModule._wrapped_call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1500\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_compiled_call_impl(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)  \u001B[38;5;66;03m# type: ignore[misc]\u001B[39;00m\n\u001B[1;32m   1501\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m-> 1502\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_impl\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001B[0m, in \u001B[0;36mModule._call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1506\u001B[0m \u001B[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001B[39;00m\n\u001B[1;32m   1507\u001B[0m \u001B[38;5;66;03m# this function, and just call forward.\u001B[39;00m\n\u001B[1;32m   1508\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m (\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_pre_hooks\n\u001B[1;32m   1509\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_backward_hooks\n\u001B[1;32m   1510\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_forward_pre_hooks):\n\u001B[0;32m-> 1511\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mforward_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1512\u001B[0m \u001B[38;5;66;03m# Do not call functions when jit is used\u001B[39;00m\n\u001B[1;32m   1513\u001B[0m full_backward_hooks, non_full_backward_hooks \u001B[38;5;241m=\u001B[39m [], []\n",
-      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/utils.py:275\u001B[0m, in \u001B[0;36mConv2dStaticSamePadding.forward\u001B[0;34m(self, x)\u001B[0m\n\u001B[1;32m    273\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mforward\u001B[39m(\u001B[38;5;28mself\u001B[39m, x):\n\u001B[1;32m    274\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mstatic_padding(x)\n\u001B[0;32m--> 275\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[43mF\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mconv2d\u001B[49m\u001B[43m(\u001B[49m\u001B[43mx\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mweight\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mbias\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mstride\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mpadding\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mdilation\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mgroups\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    276\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m x\n",
-      "\u001B[0;31mRuntimeError\u001B[0m: Given groups=32, weight of size [32, 1, 3, 3], expected input[64, 8, 134, 17] to have 32 channels, but got 8 channels instead"
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[3], line 38\u001b[0m\n\u001b[1;32m     36\u001b[0m inputs \u001b[38;5;241m=\u001b[39m Variable(inputs\u001b[38;5;241m.\u001b[39mto(device, dtype\u001b[38;5;241m=\u001b[39mtorch\u001b[38;5;241m.\u001b[39mfloat), requires_grad\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m     37\u001b[0m labels \u001b[38;5;241m=\u001b[39m Variable(labels\u001b[38;5;241m.\u001b[39mto(device))\n\u001b[0;32m---> 38\u001b[0m pred \u001b[38;5;241m=\u001b[39m \u001b[43mmodel\u001b[49m\u001b[43m(\u001b[49m\u001b[43minputs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1500\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1501\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1502\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1506\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1507\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1508\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1509\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1510\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1511\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1512\u001b[0m \u001b[38;5;66;03m# Do not call functions when jit is used\u001b[39;00m\n\u001b[1;32m   1513\u001b[0m full_backward_hooks, non_full_backward_hooks \u001b[38;5;241m=\u001b[39m [], []\n",
+      "File \u001b[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/model.py:292\u001b[0m, in \u001b[0;36mEfficientNet.forward\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m    288\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\" Calls extract_features to extract features, applies final linear layer, and returns logits. \"\"\"\u001b[39;00m\n\u001b[1;32m    289\u001b[0m \u001b[38;5;66;03m# bs = inputs.size(0)\u001b[39;00m\n\u001b[1;32m    290\u001b[0m \u001b[38;5;66;03m# print(bs)\u001b[39;00m\n\u001b[1;32m    291\u001b[0m \u001b[38;5;66;03m# Convolution layers\u001b[39;00m\n\u001b[0;32m--> 292\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mextract_features\u001b[49m\u001b[43m(\u001b[49m\u001b[43minputs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    294\u001b[0m \u001b[38;5;66;03m# Pooling and final linear layer\u001b[39;00m\n\u001b[1;32m    295\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_avg_pooling(x)\n",
+      "File \u001b[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/model.py:278\u001b[0m, in \u001b[0;36mEfficientNet.extract_features\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m    276\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m drop_connect_rate:\n\u001b[1;32m    277\u001b[0m         drop_connect_rate \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;28mfloat\u001b[39m(idx) \u001b[38;5;241m/\u001b[39m \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_blocks)\n\u001b[0;32m--> 278\u001b[0m     x \u001b[38;5;241m=\u001b[39m \u001b[43mblock\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdrop_connect_rate\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdrop_connect_rate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    280\u001b[0m \u001b[38;5;66;03m# Head\u001b[39;00m\n\u001b[1;32m    281\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_conv_head(x)\n",
+      "File \u001b[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1500\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1501\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1502\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1506\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1507\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1508\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1509\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1510\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1511\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1512\u001b[0m \u001b[38;5;66;03m# Do not call functions when jit is used\u001b[39;00m\n\u001b[1;32m   1513\u001b[0m full_backward_hooks, non_full_backward_hooks \u001b[38;5;241m=\u001b[39m [], []\n",
+      "File \u001b[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/model.py:91\u001b[0m, in \u001b[0;36mMBConvBlock.forward\u001b[0;34m(self, inputs, drop_connect_rate)\u001b[0m\n\u001b[1;32m     88\u001b[0m     x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_bn0(x)\n\u001b[1;32m     89\u001b[0m     x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_mish(x)\n\u001b[0;32m---> 91\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_depthwise_conv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     92\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_bn1(x)\n\u001b[1;32m     93\u001b[0m x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_mish(x)\n",
+      "File \u001b[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001b[0m, in \u001b[0;36mModule._wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1500\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_compiled_call_impl(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m   1501\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1502\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_call_impl\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1506\u001b[0m \u001b[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1507\u001b[0m \u001b[38;5;66;03m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1508\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_forward_pre_hooks\n\u001b[1;32m   1509\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_backward_pre_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1510\u001b[0m         \u001b[38;5;129;01mor\u001b[39;00m _global_forward_hooks \u001b[38;5;129;01mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1511\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mforward_call\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1512\u001b[0m \u001b[38;5;66;03m# Do not call functions when jit is used\u001b[39;00m\n\u001b[1;32m   1513\u001b[0m full_backward_hooks, non_full_backward_hooks \u001b[38;5;241m=\u001b[39m [], []\n",
+      "File \u001b[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/utils.py:275\u001b[0m, in \u001b[0;36mConv2dStaticSamePadding.forward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    273\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mforward\u001b[39m(\u001b[38;5;28mself\u001b[39m, x):\n\u001b[1;32m    274\u001b[0m     x \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstatic_padding(x)\n\u001b[0;32m--> 275\u001b[0m     x \u001b[38;5;241m=\u001b[39m \u001b[43mF\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mconv2d\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mweight\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbias\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstride\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mpadding\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdilation\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgroups\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    276\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m x\n",
+      "\u001b[0;31mRuntimeError\u001b[0m: Given groups=32, weight of size [32, 1, 3, 3], expected input[64, 8, 134, 17] to have 32 channels, but got 8 channels instead"
      ]
     }
    ],
@@ -118,19 +175,16 @@
     "                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)\n",
     "                labels = Variable(labels.to(device))\n",
     "                pred = model(inputs) # forward"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
+=======
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
    "execution_count": 1,
-   "metadata": {
-    "collapsed": true
-   },
    "outputs": [],
    "source": [
+<<<<<<< HEAD
     "import re\n",
     "import collections\n",
     "import torch\n",
@@ -178,6 +232,9 @@
   {
    "cell_type": "code",
    "execution_count": 226,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "def efficientnet(width_coefficient=None, depth_coefficient=None, dropout_rate=0.2,\n",
@@ -212,15 +269,22 @@
     "\n",
     "    return blocks_args, global_params\n",
     "\n",
+=======
+    "from utils import efficientnet\n",
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
     "blocks_args, global_params = efficientnet(width_coefficient=1.0, depth_coefficient=1.0, dropout_rate=0.7, image_size=[263, 15])"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
+<<<<<<< HEAD
    "execution_count": 227,
+   "metadata": {
+    "collapsed": false
+   },
+=======
+   "execution_count": 2,
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
    "outputs": [
     {
      "name": "stdout",
@@ -228,11 +292,7 @@
      "text": [
       "GlobalParams(width_coefficient=1.0, depth_coefficient=1.0, image_size=[263, 15], dropout_rate=0.7, num_classes=1, batch_norm_momentum=0.99, batch_norm_epsilon=0.001, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, include_top=None)\n",
       "\n",
-      "MBConvblock 0:  BlockArgs(num_repeat=1, kernel_size=(8, 2), stride=(2, 2), expand_ratio=2, input_filters=8, output_filters=16, se_ratio=0.25, id_skip=True)\n",
-      "\n",
-      "MBConvblock 1:  BlockArgs(num_repeat=1, kernel_size=(8, 3), stride=(2, 1), expand_ratio=2, input_filters=16, output_filters=32, se_ratio=0.25, id_skip=True)\n",
-      "\n",
-      "MBConvblock 2:  BlockArgs(num_repeat=1, kernel_size=(6, 3), stride=(2, 2), expand_ratio=2, input_filters=32, output_filters=64, se_ratio=0.25, id_skip=True)\n",
+      "MBConvblock 0:  BlockArgs(num_repeat=1, conv_kernel_size=(5, 1), pool_kernel_size=(3, 1), conv_stride=(1, 1), pool_stride=(3, 1), expand_ratio=1, input_filters=2, output_filters=4, se_ratio=0.25, id_skip=True)\n",
       "\n"
      ]
     }
@@ -243,14 +303,15 @@
     "for idx, block_args in enumerate(blocks_args):\n",
     "    print(f'MBConvblock {idx}: ', block_args)\n",
     "    print()"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
+<<<<<<< HEAD
    "execution_count": 228,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "def calculate_output_image_size_(input_image_size, stride):\n",
@@ -272,20 +333,53 @@
     "    image_height = int(math.ceil(image_height / sh))\n",
     "    image_width = int(math.ceil(image_width / sw))\n",
     "    return [image_height, image_width]"
-   ],
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 236,
+   "metadata": {
+    "collapsed": false
+   },
+=======
+   "execution_count": null,
+   "outputs": [],
+   "source": [],
    "metadata": {
     "collapsed": false
    }
   },
   {
    "cell_type": "code",
-   "execution_count": 236,
+   "execution_count": 12,
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
    "outputs": [],
    "source": [
+    "from utils import Conv2dStaticSamePadding, MaxPool2dStaticSamePadding\n",
+    "from functools import partial\n",
+    "\n",
     "bn_mom = 1 - global_params.batch_norm_momentum\n",
     "bn_eps = global_params.batch_norm_epsilon\n",
     "image_size = global_params.image_size\n",
+<<<<<<< HEAD
     "Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 237,
+   "metadata": {
+    "collapsed": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "[132, 15]"
+      ]
+=======
+    "Conv2d = partial(Conv2dStaticSamePadding, image_size=image_size)\n",
+    "MaxPool2d = partial(MaxPool2dStaticSamePadding_, image_size=image_size)"
    ],
    "metadata": {
     "collapsed": false
@@ -293,34 +387,39 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 237,
+   "execution_count": 13,
    "outputs": [
     {
      "data": {
-      "text/plain": "[132, 15]"
+      "text/plain": "[263, 15]"
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
      },
-     "execution_count": 237,
+     "execution_count": 13,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
+    "from torch import nn\n",
+    "from utils import round_filters, calculate_output_image_size, MemoryEfficientSwish\n",
+    "\n",
     "# Stem\n",
     "image_size = [263, 15]\n",
     "in_channels = 1\n",
     "out_channels = round_filters(8, global_params)\n",
-    "_conv_stem = Conv2d(in_channels, out_channels, kernel_size=(15, 1), stride=(2, 1), bias=False, image_size=image_size)\n",
+    "_conv_stem = Conv2d(in_channels, out_channels, kernel_size=(5, 1), stride=(1, 1), bias=False, image_size=image_size)\n",
     "_bn0 = nn.BatchNorm2d(num_features=out_channels, momentum=bn_mom, eps=bn_eps)\n",
+<<<<<<< HEAD
     "image_size = calculate_output_image_size_(image_size, stride=(2, 1))\n",
     "image_size"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 238,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "_swish = MemoryEfficientSwish()\n",
@@ -328,18 +427,20 @@
     "x1 = _conv_stem(x0)\n",
     "x2 = _bn0(x1)\n",
     "x3 = _swish(x2)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 240,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "torch.Size([1, 8, 132, 15])"
+      "text/plain": [
+       "torch.Size([1, 8, 132, 15])"
+      ]
      },
      "execution_count": 240,
      "metadata": {},
@@ -348,14 +449,14 @@
    ],
    "source": [
     "x3.shape"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 232,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -374,25 +475,25 @@
     "for idx, block_args in enumerate(blocks_args):\n",
     "    print(f'MBConvblock {idx}: ', block_args)\n",
     "    print()"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 191,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "# 263, 15 -> 132, 8 -> 64, 15 -> 32, 15 -> 17, 4"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 233,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "class MBConvBlock(nn.Module):\n",
@@ -524,14 +625,14 @@
     "            memory_efficient (bool): Whether to use memory-efficient version of swish.\n",
     "        \"\"\"\n",
     "        self._swish = MemoryEfficientSwish() if memory_efficient else Swish()"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 194,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "_bn_mom = 1 - global_params.batch_norm_momentum\n",
@@ -539,14 +640,14 @@
     "\n",
     "has_se = (block_args.se_ratio is not None) and (0 < block_args.se_ratio <= 1)\n",
     "id_skip = block_args.id_skip"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 195,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "# Expansion phase (Inverted Bottleneck)\n",
@@ -562,14 +663,14 @@
     "    _bn0 = nn.BatchNorm2d(\n",
     "        num_features=oup, momentum=_bn_mom, eps=_bn_eps\n",
     "    )"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 196,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "# Depthwise convolution phase\n",
@@ -588,14 +689,14 @@
     "    num_features=oup, momentum=_bn_mom, eps=_bn_eps\n",
     ")\n",
     "image_size = calculate_output_image_size_(image_size, s)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 197,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "# Squeeze and Excitation layer, if desired\n",
@@ -621,18 +722,20 @@
     "    num_features=final_oup, momentum=_bn_mom, eps=_bn_eps\n",
     ")\n",
     "_swish = MemoryEfficientSwish()"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 198,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "BlockArgs(num_repeat=1, kernel_size=(8, 2), stride=(2, 2), expand_ratio=1, input_filters=8, output_filters=16, se_ratio=0.25, id_skip=True)"
+      "text/plain": [
+       "BlockArgs(num_repeat=1, kernel_size=(8, 2), stride=(2, 2), expand_ratio=1, input_filters=8, output_filters=16, se_ratio=0.25, id_skip=True)"
+      ]
      },
      "execution_count": 198,
      "metadata": {},
@@ -641,27 +744,27 @@
    ],
    "source": [
     "block_args"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 215,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "inputs = x3\n",
     "inputs.shape\n",
     "x = inputs"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 216,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -680,14 +783,14 @@
     "print(x.shape)\n",
     "x = _swish(x)\n",
     "print(x.shape)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 217,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -713,18 +816,20 @@
     "    print(x_squeezed.shape)\n",
     "    x = torch.sigmoid(x_squeezed) * x\n",
     "    print(x.shape)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 224,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "torch.Size([1, 16, 66, 7])"
+      "text/plain": [
+       "torch.Size([1, 16, 66, 7])"
+      ]
      },
      "execution_count": 224,
      "metadata": {},
@@ -733,25 +838,25 @@
    ],
    "source": [
     "x.shape"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 218,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "x = _project_conv(x)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 219,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -763,14 +868,14 @@
    ],
    "source": [
     "print(x.shape)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 220,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -786,18 +891,20 @@
     "\n",
     "x = _bn2(x)\n",
     "print(x.shape)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 221,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "(8, 16)"
+      "text/plain": [
+       "(8, 16)"
+      ]
      },
      "execution_count": 221,
      "metadata": {},
@@ -811,14 +918,14 @@
     "    block_args.output_filters,\n",
     ")\n",
     "input_filters, output_filters"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "\n",
@@ -832,14 +939,14 @@
     "        x = drop_connect(x, p=drop_connect_rate, training=self.training)\n",
     "    x = x + inputs  # skip connection\n",
     "return x"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 234,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "name": "stdout",
@@ -878,18 +985,20 @@
     "    print('Before: ', image_size)\n",
     "    image_size = calculate_output_image_size_(image_size, block_args.stride)\n",
     "    print('After: ', image_size)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 118,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "[17, 4]"
+      "text/plain": [
+       "[17, 4]"
+      ]
      },
      "execution_count": 118,
      "metadata": {},
@@ -897,15 +1006,21 @@
     }
    ],
    "source": [
+=======
+    "_max_pool = MaxPool2d(kernel_size=(2, 1), stride=(2, 1))\n",
+    "_swish = MemoryEfficientSwish()\n",
+    "image_size = calculate_output_image_size(image_size, stride=(1, 1))\n",
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
     "image_size"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
+<<<<<<< HEAD
    "execution_count": 119,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "# Head\n",
@@ -915,14 +1030,14 @@
     "_bn1 = nn.BatchNorm2d(\n",
     "    num_features=out_channels, momentum=bn_mom, eps=bn_eps\n",
     ")"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 120,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "_dropout = nn.Dropout(global_params.dropout_rate)\n",
@@ -930,6 +1045,26 @@
     "\n",
     "# set activation to memory efficient swish by default\n",
     "_swish = MemoryEfficientSwish()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 121,
+   "metadata": {
+    "collapsed": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "torch.Size([1, 8, 132, 15])"
+      ]
+=======
+   "execution_count": 1,
+   "outputs": [],
+   "source": [
+    "import kincnn\n",
+    "import torch"
    ],
    "metadata": {
     "collapsed": false
@@ -937,24 +1072,59 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 121,
+   "execution_count": 2,
+   "outputs": [],
+   "source": [
+    "x = torch.randn(1, 1, 263, 15)\n",
+    "model = kincnn.EfficientNet.from_name('efficientnet-phospho-B-15')"
+   ],
+   "metadata": {
+    "collapsed": false
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
    "outputs": [
     {
      "data": {
-      "text/plain": "torch.Size([1, 8, 132, 15])"
+      "text/plain": "tensor([[0.6308]], grad_fn=<SigmoidBackward0>)"
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
      },
-     "execution_count": 121,
+     "execution_count": 3,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
+<<<<<<< HEAD
     "# Stem\n",
     "x0 = torch.randn((1, 1, 263, 15))\n",
     "x1 = _conv_stem(x0)\n",
     "x2 = _bn0(x1)\n",
     "x3 = _swish(x2)\n",
     "x3.shape"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 262,
+   "metadata": {
+    "collapsed": false
+   },
+   "outputs": [],
+   "source": [
+    "x = x3"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 263,
+   "metadata": {
+    "collapsed": false
+   },
+=======
+    "model(x)"
    ],
    "metadata": {
     "collapsed": false
@@ -962,10 +1132,10 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 262,
+   "execution_count": 7,
    "outputs": [],
    "source": [
-    "x = x3"
+    "import pytorch_model_summary"
    ],
    "metadata": {
     "collapsed": false
@@ -973,23 +1143,60 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 263,
+   "execution_count": 8,
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "3\n",
-      "torch.Size([1, 8, 132, 15])\n",
-      "torch.Size([1, 16, 66, 8])\n",
-      "torch.Size([1, 16, 66, 8])\n",
-      "torch.Size([1, 32, 33, 8])\n",
-      "torch.Size([1, 32, 33, 8])\n",
-      "torch.Size([1, 64, 17, 4])\n"
+      "-------------------------------------------------------------------------------------\n",
+      "                    Layer (type)         Input Shape         Param #     Tr. Param #\n",
+      "=====================================================================================\n",
+      "                     ZeroPad2d-1     [1, 1, 263, 15]               0               0\n",
+      "                   BatchNorm2d-2     [1, 8, 263, 15]              16              16\n",
+      "                     ZeroPad2d-3     [1, 8, 263, 15]               0               0\n",
+      "          MemoryEfficientSwish-4     [1, 8, 132, 15]               0               0\n",
+      "       Conv2dStaticSamePadding-5     [1, 8, 132, 15]              40              40\n",
+      "                   BatchNorm2d-6     [1, 8, 132, 15]              16              16\n",
+      "    MaxPool2dStaticSamePadding-7     [1, 8, 132, 15]               0               0\n",
+      "          MemoryEfficientSwish-8      [1, 8, 44, 15]               0               0\n",
+      "       Conv2dStaticSamePadding-9        [1, 8, 1, 1]              18              18\n",
+      "      Conv2dStaticSamePadding-10        [1, 2, 1, 1]              24              24\n",
+      "      Conv2dStaticSamePadding-11      [1, 8, 44, 15]              64              64\n",
+      "                  BatchNorm2d-12      [1, 8, 44, 15]              16              16\n",
+      "      Conv2dStaticSamePadding-13      [1, 8, 44, 15]              24              24\n",
+      "                  BatchNorm2d-14      [1, 8, 44, 15]              16              16\n",
+      "   MaxPool2dStaticSamePadding-15      [1, 8, 44, 15]               0               0\n",
+      "         MemoryEfficientSwish-16      [1, 8, 22, 15]               0               0\n",
+      "      Conv2dStaticSamePadding-17        [1, 8, 1, 1]              18              18\n",
+      "      Conv2dStaticSamePadding-18        [1, 2, 1, 1]              24              24\n",
+      "      Conv2dStaticSamePadding-19      [1, 8, 22, 15]             128             128\n",
+      "                  BatchNorm2d-20     [1, 16, 22, 15]              32              32\n",
+      "      Conv2dStaticSamePadding-21     [1, 16, 22, 15]             144             144\n",
+      "                  BatchNorm2d-22     [1, 16, 22, 15]              32              32\n",
+      "   MaxPool2dStaticSamePadding-23     [1, 16, 22, 15]               0               0\n",
+      "         MemoryEfficientSwish-24      [1, 16, 11, 8]               0               0\n",
+      "      Conv2dStaticSamePadding-25       [1, 16, 1, 1]              68              68\n",
+      "      Conv2dStaticSamePadding-26        [1, 4, 1, 1]              80              80\n",
+      "      Conv2dStaticSamePadding-27      [1, 16, 11, 8]             512             512\n",
+      "                  BatchNorm2d-28      [1, 32, 11, 8]              64              64\n",
+      "                     Identity-29      [1, 32, 11, 8]               0               0\n",
+      "                  BatchNorm2d-30       [1, 8, 11, 8]              16              16\n",
+      "            AdaptiveAvgPool2d-31       [1, 8, 11, 8]               0               0\n",
+      "                      Dropout-32              [1, 8]               0               0\n",
+      "                       Linear-33              [1, 8]               9               9\n",
+      "=====================================================================================\n",
+      "Total params: 1,361\n",
+      "Trainable params: 1,361\n",
+      "Non-trainable params: 0\n",
+      "Batch size: 1\n",
+      "-------------------------------------------------------------------------------------\n"
      ]
     }
    ],
    "source": [
+<<<<<<< HEAD
     "print(len(blocks))\n",
     "\n",
     "for idx, block in enumerate(blocks):\n",
@@ -999,18 +1206,20 @@
     "        drop_connect_rate *= float(idx) / len(blocks)\n",
     "    x = block(x, drop_connect_rate=drop_connect_rate)\n",
     "    print(x.shape)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 265,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "torch.Size([1, 64, 17, 4])"
+      "text/plain": [
+       "torch.Size([1, 64, 17, 4])"
+      ]
      },
      "execution_count": 265,
      "metadata": {},
@@ -1019,18 +1228,20 @@
    ],
    "source": [
     "x.shape"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 266,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "BlockArgs(num_repeat=1, kernel_size=(6, 3), stride=(2, 2), expand_ratio=2, input_filters=32, output_filters=64, se_ratio=0.25, id_skip=True)"
+      "text/plain": [
+       "BlockArgs(num_repeat=1, kernel_size=(6, 3), stride=(2, 2), expand_ratio=2, input_filters=32, output_filters=64, se_ratio=0.25, id_skip=True)"
+      ]
      },
      "execution_count": 266,
      "metadata": {},
@@ -1039,14 +1250,14 @@
    ],
    "source": [
     "block_args"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 271,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "in_channels = block_args.output_filters  # output of final block\n",
@@ -1056,6 +1267,22 @@
     "_conv_head = Conv2d(in_channels, out_channels, kernel_size=1, bias=False)\n",
     "_bn1 = nn.BatchNorm2d(\n",
     "    num_features=out_channels, momentum=bn_mom, eps=bn_eps)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 273,
+   "metadata": {
+    "collapsed": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "torch.Size([1, 128, 17, 4])"
+      ]
+=======
+    "print(pytorch_model_summary.summary(model, torch.zeros(1, 1, 263, 15), show_input=True, show_hierarchical=False, max_depth=2, batch_size=1))"
    ],
    "metadata": {
     "collapsed": false
@@ -1063,33 +1290,97 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 273,
+   "execution_count": 15,
+   "outputs": [
+    {
+     "ename": "RuntimeError",
+     "evalue": "Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [2, 1, 1, 267, 15]",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[0;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[0;31mRuntimeError\u001B[0m                              Traceback (most recent call last)",
+      "Cell \u001B[0;32mIn[15], line 2\u001B[0m\n\u001B[1;32m      1\u001B[0m \u001B[38;5;28;01mfrom\u001B[39;00m \u001B[38;5;21;01mtorchsummary\u001B[39;00m \u001B[38;5;28;01mimport\u001B[39;00m summary\n\u001B[0;32m----> 2\u001B[0m \u001B[43msummary\u001B[49m\u001B[43m(\u001B[49m\u001B[43mmodel\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43minput_size\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m1\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m1\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m263\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m15\u001B[39;49m\u001B[43m)\u001B[49m\u001B[43m)\u001B[49m\n",
+      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torchsummary/torchsummary.py:72\u001B[0m, in \u001B[0;36msummary\u001B[0;34m(model, input_size, batch_size, device)\u001B[0m\n\u001B[1;32m     68\u001B[0m model\u001B[38;5;241m.\u001B[39mapply(register_hook)\n\u001B[1;32m     70\u001B[0m \u001B[38;5;66;03m# make a forward pass\u001B[39;00m\n\u001B[1;32m     71\u001B[0m \u001B[38;5;66;03m# print(x.shape)\u001B[39;00m\n\u001B[0;32m---> 72\u001B[0m \u001B[43mmodel\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mx\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m     74\u001B[0m \u001B[38;5;66;03m# remove these hooks\u001B[39;00m\n\u001B[1;32m     75\u001B[0m \u001B[38;5;28;01mfor\u001B[39;00m h \u001B[38;5;129;01min\u001B[39;00m hooks:\n",
+      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001B[0m, in \u001B[0;36mModule._wrapped_call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1500\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_compiled_call_impl(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)  \u001B[38;5;66;03m# type: ignore[misc]\u001B[39;00m\n\u001B[1;32m   1501\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m-> 1502\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_impl\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n",
+      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1511\u001B[0m, in \u001B[0;36mModule._call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1506\u001B[0m \u001B[38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in\u001B[39;00m\n\u001B[1;32m   1507\u001B[0m \u001B[38;5;66;03m# this function, and just call forward.\u001B[39;00m\n\u001B[1;32m   1508\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m (\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_pre_hooks\n\u001B[1;32m   1509\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_backward_pre_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_backward_hooks\n\u001B[1;32m   1510\u001B[0m         \u001B[38;5;129;01mor\u001B[39;00m _global_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m _global_forward_pre_hooks):\n\u001B[0;32m-> 1511\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mforward_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1512\u001B[0m \u001B[38;5;66;03m# Do not call functions when jit is used\u001B[39;00m\n\u001B[1;32m   1513\u001B[0m full_backward_hooks, non_full_backward_hooks \u001B[38;5;241m=\u001B[39m [], []\n",
+      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/kincnn.py:344\u001B[0m, in \u001B[0;36mEfficientNet.forward\u001B[0;34m(self, inputs)\u001B[0m\n\u001B[1;32m    340\u001B[0m \u001B[38;5;250m\u001B[39m\u001B[38;5;124;03m\"\"\"Calls extract_features to extract features, applies final linear layer, and returns logits.\"\"\"\u001B[39;00m\n\u001B[1;32m    341\u001B[0m \u001B[38;5;66;03m# bs = inputs.size(0)\u001B[39;00m\n\u001B[1;32m    342\u001B[0m \u001B[38;5;66;03m# print(bs)\u001B[39;00m\n\u001B[1;32m    343\u001B[0m \u001B[38;5;66;03m# Convolution layers\u001B[39;00m\n\u001B[0;32m--> 344\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mextract_features\u001B[49m\u001B[43m(\u001B[49m\u001B[43minputs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    346\u001B[0m \u001B[38;5;66;03m# Pooling and final linear layer\u001B[39;00m\n\u001B[1;32m    347\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_avg_pooling(x)\n",
+      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/kincnn.py:320\u001B[0m, in \u001B[0;36mEfficientNet.extract_features\u001B[0;34m(self, inputs)\u001B[0m\n\u001B[1;32m    317\u001B[0m \u001B[38;5;250m\u001B[39m\u001B[38;5;124;03m\"\"\"Returns output of the final convolution layer\"\"\"\u001B[39;00m\n\u001B[1;32m    319\u001B[0m \u001B[38;5;66;03m# Stem\u001B[39;00m\n\u001B[0;32m--> 320\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_conv_stem\u001B[49m\u001B[43m(\u001B[49m\u001B[43minputs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    321\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bn0(x)\n\u001B[1;32m    322\u001B[0m x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_max_pooling(x)\n",
+      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1502\u001B[0m, in \u001B[0;36mModule._wrapped_call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1500\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_compiled_call_impl(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)  \u001B[38;5;66;03m# type: ignore[misc]\u001B[39;00m\n\u001B[1;32m   1501\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m-> 1502\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_impl\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n",
+      "File \u001B[0;32m/opt/anaconda3/envs/efficientnet/lib/python3.8/site-packages/torch/nn/modules/module.py:1548\u001B[0m, in \u001B[0;36mModule._call_impl\u001B[0;34m(self, *args, **kwargs)\u001B[0m\n\u001B[1;32m   1545\u001B[0m     bw_hook \u001B[38;5;241m=\u001B[39m hooks\u001B[38;5;241m.\u001B[39mBackwardHook(\u001B[38;5;28mself\u001B[39m, full_backward_hooks, backward_pre_hooks)\n\u001B[1;32m   1546\u001B[0m     args \u001B[38;5;241m=\u001B[39m bw_hook\u001B[38;5;241m.\u001B[39msetup_input_hook(args)\n\u001B[0;32m-> 1548\u001B[0m result \u001B[38;5;241m=\u001B[39m \u001B[43mforward_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1549\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m _global_forward_hooks \u001B[38;5;129;01mor\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_hooks:\n\u001B[1;32m   1550\u001B[0m     \u001B[38;5;28;01mfor\u001B[39;00m hook_id, hook \u001B[38;5;129;01min\u001B[39;00m (\n\u001B[1;32m   1551\u001B[0m         \u001B[38;5;241m*\u001B[39m_global_forward_hooks\u001B[38;5;241m.\u001B[39mitems(),\n\u001B[1;32m   1552\u001B[0m         \u001B[38;5;241m*\u001B[39m\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_forward_hooks\u001B[38;5;241m.\u001B[39mitems(),\n\u001B[1;32m   1553\u001B[0m     ):\n",
+      "File \u001B[0;32m/Users/hb/Dropbox/github/efficientnet_kincnn/utils.py:338\u001B[0m, in \u001B[0;36mConv2dStaticSamePadding.forward\u001B[0;34m(self, x)\u001B[0m\n\u001B[1;32m    336\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mforward\u001B[39m(\u001B[38;5;28mself\u001B[39m, x):\n\u001B[1;32m    337\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mstatic_padding(x)\n\u001B[0;32m--> 338\u001B[0m     x \u001B[38;5;241m=\u001B[39m \u001B[43mF\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mconv2d\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m    339\u001B[0m \u001B[43m        \u001B[49m\u001B[43mx\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    340\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mweight\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    341\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mbias\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    342\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mstride\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    343\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mpadding\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    344\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mdilation\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    345\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mgroups\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    346\u001B[0m \u001B[43m    \u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    347\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m x\n",
+      "\u001B[0;31mRuntimeError\u001B[0m: Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [2, 1, 1, 267, 15]"
+     ]
+    }
+   ],
+   "source": [
+    "from torchsummary import summary\n",
+    "summary(model, input_size=(1, 1, 263, 15))"
+   ],
+   "metadata": {
+    "collapsed": false
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 20,
+   "outputs": [],
+   "source": [
+    "from utils import round_filters\n",
+    "out_channels = round_filters(\n",
+    "            2, global_params\n",
+    "        )  # number of output channels"
+   ],
+   "metadata": {
+    "collapsed": false
+   }
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
    "outputs": [
     {
      "data": {
-      "text/plain": "torch.Size([1, 128, 17, 4])"
+      "text/plain": "GlobalParams(width_coefficient=1.0, depth_coefficient=1.0, image_size=[263, 15], dropout_rate=0.7, num_classes=1, batch_norm_momentum=0.99, batch_norm_epsilon=0.001, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, include_top=None)"
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
      },
-     "execution_count": 273,
+     "execution_count": 21,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
+<<<<<<< HEAD
     "x = _conv_head(x)\n",
     "x = _bn1(x)\n",
     "x = _swish(x)\n",
     "x.shape"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": null,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "# x = _avg_pooling(x)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 295,
+   "metadata": {
+    "collapsed": false
+   },
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "128"
+      ]
+=======
+    "global_params"
    ],
    "metadata": {
     "collapsed": false
@@ -1097,27 +1388,29 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 295,
+   "execution_count": 22,
    "outputs": [
     {
      "data": {
-      "text/plain": "128"
+      "text/plain": "8"
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
      },
-     "execution_count": 295,
+     "execution_count": 22,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
     "out_channels"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
+<<<<<<< HEAD
    "execution_count": 292,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "_avg_pooling = nn.AdaptiveAvgPool2d(1)\n",
@@ -1126,29 +1419,31 @@
     "\n",
     "# set activation to memory efficient swish by default\n",
     "_swish = MemoryEfficientSwish()"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 293,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [],
    "source": [
     "x_copy = x"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 294,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "tensor([[-0.3333]], grad_fn=<AddmmBackward0>)"
+      "text/plain": [
+       "tensor([[-0.3333]], grad_fn=<AddmmBackward0>)"
+      ]
      },
      "execution_count": 294,
      "metadata": {},
@@ -1161,18 +1456,20 @@
     "y = _dropout(y)\n",
     "y = _fc(y)\n",
     "y"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 283,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "torch.Size([1, 128])"
+      "text/plain": [
+       "torch.Size([1, 128])"
+      ]
      },
      "execution_count": 283,
      "metadata": {},
@@ -1189,18 +1486,34 @@
     "# x = self._dropout(x)\n",
     "\n",
     "# x = self._fc(x)"
-   ],
-   "metadata": {
-    "collapsed": false
-   }
+   ]
   },
   {
    "cell_type": "code",
    "execution_count": 284,
+   "metadata": {
+    "collapsed": false
+   },
    "outputs": [
     {
      "data": {
-      "text/plain": "tensor([[0.1952, 0.2066, 0.1998, 0.2097, 0.2002, 0.2060, 0.2034, 0.2010, 0.1997,\n         0.2035, 0.2030, 0.1976, 0.1983, 0.1964, 0.2027, 0.2046, 0.2035, 0.2029,\n         0.2082, 0.2109, 0.2003, 0.2054, 0.2026, 0.2103, 0.1970, 0.2057, 0.1945,\n         0.2000, 0.1880, 0.2057, 0.1968, 0.2006, 0.2054, 0.2093, 0.1914, 0.2065,\n         0.2077, 0.2035, 0.2096, 0.1974, 0.2065, 0.1984, 0.2047, 0.2102, 0.2056,\n         0.2111, 0.2112, 0.2067, 0.2039, 0.2021, 0.2035, 0.2015, 0.1834, 0.1905,\n         0.2059, 0.2052, 0.2052, 0.1892, 0.2001, 0.1991, 0.2050, 0.2024, 0.2093,\n         0.2104, 0.2007, 0.2100, 0.1988, 0.1895, 0.1999, 0.2009, 0.2069, 0.2135,\n         0.1948, 0.2116, 0.1986, 0.1980, 0.1937, 0.1970, 0.2007, 0.2006, 0.1952,\n         0.2038, 0.2047, 0.2028, 0.1999, 0.1964, 0.2048, 0.2022, 0.2015, 0.2061,\n         0.2032, 0.2024, 0.1970, 0.1846, 0.1995, 0.1991, 0.2061, 0.2078, 0.1917,\n         0.2001, 0.2058, 0.1946, 0.2025, 0.1998, 0.2066, 0.2030, 0.1995, 0.2035,\n         0.1996, 0.2079, 0.1934, 0.2043, 0.2035, 0.2096, 0.2030, 0.2057, 0.2047,\n         0.2009, 0.2005, 0.2158, 0.2031, 0.1896, 0.2059, 0.2012, 0.2117, 0.2055,\n         0.2035, 0.2006]], grad_fn=<ViewBackward0>)"
+      "text/plain": [
+       "tensor([[0.1952, 0.2066, 0.1998, 0.2097, 0.2002, 0.2060, 0.2034, 0.2010, 0.1997,\n",
+       "         0.2035, 0.2030, 0.1976, 0.1983, 0.1964, 0.2027, 0.2046, 0.2035, 0.2029,\n",
+       "         0.2082, 0.2109, 0.2003, 0.2054, 0.2026, 0.2103, 0.1970, 0.2057, 0.1945,\n",
+       "         0.2000, 0.1880, 0.2057, 0.1968, 0.2006, 0.2054, 0.2093, 0.1914, 0.2065,\n",
+       "         0.2077, 0.2035, 0.2096, 0.1974, 0.2065, 0.1984, 0.2047, 0.2102, 0.2056,\n",
+       "         0.2111, 0.2112, 0.2067, 0.2039, 0.2021, 0.2035, 0.2015, 0.1834, 0.1905,\n",
+       "         0.2059, 0.2052, 0.2052, 0.1892, 0.2001, 0.1991, 0.2050, 0.2024, 0.2093,\n",
+       "         0.2104, 0.2007, 0.2100, 0.1988, 0.1895, 0.1999, 0.2009, 0.2069, 0.2135,\n",
+       "         0.1948, 0.2116, 0.1986, 0.1980, 0.1937, 0.1970, 0.2007, 0.2006, 0.1952,\n",
+       "         0.2038, 0.2047, 0.2028, 0.1999, 0.1964, 0.2048, 0.2022, 0.2015, 0.2061,\n",
+       "         0.2032, 0.2024, 0.1970, 0.1846, 0.1995, 0.1991, 0.2061, 0.2078, 0.1917,\n",
+       "         0.2001, 0.2058, 0.1946, 0.2025, 0.1998, 0.2066, 0.2030, 0.1995, 0.2035,\n",
+       "         0.1996, 0.2079, 0.1934, 0.2043, 0.2035, 0.2096, 0.2030, 0.2057, 0.2047,\n",
+       "         0.2009, 0.2005, 0.2158, 0.2031, 0.1896, 0.2059, 0.2012, 0.2117, 0.2055,\n",
+       "         0.2035, 0.2006]], grad_fn=<ViewBackward0>)"
+      ]
      },
      "execution_count": 284,
      "metadata": {},
@@ -1209,19 +1522,348 @@
    ],
    "source": [
     "y"
-   ],
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
    "metadata": {
     "collapsed": false
-   }
+   },
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "/home/hb/python/efficientnet_kincnn/..\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": [
+       "EfficientNet(\n",
+       "  (_conv_stem): Conv2dStaticSamePadding(\n",
+       "    1, 8, kernel_size=(15, 1), stride=(2, 1), bias=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 7, 7))\n",
+       "  )\n",
+       "  (_bn0): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_blocks): ModuleList(\n",
+       "    (0): MBConvBlock(\n",
+       "      (_expand_conv): Conv2dStaticSamePadding(\n",
+       "        8, 16, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn0): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        16, 16, kernel_size=(8, 2), stride=(2, 2), groups=16, bias=False\n",
+       "        (static_padding): ZeroPad2d((0, 1, 3, 3))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        16, 2, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        2, 16, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "    (1): MBConvBlock(\n",
+       "      (_expand_conv): Conv2dStaticSamePadding(\n",
+       "        16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn0): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        32, 32, kernel_size=(8, 3), stride=(2, 1), groups=32, bias=False\n",
+       "        (static_padding): ZeroPad2d((1, 1, 3, 3))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        32, 4, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        4, 32, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "    (2): MBConvBlock(\n",
+       "      (_expand_conv): Conv2dStaticSamePadding(\n",
+       "        32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn0): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        64, 64, kernel_size=(6, 3), stride=(2, 2), groups=64, bias=False\n",
+       "        (static_padding): ZeroPad2d((0, 1, 2, 3))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        64, 8, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        8, 64, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "  )\n",
+       "  (_conv_head): Conv2dStaticSamePadding(\n",
+       "    64, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_avg_pooling): AdaptiveAvgPool2d(output_size=1)\n",
+       "  (_dropout): Dropout(p=0.7, inplace=False)\n",
+       "  (_fc): Linear(in_features=8, out_features=1, bias=True)\n",
+       "  (_swish): MemoryEfficientSwish()\n",
+       ")"
+      ]
+     },
+     "execution_count": 3,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "import os\n",
+    "import sys\n",
+    "\n",
+    "print(os.path.join(os.getcwd(), '..'))\n",
+    "sys.path.append(os.path.join(os.getcwd(), '..'))\n",
+    "import efficientnet_kincnn\n",
+    "import torch\n",
+    "model = efficientnet_kincnn.EfficientNet.from_name('efficientnet-phospho-B-15')\n",
+    "model"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "kk\n"
+     ]
+    }
+   ],
+   "source": [
+    "if 1:\n",
+    "    print('kk')"
+   ]
   },
   {
    "cell_type": "code",
+   "execution_count": 5,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "EfficientNet(\n",
+       "  (_conv_stem): Conv2dStaticSamePadding(\n",
+       "    1, 8, kernel_size=(15, 1), stride=(2, 1), bias=False\n",
+       "    (static_padding): ZeroPad2d((0, 0, 7, 7))\n",
+       "  )\n",
+       "  (_bn0): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_blocks): ModuleList(\n",
+       "    (0): MBConvBlock(\n",
+       "      (_expand_conv): Conv2dStaticSamePadding(\n",
+       "        8, 16, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn0): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        16, 16, kernel_size=(8, 2), stride=(2, 2), groups=16, bias=False\n",
+       "        (static_padding): ZeroPad2d((0, 1, 3, 3))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        16, 2, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        2, 16, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "    (1): MBConvBlock(\n",
+       "      (_expand_conv): Conv2dStaticSamePadding(\n",
+       "        16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn0): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        32, 32, kernel_size=(8, 3), stride=(2, 1), groups=32, bias=False\n",
+       "        (static_padding): ZeroPad2d((1, 1, 3, 3))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        32, 4, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        4, 32, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "    (2): MBConvBlock(\n",
+       "      (_expand_conv): Conv2dStaticSamePadding(\n",
+       "        32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn0): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_depthwise_conv): Conv2dStaticSamePadding(\n",
+       "        64, 64, kernel_size=(6, 3), stride=(2, 2), groups=64, bias=False\n",
+       "        (static_padding): ZeroPad2d((0, 1, 2, 3))\n",
+       "      )\n",
+       "      (_bn1): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_se_reduce): Conv2dStaticSamePadding(\n",
+       "        64, 8, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_se_expand): Conv2dStaticSamePadding(\n",
+       "        8, 64, kernel_size=(1, 1), stride=(1, 1)\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_project_conv): Conv2dStaticSamePadding(\n",
+       "        64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "        (static_padding): Identity()\n",
+       "      )\n",
+       "      (_bn2): BatchNorm2d(64, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "      (_swish): MemoryEfficientSwish()\n",
+       "    )\n",
+       "  )\n",
+       "  (_conv_head): Conv2dStaticSamePadding(\n",
+       "    64, 8, kernel_size=(1, 1), stride=(1, 1), bias=False\n",
+       "    (static_padding): Identity()\n",
+       "  )\n",
+       "  (_bn1): BatchNorm2d(8, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)\n",
+       "  (_avg_pooling): AdaptiveAvgPool2d(output_size=1)\n",
+       "  (_dropout): Dropout(p=0.7, inplace=False)\n",
+       "  (_fc): Linear(in_features=8, out_features=1, bias=True)\n",
+       "  (_swish): MemoryEfficientSwish()\n",
+       ")"
+      ]
+     },
+     "execution_count": 5,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "model"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "x0 = torch.randn((1, 1, 263, 15))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from torchinfo import summary"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'model' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m summary(model, input_size\u001b[39m=\u001b[39m(\u001b[39m1024\u001b[39m, \u001b[39m1\u001b[39m, \u001b[39m263\u001b[39m, \u001b[39m15\u001b[39m))\n",
+      "\u001b[0;31mNameError\u001b[0m: name 'model' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "summary(model, input_size=(1024, 1, 263, 15))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 7,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "RuntimeError",
+     "evalue": "Given groups=1, weight of size [8, 1, 15, 1], expected input[1, 2, 277, 15] to have 1 channels, but got 2 channels instead",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[7], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[39mimport\u001b[39;00m \u001b[39mtorchsummary\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m torchsummary\u001b[39m.\u001b[39;49msummary(model, input_size\u001b[39m=\u001b[39;49m(\u001b[39m263\u001b[39;49m, \u001b[39m15\u001b[39;49m))\n",
+      "File \u001b[0;32m~/anaconda3/envs/phos/lib/python3.10/site-packages/torchsummary/torchsummary.py:72\u001b[0m, in \u001b[0;36msummary\u001b[0;34m(model, input_size, batch_size, device)\u001b[0m\n\u001b[1;32m     68\u001b[0m model\u001b[39m.\u001b[39mapply(register_hook)\n\u001b[1;32m     70\u001b[0m \u001b[39m# make a forward pass\u001b[39;00m\n\u001b[1;32m     71\u001b[0m \u001b[39m# print(x.shape)\u001b[39;00m\n\u001b[0;32m---> 72\u001b[0m model(\u001b[39m*\u001b[39;49mx)\n\u001b[1;32m     74\u001b[0m \u001b[39m# remove these hooks\u001b[39;00m\n\u001b[1;32m     75\u001b[0m \u001b[39mfor\u001b[39;00m h \u001b[39min\u001b[39;00m hooks:\n",
+      "File \u001b[0;32m~/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/module.py:1194\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m   1190\u001b[0m \u001b[39m# If we don't have any hooks, we want to skip the rest of the logic in\u001b[39;00m\n\u001b[1;32m   1191\u001b[0m \u001b[39m# this function, and just call forward.\u001b[39;00m\n\u001b[1;32m   1192\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m (\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_backward_hooks \u001b[39mor\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_forward_hooks \u001b[39mor\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_forward_pre_hooks \u001b[39mor\u001b[39;00m _global_backward_hooks\n\u001b[1;32m   1193\u001b[0m         \u001b[39mor\u001b[39;00m _global_forward_hooks \u001b[39mor\u001b[39;00m _global_forward_pre_hooks):\n\u001b[0;32m-> 1194\u001b[0m     \u001b[39mreturn\u001b[39;00m forward_call(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m   1195\u001b[0m \u001b[39m# Do not call functions when jit is used\u001b[39;00m\n\u001b[1;32m   1196\u001b[0m full_backward_hooks, non_full_backward_hooks \u001b[39m=\u001b[39m [], []\n",
+      "File \u001b[0;32m~/python/efficientnet_kincnn/../efficientnet_kincnn/kincnn.py:336\u001b[0m, in \u001b[0;36mEfficientNet.forward\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m    332\u001b[0m \u001b[39m\"\"\"Calls extract_features to extract features, applies final linear layer, and returns logits.\"\"\"\u001b[39;00m\n\u001b[1;32m    333\u001b[0m \u001b[39m# bs = inputs.size(0)\u001b[39;00m\n\u001b[1;32m    334\u001b[0m \u001b[39m# print(bs)\u001b[39;00m\n\u001b[1;32m    335\u001b[0m \u001b[39m# Convolution layers\u001b[39;00m\n\u001b[0;32m--> 336\u001b[0m x \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mextract_features(inputs)\n\u001b[1;32m    338\u001b[0m \u001b[39m# Pooling and final linear layer\u001b[39;00m\n\u001b[1;32m    339\u001b[0m x \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_avg_pooling(x)\n",
+      "File \u001b[0;32m~/python/efficientnet_kincnn/../efficientnet_kincnn/kincnn.py:313\u001b[0m, in \u001b[0;36mEfficientNet.extract_features\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m    310\u001b[0m \u001b[39m\"\"\"Returns output of the final convolution layer\"\"\"\u001b[39;00m\n\u001b[1;32m    312\u001b[0m \u001b[39m# Stem\u001b[39;00m\n\u001b[0;32m--> 313\u001b[0m x \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_conv_stem(inputs)\n\u001b[1;32m    314\u001b[0m x \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_bn0(x)\n\u001b[1;32m    315\u001b[0m x \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_swish(x)\n",
+      "File \u001b[0;32m~/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/module.py:1212\u001b[0m, in \u001b[0;36mModule._call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m   1209\u001b[0m     bw_hook \u001b[39m=\u001b[39m hooks\u001b[39m.\u001b[39mBackwardHook(\u001b[39mself\u001b[39m, full_backward_hooks)\n\u001b[1;32m   1210\u001b[0m     \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m bw_hook\u001b[39m.\u001b[39msetup_input_hook(\u001b[39minput\u001b[39m)\n\u001b[0;32m-> 1212\u001b[0m result \u001b[39m=\u001b[39m forward_call(\u001b[39m*\u001b[39;49m\u001b[39minput\u001b[39;49m, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m   1213\u001b[0m \u001b[39mif\u001b[39;00m _global_forward_hooks \u001b[39mor\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_forward_hooks:\n\u001b[1;32m   1214\u001b[0m     \u001b[39mfor\u001b[39;00m hook \u001b[39min\u001b[39;00m (\u001b[39m*\u001b[39m_global_forward_hooks\u001b[39m.\u001b[39mvalues(), \u001b[39m*\u001b[39m\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_forward_hooks\u001b[39m.\u001b[39mvalues()):\n",
+      "File \u001b[0;32m~/python/efficientnet_kincnn/utils.py:379\u001b[0m, in \u001b[0;36mConv2dStaticSamePadding.forward\u001b[0;34m(self, x)\u001b[0m\n\u001b[1;32m    377\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mforward\u001b[39m(\u001b[39mself\u001b[39m, x):\n\u001b[1;32m    378\u001b[0m     x \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mstatic_padding(x)\n\u001b[0;32m--> 379\u001b[0m     x \u001b[39m=\u001b[39m F\u001b[39m.\u001b[39;49mconv2d(\n\u001b[1;32m    380\u001b[0m         x,\n\u001b[1;32m    381\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mweight,\n\u001b[1;32m    382\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mbias,\n\u001b[1;32m    383\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mstride,\n\u001b[1;32m    384\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mpadding,\n\u001b[1;32m    385\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mdilation,\n\u001b[1;32m    386\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mgroups,\n\u001b[1;32m    387\u001b[0m     )\n\u001b[1;32m    388\u001b[0m     \u001b[39mreturn\u001b[39;00m x\n",
+      "\u001b[0;31mRuntimeError\u001b[0m: Given groups=1, weight of size [8, 1, 15, 1], expected input[1, 2, 277, 15] to have 1 channels, but got 2 channels instead"
+     ]
+    }
+   ],
+   "source": [
+    "import torchsummary\n",
+    "torchsummary.summary(model, input_size=(263, 15))"
+   ]
+  },
+  {
+   "cell_type": "code",
+=======
+>>>>>>> 7d235b7e18d2f60ff0dc8e254a1387c542004c24
    "execution_count": null,
+   "metadata": {},
    "outputs": [],
-   "source": [],
-   "metadata": {
-    "collapsed": false
-   }
+   "source": []
   }
  ],
  "metadata": {
@@ -1233,14 +1875,14 @@
   "language_info": {
    "codemirror_mode": {
     "name": "ipython",
-    "version": 2
+    "version": 3
    },
    "file_extension": ".py",
    "mimetype": "text/x-python",
    "name": "python",
    "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython2",
-   "version": "2.7.6"
+   "pygments_lexer": "ipython3",
+   "version": "3.10.9"
   }
  },
  "nbformat": 4,
diff --git a/test.py b/test.py
new file mode 100644
index 0000000..6686abc
--- /dev/null
+++ b/test.py
@@ -0,0 +1,8 @@
+import os
+import sys
+
+print(os.path.join(os.getcwd(), '..'))
+sys.path.append(os.path.join(os.getcwd(), '..'))
+import efficientnet_kincnn
+import torch
+model = efficientnet_kincnn.EfficientNet.from_name('efficientnet-phospho-B-15')
\ No newline at end of file
diff --git a/train.py b/train.py
new file mode 100644
index 0000000..4a684f8
--- /dev/null
+++ b/train.py
@@ -0,0 +1,340 @@
+import sys
+
+# sys.path.append('/home/hb/anaconda3/envs/pp_predict/lib/python3.9/site-packages')
+# # sys.path.append('/home/hb/python/neoantigen/from_ju/IEDB_data_filtering')
+# # # sys.path.append('/home/hb/python/neoantigen/code/module')
+sys.path.append("/home/hb/python/phospho/code/module")
+import os
+import random
+from datetime import datetime
+
+import numpy as np
+import torch
+import torch.utils.data as data_utils
+import wandb
+from EarlyStopping import EarlyStopping
+from matplotlib import pyplot as plt
+from module.efficientnet_new import EfficientNet
+from phospho_preprocessing import AttrDict, prepare_dataset
+from precision_recall import precision_recall
+from Radam import RAdam
+from sklearn.metrics import accuracy_score, f1_score, roc_auc_score
+from sklearn.model_selection import KFold, StratifiedShuffleSplit
+from torch import nn
+from torch.autograd import Variable
+from torch.utils.data import ConcatDataset, DataLoader, Dataset
+from tqdm.auto import tqdm
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(
+        sys.argv[7]
+    )
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f"efficientnet-phospho-B-15"
+    config.save_dir = f'/home/hb/python/phospho/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f"{config.save_dir}", exist_ok=True)
+
+    import yaml
+
+    with open(f"{config.save_dir}/config.yaml", "w") as f:
+        yaml.dump(config, f)
+
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+
+seed_everything(42)
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f"cuda:{config.gpu_num}" if torch.cuda.is_available() else "cpu")
+
+print("Device:", device)
+print("Current cuda device:", torch.cuda.current_device())
+print(f"Using CUDA_VISIBLE_DEVICES {config.gpu_num}")
+print("Count of using GPUs:", torch.cuda.device_count())
+
+"""prepare dataset"""
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(
+    train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True
+)
+valid_loader = data_utils.DataLoader(
+    valid_set,
+    batch_size=config.batch_size,
+)
+
+dataloaders = {"train": train_loader, "valid": valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ["train", "valid"]}
+dataset = ConcatDataset([train_set, valid_set])
+
+
+def train_model_5cv():
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project="phospho", entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name
+
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+        globals()[f"{fold}_train_loss"] = []
+        globals()[f"{fold}_train_precision"] = []
+        globals()[f"{fold}_train_recall"] = []
+        globals()[f"{fold}_train_f1"] = []
+        globals()[f"{fold}_train_acc"] = []
+
+        globals()[f"{fold}_valid_loss"] = []
+        globals()[f"{fold}_valid_precision"] = []
+        globals()[f"{fold}_valid_recall"] = []
+        globals()[f"{fold}_valid_f1"] = []
+        globals()[f"{fold}_valid_acc"] = []
+        globals()[f"{fold}_lr"] = []
+
+        globals()[f"{fold}_result"] = []
+        print(f"FOLD {fold}")
+        print("--------------------------------")
+
+        """model compile"""
+        model = EfficientNet.from_name(f"{config.model}")
+
+        """optimizer & loss"""
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(
+            optimizer,
+            mode="min",
+            factor=config.scheduler_factor,
+            patience=config.scheduler_patience,
+            threshold=0.0001,
+            cooldown=0,
+            min_lr=0,
+            verbose=1,
+        )
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]["lr"])
+        state_dict = torch.load(
+            f"/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth"
+        )
+        model.load_state_dict(state_dict["state_dict"])
+        model = model.to(device)
+        criterion.to(device)
+
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+            dataset, batch_size=config.batch_size, sampler=train_subsampler
+        )
+        validloader = torch.utils.data.DataLoader(
+            dataset, batch_size=config.batch_size, sampler=test_subsampler
+        )
+
+        early_stopping = EarlyStopping(patience=config.erls_patience, verbose=True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print("-" * 60)
+            print("Epoch {}/{}".format(epoch + 1, config.n_epoch))
+
+            train_corrects = 0.0
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(
+                tqdm(trainloader, position=1, leave=True)
+            ):
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(
+                    inputs.to(device, dtype=torch.float), requires_grad=True
+                )
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs)  # forward
+                precision, recall, f1 = precision_recall(
+                    labels.float().view(-1, 1), pred
+                )  # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1, 1)).to(device)
+                preds = (pred > 0.5).float()
+
+                """backward"""
+                optimizer.zero_grad()  # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                """train record"""
+                train_loss += loss.item()
+                train_preds = (pred >= 0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            """epoch train record"""
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+            # ---valid 1 epoch
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(
+                    tqdm(validloader, position=1, leave=True)
+                ):
+                    # model.train(False)
+                    inputs = Variable(
+                        inputs.to(device, dtype=torch.float), requires_grad=True
+                    )
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs)
+                    precision, recall, f1 = precision_recall(
+                        labels.float().view(-1, 1), pred
+                    )  # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1, 1)).to(device)
+                    # loss = criterion(pred, labels).to(device)
+
+                    """valid record"""
+                    valid_loss += loss.item()
+                    valid_preds = (pred >= 0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+
+            """epoch valid record"""
+            epoch_valid_loss = valid_loss / len(validloader)
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f"{fold}_train_loss"].append(epoch_train_loss)
+            globals()[f"{fold}_train_precision"].append(epoch_train_precision)
+            globals()[f"{fold}_train_recall"].append(epoch_train_recall)
+            globals()[f"{fold}_train_f1"].append(epoch_train_f1)
+            globals()[f"{fold}_train_acc"].append(epoch_train_acc)
+
+            globals()[f"{fold}_valid_loss"].append(epoch_valid_loss)
+            globals()[f"{fold}_valid_precision"].append(epoch_valid_precision)
+            globals()[f"{fold}_valid_recall"].append(epoch_valid_recall)
+            globals()[f"{fold}_valid_f1"].append(epoch_valid_f1)
+            globals()[f"{fold}_valid_acc"].append(epoch_valid_acc)
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {
+                "epoch": epoch,
+                "loss": epoch_valid_loss,
+                "model": model,
+                # 'state_dict': model.module.state_dict(),
+                "state_dict": model.state_dict(),
+                "optimizer": optimizer.state_dict(),
+            }
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold)
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(
+                    f"Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}"
+                )
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log(
+                {
+                    f"{fold} fold train": {"loss": epoch_train_loss},
+                    f"{fold} fold val": {"loss": epoch_valid_loss},
+                    f"{fold} fold learning_rate": optimizer.param_groups[0]["lr"],
+                }
+            )
+            globals()[f"{fold}_lr"].append(optimizer.param_groups[0]["lr"])
+            scheduler.step(epoch_valid_loss)  # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]["lr"])
+            print("-" * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()["0_valid_loss"], label="0fold")
+    plt.plot(globals()["1_valid_loss"], label="1fold")
+    plt.plot(globals()["2_valid_loss"], label="2fold")
+    plt.plot(globals()["3_valid_loss"], label="3fold")
+    plt.plot(globals()["4_valid_loss"], label="4fold")
+    plt.title("Validation loss")
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print("Best val Loss: {:4f}".format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+
+train_model_5cv()
diff --git a/utils.py b/utils.py
index 2617e34..d70473c 100644
--- a/utils.py
+++ b/utils.py
@@ -58,8 +58,10 @@ BlockArgs = collections.namedtuple(
     "BlockArgs",
     [
         "num_repeat",
-        "kernel_size",
-        "stride",
+        "conv_kernel_size",
+        "pool_kernel_size",
+        "conv_stride",
+        "pool_stride",
         "expand_ratio",
         "input_filters",
         "output_filters",
@@ -294,47 +296,6 @@ class Conv2dDynamicSamePadding(nn.Conv2d):
         )
 
 
-# class Conv2dNonPadding(nn.Conv2d):
-#     """2D Convolutions like TensorFlow, for a fixed image size"""
-#
-#     def __init__(
-#         self,
-#         in_channels,
-#         out_channels,
-#         kernel_size,
-#         stride=1,
-#         image_size=None,
-#         **kwargs
-#     ):
-#         super().__init__(in_channels, out_channels, kernel_size, stride, **kwargs)
-#         self.stride = self.stride if len(self.stride) == 2 else [self.stride[0]] * 2
-#
-#         # Calculate padding based on image size and save it
-#         assert image_size is not None
-#         ih, iw = image_size if type(image_size) == list else [image_size, image_size]
-#         # print(self.weight)
-#         print(type(self.weight))
-#         print(self.weight.shape)
-#         kh, kw = self.weight.size()[-2:]
-#         print(kh, kw)
-#         sh, sw = self.stride
-#         oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
-#         self.static_padding = nn.Identity()
-#
-#     def forward(self, x):
-#         x = self.static_padding(x)
-#         x = F.conv2d(
-#             x,
-#             self.weight,
-#             self.bias,
-#             self.stride,
-#             self.padding,
-#             self.dilation,
-#             self.groups,
-#         )
-#         return x
-
-
 class Conv2dStaticSamePadding(nn.Conv2d):
     """2D Convolutions like TensorFlow's 'SAME' mode, with the given input image size.
     The padding mudule is calculated in construction function, then used in forward.
@@ -409,6 +370,10 @@ class MaxPool2dDynamicSamePadding(nn.MaxPool2d):
     The padding is operated in forward function by calculating dynamically.
     """
 
+    """
+    2023.05.16 ÏàòÏ†ï
+    """
+
     def __init__(
         self,
         kernel_size,
@@ -460,7 +425,7 @@ class MaxPool2dStaticSamePadding(nn.MaxPool2d):
 
     def __init__(self, kernel_size, stride, image_size=None, **kwargs):
         super().__init__(kernel_size, stride, **kwargs)
-        self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        # self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
         self.kernel_size = (
             [self.kernel_size] * 2
             if isinstance(self.kernel_size, int)
@@ -474,10 +439,12 @@ class MaxPool2dStaticSamePadding(nn.MaxPool2d):
         assert image_size is not None
         ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
         kh, kw = self.kernel_size
-        sh, sw = self.stride
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
         oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
-        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
-        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
         if pad_h > 0 or pad_w > 0:
             self.static_padding = nn.ZeroPad2d(
                 (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
@@ -509,7 +476,7 @@ def efficientnet_params(model_name):
     params_dict = {
         # Coefficients:   width,depth,res,dropout
         "efficientnet-phospho-A-15": (1.0, 1.0, [4128, 15], 0.4),
-        "efficientnet-phospho-B-15": (1.0, 1.0, [263, 15], 0.7),
+        "KINCNN": (1.0, 1.0, [263, 15], 0.7),
         "efficientnet-HLA-B-9": (1.0, 1.0, [356, 15], 0.2),
         "efficientnet-HLA-C-9": (1.0, 1.0, [338, 9], 0.2),
         "efficientnet-HLA-A-10": (1.0, 1.0, [356, 15], 0.2),
@@ -539,16 +506,19 @@ class BlockDecoder(object):
         # assert ("s" in options and len(options["s"]) == 1) or (
         #     len(options["s"]) == 2 and options["s"][0] == options["s"][1]
         # )
-
+        # "conv_kernel_size",
+        # "pool_kernel_size",
         return BlockArgs(
-            kernel_size=(int(options["kh"]), int(options["kw"])),
+            conv_kernel_size=(int(options["ckh"]), int(options["ckw"])),
+            pool_kernel_size=(int(options["pkh"]), int(options["pkw"])) if int(options["pkh"]) else None,
             num_repeat=int(options["r"]),
             input_filters=int(options["i"]),
             output_filters=int(options["o"]),
             expand_ratio=int(options["e"]),
             id_skip=("noskip" not in block_string),
             se_ratio=float(options["se"]) if "se" in options else None,
-            stride=(int(options["sh"]), int(options["sw"])),
+            conv_stride=(int(options["csh"]), int(options["csw"])),
+            pool_stride=(int(options["psh"]), int(options["psw"])),
         )
 
     @staticmethod
@@ -556,10 +526,14 @@ class BlockDecoder(object):
         """Encodes a block to a string."""
         args = [
             "r%d" % block.num_repeat,
-            "kh%d" % block.kernel_size[0],
-            "kw%d" % block.kernel_size[1],
-            "sh%d" % block.stride[0],
-            "sw%d" % block.stride[1],
+            "ckh%d" % block.conv_kernel_size[0],
+            "ckw%d" % block.conv_kernel_size[1],
+            "pkh%d" % block.pool_kernel_size[0],
+            "pkw%d" % block.pool_kernel_size[1],
+            "csh%d" % block.conv_stride[0],
+            "psh%d" % block.pool_stride[0],
+            "csw%d" % block.conv_stride[1],
+            "psw%d" % block.pool_stride[1],
             # "s%d%d" % (block.strides[0], block.strides[1]),
             "e%s" % block.expand_ratio,
             "i%d" % block.input_filters,
@@ -606,17 +580,16 @@ class BlockDecoder(object):
 def efficientnet(
     width_coefficient=None,
     depth_coefficient=None,
-    dropout_rate=0.2,
+    dropout_rate=0.5,
     drop_connect_rate=0.2,
     image_size=None,
     num_classes=1,
 ):
     """Creates a efficientnet model."""
-
     blocks_args = [
-        "r1_kh8_kw2_sh2_sw2_e2_i8_o16_se0.25",
-        "r1_kh8_kw3_sh2_sw1_e2_i16_o32_se0.25",
-        "r1_kh6_kw3_sh2_sw2_e2_i32_o64_se0.25",
+        "r1_ckh5_ckw1_pkh0_pkw1_csh1_csw1_psh3_psw1_e1_i8_o16_se0.25",
+        "r1_ckh5_ckw1_pkh0_pkw0_csh2_csw1_psh2_psw1_e1_i16_o32_se0.25",
+        # "r1_ckh3_ckw3_pkh2_pkw2_csh1_csw1_psh2_psw2_e1_i8_o16_se0.25",
         # 'r3_k3_s22_e6_i40_o80_se0.25',
         # 'r3_k5_s11_e6_i80_o112_se0.25',
         # 'r4_k5_s22_e6_i112_o192_se0.25',
diff --git a/utils2.py b/utils2.py
new file mode 100644
index 0000000..86bfdea
--- /dev/null
+++ b/utils2.py
@@ -0,0 +1,672 @@
+"""utils.py - Helper functions for building the model and for loading model parameters.
+   These helper functions are built to mirror those in the official TensorFlow implementation.
+"""
+
+# Author: lukemelas (github username)
+# Github repo: https://github.com/lukemelas/EfficientNet-PyTorch
+# With adjustments and added comments by workingcoder (github username).
+
+import collections
+import math
+import re
+from functools import partial
+
+import torch
+from torch import nn
+from torch.nn import functional as F
+from torch.utils import model_zoo
+
+################################################################################
+# Help functions for model architecture
+################################################################################
+
+# GlobalParams and BlockArgs: Two namedtuples
+# Swish and MemoryEfficientSwish: Two implementations of the method
+# round_filters and round_repeats:
+#     Functions to calculate params for scaling model width and depth ! ! !
+# get_width_and_height_from_size and calculate_output_image_size
+# drop_connect: A structural design
+# get_same_padding_conv2d:
+#     Conv2dDynamicSamePadding
+#     Conv2dStaticSamePadding
+# get_same_padding_maxPool2d:
+#     MaxPool2dDynamicSamePadding
+#     MaxPool2dStaticSamePadding
+#     It's an additional function, not used in EfficientNet,
+#     but can be used in other model (such as EfficientDet).
+
+# Parameters for the entire model (stem, all blocks, and head)
+GlobalParams = collections.namedtuple(
+    "GlobalParams",
+    [
+        "width_coefficient",
+        "depth_coefficient",
+        "image_size",
+        "dropout_rate",
+        "num_classes",
+        "batch_norm_momentum",
+        "batch_norm_epsilon",
+        "drop_connect_rate",
+        "depth_divisor",
+        "min_depth",
+        "include_top",
+    ],
+)
+
+# Parameters for an individual model block
+BlockArgs = collections.namedtuple(
+    "BlockArgs",
+    [
+        "num_repeat",
+        "conv_kernel_size",
+        "pool_kernel_size",
+        "conv_stride",
+        "pool_stride",
+        "expand_ratio",
+        "input_filters",
+        "output_filters",
+        "se_ratio",
+        "id_skip",
+    ],
+)
+
+# Set GlobalParams and BlockArgs's defaults
+GlobalParams.__new__.__defaults__ = (None,) * len(GlobalParams._fields)
+BlockArgs.__new__.__defaults__ = (None,) * len(BlockArgs._fields)
+
+# Swish activation function
+if hasattr(nn, "SiLU"):
+    Swish = nn.SiLU
+else:
+    # For compatibility with old PyTorch versions
+    class Swish(nn.Module):
+        def forward(self, x):
+            return x * torch.sigmoid(x)
+
+
+# A memory-efficient implementation of Swish function
+class SwishImplementation(torch.autograd.Function):
+    @staticmethod
+    def forward(ctx, i):
+        result = i * torch.sigmoid(i)
+        ctx.save_for_backward(i)
+        return result
+
+    @staticmethod
+    def backward(ctx, grad_output):
+        i = ctx.saved_tensors[0]
+        sigmoid_i = torch.sigmoid(i)
+        return grad_output * (sigmoid_i * (1 + i * (1 - sigmoid_i)))
+
+
+class MemoryEfficientSwish(nn.Module):
+    def forward(self, x):
+        return SwishImplementation.apply(x)
+
+
+def round_filters(filters, global_params):
+    """Calculate and round number of filters based on width multiplier.
+       Use width_coefficient, depth_divisor and min_depth of global_params.
+
+    Args:
+        filters (int): Filters number to be calculated.
+        global_params (namedtuple): Global params of the model.
+
+    Returns:
+        new_filters: New filters number after calculating.
+    """
+    multiplier = global_params.width_coefficient
+    if not multiplier:
+        return filters
+    # TODO: modify the params names.
+    #       maybe the names (width_divisor,min_width)
+    #       are more suitable than (depth_divisor,min_depth).
+    divisor = global_params.depth_divisor
+    min_depth = global_params.min_depth
+    filters *= multiplier
+    min_depth = min_depth or divisor  # pay attention to this line when using min_depth
+    # follow the formula transferred from official TensorFlow implementation
+    new_filters = max(min_depth, int(filters + divisor / 2) // divisor * divisor)
+    if new_filters < 0.9 * filters:  # prevent rounding by more than 10%
+        new_filters += divisor
+    return int(new_filters)
+
+
+def round_repeats(repeats, global_params):
+    """Calculate module's repeat number of a block based on depth multiplier.
+       Use depth_coefficient of global_params.
+
+    Args:
+        repeats (int): num_repeat to be calculated.
+        global_params (namedtuple): Global params of the model.
+
+    Returns:
+        new repeat: New repeat number after calculating.
+    """
+    multiplier = global_params.depth_coefficient
+    if not multiplier:
+        return repeats
+    # follow the formula transferred from official TensorFlow implementation
+    return int(math.ceil(multiplier * repeats))
+
+
+def drop_connect(inputs, p, training):
+    """Drop connect.
+
+    Args:
+        input (tensor: BCWH): Input of this structure.
+        p (float: 0.0~1.0): Probability of drop connection.
+        training (bool): The running mode.
+
+    Returns:
+        output: Output after drop connection.
+    """
+    assert 0 <= p <= 1, "p must be in range of [0,1]"
+
+    if not training:
+        return inputs
+
+    batch_size = inputs.shape[0]
+    keep_prob = 1 - p
+
+    # generate binary_tensor mask according to probability (p for 0, 1-p for 1)
+    random_tensor = keep_prob
+    random_tensor += torch.rand(
+        [batch_size, 1, 1, 1], dtype=inputs.dtype, device=inputs.device
+    )
+    binary_tensor = torch.floor(random_tensor)
+
+    output = inputs / keep_prob * binary_tensor
+    return output
+
+
+def get_width_and_height_from_size(x):
+    """Obtain height and width from x.
+
+    Args:
+        x (int, tuple or list): Data size.
+
+    Returns:
+        size: A tuple or list (H,W).
+    """
+    if isinstance(x, int):
+        return x, x
+    if isinstance(x, list) or isinstance(x, tuple):
+        return x
+    else:
+        raise TypeError()
+
+
+def calculate_output_image_size(input_image_size, stride):
+    """Calculates the output image size when using Conv2dSamePadding with a stride.
+       Necessary for static padding. Thanks to mannatsingh for pointing this out.
+
+    Args:
+        input_image_size (int, tuple or list): Size of input image.
+        stride (int, tuple or list): Conv2d operation's stride.
+
+    Returns:
+        output_image_size: A list [H,W].
+    """
+    if input_image_size is None:
+        return None
+    image_height, image_width = get_width_and_height_from_size(input_image_size)
+    sh, sw = stride if type(stride) == (list) or (tuple) else [stride, stride]
+    # stride = stride if isinstance(stride, int) else stride[0]
+    image_height = int(math.ceil(image_height / sh))
+    image_width = int(math.ceil(image_width / sw))
+    return [image_height, image_width]
+
+
+# Note:
+# The following 'SamePadding' functions make output size equal ceil(input size/stride).
+# Only when stride equals 1, can the output size be the same as input size.
+# Don't be confused by their function names ! ! !
+
+
+def get_same_padding_conv2d(image_size=None):
+    """Chooses static padding if you have specified an image size, and dynamic padding otherwise.
+       Static padding is necessary for ONNX exporting of models.
+
+    Args:
+        image_size (int or tuple): Size of the image.
+
+    Returns:
+        Conv2dDynamicSamePadding or Conv2dStaticSamePadding.
+    """
+    if image_size is None:
+        return Conv2dDynamicSamePadding
+    else:
+        return partial(Conv2dStaticSamePadding, image_size=image_size)
+
+
+class Conv2dDynamicSamePadding(nn.Conv2d):
+    """2D Convolutions like TensorFlow, for a dynamic image size.
+    The padding is operated in forward function by calculating dynamically.
+    """
+
+    # Tips for 'SAME' mode padding.
+    #     Given the following:
+    #         i: width or height
+    #         s: stride
+    #         k: kernel size
+    #         d: dilation
+    #         p: padding
+    #     Output after Conv2d:
+    #         o = floor((i+p-((k-1)*d+1))/s+1)
+    # If o equals i, i = floor((i+p-((k-1)*d+1))/s+1),
+    # => p = (i-1)*s+((k-1)*d+1)-i
+
+    def __init__(
+        self,
+        in_channels,
+        out_channels,
+        kernel_size,
+        stride=1,
+        dilation=1,
+        groups=1,
+        bias=True,
+    ):
+        super().__init__(
+            in_channels, out_channels, kernel_size, stride, 0, dilation, groups, bias
+        )
+        self.stride = self.stride if len(self.stride) == 2 else [self.stride[0]] * 2
+
+    def forward(self, x):
+        ih, iw = x.size()[-2:]
+        kh, kw = self.weight.size()[-2:]
+        sh, sw = self.stride
+        oh, ow = math.ceil(ih / sh), math.ceil(
+            iw / sw
+        )  # change the output size according to stride ! ! !
+        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            x = F.pad(
+                x, [pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2]
+            )
+        return F.conv2d(
+            x,
+            self.weight,
+            self.bias,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.groups,
+        )
+
+
+class Conv2dStaticSamePadding(nn.Conv2d):
+    """2D Convolutions like TensorFlow's 'SAME' mode, with the given input image size.
+    The padding mudule is calculated in construction function, then used in forward.
+    """
+
+    # With the same calculation as Conv2dDynamicSamePadding
+    """
+    2023.05.15 sh, sw Î∂ÄÎ∂Ñ ÏàòÏ†ï
+    dilation(int or tuple, optional): Spacing between kernel elements.Default: 1
+    """
+
+    def __init__(
+        self,
+        in_channels,
+        out_channels,
+        kernel_size,
+        stride=1,
+        image_size=None,
+        **kwargs
+    ):
+        super().__init__(in_channels, out_channels, kernel_size, stride, **kwargs)
+
+        # Calculate padding based on image size and save it
+        assert image_size is not None
+        ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
+        kh, kw = self.weight.size()[-2:]
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            self.static_padding = nn.ZeroPad2d(
+                (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
+            )
+        else:
+            self.static_padding = nn.Identity()
+
+    def forward(self, x):
+        x = self.static_padding(x)
+        x = F.conv2d(
+            x,
+            self.weight,
+            self.bias,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.groups,
+        )
+        return x
+
+
+def get_same_padding_maxPool2d(image_size=None):
+    """Chooses static padding if you have specified an image size, and dynamic padding otherwise.
+       Static padding is necessary for ONNX exporting of models.
+
+    Args:
+        image_size (int or tuple): Size of the image.
+
+    Returns:
+        MaxPool2dDynamicSamePadding or MaxPool2dStaticSamePadding.
+    """
+    if image_size is None:
+        return MaxPool2dDynamicSamePadding
+    else:
+        return partial(MaxPool2dStaticSamePadding, image_size=image_size)
+
+
+class MaxPool2dDynamicSamePadding(nn.MaxPool2d):
+    """2D MaxPooling like TensorFlow's 'SAME' mode, with a dynamic image size.
+    The padding is operated in forward function by calculating dynamically.
+    """
+
+    """
+    2023.05.16 ÏàòÏ†ï
+    """
+
+    def __init__(
+        self,
+        kernel_size,
+        stride,
+        padding=0,
+        dilation=1,
+        return_indices=False,
+        ceil_mode=False,
+    ):
+        super().__init__(
+            kernel_size, stride, padding, dilation, return_indices, ceil_mode
+        )
+        self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        self.kernel_size = (
+            [self.kernel_size] * 2
+            if isinstance(self.kernel_size, int)
+            else self.kernel_size
+        )
+        self.dilation = (
+            [self.dilation] * 2 if isinstance(self.dilation, int) else self.dilation
+        )
+
+    def forward(self, x):
+        ih, iw = x.size()[-2:]
+        kh, kw = self.kernel_size
+        sh, sw = self.stride
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            x = F.pad(
+                x, [pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2]
+            )
+        return F.max_pool2d(
+            x,
+            self.kernel_size,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.ceil_mode,
+            self.return_indices,
+        )
+
+
+class MaxPool2dStaticSamePadding(nn.MaxPool2d):
+    """2D MaxPooling like TensorFlow's 'SAME' mode, with the given input image size.
+    The padding mudule is calculated in construction function, then used in forward.
+    """
+
+    def __init__(self, kernel_size, stride, image_size=None, **kwargs):
+        super().__init__(kernel_size, stride, **kwargs)
+        # self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        self.kernel_size = (
+            [self.kernel_size] * 2
+            if isinstance(self.kernel_size, int)
+            else self.kernel_size
+        )
+        self.dilation = (
+            [self.dilation] * 2 if isinstance(self.dilation, int) else self.dilation
+        )
+
+        # Calculate padding based on image size and save it
+        assert image_size is not None
+        ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
+        kh, kw = self.kernel_size
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            self.static_padding = nn.ZeroPad2d(
+                (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
+            )
+        else:
+            self.static_padding = nn.Identity()
+
+    def forward(self, x):
+        x = self.static_padding(x)
+        x = F.max_pool2d(
+            x,
+            self.kernel_size,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.ceil_mode,
+            self.return_indices,
+        )
+        return x
+
+
+########################################################################
+############## HELPERS FUNCTIONS FOR LOADING MODEL PARAMS ##############
+########################################################################
+
+
+def efficientnet_params(model_name):
+    """Map EfficientNet model name to parameter coefficients."""
+    params_dict = {
+        # Coefficients:   width,depth,res,dropout
+        "efficientnet-phospho-A-15": (1.0, 1.0, [4128, 15], 0.4),
+        "KINCNN": (1.0, 1.0, [263, 15], 0.7),
+        "efficientnet-HLA-B-9": (1.0, 1.0, [356, 15], 0.2),
+        "efficientnet-HLA-C-9": (1.0, 1.0, [338, 9], 0.2),
+        "efficientnet-HLA-A-10": (1.0, 1.0, [356, 15], 0.2),
+        "efficientnet-HLA-B-10": (1.0, 1.0, [326, 10], 0.2),
+        "efficientnet-HLA-C-10": (1.0, 1.0, [338, 10], 0.2),
+    }
+    return params_dict[model_name]
+
+
+class BlockDecoder(object):
+    """Block Decoder for readability, straight from the official TensorFlow repository"""
+
+    @staticmethod
+    def _decode_block_string(block_string):
+        """Gets a block through a string notation of arguments."""
+        assert isinstance(block_string, str)
+
+        ops = block_string.split("_")
+        options = {}
+        for op in ops:
+            splits = re.split(r"(\d.*)", op)
+            if len(splits) >= 2:
+                key, value = splits[:2]
+                options[key] = value
+
+        # # Check stride
+        # assert ("s" in options and len(options["s"]) == 1) or (
+        #     len(options["s"]) == 2 and options["s"][0] == options["s"][1]
+        # )
+        # "conv_kernel_size",
+        # "pool_kernel_size",
+        return BlockArgs(
+            conv_kernel_size=(int(options["ckh"]), int(options["ckw"])),
+            pool_kernel_size=(int(options["pkh"]), int(options["pkw"])) if int(options["pkh"]) else None,
+            num_repeat=int(options["r"]),
+            input_filters=int(options["i"]),
+            output_filters=int(options["o"]),
+            expand_ratio=int(options["e"]),
+            id_skip=("noskip" not in block_string),
+            se_ratio=float(options["se"]) if "se" in options else None,
+            conv_stride=(int(options["csh"]), int(options["csw"])),
+            pool_stride=(int(options["psh"]), int(options["psw"])),
+        )
+
+    @staticmethod
+    def _encode_block_string(block):
+        """Encodes a block to a string."""
+        args = [
+            "r%d" % block.num_repeat,
+            "ckh%d" % block.conv_kernel_size[0],
+            "ckw%d" % block.conv_kernel_size[1],
+            "pkh%d" % block.pool_kernel_size[0],
+            "pkw%d" % block.pool_kernel_size[1],
+            "csh%d" % block.conv_stride[0],
+            "psh%d" % block.pool_stride[0],
+            "csw%d" % block.conv_stride[1],
+            "psw%d" % block.pool_stride[1],
+            # "s%d%d" % (block.strides[0], block.strides[1]),
+            "e%s" % block.expand_ratio,
+            "i%d" % block.input_filters,
+            "o%d" % block.output_filters
+            # kernel_size is kernel size for convolution e.g. 3 x 3
+            # num_repeat specifies how many times a particular block needs to be repeated, must be greater than zero
+            # input_filters and output_filters are numbers of specified filters
+            # expand_ratio is input filter expansion ratio
+            # id_skip suggests whether to use skip connection or not
+            # se_ratio provides squeezing ratio for squeeze and excitation block
+        ]
+        if 0 < block.se_ratio <= 1:
+            args.append("se%s" % block.se_ratio)
+        if block.id_skip is False:
+            args.append("noskip")
+        return "_".join(args)
+
+    @staticmethod
+    def decode(string_list):
+        """
+        Decodes a list of string notations to specify blocks inside the network.
+        :param string_list: a list of strings, each string is a notation of block
+        :return: a list of BlockArgs namedtuples of block args
+        """
+        assert isinstance(string_list, list)
+        blocks_args = []
+        for block_string in string_list:
+            blocks_args.append(BlockDecoder._decode_block_string(block_string))
+        return blocks_args
+
+    @staticmethod
+    def encode(blocks_args):
+        """
+        Encodes a list of BlockArgs to a list of strings.
+        :param blocks_args: a list of BlockArgs namedtuples of block args
+        :return: a list of strings, each string is a notation of block
+        """
+        block_strings = []
+        for block in blocks_args:
+            block_strings.append(BlockDecoder._encode_block_string(block))
+        return block_strings
+
+
+def efficientnet(
+    width_coefficient=None,
+    depth_coefficient=None,
+    dropout_rate=0.2,
+    drop_connect_rate=0.2,
+    image_size=None,
+    num_classes=1,
+):
+    """Creates a efficientnet model."""
+
+    blocks_args = [
+        "r1_ckh5_ckw1_pkh0_pkw1_csh1_csw1_psh3_psw1_e1_i8_o16_se0.25",
+        "r1_ckh5_ckw1_pkh0_pkw0_csh2_csw1_psh2_psw1_e1_i16_o32_se0.25",
+        # "r2_ckh5_ckw5_pkh0_pkw2_csh2_csw2_psh2_psw2_e6_i12_o30_se0.25",
+        # "r3_ckh3_ckw3_pkh0_pkw2_csh2_csw1_psh2_psw2_e6_i30_o60_se0.25",
+        # "r3_ckh5_ckw5_pkh0_pkw2_csh1_csw1_psh2_psw2_e6_i60_o90_se0.25",      
+        # "r4_ckh5_ckw5_pkh0_pkw2_csh2_csw2_psh2_psw2_e6_i90_o120_se0.25",
+        # "r1_ckh3_ckw3_pkh0_pkw2_csh1_csw1_psh2_psw2_e6_i120_o200_se0.25",
+    ]
+    blocks_args = BlockDecoder.decode(blocks_args)
+
+    global_params = GlobalParams(
+        batch_norm_momentum=0.99,
+        batch_norm_epsilon=1e-3,
+        dropout_rate=dropout_rate,
+        drop_connect_rate=drop_connect_rate,
+        # data_format='channels_last',  # removed, this is always true in PyTorch
+        num_classes=num_classes,
+        width_coefficient=width_coefficient,
+        depth_coefficient=depth_coefficient,
+        depth_divisor=8,
+        min_depth=None,
+        image_size=image_size,
+    )
+
+    return blocks_args, global_params
+
+
+def get_model_params(model_name, override_params):
+    """Get the block args and global params for a given model"""
+    print('utlis2')
+    w, d, s, p = efficientnet_params(model_name)
+    # note: all models have drop connect rate = 0.2
+    blocks_args, global_params = efficientnet(
+        width_coefficient=w, depth_coefficient=d, dropout_rate=p, image_size=s
+    )
+    # else:
+    #     raise NotImplementedError('model name is not pre-defined: %s' % model_name)
+    # if override_params:
+    #     # ValueError will be raised here if override_params has fields not included in global_params.
+    #     global_params = global_params._replace(**override_params)
+    return blocks_args, global_params
+
+
+url_map = {
+    "efficientnet-b0": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b0-355c32eb.pth",
+    "efficientnet-b1": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b1-f1951068.pth",
+    "efficientnet-b2": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b2-8bb594d6.pth",
+    "efficientnet-b3": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b3-5fb5a3c3.pth",
+    "efficientnet-b4": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b4-6ed6700e.pth",
+    "efficientnet-b5": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b5-b6417697.pth",
+    "efficientnet-b6": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b6-c76e70fd.pth",
+    "efficientnet-b7": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b7-dcc49843.pth",
+}
+
+url_map_advprop = {
+    "efficientnet-b0": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b0-b64d5a18.pth",
+    "efficientnet-b1": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b1-0f3ce85a.pth",
+    "efficientnet-b2": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b2-6e9d97e5.pth",
+    "efficientnet-b3": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b3-cdd7c0f4.pth",
+    "efficientnet-b4": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b4-44fb3a87.pth",
+    "efficientnet-b5": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b5-86493f6b.pth",
+    "efficientnet-b6": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b6-ac80338e.pth",
+    "efficientnet-b7": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b7-4652b6dd.pth",
+    "efficientnet-b8": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b8-22a8fe65.pth",
+}
+
+
+def load_pretrained_weights(model, model_name, load_fc=True, advprop=False):
+    """Loads pretrained weights, and downloads if loading for the first time."""
+    # AutoAugment or Advprop (different preprocessing)
+    url_map_ = url_map_advprop if advprop else url_map
+    state_dict = model_zoo.load_url(url_map_[model_name])
+    if load_fc:
+        model.load_state_dict(state_dict)
+    else:
+        state_dict.pop("_fc.weight")
+        state_dict.pop("_fc.bias")
+        res = model.load_state_dict(state_dict, strict=False)
+        assert set(res.missing_keys) == set(
+            ["_fc.weight", "_fc.bias"]
+        ), "issue loading pretrained weights"
+    print("Loaded pretrained weights for {}".format(model_name))
diff --git a/utils3.py b/utils3.py
new file mode 100644
index 0000000..0967b6e
--- /dev/null
+++ b/utils3.py
@@ -0,0 +1,673 @@
+"""utils.py - Helper functions for building the model and for loading model parameters.
+   These helper functions are built to mirror those in the official TensorFlow implementation.
+"""
+
+# Author: lukemelas (github username)
+# Github repo: https://github.com/lukemelas/EfficientNet-PyTorch
+# With adjustments and added comments by workingcoder (github username).
+
+import collections
+import math
+import re
+from functools import partial
+
+import torch
+from torch import nn
+from torch.nn import functional as F
+from torch.utils import model_zoo
+
+################################################################################
+# Help functions for model architecture
+################################################################################
+
+# GlobalParams and BlockArgs: Two namedtuples
+# Swish and MemoryEfficientSwish: Two implementations of the method
+# round_filters and round_repeats:
+#     Functions to calculate params for scaling model width and depth ! ! !
+# get_width_and_height_from_size and calculate_output_image_size
+# drop_connect: A structural design
+# get_same_padding_conv2d:
+#     Conv2dDynamicSamePadding
+#     Conv2dStaticSamePadding
+# get_same_padding_maxPool2d:
+#     MaxPool2dDynamicSamePadding
+#     MaxPool2dStaticSamePadding
+#     It's an additional function, not used in EfficientNet,
+#     but can be used in other model (such as EfficientDet).
+
+# Parameters for the entire model (stem, all blocks, and head)
+GlobalParams = collections.namedtuple(
+    "GlobalParams",
+    [
+        "width_coefficient",
+        "depth_coefficient",
+        "image_size",
+        "dropout_rate",
+        "num_classes",
+        "batch_norm_momentum",
+        "batch_norm_epsilon",
+        "drop_connect_rate",
+        "depth_divisor",
+        "min_depth",
+        "include_top",
+    ],
+)
+
+# Parameters for an individual model block
+BlockArgs = collections.namedtuple(
+    "BlockArgs",
+    [
+        "num_repeat",
+        "conv_kernel_size",
+        "pool_kernel_size",
+        "conv_stride",
+        "pool_stride",
+        "expand_ratio",
+        "input_filters",
+        "output_filters",
+        "se_ratio",
+        "id_skip",
+    ],
+)
+
+# Set GlobalParams and BlockArgs's defaults
+GlobalParams.__new__.__defaults__ = (None,) * len(GlobalParams._fields)
+BlockArgs.__new__.__defaults__ = (None,) * len(BlockArgs._fields)
+
+# Swish activation function
+if hasattr(nn, "SiLU"):
+    Swish = nn.SiLU
+else:
+    # For compatibility with old PyTorch versions
+    class Swish(nn.Module):
+        def forward(self, x):
+            return x * torch.sigmoid(x)
+
+
+# A memory-efficient implementation of Swish function
+class SwishImplementation(torch.autograd.Function):
+    @staticmethod
+    def forward(ctx, i):
+        result = i * torch.sigmoid(i)
+        ctx.save_for_backward(i)
+        return result
+
+    @staticmethod
+    def backward(ctx, grad_output):
+        i = ctx.saved_tensors[0]
+        sigmoid_i = torch.sigmoid(i)
+        return grad_output * (sigmoid_i * (1 + i * (1 - sigmoid_i)))
+
+
+class MemoryEfficientSwish(nn.Module):
+    def forward(self, x):
+        return SwishImplementation.apply(x)
+
+
+def round_filters(filters, global_params):
+    """Calculate and round number of filters based on width multiplier.
+       Use width_coefficient, depth_divisor and min_depth of global_params.
+
+    Args:
+        filters (int): Filters number to be calculated.
+        global_params (namedtuple): Global params of the model.
+
+    Returns:
+        new_filters: New filters number after calculating.
+    """
+    multiplier = global_params.width_coefficient
+    if not multiplier:
+        return filters
+    # TODO: modify the params names.
+    #       maybe the names (width_divisor,min_width)
+    #       are more suitable than (depth_divisor,min_depth).
+    divisor = global_params.depth_divisor
+    min_depth = global_params.min_depth
+    filters *= multiplier
+    min_depth = min_depth or divisor  # pay attention to this line when using min_depth
+    # follow the formula transferred from official TensorFlow implementation
+    new_filters = max(min_depth, int(filters + divisor / 2) // divisor * divisor)
+    if new_filters < 0.9 * filters:  # prevent rounding by more than 10%
+        new_filters += divisor
+    return int(new_filters)
+
+
+def round_repeats(repeats, global_params):
+    """Calculate module's repeat number of a block based on depth multiplier.
+       Use depth_coefficient of global_params.
+
+    Args:
+        repeats (int): num_repeat to be calculated.
+        global_params (namedtuple): Global params of the model.
+
+    Returns:
+        new repeat: New repeat number after calculating.
+    """
+    multiplier = global_params.depth_coefficient
+    if not multiplier:
+        return repeats
+    # follow the formula transferred from official TensorFlow implementation
+    return int(math.ceil(multiplier * repeats))
+
+
+def drop_connect(inputs, p, training):
+    """Drop connect.
+
+    Args:
+        input (tensor: BCWH): Input of this structure.
+        p (float: 0.0~1.0): Probability of drop connection.
+        training (bool): The running mode.
+
+    Returns:
+        output: Output after drop connection.
+    """
+    assert 0 <= p <= 1, "p must be in range of [0,1]"
+
+    if not training:
+        return inputs
+
+    batch_size = inputs.shape[0]
+    keep_prob = 1 - p
+
+    # generate binary_tensor mask according to probability (p for 0, 1-p for 1)
+    random_tensor = keep_prob
+    random_tensor += torch.rand(
+        [batch_size, 1, 1, 1], dtype=inputs.dtype, device=inputs.device
+    )
+    binary_tensor = torch.floor(random_tensor)
+
+    output = inputs / keep_prob * binary_tensor
+    return output
+
+
+def get_width_and_height_from_size(x):
+    """Obtain height and width from x.
+
+    Args:
+        x (int, tuple or list): Data size.
+
+    Returns:
+        size: A tuple or list (H,W).
+    """
+    if isinstance(x, int):
+        return x, x
+    if isinstance(x, list) or isinstance(x, tuple):
+        return x
+    else:
+        raise TypeError()
+
+
+def calculate_output_image_size(input_image_size, stride):
+    """Calculates the output image size when using Conv2dSamePadding with a stride.
+       Necessary for static padding. Thanks to mannatsingh for pointing this out.
+
+    Args:
+        input_image_size (int, tuple or list): Size of input image.
+        stride (int, tuple or list): Conv2d operation's stride.
+
+    Returns:
+        output_image_size: A list [H,W].
+    """
+    if input_image_size is None:
+        return None
+    image_height, image_width = get_width_and_height_from_size(input_image_size)
+    sh, sw = stride if type(stride) == (list) or (tuple) else [stride, stride]
+    # stride = stride if isinstance(stride, int) else stride[0]
+    image_height = int(math.ceil(image_height / sh))
+    image_width = int(math.ceil(image_width / sw))
+    return [image_height, image_width]
+
+
+# Note:
+# The following 'SamePadding' functions make output size equal ceil(input size/stride).
+# Only when stride equals 1, can the output size be the same as input size.
+# Don't be confused by their function names ! ! !
+
+
+def get_same_padding_conv2d(image_size=None):
+    """Chooses static padding if you have specified an image size, and dynamic padding otherwise.
+       Static padding is necessary for ONNX exporting of models.
+
+    Args:
+        image_size (int or tuple): Size of the image.
+
+    Returns:
+        Conv2dDynamicSamePadding or Conv2dStaticSamePadding.
+    """
+    if image_size is None:
+        return Conv2dDynamicSamePadding
+    else:
+        return partial(Conv2dStaticSamePadding, image_size=image_size)
+
+
+class Conv2dDynamicSamePadding(nn.Conv2d):
+    """2D Convolutions like TensorFlow, for a dynamic image size.
+    The padding is operated in forward function by calculating dynamically.
+    """
+
+    # Tips for 'SAME' mode padding.
+    #     Given the following:
+    #         i: width or height
+    #         s: stride
+    #         k: kernel size
+    #         d: dilation
+    #         p: padding
+    #     Output after Conv2d:
+    #         o = floor((i+p-((k-1)*d+1))/s+1)
+    # If o equals i, i = floor((i+p-((k-1)*d+1))/s+1),
+    # => p = (i-1)*s+((k-1)*d+1)-i
+
+    def __init__(
+        self,
+        in_channels,
+        out_channels,
+        kernel_size,
+        stride=1,
+        dilation=1,
+        groups=1,
+        bias=True,
+    ):
+        super().__init__(
+            in_channels, out_channels, kernel_size, stride, 0, dilation, groups, bias
+        )
+        self.stride = self.stride if len(self.stride) == 2 else [self.stride[0]] * 2
+
+    def forward(self, x):
+        ih, iw = x.size()[-2:]
+        kh, kw = self.weight.size()[-2:]
+        sh, sw = self.stride
+        oh, ow = math.ceil(ih / sh), math.ceil(
+            iw / sw
+        )  # change the output size according to stride ! ! !
+        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            x = F.pad(
+                x, [pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2]
+            )
+        return F.conv2d(
+            x,
+            self.weight,
+            self.bias,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.groups,
+        )
+
+
+class Conv2dStaticSamePadding(nn.Conv2d):
+    """2D Convolutions like TensorFlow's 'SAME' mode, with the given input image size.
+    The padding mudule is calculated in construction function, then used in forward.
+    """
+
+    # With the same calculation as Conv2dDynamicSamePadding
+    """
+    2023.05.15 sh, sw Î∂ÄÎ∂Ñ ÏàòÏ†ï
+    dilation(int or tuple, optional): Spacing between kernel elements.Default: 1
+    """
+
+    def __init__(
+        self,
+        in_channels,
+        out_channels,
+        kernel_size,
+        stride=1,
+        image_size=None,
+        **kwargs
+    ):
+        super().__init__(in_channels, out_channels, kernel_size, stride, **kwargs)
+
+        # Calculate padding based on image size and save it
+        assert image_size is not None
+        ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
+        kh, kw = self.weight.size()[-2:]
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            self.static_padding = nn.ZeroPad2d(
+                (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
+            )
+        else:
+            self.static_padding = nn.Identity()
+
+    def forward(self, x):
+        x = self.static_padding(x)
+        x = F.conv2d(
+            x,
+            self.weight,
+            self.bias,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.groups,
+        )
+        return x
+
+
+def get_same_padding_maxPool2d(image_size=None):
+    """Chooses static padding if you have specified an image size, and dynamic padding otherwise.
+       Static padding is necessary for ONNX exporting of models.
+
+    Args:
+        image_size (int or tuple): Size of the image.
+
+    Returns:
+        MaxPool2dDynamicSamePadding or MaxPool2dStaticSamePadding.
+    """
+    if image_size is None:
+        return MaxPool2dDynamicSamePadding
+    else:
+        return partial(MaxPool2dStaticSamePadding, image_size=image_size)
+
+
+class MaxPool2dDynamicSamePadding(nn.MaxPool2d):
+    """2D MaxPooling like TensorFlow's 'SAME' mode, with a dynamic image size.
+    The padding is operated in forward function by calculating dynamically.
+    """
+
+    """
+    2023.05.16 ÏàòÏ†ï
+    """
+
+    def __init__(
+        self,
+        kernel_size,
+        stride,
+        padding=0,
+        dilation=1,
+        return_indices=False,
+        ceil_mode=False,
+    ):
+        super().__init__(
+            kernel_size, stride, padding, dilation, return_indices, ceil_mode
+        )
+        self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        self.kernel_size = (
+            [self.kernel_size] * 2
+            if isinstance(self.kernel_size, int)
+            else self.kernel_size
+        )
+        self.dilation = (
+            [self.dilation] * 2 if isinstance(self.dilation, int) else self.dilation
+        )
+
+    def forward(self, x):
+        ih, iw = x.size()[-2:]
+        kh, kw = self.kernel_size
+        sh, sw = self.stride
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            x = F.pad(
+                x, [pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2]
+            )
+        return F.max_pool2d(
+            x,
+            self.kernel_size,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.ceil_mode,
+            self.return_indices,
+        )
+
+
+class MaxPool2dStaticSamePadding(nn.MaxPool2d):
+    """2D MaxPooling like TensorFlow's 'SAME' mode, with the given input image size.
+    The padding mudule is calculated in construction function, then used in forward.
+    """
+
+    def __init__(self, kernel_size, stride, image_size=None, **kwargs):
+        super().__init__(kernel_size, stride, **kwargs)
+        # self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        self.kernel_size = (
+            [self.kernel_size] * 2
+            if isinstance(self.kernel_size, int)
+            else self.kernel_size
+        )
+        self.dilation = (
+            [self.dilation] * 2 if isinstance(self.dilation, int) else self.dilation
+        )
+
+        # Calculate padding based on image size and save it
+        assert image_size is not None
+        ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
+        kh, kw = self.kernel_size
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            self.static_padding = nn.ZeroPad2d(
+                (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
+            )
+        else:
+            self.static_padding = nn.Identity()
+
+    def forward(self, x):
+        x = self.static_padding(x)
+        x = F.max_pool2d(
+            x,
+            self.kernel_size,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.ceil_mode,
+            self.return_indices,
+        )
+        return x
+
+
+########################################################################
+############## HELPERS FUNCTIONS FOR LOADING MODEL PARAMS ##############
+########################################################################
+
+
+def efficientnet_params(model_name):
+    """Map EfficientNet model name to parameter coefficients."""
+    params_dict = {
+        # Coefficients:   width,depth,res,dropout
+        "efficientnet-phospho-A-15": (1.0, 1.0, [4128, 15], 0.4),
+        "KINCNN": (1.0, 1.0, [263, 15], 0.7),
+        "efficientnet-HLA-B-9": (1.0, 1.0, [356, 15], 0.2),
+        "efficientnet-HLA-C-9": (1.0, 1.0, [338, 9], 0.2),
+        "efficientnet-HLA-A-10": (1.0, 1.0, [356, 15], 0.2),
+        "efficientnet-HLA-B-10": (1.0, 1.0, [326, 10], 0.2),
+        "efficientnet-HLA-C-10": (1.0, 1.0, [338, 10], 0.2),
+    }
+    return params_dict[model_name]
+
+
+class BlockDecoder(object):
+    """Block Decoder for readability, straight from the official TensorFlow repository"""
+
+    @staticmethod
+    def _decode_block_string(block_string):
+        """Gets a block through a string notation of arguments."""
+        assert isinstance(block_string, str)
+
+        ops = block_string.split("_")
+        options = {}
+        for op in ops:
+            splits = re.split(r"(\d.*)", op)
+            if len(splits) >= 2:
+                key, value = splits[:2]
+                options[key] = value
+
+        # # Check stride
+        # assert ("s" in options and len(options["s"]) == 1) or (
+        #     len(options["s"]) == 2 and options["s"][0] == options["s"][1]
+        # )
+        # "conv_kernel_size",
+        # "pool_kernel_size",
+        return BlockArgs(
+            conv_kernel_size=(int(options["ckh"]), int(options["ckw"])),
+            pool_kernel_size=(int(options["pkh"]), int(options["pkw"])) if int(options["pkh"]) else None,
+            num_repeat=int(options["r"]),
+            input_filters=int(options["i"]),
+            output_filters=int(options["o"]),
+            expand_ratio=int(options["e"]),
+            id_skip=("noskip" not in block_string),
+            se_ratio=float(options["se"]) if "se" in options else None,
+            conv_stride=(int(options["csh"]), int(options["csw"])),
+            pool_stride=(int(options["psh"]), int(options["psw"])),
+        )
+
+    @staticmethod
+    def _encode_block_string(block):
+        """Encodes a block to a string."""
+        args = [
+            "r%d" % block.num_repeat,
+            "ckh%d" % block.conv_kernel_size[0],
+            "ckw%d" % block.conv_kernel_size[1],
+            "pkh%d" % block.pool_kernel_size[0],
+            "pkw%d" % block.pool_kernel_size[1],
+            "csh%d" % block.conv_stride[0],
+            "psh%d" % block.pool_stride[0],
+            "csw%d" % block.conv_stride[1],
+            "psw%d" % block.pool_stride[1],
+            # "s%d%d" % (block.strides[0], block.strides[1]),
+            "e%s" % block.expand_ratio,
+            "i%d" % block.input_filters,
+            "o%d" % block.output_filters
+            # kernel_size is kernel size for convolution e.g. 3 x 3
+            # num_repeat specifies how many times a particular block needs to be repeated, must be greater than zero
+            # input_filters and output_filters are numbers of specified filters
+            # expand_ratio is input filter expansion ratio
+            # id_skip suggests whether to use skip connection or not
+            # se_ratio provides squeezing ratio for squeeze and excitation block
+        ]
+        if 0 < block.se_ratio <= 1:
+            args.append("se%s" % block.se_ratio)
+        if block.id_skip is False:
+            args.append("noskip")
+        return "_".join(args)
+
+    @staticmethod
+    def decode(string_list):
+        """
+        Decodes a list of string notations to specify blocks inside the network.
+        :param string_list: a list of strings, each string is a notation of block
+        :return: a list of BlockArgs namedtuples of block args
+        """
+        assert isinstance(string_list, list)
+        blocks_args = []
+        for block_string in string_list:
+            blocks_args.append(BlockDecoder._decode_block_string(block_string))
+        return blocks_args
+
+    @staticmethod
+    def encode(blocks_args):
+        """
+        Encodes a list of BlockArgs to a list of strings.
+        :param blocks_args: a list of BlockArgs namedtuples of block args
+        :return: a list of strings, each string is a notation of block
+        """
+        block_strings = []
+        for block in blocks_args:
+            block_strings.append(BlockDecoder._encode_block_string(block))
+        return block_strings
+
+
+def efficientnet(
+    width_coefficient=None,
+    depth_coefficient=None,
+    dropout_rate=0.2,
+    drop_connect_rate=0.2,
+    image_size=None,
+    num_classes=1,
+):
+    """Creates a efficientnet model."""
+
+    blocks_args = [
+        "r1_ckh5_ckw1_pkh0_pkw1_csh1_csw1_psh3_psw1_e1_i8_o16_se0.25",
+        "r1_ckh5_ckw1_pkh0_pkw0_csh2_csw1_psh2_psw1_e1_i16_o32_se0.25",
+        # "r1_ckh3_ckw3_pkh2_pkw2_csh1_csw1_psh2_psw2_e1_i8_o16_se0.25",
+        # 'r3_k3_s22_e6_i40_o80_se0.25',
+        # 'r3_k5_s11_e6_i80_o112_se0.25',
+        # 'r4_k5_s22_e6_i112_o192_se0.25',
+        # 'r1_k3_s11_e6_i192_o320_se0.25',
+        # 'r1_k3_s11_e6_i24_o48_se0.25',
+    ]
+    blocks_args = BlockDecoder.decode(blocks_args)
+
+    global_params = GlobalParams(
+        batch_norm_momentum=0.99,
+        batch_norm_epsilon=1e-3,
+        dropout_rate=dropout_rate,
+        drop_connect_rate=drop_connect_rate,
+        # data_format='channels_last',  # removed, this is always true in PyTorch
+        num_classes=num_classes,
+        width_coefficient=width_coefficient,
+        depth_coefficient=depth_coefficient,
+        depth_divisor=8,
+        min_depth=None,
+        image_size=image_size,
+    )
+
+    return blocks_args, global_params
+
+
+def get_model_params(model_name, override_params):
+    """Get the block args and global params for a given model"""
+    print('utils3')
+    w, d, s, p = efficientnet_params(model_name)
+    # note: all models have drop connect rate = 0.2
+    blocks_args, global_params = efficientnet(
+        width_coefficient=w, depth_coefficient=d, dropout_rate=p, image_size=s
+    )
+    # else:
+    #     raise NotImplementedError('model name is not pre-defined: %s' % model_name)
+    # if override_params:
+    #     # ValueError will be raised here if override_params has fields not included in global_params.
+    #     global_params = global_params._replace(**override_params)
+    return blocks_args, global_params
+
+
+url_map = {
+    "efficientnet-b0": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b0-355c32eb.pth",
+    "efficientnet-b1": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b1-f1951068.pth",
+    "efficientnet-b2": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b2-8bb594d6.pth",
+    "efficientnet-b3": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b3-5fb5a3c3.pth",
+    "efficientnet-b4": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b4-6ed6700e.pth",
+    "efficientnet-b5": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b5-b6417697.pth",
+    "efficientnet-b6": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b6-c76e70fd.pth",
+    "efficientnet-b7": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b7-dcc49843.pth",
+}
+
+url_map_advprop = {
+    "efficientnet-b0": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b0-b64d5a18.pth",
+    "efficientnet-b1": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b1-0f3ce85a.pth",
+    "efficientnet-b2": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b2-6e9d97e5.pth",
+    "efficientnet-b3": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b3-cdd7c0f4.pth",
+    "efficientnet-b4": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b4-44fb3a87.pth",
+    "efficientnet-b5": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b5-86493f6b.pth",
+    "efficientnet-b6": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b6-ac80338e.pth",
+    "efficientnet-b7": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b7-4652b6dd.pth",
+    "efficientnet-b8": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b8-22a8fe65.pth",
+}
+
+
+def load_pretrained_weights(model, model_name, load_fc=True, advprop=False):
+    """Loads pretrained weights, and downloads if loading for the first time."""
+    # AutoAugment or Advprop (different preprocessing)
+    url_map_ = url_map_advprop if advprop else url_map
+    state_dict = model_zoo.load_url(url_map_[model_name])
+    if load_fc:
+        model.load_state_dict(state_dict)
+    else:
+        state_dict.pop("_fc.weight")
+        state_dict.pop("_fc.bias")
+        res = model.load_state_dict(state_dict, strict=False)
+        assert set(res.missing_keys) == set(
+            ["_fc.weight", "_fc.bias"]
+        ), "issue loading pretrained weights"
+    print("Loaded pretrained weights for {}".format(model_name))
diff --git a/utils4.py b/utils4.py
new file mode 100644
index 0000000..9f4f906
--- /dev/null
+++ b/utils4.py
@@ -0,0 +1,673 @@
+"""utils.py - Helper functions for building the model and for loading model parameters.
+   These helper functions are built to mirror those in the official TensorFlow implementation.
+"""
+
+# Author: lukemelas (github username)
+# Github repo: https://github.com/lukemelas/EfficientNet-PyTorch
+# With adjustments and added comments by workingcoder (github username).
+
+import collections
+import math
+import re
+from functools import partial
+
+import torch
+from torch import nn
+from torch.nn import functional as F
+from torch.utils import model_zoo
+
+################################################################################
+# Help functions for model architecture
+################################################################################
+
+# GlobalParams and BlockArgs: Two namedtuples
+# Swish and MemoryEfficientSwish: Two implementations of the method
+# round_filters and round_repeats:
+#     Functions to calculate params for scaling model width and depth ! ! !
+# get_width_and_height_from_size and calculate_output_image_size
+# drop_connect: A structural design
+# get_same_padding_conv2d:
+#     Conv2dDynamicSamePadding
+#     Conv2dStaticSamePadding
+# get_same_padding_maxPool2d:
+#     MaxPool2dDynamicSamePadding
+#     MaxPool2dStaticSamePadding
+#     It's an additional function, not used in EfficientNet,
+#     but can be used in other model (such as EfficientDet).
+
+# Parameters for the entire model (stem, all blocks, and head)
+GlobalParams = collections.namedtuple(
+    "GlobalParams",
+    [
+        "width_coefficient",
+        "depth_coefficient",
+        "image_size",
+        "dropout_rate",
+        "num_classes",
+        "batch_norm_momentum",
+        "batch_norm_epsilon",
+        "drop_connect_rate",
+        "depth_divisor",
+        "min_depth",
+        "include_top",
+    ],
+)
+
+# Parameters for an individual model block
+BlockArgs = collections.namedtuple(
+    "BlockArgs",
+    [
+        "num_repeat",
+        "conv_kernel_size",
+        "pool_kernel_size",
+        "conv_stride",
+        "pool_stride",
+        "expand_ratio",
+        "input_filters",
+        "output_filters",
+        "se_ratio",
+        "id_skip",
+    ],
+)
+
+# Set GlobalParams and BlockArgs's defaults
+GlobalParams.__new__.__defaults__ = (None,) * len(GlobalParams._fields)
+BlockArgs.__new__.__defaults__ = (None,) * len(BlockArgs._fields)
+
+# Swish activation function
+if hasattr(nn, "SiLU"):
+    Swish = nn.SiLU
+else:
+    # For compatibility with old PyTorch versions
+    class Swish(nn.Module):
+        def forward(self, x):
+            return x * torch.sigmoid(x)
+
+
+# A memory-efficient implementation of Swish function
+class SwishImplementation(torch.autograd.Function):
+    @staticmethod
+    def forward(ctx, i):
+        result = i * torch.sigmoid(i)
+        ctx.save_for_backward(i)
+        return result
+
+    @staticmethod
+    def backward(ctx, grad_output):
+        i = ctx.saved_tensors[0]
+        sigmoid_i = torch.sigmoid(i)
+        return grad_output * (sigmoid_i * (1 + i * (1 - sigmoid_i)))
+
+
+class MemoryEfficientSwish(nn.Module):
+    def forward(self, x):
+        return SwishImplementation.apply(x)
+
+
+def round_filters(filters, global_params):
+    """Calculate and round number of filters based on width multiplier.
+       Use width_coefficient, depth_divisor and min_depth of global_params.
+
+    Args:
+        filters (int): Filters number to be calculated.
+        global_params (namedtuple): Global params of the model.
+
+    Returns:
+        new_filters: New filters number after calculating.
+    """
+    multiplier = global_params.width_coefficient
+    if not multiplier:
+        return filters
+    # TODO: modify the params names.
+    #       maybe the names (width_divisor,min_width)
+    #       are more suitable than (depth_divisor,min_depth).
+    divisor = global_params.depth_divisor
+    min_depth = global_params.min_depth
+    filters *= multiplier
+    min_depth = min_depth or divisor  # pay attention to this line when using min_depth
+    # follow the formula transferred from official TensorFlow implementation
+    new_filters = max(min_depth, int(filters + divisor / 2) // divisor * divisor)
+    if new_filters < 0.9 * filters:  # prevent rounding by more than 10%
+        new_filters += divisor
+    return int(new_filters)
+
+
+def round_repeats(repeats, global_params):
+    """Calculate module's repeat number of a block based on depth multiplier.
+       Use depth_coefficient of global_params.
+
+    Args:
+        repeats (int): num_repeat to be calculated.
+        global_params (namedtuple): Global params of the model.
+
+    Returns:
+        new repeat: New repeat number after calculating.
+    """
+    multiplier = global_params.depth_coefficient
+    if not multiplier:
+        return repeats
+    # follow the formula transferred from official TensorFlow implementation
+    return int(math.ceil(multiplier * repeats))
+
+
+def drop_connect(inputs, p, training):
+    """Drop connect.
+
+    Args:
+        input (tensor: BCWH): Input of this structure.
+        p (float: 0.0~1.0): Probability of drop connection.
+        training (bool): The running mode.
+
+    Returns:
+        output: Output after drop connection.
+    """
+    assert 0 <= p <= 1, "p must be in range of [0,1]"
+
+    if not training:
+        return inputs
+
+    batch_size = inputs.shape[0]
+    keep_prob = 1 - p
+
+    # generate binary_tensor mask according to probability (p for 0, 1-p for 1)
+    random_tensor = keep_prob
+    random_tensor += torch.rand(
+        [batch_size, 1, 1, 1], dtype=inputs.dtype, device=inputs.device
+    )
+    binary_tensor = torch.floor(random_tensor)
+
+    output = inputs / keep_prob * binary_tensor
+    return output
+
+
+def get_width_and_height_from_size(x):
+    """Obtain height and width from x.
+
+    Args:
+        x (int, tuple or list): Data size.
+
+    Returns:
+        size: A tuple or list (H,W).
+    """
+    if isinstance(x, int):
+        return x, x
+    if isinstance(x, list) or isinstance(x, tuple):
+        return x
+    else:
+        raise TypeError()
+
+
+def calculate_output_image_size(input_image_size, stride):
+    """Calculates the output image size when using Conv2dSamePadding with a stride.
+       Necessary for static padding. Thanks to mannatsingh for pointing this out.
+
+    Args:
+        input_image_size (int, tuple or list): Size of input image.
+        stride (int, tuple or list): Conv2d operation's stride.
+
+    Returns:
+        output_image_size: A list [H,W].
+    """
+    if input_image_size is None:
+        return None
+    image_height, image_width = get_width_and_height_from_size(input_image_size)
+    sh, sw = stride if type(stride) == (list) or (tuple) else [stride, stride]
+    # stride = stride if isinstance(stride, int) else stride[0]
+    image_height = int(math.ceil(image_height / sh))
+    image_width = int(math.ceil(image_width / sw))
+    return [image_height, image_width]
+
+
+# Note:
+# The following 'SamePadding' functions make output size equal ceil(input size/stride).
+# Only when stride equals 1, can the output size be the same as input size.
+# Don't be confused by their function names ! ! !
+
+
+def get_same_padding_conv2d(image_size=None):
+    """Chooses static padding if you have specified an image size, and dynamic padding otherwise.
+       Static padding is necessary for ONNX exporting of models.
+
+    Args:
+        image_size (int or tuple): Size of the image.
+
+    Returns:
+        Conv2dDynamicSamePadding or Conv2dStaticSamePadding.
+    """
+    if image_size is None:
+        return Conv2dDynamicSamePadding
+    else:
+        return partial(Conv2dStaticSamePadding, image_size=image_size)
+
+
+class Conv2dDynamicSamePadding(nn.Conv2d):
+    """2D Convolutions like TensorFlow, for a dynamic image size.
+    The padding is operated in forward function by calculating dynamically.
+    """
+
+    # Tips for 'SAME' mode padding.
+    #     Given the following:
+    #         i: width or height
+    #         s: stride
+    #         k: kernel size
+    #         d: dilation
+    #         p: padding
+    #     Output after Conv2d:
+    #         o = floor((i+p-((k-1)*d+1))/s+1)
+    # If o equals i, i = floor((i+p-((k-1)*d+1))/s+1),
+    # => p = (i-1)*s+((k-1)*d+1)-i
+
+    def __init__(
+        self,
+        in_channels,
+        out_channels,
+        kernel_size,
+        stride=1,
+        dilation=1,
+        groups=1,
+        bias=True,
+    ):
+        super().__init__(
+            in_channels, out_channels, kernel_size, stride, 0, dilation, groups, bias
+        )
+        self.stride = self.stride if len(self.stride) == 2 else [self.stride[0]] * 2
+
+    def forward(self, x):
+        ih, iw = x.size()[-2:]
+        kh, kw = self.weight.size()[-2:]
+        sh, sw = self.stride
+        oh, ow = math.ceil(ih / sh), math.ceil(
+            iw / sw
+        )  # change the output size according to stride ! ! !
+        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            x = F.pad(
+                x, [pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2]
+            )
+        return F.conv2d(
+            x,
+            self.weight,
+            self.bias,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.groups,
+        )
+
+
+class Conv2dStaticSamePadding(nn.Conv2d):
+    """2D Convolutions like TensorFlow's 'SAME' mode, with the given input image size.
+    The padding mudule is calculated in construction function, then used in forward.
+    """
+
+    # With the same calculation as Conv2dDynamicSamePadding
+    """
+    2023.05.15 sh, sw Î∂ÄÎ∂Ñ ÏàòÏ†ï
+    dilation(int or tuple, optional): Spacing between kernel elements.Default: 1
+    """
+
+    def __init__(
+        self,
+        in_channels,
+        out_channels,
+        kernel_size,
+        stride=1,
+        image_size=None,
+        **kwargs
+    ):
+        super().__init__(in_channels, out_channels, kernel_size, stride, **kwargs)
+
+        # Calculate padding based on image size and save it
+        assert image_size is not None
+        ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
+        kh, kw = self.weight.size()[-2:]
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            self.static_padding = nn.ZeroPad2d(
+                (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
+            )
+        else:
+            self.static_padding = nn.Identity()
+
+    def forward(self, x):
+        x = self.static_padding(x)
+        x = F.conv2d(
+            x,
+            self.weight,
+            self.bias,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.groups,
+        )
+        return x
+
+
+def get_same_padding_maxPool2d(image_size=None):
+    """Chooses static padding if you have specified an image size, and dynamic padding otherwise.
+       Static padding is necessary for ONNX exporting of models.
+
+    Args:
+        image_size (int or tuple): Size of the image.
+
+    Returns:
+        MaxPool2dDynamicSamePadding or MaxPool2dStaticSamePadding.
+    """
+    if image_size is None:
+        return MaxPool2dDynamicSamePadding
+    else:
+        return partial(MaxPool2dStaticSamePadding, image_size=image_size)
+
+
+class MaxPool2dDynamicSamePadding(nn.MaxPool2d):
+    """2D MaxPooling like TensorFlow's 'SAME' mode, with a dynamic image size.
+    The padding is operated in forward function by calculating dynamically.
+    """
+
+    """
+    2023.05.16 ÏàòÏ†ï
+    """
+
+    def __init__(
+        self,
+        kernel_size,
+        stride,
+        padding=0,
+        dilation=1,
+        return_indices=False,
+        ceil_mode=False,
+    ):
+        super().__init__(
+            kernel_size, stride, padding, dilation, return_indices, ceil_mode
+        )
+        self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        self.kernel_size = (
+            [self.kernel_size] * 2
+            if isinstance(self.kernel_size, int)
+            else self.kernel_size
+        )
+        self.dilation = (
+            [self.dilation] * 2 if isinstance(self.dilation, int) else self.dilation
+        )
+
+    def forward(self, x):
+        ih, iw = x.size()[-2:]
+        kh, kw = self.kernel_size
+        sh, sw = self.stride
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * self.stride[0] + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * self.stride[1] + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            x = F.pad(
+                x, [pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2]
+            )
+        return F.max_pool2d(
+            x,
+            self.kernel_size,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.ceil_mode,
+            self.return_indices,
+        )
+
+
+class MaxPool2dStaticSamePadding(nn.MaxPool2d):
+    """2D MaxPooling like TensorFlow's 'SAME' mode, with the given input image size.
+    The padding mudule is calculated in construction function, then used in forward.
+    """
+
+    def __init__(self, kernel_size, stride, image_size=None, **kwargs):
+        super().__init__(kernel_size, stride, **kwargs)
+        # self.stride = [self.stride] * 2 if isinstance(self.stride, int) else self.stride
+        self.kernel_size = (
+            [self.kernel_size] * 2
+            if isinstance(self.kernel_size, int)
+            else self.kernel_size
+        )
+        self.dilation = (
+            [self.dilation] * 2 if isinstance(self.dilation, int) else self.dilation
+        )
+
+        # Calculate padding based on image size and save it
+        assert image_size is not None
+        ih, iw = (image_size, image_size) if isinstance(image_size, int) else image_size
+        kh, kw = self.kernel_size
+        sh, sw = (
+            (self.stride, self.stride) if isinstance(self.stride, int) else self.stride
+        )
+        oh, ow = math.ceil(ih / sh), math.ceil(iw / sw)
+        pad_h = max((oh - 1) * sh + (kh - 1) * self.dilation[0] + 1 - ih, 0)
+        pad_w = max((ow - 1) * sw + (kw - 1) * self.dilation[1] + 1 - iw, 0)
+        if pad_h > 0 or pad_w > 0:
+            self.static_padding = nn.ZeroPad2d(
+                (pad_w // 2, pad_w - pad_w // 2, pad_h // 2, pad_h - pad_h // 2)
+            )
+        else:
+            self.static_padding = nn.Identity()
+
+    def forward(self, x):
+        x = self.static_padding(x)
+        x = F.max_pool2d(
+            x,
+            self.kernel_size,
+            self.stride,
+            self.padding,
+            self.dilation,
+            self.ceil_mode,
+            self.return_indices,
+        )
+        return x
+
+
+########################################################################
+############## HELPERS FUNCTIONS FOR LOADING MODEL PARAMS ##############
+########################################################################
+
+
+def efficientnet_params(model_name):
+    """Map EfficientNet model name to parameter coefficients."""
+    params_dict = {
+        # Coefficients:   width,depth,res,dropout
+        "efficientnet-phospho-A-15": (1.0, 1.0, [4128, 15], 0.4),
+        "KINCNN": (1.0, 1.0, [263, 15], 0.7),
+        "efficientnet-HLA-B-9": (1.0, 1.0, [356, 15], 0.2),
+        "efficientnet-HLA-C-9": (1.0, 1.0, [338, 9], 0.2),
+        "efficientnet-HLA-A-10": (1.0, 1.0, [356, 15], 0.2),
+        "efficientnet-HLA-B-10": (1.0, 1.0, [326, 10], 0.2),
+        "efficientnet-HLA-C-10": (1.0, 1.0, [338, 10], 0.2),
+    }
+    return params_dict[model_name]
+
+
+class BlockDecoder(object):
+    """Block Decoder for readability, straight from the official TensorFlow repository"""
+
+    @staticmethod
+    def _decode_block_string(block_string):
+        """Gets a block through a string notation of arguments."""
+        assert isinstance(block_string, str)
+
+        ops = block_string.split("_")
+        options = {}
+        for op in ops:
+            splits = re.split(r"(\d.*)", op)
+            if len(splits) >= 2:
+                key, value = splits[:2]
+                options[key] = value
+
+        # # Check stride
+        # assert ("s" in options and len(options["s"]) == 1) or (
+        #     len(options["s"]) == 2 and options["s"][0] == options["s"][1]
+        # )
+        # "conv_kernel_size",
+        # "pool_kernel_size",
+        return BlockArgs(
+            conv_kernel_size=(int(options["ckh"]), int(options["ckw"])),
+            pool_kernel_size=(int(options["pkh"]), int(options["pkw"])) if int(options["pkh"]) else None,
+            num_repeat=int(options["r"]),
+            input_filters=int(options["i"]),
+            output_filters=int(options["o"]),
+            expand_ratio=int(options["e"]),
+            id_skip=("noskip" not in block_string),
+            se_ratio=float(options["se"]) if "se" in options else None,
+            conv_stride=(int(options["csh"]), int(options["csw"])),
+            pool_stride=(int(options["psh"]), int(options["psw"])),
+        )
+
+    @staticmethod
+    def _encode_block_string(block):
+        """Encodes a block to a string."""
+        args = [
+            "r%d" % block.num_repeat,
+            "ckh%d" % block.conv_kernel_size[0],
+            "ckw%d" % block.conv_kernel_size[1],
+            "pkh%d" % block.pool_kernel_size[0],
+            "pkw%d" % block.pool_kernel_size[1],
+            "csh%d" % block.conv_stride[0],
+            "psh%d" % block.pool_stride[0],
+            "csw%d" % block.conv_stride[1],
+            "psw%d" % block.pool_stride[1],
+            # "s%d%d" % (block.strides[0], block.strides[1]),
+            "e%s" % block.expand_ratio,
+            "i%d" % block.input_filters,
+            "o%d" % block.output_filters
+            # kernel_size is kernel size for convolution e.g. 3 x 3
+            # num_repeat specifies how many times a particular block needs to be repeated, must be greater than zero
+            # input_filters and output_filters are numbers of specified filters
+            # expand_ratio is input filter expansion ratio
+            # id_skip suggests whether to use skip connection or not
+            # se_ratio provides squeezing ratio for squeeze and excitation block
+        ]
+        if 0 < block.se_ratio <= 1:
+            args.append("se%s" % block.se_ratio)
+        if block.id_skip is False:
+            args.append("noskip")
+        return "_".join(args)
+
+    @staticmethod
+    def decode(string_list):
+        """
+        Decodes a list of string notations to specify blocks inside the network.
+        :param string_list: a list of strings, each string is a notation of block
+        :return: a list of BlockArgs namedtuples of block args
+        """
+        assert isinstance(string_list, list)
+        blocks_args = []
+        for block_string in string_list:
+            blocks_args.append(BlockDecoder._decode_block_string(block_string))
+        return blocks_args
+
+    @staticmethod
+    def encode(blocks_args):
+        """
+        Encodes a list of BlockArgs to a list of strings.
+        :param blocks_args: a list of BlockArgs namedtuples of block args
+        :return: a list of strings, each string is a notation of block
+        """
+        block_strings = []
+        for block in blocks_args:
+            block_strings.append(BlockDecoder._encode_block_string(block))
+        return block_strings
+
+
+def efficientnet(
+    width_coefficient=None,
+    depth_coefficient=None,
+    dropout_rate=0.2,
+    drop_connect_rate=0.2,
+    image_size=None,
+    num_classes=1,
+):
+    """Creates a efficientnet model."""
+
+    blocks_args = [
+        "r1_ckh5_ckw1_pkh0_pkw1_csh1_csw1_psh3_psw1_e1_i8_o16_se0.25",
+        "r1_ckh5_ckw1_pkh0_pkw0_csh2_csw1_psh2_psw1_e1_i16_o32_se0.25",
+        # "r1_ckh3_ckw3_pkh2_pkw2_csh1_csw1_psh2_psw2_e1_i8_o16_se0.25",
+        # 'r3_k3_s22_e6_i40_o80_se0.25',
+        # 'r3_k5_s11_e6_i80_o112_se0.25',
+        # 'r4_k5_s22_e6_i112_o192_se0.25',
+        # 'r1_k3_s11_e6_i192_o320_se0.25',
+        # 'r1_k3_s11_e6_i24_o48_se0.25',
+    ]
+    blocks_args = BlockDecoder.decode(blocks_args)
+
+    global_params = GlobalParams(
+        batch_norm_momentum=0.99,
+        batch_norm_epsilon=1e-3,
+        dropout_rate=dropout_rate,
+        drop_connect_rate=drop_connect_rate,
+        # data_format='channels_last',  # removed, this is always true in PyTorch
+        num_classes=num_classes,
+        width_coefficient=width_coefficient,
+        depth_coefficient=depth_coefficient,
+        depth_divisor=8,
+        min_depth=None,
+        image_size=image_size,
+    )
+
+    return blocks_args, global_params
+
+
+def get_model_params(model_name, override_params):
+    """Get the block args and global params for a given model"""
+    print('utlis4')
+    w, d, s, p = efficientnet_params(model_name)
+    # note: all models have drop connect rate = 0.2
+    blocks_args, global_params = efficientnet(
+        width_coefficient=w, depth_coefficient=d, dropout_rate=p, image_size=s
+    )
+    # else:
+    #     raise NotImplementedError('model name is not pre-defined: %s' % model_name)
+    # if override_params:
+    #     # ValueError will be raised here if override_params has fields not included in global_params.
+    #     global_params = global_params._replace(**override_params)
+    return blocks_args, global_params
+
+
+url_map = {
+    "efficientnet-b0": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b0-355c32eb.pth",
+    "efficientnet-b1": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b1-f1951068.pth",
+    "efficientnet-b2": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b2-8bb594d6.pth",
+    "efficientnet-b3": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b3-5fb5a3c3.pth",
+    "efficientnet-b4": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b4-6ed6700e.pth",
+    "efficientnet-b5": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b5-b6417697.pth",
+    "efficientnet-b6": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b6-c76e70fd.pth",
+    "efficientnet-b7": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/efficientnet-b7-dcc49843.pth",
+}
+
+url_map_advprop = {
+    "efficientnet-b0": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b0-b64d5a18.pth",
+    "efficientnet-b1": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b1-0f3ce85a.pth",
+    "efficientnet-b2": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b2-6e9d97e5.pth",
+    "efficientnet-b3": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b3-cdd7c0f4.pth",
+    "efficientnet-b4": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b4-44fb3a87.pth",
+    "efficientnet-b5": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b5-86493f6b.pth",
+    "efficientnet-b6": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b6-ac80338e.pth",
+    "efficientnet-b7": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b7-4652b6dd.pth",
+    "efficientnet-b8": "https://github.com/lukemelas/EfficientNet-PyTorch/releases/download/1.0/adv-efficientnet-b8-22a8fe65.pth",
+}
+
+
+def load_pretrained_weights(model, model_name, load_fc=True, advprop=False):
+    """Loads pretrained weights, and downloads if loading for the first time."""
+    # AutoAugment or Advprop (different preprocessing)
+    url_map_ = url_map_advprop if advprop else url_map
+    state_dict = model_zoo.load_url(url_map_[model_name])
+    if load_fc:
+        model.load_state_dict(state_dict)
+    else:
+        state_dict.pop("_fc.weight")
+        state_dict.pop("_fc.bias")
+        res = model.load_state_dict(state_dict, strict=False)
+        assert set(res.missing_keys) == set(
+            ["_fc.weight", "_fc.bias"]
+        ), "issue loading pretrained weights"
+    print("Loaded pretrained weights for {}".format(model_name))
diff --git a/wandb/debug-cli.hb.log b/wandb/debug-cli.hb.log
new file mode 100644
index 0000000..e69de29
diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
new file mode 120000
index 0000000..3e322dc
--- /dev/null
+++ b/wandb/debug-internal.log
@@ -0,0 +1 @@
+run-20230518_144224-qee702ic/logs/debug-internal.log
\ No newline at end of file
diff --git a/wandb/debug.log b/wandb/debug.log
new file mode 120000
index 0000000..4d563c8
--- /dev/null
+++ b/wandb/debug.log
@@ -0,0 +1 @@
+run-20230518_144224-qee702ic/logs/debug.log
\ No newline at end of file
diff --git a/wandb/latest-run b/wandb/latest-run
new file mode 120000
index 0000000..066269c
--- /dev/null
+++ b/wandb/latest-run
@@ -0,0 +1 @@
+run-20230518_144224-qee702ic
\ No newline at end of file
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/code/DeepPhospho.py b/wandb/run-20230515_170534-fnd6ton4/files/code/DeepPhospho.py
new file mode 100644
index 0000000..73cab75
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/code/DeepPhospho.py
@@ -0,0 +1,294 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+import efficientnet_kincnn
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'efficientnet-phospho-B-15'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = efficientnet_kincnn.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml b/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml
new file mode 100644
index 0000000..ceb7650
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml
@@ -0,0 +1,360 @@
+name: phos
+channels:
+  - pytorch
+  - nvidia
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - anyio=3.5.0=py310h06a4308_0
+  - argon2-cffi=21.3.0=pyhd3eb1b0_0
+  - argon2-cffi-bindings=21.2.0=py310h7f8727e_0
+  - asttokens=2.0.5=pyhd3eb1b0_0
+  - attrs=22.1.0=py310h06a4308_0
+  - babel=2.11.0=py310h06a4308_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - beautifulsoup4=4.11.1=py310h06a4308_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd3eb1b0_0
+  - bottleneck=1.3.5=py310ha9d4c09_0
+  - brotli=1.0.9=h5eee18b_7
+  - brotli-bin=1.0.9=h5eee18b_7
+  - brotlipy=0.7.0=py310h7f8727e_1002
+  - bzip2=1.0.8=h7b6447c_0
+  - ca-certificates=2022.10.11=h06a4308_0
+  - certifi=2022.12.7=py310h06a4308_0
+  - cffi=1.15.1=py310h5eee18b_3
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - comm=0.1.2=py310h06a4308_0
+  - contourpy=1.0.5=py310hdb19cb5_0
+  - cryptography=38.0.4=py310h9ce1e76_0
+  - cuda=11.6.1=0
+  - cuda-cccl=11.6.55=hf6102b2_0
+  - cuda-command-line-tools=11.6.2=0
+  - cuda-compiler=11.6.2=0
+  - cuda-cudart=11.6.55=he381448_0
+  - cuda-cudart-dev=11.6.55=h42ad0f4_0
+  - cuda-cuobjdump=11.6.124=h2eeebcb_0
+  - cuda-cupti=11.6.124=h86345e5_0
+  - cuda-cuxxfilt=11.6.124=hecbf4f6_0
+  - cuda-driver-dev=11.6.55=0
+  - cuda-gdb=12.0.90=0
+  - cuda-libraries=11.6.1=0
+  - cuda-libraries-dev=11.6.1=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=12.0.78=0
+  - cuda-nsight-compute=12.0.0=0
+  - cuda-nvcc=11.6.124=hbba6d2d_0
+  - cuda-nvdisasm=12.0.76=0
+  - cuda-nvml-dev=11.6.55=haa9ef22_0
+  - cuda-nvprof=12.0.90=0
+  - cuda-nvprune=11.6.124=he22ec0a_0
+  - cuda-nvrtc=11.6.124=h020bade_0
+  - cuda-nvrtc-dev=11.6.124=h249d397_0
+  - cuda-nvtx=11.6.124=h0630a44_0
+  - cuda-nvvp=12.0.90=0
+  - cuda-runtime=11.6.1=0
+  - cuda-samples=11.6.101=h8efea70_0
+  - cuda-sanitizer-api=12.0.90=0
+  - cuda-toolkit=11.6.1=0
+  - cuda-tools=11.6.1=0
+  - cuda-visual-tools=11.6.1=0
+  - cycler=0.11.0=pyhd3eb1b0_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.5.1=py310h295c915_0
+  - decorator=5.1.1=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - entrypoints=0.4=py310h06a4308_0
+  - executing=0.8.3=pyhd3eb1b0_0
+  - expat=2.4.9=h6a678d5_0
+  - ffmpeg=4.3=hf484d3e_0
+  - flit-core=3.6.0=pyhd3eb1b0_0
+  - fontconfig=2.14.1=h52c9d5c_1
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.12.1=h4a9f257_0
+  - gds-tools=1.5.0.59=0
+  - giflib=5.2.1=h7b6447c_0
+  - glib=2.69.1=he621ea3_2
+  - gmp=6.2.1=h295c915_3
+  - gnutls=3.6.15=he1e5248_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.4=py310h06a4308_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - ipykernel=6.19.2=py310h2f386ee_0
+  - ipython=8.7.0=py310h06a4308_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.5=pyhd3eb1b0_1
+  - jedi=0.18.1=py310h06a4308_1
+  - jinja2=3.1.2=py310h06a4308_0
+  - jpeg=9e=h7f8727e_0
+  - json5=0.9.6=pyhd3eb1b0_0
+  - jsonschema=4.16.0=py310h06a4308_0
+  - jupyter=1.0.0=py310h06a4308_8
+  - jupyter_client=7.4.8=py310h06a4308_0
+  - jupyter_console=6.4.4=py310h06a4308_0
+  - jupyter_core=5.1.1=py310h06a4308_0
+  - jupyter_server=1.23.4=py310h06a4308_0
+  - jupyterlab=3.5.2=py310h06a4308_0
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.16.5=py310h06a4308_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - kiwisolver=1.4.4=py310h6a678d5_0
+  - krb5=1.19.2=hac12032_0
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.38=h1181459_1
+  - lerc=3.0=h295c915_0
+  - libbrotlicommon=1.0.9=h5eee18b_7
+  - libbrotlidec=1.0.9=h5eee18b_7
+  - libbrotlienc=1.0.9=h5eee18b_7
+  - libclang=10.0.1=default_hb85057a_2
+  - libcublas=11.9.2.110=h5e84587_0
+  - libcublas-dev=11.9.2.110=h5c901ab_0
+  - libcufft=10.7.1.112=hf425ae0_0
+  - libcufft-dev=10.7.1.112=ha5ce4c0_0
+  - libcufile=1.5.0.59=0
+  - libcufile-dev=1.5.0.59=0
+  - libcurand=10.3.1.50=0
+  - libcurand-dev=10.3.1.50=0
+  - libcusolver=11.3.4.124=h33c3c4e_0
+  - libcusparse=11.7.2.124=h7538f96_0
+  - libcusparse-dev=11.7.2.124=hbbe9722_0
+  - libdeflate=1.8=h7f8727e_5
+  - libedit=3.1.20221030=h5eee18b_0
+  - libevent=2.1.12=h8f2d780_0
+  - libffi=3.4.2=h6a678d5_6
+  - libgcc-ng=11.2.0=h1234567_1
+  - libgomp=11.2.0=h1234567_1
+  - libiconv=1.16=h7f8727e_2
+  - libidn2=2.3.2=h7f8727e_0
+  - libllvm10=10.0.1=hbcb73fb_5
+  - libnpp=11.6.3.124=hd2722f0_0
+  - libnpp-dev=11.6.3.124=h3c42840_0
+  - libnvjpeg=11.6.2.124=hd473ad6_0
+  - libnvjpeg-dev=11.6.2.124=hb5906b9_0
+  - libpng=1.6.37=hbc83047_0
+  - libpq=12.9=h16c4e8d_3
+  - libsodium=1.0.18=h7b6447c_0
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.16.0=h27cfd23_0
+  - libtiff=4.5.0=hecacb30_0
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=1.41.5=h5eee18b_0
+  - libwebp=1.2.4=h11a3e52_0
+  - libwebp-base=1.2.4=h5eee18b_0
+  - libxcb=1.15=h7f8727e_0
+  - libxkbcommon=1.0.1=hfa300c1_0
+  - libxml2=2.9.14=h74e7548_0
+  - libxslt=1.1.35=h4e12654_0
+  - lxml=4.9.1=py310h1edc446_0
+  - lz4-c=1.9.4=h6a678d5_0
+  - markupsafe=2.1.1=py310h7f8727e_0
+  - matplotlib=3.6.2=py310h06a4308_0
+  - matplotlib-base=3.6.2=py310h945d387_0
+  - matplotlib-inline=0.1.6=py310h06a4308_0
+  - mistune=0.8.4=py310h7f8727e_1000
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py310h7f8727e_0
+  - mkl_fft=1.3.1=py310hd6ae3a3_0
+  - mkl_random=1.2.2=py310h00e6091_0
+  - munkres=1.1.4=py_0
+  - nbclassic=0.4.8=py310h06a4308_0
+  - nbclient=0.5.13=py310h06a4308_0
+  - nbconvert=6.5.4=py310h06a4308_0
+  - nbformat=5.7.0=py310h06a4308_0
+  - ncurses=6.3=h5eee18b_3
+  - nest-asyncio=1.5.6=py310h06a4308_0
+  - nettle=3.7.3=hbbd107a_1
+  - notebook=6.5.2=py310h06a4308_0
+  - notebook-shim=0.2.2=py310h06a4308_0
+  - nsight-compute=2022.4.0.15=0
+  - nspr=4.33=h295c915_0
+  - nss=3.74=h0370c37_0
+  - numexpr=2.8.4=py310h8879344_0
+  - numpy=1.23.5=py310hd5efca6_0
+  - numpy-base=1.23.5=py310h8e6c178_0
+  - openh264=2.1.1=h4ff587b_0
+  - openssl=1.1.1s=h7f8727e_0
+  - packaging=22.0=py310h06a4308_0
+  - pandas=1.5.2=py310h1128e8f_0
+  - pandocfilters=1.5.0=pyhd3eb1b0_0
+  - parso=0.8.3=pyhd3eb1b0_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=9.3.0=py310hace64e9_1
+  - pip=22.3.1=py310h06a4308_0
+  - platformdirs=2.5.2=py310h06a4308_0
+  - ply=3.11=py310h06a4308_0
+  - prometheus_client=0.14.1=py310h06a4308_0
+  - prompt-toolkit=3.0.36=py310h06a4308_0
+  - prompt_toolkit=3.0.36=hd3eb1b0_0
+  - psutil=5.9.0=py310h5eee18b_0
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - pure_eval=0.2.2=pyhd3eb1b0_0
+  - pycparser=2.21=pyhd3eb1b0_0
+  - pygments=2.11.2=pyhd3eb1b0_0
+  - pyopenssl=22.0.0=pyhd3eb1b0_0
+  - pyparsing=3.0.9=py310h06a4308_0
+  - pyqt=5.15.7=py310h6a678d5_1
+  - pyrsistent=0.18.0=py310h7f8727e_0
+  - pysocks=1.7.1=py310h06a4308_0
+  - python=3.10.9=h7a1cb2a_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python-fastjsonschema=2.16.2=py310h06a4308_0
+  - pytorch=1.13.1=py3.10_cuda11.6_cudnn8.3.2_0
+  - pytorch-cuda=11.6=h867d48c_1
+  - pytorch-mutex=1.0=cuda
+  - pytz=2022.7=py310h06a4308_0
+  - pyzmq=23.2.0=py310h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - qt-webengine=5.15.9=hd2b0992_4
+  - qtconsole=5.4.0=py310h06a4308_0
+  - qtpy=2.2.0=py310h06a4308_0
+  - qtwebkit=5.212=h4eab89a_4
+  - readline=8.2=h5eee18b_0
+  - requests=2.28.1=py310h06a4308_0
+  - seaborn=0.12.2=py310h06a4308_0
+  - send2trash=1.8.0=pyhd3eb1b0_1
+  - setuptools=65.6.3=py310h06a4308_0
+  - sip=6.6.2=py310h6a678d5_0
+  - six=1.16.0=pyhd3eb1b0_1
+  - sniffio=1.2.0=py310h06a4308_1
+  - soupsieve=2.3.2.post1=py310h06a4308_0
+  - sqlite=3.40.1=h5082296_0
+  - stack_data=0.2.0=pyhd3eb1b0_0
+  - terminado=0.17.1=py310h06a4308_0
+  - tinycss2=1.2.1=py310h06a4308_0
+  - tk=8.6.12=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tomli=2.0.1=py310h06a4308_0
+  - torchaudio=0.13.1=py310_cu116
+  - torchvision=0.14.1=py310_cu116
+  - tornado=6.2=py310h5eee18b_0
+  - tqdm=4.64.1=py310h06a4308_0
+  - traitlets=5.7.1=py310h06a4308_0
+  - typing-extensions=4.4.0=py310h06a4308_0
+  - typing_extensions=4.4.0=py310h06a4308_0
+  - tzdata=2022g=h04d1e81_0
+  - urllib3=1.26.14=py310h06a4308_0
+  - wcwidth=0.2.5=pyhd3eb1b0_0
+  - webencodings=0.5.1=py310h06a4308_1
+  - websocket-client=0.58.0=py310h06a4308_4
+  - wheel=0.37.1=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.2=py310h06a4308_0
+  - xz=5.2.10=h5eee18b_1
+  - zeromq=4.3.4=h2531618_0
+  - zlib=1.2.13=h5eee18b_0
+  - zstd=1.5.2=ha4553b6_0
+  - pip:
+    - absl-py==1.4.0
+    - albumentations==1.3.0
+    - alembic==1.10.4
+    - ansi2html==1.8.0
+    - appdirs==1.4.4
+    - blinker==1.6.2
+    - cachetools==5.2.1
+    - category-encoders==2.6.0
+    - click==8.1.3
+    - cloudpickle==2.2.1
+    - cmaes==0.9.1
+    - colorlog==6.7.0
+    - cython==0.29.34
+    - dash==2.9.3
+    - dash-core-components==2.0.0
+    - dash-html-components==2.0.0
+    - dash-table==5.0.0
+    - deprecated==1.2.13
+    - deprecation==2.1.0
+    - docker-pycreds==0.4.0
+    - efficientnet-pytorch==0.7.1
+    - et-xmlfile==1.1.0
+    - flask==2.3.1
+    - gitdb==4.0.10
+    - gitpython==3.1.30
+    - google-auth==2.16.0
+    - google-auth-oauthlib==0.4.6
+    - grad-cam==1.4.6
+    - greenlet==2.0.2
+    - grpcio==1.51.1
+    - hiddenlayer==0.3
+    - imageio==2.26.0
+    - imbalanced-learn==0.10.1
+    - importlib-metadata==6.6.0
+    - itsdangerous==2.1.2
+    - joblib==1.2.0
+    - jupyter-dash==0.4.2
+    - kaleido==0.2.1
+    - lazy-loader==0.1
+    - lightgbm==3.3.5
+    - llvmlite==0.39.1
+    - mako==1.2.4
+    - markdown==3.4.1
+    - multicoretsne==0.1
+    - networkx==3.0
+    - numba==0.56.4
+    - oauthlib==3.2.2
+    - opencv-python==4.7.0.72
+    - opencv-python-headless==4.7.0.72
+    - openpyxl==3.0.10
+    - optuna==3.1.1
+    - orjson==3.8.10
+    - pathtools==0.1.2
+    - patsy==0.5.3
+    - plotly==5.14.1
+    - plotly-resampler==0.8.3.2
+    - pmdarima==2.0.3
+    - protobuf==3.20.3
+    - pyarrow==11.0.0
+    - pyasn1==0.4.8
+    - pyasn1-modules==0.2.8
+    - pycaret==3.0.0
+    - pyod==1.0.9
+    - pyqt5-sip==12.11.0
+    - python-graphviz==0.20.1
+    - python-louvain==0.16
+    - pytorch-gradcam==0.2.1
+    - pywavelets==1.4.1
+    - pyyaml==6.0
+    - qudida==0.0.4
+    - requests-oauthlib==1.3.1
+    - retrying==1.3.4
+    - rsa==4.9
+    - schemdraw==0.16
+    - scikit-image==0.20.0
+    - scikit-learn==1.2.2
+    - scikit-plot==0.3.7
+    - scipy==1.10.0
+    - sentry-sdk==1.14.0
+    - setproctitle==1.3.2
+    - shap==0.41.0
+    - sktime==0.17.2
+    - slicer==0.0.7
+    - smmap==5.0.0
+    - sqlalchemy==2.0.11
+    - statsmodels==0.13.5
+    - tbats==1.1.3
+    - tenacity==8.2.2
+    - tensorboard==2.11.2
+    - tensorboard-data-server==0.6.1
+    - tensorboard-plugin-wit==1.8.1
+    - threadpoolctl==3.1.0
+    - tifffile==2023.2.28
+    - torchinfo==1.7.2
+    - torchsummary==1.5.1
+    - torchsummaryx==1.3.0
+    - torchviz==0.0.2
+    - trace-updater==0.0.9.1
+    - tsnecuda==3.0.1+cu113
+    - ttach==0.0.3
+    - wandb==0.13.9
+    - werkzeug==2.3.0
+    - wrapt==1.15.0
+    - wurlitzer==3.0.3
+    - xgboost==1.7.5
+    - xxhash==3.2.0
+    - yellowbrick==1.5
+    - zipp==3.15.0
+prefix: /home/hb/anaconda3/envs/phos
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/config.yaml b/wandb/run-20230515_170534-fnd6ton4/files/config.yaml
new file mode 100644
index 0000000..7e3d445
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/config.yaml
@@ -0,0 +1,68 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.13.9
+    code_path: code/DeepPhospho.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.10.9
+    start_time: 1684137934.419409
+    t:
+      1:
+      - 1
+      - 5
+      - 53
+      - 55
+      2:
+      - 1
+      - 5
+      - 53
+      - 55
+      3:
+      - 16
+      - 17
+      - 23
+      - 37
+      4: 3.10.9
+      5: 0.13.9
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 1024
+dataset:
+  desc: null
+  value: transfer_learning_1
+defalut_learning_rate:
+  desc: null
+  value: 0.001
+erls_patience:
+  desc: null
+  value: 25
+fold_num:
+  desc: null
+  value: 5
+gpu_num:
+  desc: null
+  value: '0'
+model:
+  desc: null
+  value: efficientnet-phospho-B-15
+n_epoch:
+  desc: null
+  value: 500
+pretrain_fold_num:
+  desc: null
+  value: '0'
+save_dir:
+  desc: null
+  value: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0
+scheduler_factor:
+  desc: null
+  value: 0.7
+scheduler_patience:
+  desc: null
+  value: 7
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/diff.patch b/wandb/run-20230515_170534-fnd6ton4/files/diff.patch
new file mode 100644
index 0000000..d4580c1
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/diff.patch
@@ -0,0 +1,150 @@
+diff --git a/__init__.py b/__init__.py
+index 4210ebf..0959fed 100644
+--- a/__init__.py
++++ b/__init__.py
+@@ -1,4 +1,4 @@
+ __version__ = "0.7.1"
+-from .model import VALID_MODELS, EfficientNet
++from .kincnn import EfficientNet
+ from .utils import (BlockArgs, BlockDecoder, GlobalParams, efficientnet,
+                     get_model_params)
+diff --git a/prepare_dataset.py b/prepare_dataset.py
+deleted file mode 100644
+index 5350a37..0000000
+--- a/prepare_dataset.py
++++ /dev/null
+@@ -1,134 +0,0 @@
+-import sys
+-
+-import numpy as np
+-import pandas as pd
+-import torch
+-import torch.utils.data as data_utils
+-from sklearn.model_selection import train_test_split
+-
+-
+-def prepare_dataset(dataset_mode=None):
+-    df = pd.read_pickle("test1.pkl")
+-    df = df.sample(frac=1, random_state=42).reset_index(drop=True)
+-    # df['stratify'] Ïª¨ÎüºÏùò unique valueÍ∞Ä 1Ïù∏ Í∞íÎì§ÏùÄ df_Î°ú Îî∞Î°ú ÎπºÍ≥†, ÎÇòÎ®∏ÏßÄÎäî dfÎ°ú
+-    # df['stratify'].value_counts() : df['stratify'] Ïª¨ÎüºÏùò unique valueÎì§ÏùÑ countÌï¥Ï£ºÎäî Ìï®Ïàò
+-    # [df['stratify'].value_counts()==1].index.tolist() : df['stratify'] Ïª¨ÎüºÏóêÏÑú unique valueÍ∞Ä 1Ïù∏ indexÎßå Î¶¨Ïä§Ìä∏Î°ú Ï∂îÏ∂ú
+-    df["stratify"] = df.apply(lambda x: x["kin_id"] + "-" + str(x["answer"]), axis=1)
+-    df_ = df[
+-        df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-    df = df[
+-        ~df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-
+-    # df['matrix']Îäî pandas.series typeÏù¥ÎØÄÎ°ú listÌòïÌÉúÎ°ú Î∞îÍøîÏ§ÄÎã§.
+-    matrix = np.array([x for x in df["matrix"]], dtype=np.float32)
+-
+-    # answerÏóê df['answer']Ïùò Í∞íÏùÑ listÌòïÌÉúÎ°ú ÎÑ£Ïñ¥Ï§ÄÎã§
+-    answer = list(df["answer"].astype("int"))
+-
+-    # ÏïÑÍπå Îî∞Î°ú Îó¥Ïñ¥ÎÜ®Îçò df_Ïóê ÎåÄÌï¥ÏÑúÎèÑ ÎòëÍ∞ôÏù¥ matrix_Î•º ÎßåÏñ¥Ï§ÄÎã§.
+-    matrix_ = np.array([x for x in df_["matrix"]], dtype=np.float32)
+-    answer_ = list(df_["answer"].astype("int"))
+-
+-    # matrix = np.concatenate([matrix, matrix_])
+-    # answer = np.concatenate([answer, answer_])
+-
+-    # dataset = data_utils.TensorDataset(torch.tensor(matrix), torch.tensor(answer))
+-    # return dataset
+-    # answer = np.array(answer, dtype=np.int64)
+-    # answer_ = np.array(answer_, dtype=np.int64)
+-    # print(matrix.shape, answer.shape)
+-    xTrain, xTest, yTrain, yTest = train_test_split(
+-        matrix, answer, test_size=0.2, random_state=42, stratify=df["stratify"]
+-    )
+-    try:
+-        xTrain = np.concatenate([xTrain, matrix_])
+-        yTrain = np.concatenate([yTrain, answer_])
+-    except:
+-        pass
+-    # print(type(yTrain[0]))
+-    print(yTrain)
+-    counts = np.bincount(yTrain)
+-    print(
+-        "Number of positive samples in training data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTrain)
+-        )
+-    )
+-    counts = np.bincount(yTest)
+-    print(
+-        "Number of positive samples in validation data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTest)
+-        )
+-    )  # counts[1] : answer = 1 Ïù∏ Í∞í
+-    # globals()['counts'] = counts
+-    # BATCH_SIZE = batch_size
+-    train_set = data_utils.TensorDataset(torch.tensor(xTrain), torch.tensor(yTrain))
+-    valid_set = data_utils.TensorDataset(torch.tensor(xTest), torch.tensor(yTest))
+-
+-    return train_set, valid_set
+-
+-    # elif dataset_mode == 'pretrain_nonrepl':
+-    #     # df_nonreplicated = pd.read_pickle("/home/hb/python/phospho/data/atlas/ats_nonreplicated_with_psph.pkl")
+-    #     # # with open("/home/hb/python/phospho/data/atlas/matrix_0595.pickle", 'rb') as f:
+-    #     #     # matrix = pickle.load(f)
+-    #     # # with open("/home/hb/python/phospho/data/atlas/label_0595.pickle", 'rb') as f:
+-    #     #     # label = pickle.load(f)
+-    #     # matrix = df_nonreplicated['matrix'].to_list()
+-    #     # matrix = np.array([x for x in matrix], dtype=np.float32)
+-    #     # answer = df_nonreplicated['answer'].to_numpy().astype(int)
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_mtx_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_ans_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # elif dataset_mode == 'pretrain_1090':
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/matrix1090.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/label1090.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # return train_set, valid_set
+-
+-
+-class AttrDict(dict):
+-    def __init__(self, *args, **kwargs):
+-        super(AttrDict, self).__init__(*args, **kwargs)
+-        self.__dict__ = self
+-
+-
+-config = AttrDict()
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/output.log b/wandb/run-20230515_170534-fnd6ton4/files/output.log
new file mode 100644
index 0000000..d9280ca
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/output.log
@@ -0,0 +1,15 @@
+{'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0'}
+FOLD 0
+--------------------------------
+Traceback (most recent call last):
+  File "/home/hb/python/efficientnet_kincnn/DeepPhospho.py", line 294, in <module>
+    train_model_5cv()
+  File "/home/hb/python/efficientnet_kincnn/DeepPhospho.py", line 105, in train_model_5cv
+    model = efficientnet_kincnn.EfficientNet.from_name(f'{config.model}')
+  File "/home/hb/python/efficientnet_kincnn/../efficientnet_kincnn/kincnn.py", line 355, in from_name
+    return cls(blocks_args, global_params)
+  File "/home/hb/python/efficientnet_kincnn/../efficientnet_kincnn/kincnn.py", line 188, in __init__
+    image_size = calculate_output_image_size(image_size, stride=2)
+  File "/home/hb/python/efficientnet_kincnn/utils.py", line 212, in calculate_output_image_size
+    sh, sw = stride if type(stride) == (list) or (tuple) else [stride, stride]
+TypeError: cannot unpack non-iterable int object
\ No newline at end of file
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/requirements.txt b/wandb/run-20230515_170534-fnd6ton4/files/requirements.txt
new file mode 100644
index 0000000..2841956
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/requirements.txt
@@ -0,0 +1,224 @@
+absl-py==1.4.0
+albumentations==1.3.0
+alembic==1.10.4
+ansi2html==1.8.0
+anyio==3.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+asttokens==2.0.5
+attrs==22.1.0
+babel==2.11.0
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==4.1.0
+blinker==1.6.2
+bottleneck==1.3.5
+brotlipy==0.7.0
+cachetools==5.2.1
+category-encoders==2.6.0
+certifi==2022.12.7
+cffi==1.15.1
+charset-normalizer==2.0.4
+click==8.1.3
+cloudpickle==2.2.1
+cmaes==0.9.1
+colorlog==6.7.0
+comm==0.1.2
+contourpy==1.0.5
+cryptography==38.0.4
+cycler==0.11.0
+cython==0.29.34
+dash-core-components==2.0.0
+dash-html-components==2.0.0
+dash-table==5.0.0
+dash==2.9.3
+debugpy==1.5.1
+decorator==5.1.1
+defusedxml==0.7.1
+deprecated==1.2.13
+deprecation==2.1.0
+docker-pycreds==0.4.0
+efficientnet-pytorch==0.7.1
+entrypoints==0.4
+et-xmlfile==1.1.0
+executing==0.8.3
+fastjsonschema==2.16.2
+flask==2.3.1
+flit-core==3.6.0
+fonttools==4.25.0
+gitdb==4.0.10
+gitpython==3.1.30
+google-auth-oauthlib==0.4.6
+google-auth==2.16.0
+grad-cam==1.4.6
+graphviz==0.20.1
+greenlet==2.0.2
+grpcio==1.51.1
+hiddenlayer==0.3
+idna==3.4
+imageio==2.26.0
+imbalanced-learn==0.10.1
+importlib-metadata==6.6.0
+ipykernel==6.19.2
+ipython-genutils==0.2.0
+ipython==8.7.0
+ipywidgets==7.6.5
+itsdangerous==2.1.2
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.2.0
+json5==0.9.6
+jsonschema==4.16.0
+jupyter-client==7.4.8
+jupyter-console==6.4.4
+jupyter-core==5.1.1
+jupyter-dash==0.4.2
+jupyter-server==1.23.4
+jupyter==1.0.0
+jupyterlab-pygments==0.1.2
+jupyterlab-server==2.16.5
+jupyterlab-widgets==1.0.0
+jupyterlab==3.5.2
+kaleido==0.2.1
+kiwisolver==1.4.4
+lazy-loader==0.1
+lightgbm==3.3.5
+llvmlite==0.39.1
+lxml==4.9.1
+mako==1.2.4
+markdown==3.4.1
+markupsafe==2.1.1
+matplotlib-inline==0.1.6
+matplotlib==3.6.2
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+multicoretsne==0.1
+munkres==1.1.4
+nbclassic==0.4.8
+nbclient==0.5.13
+nbconvert==6.5.4
+nbformat==5.7.0
+nest-asyncio==1.5.6
+networkx==3.0
+notebook-shim==0.2.2
+notebook==6.5.2
+numba==0.56.4
+numexpr==2.8.4
+numpy==1.23.5
+oauthlib==3.2.2
+opencv-python-headless==4.7.0.72
+opencv-python==4.7.0.72
+openpyxl==3.0.10
+optuna==3.1.1
+orjson==3.8.10
+packaging==22.0
+pandas==1.5.2
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+patsy==0.5.3
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==9.3.0
+pip==22.3.1
+platformdirs==2.5.2
+plotly-resampler==0.8.3.2
+plotly==5.14.1
+ply==3.11
+pmdarima==2.0.3
+prometheus-client==0.14.1
+prompt-toolkit==3.0.36
+protobuf==3.20.3
+psutil==5.9.0
+ptyprocess==0.7.0
+pure-eval==0.2.2
+pyarrow==11.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycaret==3.0.0
+pycparser==2.21
+pygcn==0.1
+pygments==2.11.2
+pyod==1.0.9
+pyopenssl==22.0.0
+pyparsing==3.0.9
+pyqt5-sip==12.11.0
+pyrsistent==0.18.0
+pysocks==1.7.1
+python-dateutil==2.8.2
+python-louvain==0.16
+pytorch-gradcam==0.2.1
+pytz==2022.7
+pywavelets==1.4.1
+pyyaml==6.0
+pyzmq==23.2.0
+qtconsole==5.4.0
+qtpy==2.2.0
+qudida==0.0.4
+requests-oauthlib==1.3.1
+requests==2.28.1
+retrying==1.3.4
+rsa==4.9
+schemdraw==0.16
+scikit-image==0.20.0
+scikit-learn==1.2.2
+scikit-plot==0.3.7
+scipy==1.10.0
+seaborn==0.12.2
+send2trash==1.8.0
+sentry-sdk==1.14.0
+setproctitle==1.3.2
+setuptools==65.6.3
+shap==0.41.0
+sip==6.6.2
+six==1.16.0
+sktime==0.17.2
+slicer==0.0.7
+smmap==5.0.0
+sniffio==1.2.0
+soupsieve==2.3.2.post1
+sqlalchemy==2.0.11
+stack-data==0.2.0
+statsmodels==0.13.5
+tbats==1.1.3
+tenacity==8.2.2
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.11.2
+terminado==0.17.1
+threadpoolctl==3.1.0
+tifffile==2023.2.28
+tinycss2==1.2.1
+toml==0.10.2
+tomli==2.0.1
+torch==1.13.1
+torchaudio==0.13.1
+torchinfo==1.7.2
+torchsummary==1.5.1
+torchsummaryx==1.3.0
+torchvision==0.14.1
+torchviz==0.0.2
+tornado==6.2
+tqdm==4.64.1
+trace-updater==0.0.9.1
+traitlets==5.7.1
+tsnecuda==3.0.1+cu113
+ttach==0.0.3
+typing-extensions==4.4.0
+urllib3==1.26.14
+wandb==0.13.9
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==0.58.0
+werkzeug==2.3.0
+wheel==0.37.1
+widgetsnbextension==3.5.2
+wrapt==1.15.0
+wurlitzer==3.0.3
+xgboost==1.7.5
+xxhash==3.2.0
+yellowbrick==1.5
+zipp==3.15.0
\ No newline at end of file
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/wandb-metadata.json b/wandb/run-20230515_170534-fnd6ton4/files/wandb-metadata.json
new file mode 100644
index 0000000..6a4b01d
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/wandb-metadata.json
@@ -0,0 +1,708 @@
+{
+    "os": "Linux-5.15.0-57-generic-x86_64-with-glibc2.31",
+    "python": "3.10.9",
+    "heartbeatAt": "2023-05-15T08:05:35.673432",
+    "startedAt": "2023-05-15T08:05:34.410739",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "0",
+        "1024",
+        "500",
+        "1e-3",
+        "5",
+        "7",
+        "0.7",
+        "25",
+        "transfer_learning_1",
+        "0"
+    ],
+    "state": "running",
+    "program": "/home/hb/python/efficientnet_kincnn/DeepPhospho.py",
+    "codePath": "DeepPhospho.py",
+    "git": {
+        "remote": "https://github.com/HongB1/efficientnet_kincnn.git",
+        "commit": "5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8"
+    },
+    "email": "hongbikim14@gmail.com",
+    "root": "/home/hb/python/efficientnet_kincnn",
+    "host": "workstation",
+    "username": "hb",
+    "executable": "/home/hb/anaconda3/envs/phos/bin/python3",
+    "cpu_count": 64,
+    "cpu_count_logical": 128,
+    "cpu_freq": {
+        "current": 2.2461249999999953,
+        "min": 2200.0,
+        "max": 2900.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 3.593,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 4.283,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        }
+    ],
+    "disk": {
+        "total": 1832.2072448730469,
+        "used": 1672.786319732666
+    },
+    "gpu": "NVIDIA GeForce RTX 3090",
+    "gpu_count": 4,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        }
+    ],
+    "memory": {
+        "total": 251.55356216430664
+    }
+}
diff --git a/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json b/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json
new file mode 100644
index 0000000..e682bae
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json
@@ -0,0 +1 @@
+{"_wandb": {"runtime": 5}}
\ No newline at end of file
diff --git a/wandb/run-20230515_170534-fnd6ton4/logs/debug-internal.log b/wandb/run-20230515_170534-fnd6ton4/logs/debug-internal.log
new file mode 100644
index 0000000..7560b89
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/logs/debug-internal.log
@@ -0,0 +1,206 @@
+2023-05-15 17:05:34,420 INFO    StreamThr :3663221 [internal.py:wandb_internal():87] W&B internal server running at pid: 3663221, started at: 2023-05-15 17:05:34.419903
+2023-05-15 17:05:34,422 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: status
+2023-05-15 17:05:34,423 INFO    WriterThread:3663221 [datastore.py:open_for_write():85] open: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/run-fnd6ton4.wandb
+2023-05-15 17:05:34,424 DEBUG   SenderThread:3663221 [sender.py:send():334] send: header
+2023-05-15 17:05:34,425 DEBUG   SenderThread:3663221 [sender.py:send():334] send: run
+2023-05-15 17:05:35,531 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: check_version
+2023-05-15 17:05:35,533 INFO    SenderThread:3663221 [dir_watcher.py:__init__():216] watching files in: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files
+2023-05-15 17:05:35,533 INFO    SenderThread:3663221 [sender.py:_start_run_threads():1065] run started: fnd6ton4 with start time 1684137934.419409
+2023-05-15 17:05:35,533 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:05:35,533 INFO    SenderThread:3663221 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:05:35,533 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: check_version
+2023-05-15 17:05:35,603 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: run_start
+2023-05-15 17:05:35,608 DEBUG   HandlerThread:3663221 [system_info.py:__init__():31] System info init
+2023-05-15 17:05:35,608 DEBUG   HandlerThread:3663221 [system_info.py:__init__():46] System info init done
+2023-05-15 17:05:35,608 INFO    HandlerThread:3663221 [system_monitor.py:start():151] Starting system monitor
+2023-05-15 17:05:35,608 INFO    SystemMonitor:3663221 [system_monitor.py:_start():116] Starting system asset monitoring threads
+2023-05-15 17:05:35,608 INFO    HandlerThread:3663221 [system_monitor.py:probe():172] Collecting system info
+2023-05-15 17:05:35,609 INFO    SystemMonitor:3663221 [interfaces.py:start():168] Started cpu
+2023-05-15 17:05:35,609 INFO    SystemMonitor:3663221 [interfaces.py:start():168] Started disk
+2023-05-15 17:05:35,610 INFO    SystemMonitor:3663221 [interfaces.py:start():168] Started gpu
+2023-05-15 17:05:35,610 INFO    SystemMonitor:3663221 [interfaces.py:start():168] Started memory
+2023-05-15 17:05:35,611 INFO    SystemMonitor:3663221 [interfaces.py:start():168] Started network
+2023-05-15 17:05:35,673 DEBUG   HandlerThread:3663221 [system_info.py:probe():195] Probing system
+2023-05-15 17:05:35,675 DEBUG   HandlerThread:3663221 [system_info.py:_probe_git():180] Probing git
+2023-05-15 17:05:35,681 DEBUG   HandlerThread:3663221 [system_info.py:_probe_git():188] Probing git done
+2023-05-15 17:05:35,681 DEBUG   HandlerThread:3663221 [system_info.py:probe():241] Probing system done
+2023-05-15 17:05:35,681 DEBUG   HandlerThread:3663221 [system_monitor.py:probe():181] {'os': 'Linux-5.15.0-57-generic-x86_64-with-glibc2.31', 'python': '3.10.9', 'heartbeatAt': '2023-05-15T08:05:35.673432', 'startedAt': '2023-05-15T08:05:34.410739', 'docker': None, 'cuda': None, 'args': ('0', '1024', '500', '1e-3', '5', '7', '0.7', '25', 'transfer_learning_1', '0'), 'state': 'running', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py', 'codePath': 'DeepPhospho.py', 'git': {'remote': 'https://github.com/HongB1/efficientnet_kincnn.git', 'commit': '5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8'}, 'email': 'hongbikim14@gmail.com', 'root': '/home/hb/python/efficientnet_kincnn', 'host': 'workstation', 'username': 'hb', 'executable': '/home/hb/anaconda3/envs/phos/bin/python3', 'cpu_count': 64, 'cpu_count_logical': 128, 'cpu_freq': {'current': 2.2461249999999953, 'min': 2200.0, 'max': 2900.0}, 'cpu_freq_per_core': [{'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 3.593, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 4.283, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}], 'disk': {'total': 1832.2072448730469, 'used': 1672.786319732666}, 'gpu': 'NVIDIA GeForce RTX 3090', 'gpu_count': 4, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}], 'memory': {'total': 251.55356216430664}}
+2023-05-15 17:05:35,681 INFO    HandlerThread:3663221 [system_monitor.py:probe():182] Finished collecting system info
+2023-05-15 17:05:35,681 INFO    HandlerThread:3663221 [system_monitor.py:probe():185] Publishing system info
+2023-05-15 17:05:35,681 DEBUG   HandlerThread:3663221 [system_info.py:_save_pip():51] Saving list of pip packages installed into the current environment
+2023-05-15 17:05:35,682 DEBUG   HandlerThread:3663221 [system_info.py:_save_pip():67] Saving pip packages done
+2023-05-15 17:05:35,682 DEBUG   HandlerThread:3663221 [system_info.py:_save_conda():74] Saving list of conda packages installed into the current environment
+2023-05-15 17:05:36,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json
+2023-05-15 17:05:36,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml
+2023-05-15 17:05:36,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/requirements.txt
+2023-05-15 17:05:41,141 DEBUG   HandlerThread:3663221 [system_info.py:_save_conda():86] Saving conda packages done
+2023-05-15 17:05:41,142 DEBUG   HandlerThread:3663221 [system_info.py:_save_code():89] Saving code
+2023-05-15 17:05:41,144 DEBUG   HandlerThread:3663221 [system_info.py:_save_code():110] Saving code done
+2023-05-15 17:05:41,144 DEBUG   HandlerThread:3663221 [system_info.py:_save_patches():127] Saving git patches
+2023-05-15 17:05:41,160 DEBUG   HandlerThread:3663221 [system_info.py:_save_patches():169] Saving git patches done
+2023-05-15 17:05:41,162 INFO    HandlerThread:3663221 [system_monitor.py:probe():187] Finished publishing system info
+2023-05-15 17:05:41,175 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:05:41,175 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:05:41,175 DEBUG   SenderThread:3663221 [sender.py:send():334] send: files
+2023-05-15 17:05:41,176 INFO    SenderThread:3663221 [sender.py:_save_file():1319] saving file wandb-metadata.json with policy now
+2023-05-15 17:05:41,176 INFO    SenderThread:3663221 [sender.py:_save_file():1319] saving file code/DeepPhospho.py with policy now
+2023-05-15 17:05:41,176 INFO    SenderThread:3663221 [sender.py:_save_file():1319] saving file diff.patch with policy now
+2023-05-15 17:05:41,180 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: stop_status
+2023-05-15 17:05:41,180 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: stop_status
+2023-05-15 17:05:41,471 DEBUG   SenderThread:3663221 [sender.py:send():334] send: telemetry
+2023-05-15 17:05:41,472 DEBUG   SenderThread:3663221 [sender.py:send():334] send: telemetry
+2023-05-15 17:05:41,472 DEBUG   SenderThread:3663221 [sender.py:send():334] send: run
+2023-05-15 17:05:41,534 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/config.yaml
+2023-05-15 17:05:41,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml
+2023-05-15 17:05:41,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/diff.patch
+2023-05-15 17:05:41,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/output.log
+2023-05-15 17:05:41,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/code/DeepPhospho.py
+2023-05-15 17:05:41,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/wandb-metadata.json
+2023-05-15 17:05:41,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/code
+2023-05-15 17:05:41,926 INFO    SenderThread:3663221 [sender.py:send_run():942] updated run: fnd6ton4
+2023-05-15 17:05:41,927 DEBUG   SenderThread:3663221 [sender.py:send():334] send: exit
+2023-05-15 17:05:41,927 INFO    SenderThread:3663221 [sender.py:send_exit():557] handling exit code: 1
+2023-05-15 17:05:41,927 INFO    SenderThread:3663221 [sender.py:send_exit():559] handling runtime: 5
+2023-05-15 17:05:41,928 INFO    SenderThread:3663221 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:05:41,928 INFO    SenderThread:3663221 [sender.py:send_exit():565] send defer
+2023-05-15 17:05:41,929 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:41,929 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 0
+2023-05-15 17:05:41,929 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:41,929 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 0
+2023-05-15 17:05:41,929 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 1
+2023-05-15 17:05:41,929 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:41,929 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 1
+2023-05-15 17:05:41,930 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:41,930 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 1
+2023-05-15 17:05:41,930 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 2
+2023-05-15 17:05:41,930 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:41,930 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 2
+2023-05-15 17:05:41,930 INFO    HandlerThread:3663221 [system_monitor.py:finish():161] Stopping system monitor
+2023-05-15 17:05:41,930 DEBUG   SystemMonitor:3663221 [system_monitor.py:_start():130] Starting system metrics aggregation loop
+2023-05-15 17:05:41,930 DEBUG   SystemMonitor:3663221 [system_monitor.py:_start():137] Finished system metrics aggregation loop
+2023-05-15 17:05:41,931 DEBUG   SystemMonitor:3663221 [system_monitor.py:_start():141] Publishing last batch of metrics
+2023-05-15 17:05:41,932 INFO    HandlerThread:3663221 [interfaces.py:finish():175] Joined cpu
+2023-05-15 17:05:41,932 INFO    HandlerThread:3663221 [interfaces.py:finish():175] Joined disk
+2023-05-15 17:05:42,029 INFO    Thread-17 :3663221 [upload_job.py:push():143] Uploaded file /tmp/tmpbnil3189wandb/wsuic5fl-code/DeepPhospho.py
+2023-05-15 17:05:42,049 INFO    Thread-16 :3663221 [upload_job.py:push():143] Uploaded file /tmp/tmpbnil3189wandb/pgdni7ms-wandb-metadata.json
+2023-05-15 17:05:42,076 INFO    Thread-18 :3663221 [upload_job.py:push():143] Uploaded file /tmp/tmpbnil3189wandb/e91hekx5-diff.patch
+2023-05-15 17:05:42,337 INFO    HandlerThread:3663221 [interfaces.py:finish():175] Joined gpu
+2023-05-15 17:05:42,337 INFO    HandlerThread:3663221 [interfaces.py:finish():175] Joined memory
+2023-05-15 17:05:42,337 INFO    HandlerThread:3663221 [interfaces.py:finish():175] Joined network
+2023-05-15 17:05:42,338 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:05:42,338 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:42,338 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 2
+2023-05-15 17:05:42,338 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 3
+2023-05-15 17:05:42,338 DEBUG   SenderThread:3663221 [sender.py:send():334] send: stats
+2023-05-15 17:05:42,338 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:42,339 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:05:42,339 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 3
+2023-05-15 17:05:42,339 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:42,339 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 3
+2023-05-15 17:05:42,339 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 4
+2023-05-15 17:05:42,340 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:42,340 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 4
+2023-05-15 17:05:42,340 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:42,340 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 4
+2023-05-15 17:05:42,340 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 5
+2023-05-15 17:05:42,340 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:42,340 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 5
+2023-05-15 17:05:42,341 DEBUG   SenderThread:3663221 [sender.py:send():334] send: summary
+2023-05-15 17:05:42,341 INFO    SenderThread:3663221 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:05:42,341 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:42,341 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 5
+2023-05-15 17:05:42,341 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 6
+2023-05-15 17:05:42,341 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:42,342 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 6
+2023-05-15 17:05:42,342 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:42,342 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 6
+2023-05-15 17:05:42,346 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:05:42,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json
+2023-05-15 17:05:42,771 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 7
+2023-05-15 17:05:42,771 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:42,771 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 7
+2023-05-15 17:05:42,772 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:42,772 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 7
+2023-05-15 17:05:43,190 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:05:43,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/config.yaml
+2023-05-15 17:05:43,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/output.log
+2023-05-15 17:05:43,934 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 8
+2023-05-15 17:05:43,934 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:05:43,936 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:43,936 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 8
+2023-05-15 17:05:43,936 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:43,936 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 8
+2023-05-15 17:05:43,954 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 9
+2023-05-15 17:05:43,954 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:43,955 DEBUG   SenderThread:3663221 [sender.py:send():334] send: artifact
+2023-05-15 17:05:43,955 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 9
+2023-05-15 17:05:44,191 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:05:44,535 INFO    Thread-13 :3663221 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/output.log
+2023-05-15 17:05:46,488 INFO    Thread-21 :3663221 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmp2wdyshu6
+2023-05-15 17:05:46,523 INFO    Thread-20 :3663221 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmpj6z555l0
+2023-05-15 17:05:46,529 INFO    Thread-22 :3663221 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmpdrggll28
+2023-05-15 17:05:49,193 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:05:49,268 INFO    SenderThread:3663221 [sender.py:send_artifact():1415] sent artifact job-https___github.com_HongB1_efficientnet_kincnn.git_DeepPhospho.py - {'id': 'QXJ0aWZhY3Q6NDU1NDkzNjU3', 'digest': 'c20f1cff2e824fb6cc665ec4236df691', 'state': 'PENDING', 'aliases': [], 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjY5MzkzNzYx', 'latestArtifact': None}, 'version': 'latest'}
+2023-05-15 17:05:49,268 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:49,268 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:05:49,268 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 9
+2023-05-15 17:05:49,269 INFO    SenderThread:3663221 [dir_watcher.py:finish():362] shutting down directory watcher
+2023-05-15 17:05:49,538 INFO    SenderThread:3663221 [dir_watcher.py:finish():392] scan: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files
+2023-05-15 17:05:49,538 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/output.log output.log
+2023-05-15 17:05:49,538 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/wandb-metadata.json wandb-metadata.json
+2023-05-15 17:05:49,538 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/diff.patch diff.patch
+2023-05-15 17:05:49,538 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json wandb-summary.json
+2023-05-15 17:05:49,538 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/config.yaml config.yaml
+2023-05-15 17:05:49,541 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/requirements.txt requirements.txt
+2023-05-15 17:05:49,541 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml conda-environment.yaml
+2023-05-15 17:05:49,544 INFO    SenderThread:3663221 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/code/DeepPhospho.py code/DeepPhospho.py
+2023-05-15 17:05:49,545 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 10
+2023-05-15 17:05:49,548 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:05:49,549 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:49,552 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 10
+2023-05-15 17:05:49,556 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:49,556 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 10
+2023-05-15 17:05:49,556 INFO    SenderThread:3663221 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:05:50,309 INFO    Thread-25 :3663221 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/config.yaml
+2023-05-15 17:05:50,313 INFO    Thread-26 :3663221 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/requirements.txt
+2023-05-15 17:05:50,345 INFO    Thread-24 :3663221 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/wandb-summary.json
+2023-05-15 17:05:50,348 INFO    Thread-27 :3663221 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/conda-environment.yaml
+2023-05-15 17:05:50,359 INFO    Thread-23 :3663221 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/files/output.log
+2023-05-15 17:05:50,559 INFO    Thread-12 (_thread_body):3663221 [sender.py:transition_state():585] send defer: 11
+2023-05-15 17:05:50,560 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:50,560 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 11
+2023-05-15 17:05:50,560 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:50,561 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 11
+2023-05-15 17:05:50,561 INFO    SenderThread:3663221 [file_pusher.py:join():165] waiting for file pusher
+2023-05-15 17:05:50,561 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 12
+2023-05-15 17:05:50,561 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:50,561 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 12
+2023-05-15 17:05:50,561 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:50,561 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 12
+2023-05-15 17:05:51,039 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 13
+2023-05-15 17:05:51,039 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:51,039 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 13
+2023-05-15 17:05:51,040 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:51,040 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 13
+2023-05-15 17:05:51,040 INFO    SenderThread:3663221 [sender.py:transition_state():585] send defer: 14
+2023-05-15 17:05:51,040 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:05:51,040 DEBUG   SenderThread:3663221 [sender.py:send():334] send: final
+2023-05-15 17:05:51,040 INFO    HandlerThread:3663221 [handler.py:handle_request_defer():170] handle defer: 14
+2023-05-15 17:05:51,041 DEBUG   SenderThread:3663221 [sender.py:send():334] send: footer
+2023-05-15 17:05:51,041 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:05:51,041 INFO    SenderThread:3663221 [sender.py:send_request_defer():581] handle sender defer: 14
+2023-05-15 17:05:51,042 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:05:51,042 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:05:51,042 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: server_info
+2023-05-15 17:05:51,043 DEBUG   SenderThread:3663221 [sender.py:send_request():361] send_request: server_info
+2023-05-15 17:05:51,045 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: get_summary
+2023-05-15 17:05:51,045 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: sampled_history
+2023-05-15 17:05:51,344 INFO    MainThread:3663221 [wandb_run.py:_footer_history_summary_info():3427] rendering history
+2023-05-15 17:05:51,345 INFO    MainThread:3663221 [wandb_run.py:_footer_history_summary_info():3459] rendering summary
+2023-05-15 17:05:51,345 INFO    MainThread:3663221 [wandb_run.py:_footer_sync_info():3383] logging synced files
+2023-05-15 17:05:51,345 DEBUG   HandlerThread:3663221 [handler.py:handle_request():144] handle_request: shutdown
+2023-05-15 17:05:51,345 INFO    HandlerThread:3663221 [handler.py:finish():841] shutting down handler
+2023-05-15 17:05:52,043 INFO    WriterThread:3663221 [datastore.py:close():299] close: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/run-fnd6ton4.wandb
+2023-05-15 17:05:52,344 INFO    SenderThread:3663221 [sender.py:finish():1491] shutting down sender
+2023-05-15 17:05:52,345 INFO    SenderThread:3663221 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:05:52,345 INFO    SenderThread:3663221 [file_pusher.py:join():165] waiting for file pusher
diff --git a/wandb/run-20230515_170534-fnd6ton4/logs/debug.log b/wandb/run-20230515_170534-fnd6ton4/logs/debug.log
new file mode 100644
index 0000000..77f48fa
--- /dev/null
+++ b/wandb/run-20230515_170534-fnd6ton4/logs/debug.log
@@ -0,0 +1,26 @@
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_setup.py:_flush():68] Configure stats pid to 3663076
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_setup.py:_flush():68] Loading settings from /home/hb/.config/wandb/settings
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_setup.py:_flush():68] Loading settings from /home/hb/python/efficientnet_kincnn/wandb/settings
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'DeepPhospho.py', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py'}
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_init.py:_log_setup():478] Logging user logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/logs/debug.log
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_init.py:_log_setup():479] Logging internal logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170534-fnd6ton4/logs/debug-internal.log
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_init.py:init():518] calling init triggers
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_init.py:init():521] wandb.init called with sweep_config: {}
+config: {'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1705_bs1024_weight0'}
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_init.py:init():571] starting backend
+2023-05-15 17:05:34,412 INFO    MainThread:3663076 [wandb_init.py:init():575] setting up manager
+2023-05-15 17:05:34,416 INFO    MainThread:3663076 [backend.py:_multiprocessing_setup():106] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2023-05-15 17:05:34,419 INFO    MainThread:3663076 [wandb_init.py:init():582] backend started and connected
+2023-05-15 17:05:34,421 INFO    MainThread:3663076 [wandb_init.py:init():670] updated telemetry
+2023-05-15 17:05:34,424 INFO    MainThread:3663076 [wandb_init.py:init():710] communicating run to backend with 60.0 second timeout
+2023-05-15 17:05:35,531 INFO    MainThread:3663076 [wandb_run.py:_on_init():2121] communicating current version
+2023-05-15 17:05:35,600 INFO    MainThread:3663076 [wandb_run.py:_on_init():2125] got version response upgrade_message: "wandb version 0.15.2 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2023-05-15 17:05:35,600 INFO    MainThread:3663076 [wandb_init.py:init():758] starting run threads in backend
+2023-05-15 17:05:41,180 INFO    MainThread:3663076 [wandb_run.py:_console_start():2101] atexit reg
+2023-05-15 17:05:41,180 INFO    MainThread:3663076 [wandb_run.py:_redirect():1959] redirect: SettingsConsole.WRAP_RAW
+2023-05-15 17:05:41,180 INFO    MainThread:3663076 [wandb_run.py:_redirect():2024] Wrapping output streams.
+2023-05-15 17:05:41,181 INFO    MainThread:3663076 [wandb_run.py:_redirect():2046] Redirects installed.
+2023-05-15 17:05:41,181 INFO    MainThread:3663076 [wandb_init.py:init():798] run started, returning control to user process
+2023-05-15 17:05:52,346 WARNING MsgRouterThr:3663076 [router.py:message_loop():77] message_loop has been closed
diff --git a/wandb/run-20230515_170534-fnd6ton4/run-fnd6ton4.wandb b/wandb/run-20230515_170534-fnd6ton4/run-fnd6ton4.wandb
new file mode 100644
index 0000000..9d97bc4
Binary files /dev/null and b/wandb/run-20230515_170534-fnd6ton4/run-fnd6ton4.wandb differ
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/code/DeepPhospho.py b/wandb/run-20230515_170701-hhuka4gm/files/code/DeepPhospho.py
new file mode 100644
index 0000000..73cab75
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/code/DeepPhospho.py
@@ -0,0 +1,294 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+import efficientnet_kincnn
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'efficientnet-phospho-B-15'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = efficientnet_kincnn.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml b/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml
new file mode 100644
index 0000000..ceb7650
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml
@@ -0,0 +1,360 @@
+name: phos
+channels:
+  - pytorch
+  - nvidia
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - anyio=3.5.0=py310h06a4308_0
+  - argon2-cffi=21.3.0=pyhd3eb1b0_0
+  - argon2-cffi-bindings=21.2.0=py310h7f8727e_0
+  - asttokens=2.0.5=pyhd3eb1b0_0
+  - attrs=22.1.0=py310h06a4308_0
+  - babel=2.11.0=py310h06a4308_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - beautifulsoup4=4.11.1=py310h06a4308_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd3eb1b0_0
+  - bottleneck=1.3.5=py310ha9d4c09_0
+  - brotli=1.0.9=h5eee18b_7
+  - brotli-bin=1.0.9=h5eee18b_7
+  - brotlipy=0.7.0=py310h7f8727e_1002
+  - bzip2=1.0.8=h7b6447c_0
+  - ca-certificates=2022.10.11=h06a4308_0
+  - certifi=2022.12.7=py310h06a4308_0
+  - cffi=1.15.1=py310h5eee18b_3
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - comm=0.1.2=py310h06a4308_0
+  - contourpy=1.0.5=py310hdb19cb5_0
+  - cryptography=38.0.4=py310h9ce1e76_0
+  - cuda=11.6.1=0
+  - cuda-cccl=11.6.55=hf6102b2_0
+  - cuda-command-line-tools=11.6.2=0
+  - cuda-compiler=11.6.2=0
+  - cuda-cudart=11.6.55=he381448_0
+  - cuda-cudart-dev=11.6.55=h42ad0f4_0
+  - cuda-cuobjdump=11.6.124=h2eeebcb_0
+  - cuda-cupti=11.6.124=h86345e5_0
+  - cuda-cuxxfilt=11.6.124=hecbf4f6_0
+  - cuda-driver-dev=11.6.55=0
+  - cuda-gdb=12.0.90=0
+  - cuda-libraries=11.6.1=0
+  - cuda-libraries-dev=11.6.1=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=12.0.78=0
+  - cuda-nsight-compute=12.0.0=0
+  - cuda-nvcc=11.6.124=hbba6d2d_0
+  - cuda-nvdisasm=12.0.76=0
+  - cuda-nvml-dev=11.6.55=haa9ef22_0
+  - cuda-nvprof=12.0.90=0
+  - cuda-nvprune=11.6.124=he22ec0a_0
+  - cuda-nvrtc=11.6.124=h020bade_0
+  - cuda-nvrtc-dev=11.6.124=h249d397_0
+  - cuda-nvtx=11.6.124=h0630a44_0
+  - cuda-nvvp=12.0.90=0
+  - cuda-runtime=11.6.1=0
+  - cuda-samples=11.6.101=h8efea70_0
+  - cuda-sanitizer-api=12.0.90=0
+  - cuda-toolkit=11.6.1=0
+  - cuda-tools=11.6.1=0
+  - cuda-visual-tools=11.6.1=0
+  - cycler=0.11.0=pyhd3eb1b0_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.5.1=py310h295c915_0
+  - decorator=5.1.1=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - entrypoints=0.4=py310h06a4308_0
+  - executing=0.8.3=pyhd3eb1b0_0
+  - expat=2.4.9=h6a678d5_0
+  - ffmpeg=4.3=hf484d3e_0
+  - flit-core=3.6.0=pyhd3eb1b0_0
+  - fontconfig=2.14.1=h52c9d5c_1
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.12.1=h4a9f257_0
+  - gds-tools=1.5.0.59=0
+  - giflib=5.2.1=h7b6447c_0
+  - glib=2.69.1=he621ea3_2
+  - gmp=6.2.1=h295c915_3
+  - gnutls=3.6.15=he1e5248_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.4=py310h06a4308_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - ipykernel=6.19.2=py310h2f386ee_0
+  - ipython=8.7.0=py310h06a4308_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.5=pyhd3eb1b0_1
+  - jedi=0.18.1=py310h06a4308_1
+  - jinja2=3.1.2=py310h06a4308_0
+  - jpeg=9e=h7f8727e_0
+  - json5=0.9.6=pyhd3eb1b0_0
+  - jsonschema=4.16.0=py310h06a4308_0
+  - jupyter=1.0.0=py310h06a4308_8
+  - jupyter_client=7.4.8=py310h06a4308_0
+  - jupyter_console=6.4.4=py310h06a4308_0
+  - jupyter_core=5.1.1=py310h06a4308_0
+  - jupyter_server=1.23.4=py310h06a4308_0
+  - jupyterlab=3.5.2=py310h06a4308_0
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.16.5=py310h06a4308_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - kiwisolver=1.4.4=py310h6a678d5_0
+  - krb5=1.19.2=hac12032_0
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.38=h1181459_1
+  - lerc=3.0=h295c915_0
+  - libbrotlicommon=1.0.9=h5eee18b_7
+  - libbrotlidec=1.0.9=h5eee18b_7
+  - libbrotlienc=1.0.9=h5eee18b_7
+  - libclang=10.0.1=default_hb85057a_2
+  - libcublas=11.9.2.110=h5e84587_0
+  - libcublas-dev=11.9.2.110=h5c901ab_0
+  - libcufft=10.7.1.112=hf425ae0_0
+  - libcufft-dev=10.7.1.112=ha5ce4c0_0
+  - libcufile=1.5.0.59=0
+  - libcufile-dev=1.5.0.59=0
+  - libcurand=10.3.1.50=0
+  - libcurand-dev=10.3.1.50=0
+  - libcusolver=11.3.4.124=h33c3c4e_0
+  - libcusparse=11.7.2.124=h7538f96_0
+  - libcusparse-dev=11.7.2.124=hbbe9722_0
+  - libdeflate=1.8=h7f8727e_5
+  - libedit=3.1.20221030=h5eee18b_0
+  - libevent=2.1.12=h8f2d780_0
+  - libffi=3.4.2=h6a678d5_6
+  - libgcc-ng=11.2.0=h1234567_1
+  - libgomp=11.2.0=h1234567_1
+  - libiconv=1.16=h7f8727e_2
+  - libidn2=2.3.2=h7f8727e_0
+  - libllvm10=10.0.1=hbcb73fb_5
+  - libnpp=11.6.3.124=hd2722f0_0
+  - libnpp-dev=11.6.3.124=h3c42840_0
+  - libnvjpeg=11.6.2.124=hd473ad6_0
+  - libnvjpeg-dev=11.6.2.124=hb5906b9_0
+  - libpng=1.6.37=hbc83047_0
+  - libpq=12.9=h16c4e8d_3
+  - libsodium=1.0.18=h7b6447c_0
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.16.0=h27cfd23_0
+  - libtiff=4.5.0=hecacb30_0
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=1.41.5=h5eee18b_0
+  - libwebp=1.2.4=h11a3e52_0
+  - libwebp-base=1.2.4=h5eee18b_0
+  - libxcb=1.15=h7f8727e_0
+  - libxkbcommon=1.0.1=hfa300c1_0
+  - libxml2=2.9.14=h74e7548_0
+  - libxslt=1.1.35=h4e12654_0
+  - lxml=4.9.1=py310h1edc446_0
+  - lz4-c=1.9.4=h6a678d5_0
+  - markupsafe=2.1.1=py310h7f8727e_0
+  - matplotlib=3.6.2=py310h06a4308_0
+  - matplotlib-base=3.6.2=py310h945d387_0
+  - matplotlib-inline=0.1.6=py310h06a4308_0
+  - mistune=0.8.4=py310h7f8727e_1000
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py310h7f8727e_0
+  - mkl_fft=1.3.1=py310hd6ae3a3_0
+  - mkl_random=1.2.2=py310h00e6091_0
+  - munkres=1.1.4=py_0
+  - nbclassic=0.4.8=py310h06a4308_0
+  - nbclient=0.5.13=py310h06a4308_0
+  - nbconvert=6.5.4=py310h06a4308_0
+  - nbformat=5.7.0=py310h06a4308_0
+  - ncurses=6.3=h5eee18b_3
+  - nest-asyncio=1.5.6=py310h06a4308_0
+  - nettle=3.7.3=hbbd107a_1
+  - notebook=6.5.2=py310h06a4308_0
+  - notebook-shim=0.2.2=py310h06a4308_0
+  - nsight-compute=2022.4.0.15=0
+  - nspr=4.33=h295c915_0
+  - nss=3.74=h0370c37_0
+  - numexpr=2.8.4=py310h8879344_0
+  - numpy=1.23.5=py310hd5efca6_0
+  - numpy-base=1.23.5=py310h8e6c178_0
+  - openh264=2.1.1=h4ff587b_0
+  - openssl=1.1.1s=h7f8727e_0
+  - packaging=22.0=py310h06a4308_0
+  - pandas=1.5.2=py310h1128e8f_0
+  - pandocfilters=1.5.0=pyhd3eb1b0_0
+  - parso=0.8.3=pyhd3eb1b0_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=9.3.0=py310hace64e9_1
+  - pip=22.3.1=py310h06a4308_0
+  - platformdirs=2.5.2=py310h06a4308_0
+  - ply=3.11=py310h06a4308_0
+  - prometheus_client=0.14.1=py310h06a4308_0
+  - prompt-toolkit=3.0.36=py310h06a4308_0
+  - prompt_toolkit=3.0.36=hd3eb1b0_0
+  - psutil=5.9.0=py310h5eee18b_0
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - pure_eval=0.2.2=pyhd3eb1b0_0
+  - pycparser=2.21=pyhd3eb1b0_0
+  - pygments=2.11.2=pyhd3eb1b0_0
+  - pyopenssl=22.0.0=pyhd3eb1b0_0
+  - pyparsing=3.0.9=py310h06a4308_0
+  - pyqt=5.15.7=py310h6a678d5_1
+  - pyrsistent=0.18.0=py310h7f8727e_0
+  - pysocks=1.7.1=py310h06a4308_0
+  - python=3.10.9=h7a1cb2a_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python-fastjsonschema=2.16.2=py310h06a4308_0
+  - pytorch=1.13.1=py3.10_cuda11.6_cudnn8.3.2_0
+  - pytorch-cuda=11.6=h867d48c_1
+  - pytorch-mutex=1.0=cuda
+  - pytz=2022.7=py310h06a4308_0
+  - pyzmq=23.2.0=py310h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - qt-webengine=5.15.9=hd2b0992_4
+  - qtconsole=5.4.0=py310h06a4308_0
+  - qtpy=2.2.0=py310h06a4308_0
+  - qtwebkit=5.212=h4eab89a_4
+  - readline=8.2=h5eee18b_0
+  - requests=2.28.1=py310h06a4308_0
+  - seaborn=0.12.2=py310h06a4308_0
+  - send2trash=1.8.0=pyhd3eb1b0_1
+  - setuptools=65.6.3=py310h06a4308_0
+  - sip=6.6.2=py310h6a678d5_0
+  - six=1.16.0=pyhd3eb1b0_1
+  - sniffio=1.2.0=py310h06a4308_1
+  - soupsieve=2.3.2.post1=py310h06a4308_0
+  - sqlite=3.40.1=h5082296_0
+  - stack_data=0.2.0=pyhd3eb1b0_0
+  - terminado=0.17.1=py310h06a4308_0
+  - tinycss2=1.2.1=py310h06a4308_0
+  - tk=8.6.12=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tomli=2.0.1=py310h06a4308_0
+  - torchaudio=0.13.1=py310_cu116
+  - torchvision=0.14.1=py310_cu116
+  - tornado=6.2=py310h5eee18b_0
+  - tqdm=4.64.1=py310h06a4308_0
+  - traitlets=5.7.1=py310h06a4308_0
+  - typing-extensions=4.4.0=py310h06a4308_0
+  - typing_extensions=4.4.0=py310h06a4308_0
+  - tzdata=2022g=h04d1e81_0
+  - urllib3=1.26.14=py310h06a4308_0
+  - wcwidth=0.2.5=pyhd3eb1b0_0
+  - webencodings=0.5.1=py310h06a4308_1
+  - websocket-client=0.58.0=py310h06a4308_4
+  - wheel=0.37.1=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.2=py310h06a4308_0
+  - xz=5.2.10=h5eee18b_1
+  - zeromq=4.3.4=h2531618_0
+  - zlib=1.2.13=h5eee18b_0
+  - zstd=1.5.2=ha4553b6_0
+  - pip:
+    - absl-py==1.4.0
+    - albumentations==1.3.0
+    - alembic==1.10.4
+    - ansi2html==1.8.0
+    - appdirs==1.4.4
+    - blinker==1.6.2
+    - cachetools==5.2.1
+    - category-encoders==2.6.0
+    - click==8.1.3
+    - cloudpickle==2.2.1
+    - cmaes==0.9.1
+    - colorlog==6.7.0
+    - cython==0.29.34
+    - dash==2.9.3
+    - dash-core-components==2.0.0
+    - dash-html-components==2.0.0
+    - dash-table==5.0.0
+    - deprecated==1.2.13
+    - deprecation==2.1.0
+    - docker-pycreds==0.4.0
+    - efficientnet-pytorch==0.7.1
+    - et-xmlfile==1.1.0
+    - flask==2.3.1
+    - gitdb==4.0.10
+    - gitpython==3.1.30
+    - google-auth==2.16.0
+    - google-auth-oauthlib==0.4.6
+    - grad-cam==1.4.6
+    - greenlet==2.0.2
+    - grpcio==1.51.1
+    - hiddenlayer==0.3
+    - imageio==2.26.0
+    - imbalanced-learn==0.10.1
+    - importlib-metadata==6.6.0
+    - itsdangerous==2.1.2
+    - joblib==1.2.0
+    - jupyter-dash==0.4.2
+    - kaleido==0.2.1
+    - lazy-loader==0.1
+    - lightgbm==3.3.5
+    - llvmlite==0.39.1
+    - mako==1.2.4
+    - markdown==3.4.1
+    - multicoretsne==0.1
+    - networkx==3.0
+    - numba==0.56.4
+    - oauthlib==3.2.2
+    - opencv-python==4.7.0.72
+    - opencv-python-headless==4.7.0.72
+    - openpyxl==3.0.10
+    - optuna==3.1.1
+    - orjson==3.8.10
+    - pathtools==0.1.2
+    - patsy==0.5.3
+    - plotly==5.14.1
+    - plotly-resampler==0.8.3.2
+    - pmdarima==2.0.3
+    - protobuf==3.20.3
+    - pyarrow==11.0.0
+    - pyasn1==0.4.8
+    - pyasn1-modules==0.2.8
+    - pycaret==3.0.0
+    - pyod==1.0.9
+    - pyqt5-sip==12.11.0
+    - python-graphviz==0.20.1
+    - python-louvain==0.16
+    - pytorch-gradcam==0.2.1
+    - pywavelets==1.4.1
+    - pyyaml==6.0
+    - qudida==0.0.4
+    - requests-oauthlib==1.3.1
+    - retrying==1.3.4
+    - rsa==4.9
+    - schemdraw==0.16
+    - scikit-image==0.20.0
+    - scikit-learn==1.2.2
+    - scikit-plot==0.3.7
+    - scipy==1.10.0
+    - sentry-sdk==1.14.0
+    - setproctitle==1.3.2
+    - shap==0.41.0
+    - sktime==0.17.2
+    - slicer==0.0.7
+    - smmap==5.0.0
+    - sqlalchemy==2.0.11
+    - statsmodels==0.13.5
+    - tbats==1.1.3
+    - tenacity==8.2.2
+    - tensorboard==2.11.2
+    - tensorboard-data-server==0.6.1
+    - tensorboard-plugin-wit==1.8.1
+    - threadpoolctl==3.1.0
+    - tifffile==2023.2.28
+    - torchinfo==1.7.2
+    - torchsummary==1.5.1
+    - torchsummaryx==1.3.0
+    - torchviz==0.0.2
+    - trace-updater==0.0.9.1
+    - tsnecuda==3.0.1+cu113
+    - ttach==0.0.3
+    - wandb==0.13.9
+    - werkzeug==2.3.0
+    - wrapt==1.15.0
+    - wurlitzer==3.0.3
+    - xgboost==1.7.5
+    - xxhash==3.2.0
+    - yellowbrick==1.5
+    - zipp==3.15.0
+prefix: /home/hb/anaconda3/envs/phos
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/config.yaml b/wandb/run-20230515_170701-hhuka4gm/files/config.yaml
new file mode 100644
index 0000000..ece4fea
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/config.yaml
@@ -0,0 +1,68 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.13.9
+    code_path: code/DeepPhospho.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.10.9
+    start_time: 1684138021.370938
+    t:
+      1:
+      - 1
+      - 5
+      - 53
+      - 55
+      2:
+      - 1
+      - 5
+      - 53
+      - 55
+      3:
+      - 16
+      - 17
+      - 23
+      - 37
+      4: 3.10.9
+      5: 0.13.9
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 1024
+dataset:
+  desc: null
+  value: transfer_learning_1
+defalut_learning_rate:
+  desc: null
+  value: 0.001
+erls_patience:
+  desc: null
+  value: 25
+fold_num:
+  desc: null
+  value: 5
+gpu_num:
+  desc: null
+  value: '0'
+model:
+  desc: null
+  value: efficientnet-phospho-B-15
+n_epoch:
+  desc: null
+  value: 500
+pretrain_fold_num:
+  desc: null
+  value: '0'
+save_dir:
+  desc: null
+  value: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0
+scheduler_factor:
+  desc: null
+  value: 0.7
+scheduler_patience:
+  desc: null
+  value: 7
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/diff.patch b/wandb/run-20230515_170701-hhuka4gm/files/diff.patch
new file mode 100644
index 0000000..3e8d5df
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/diff.patch
@@ -0,0 +1,163 @@
+diff --git a/__init__.py b/__init__.py
+index 4210ebf..0959fed 100644
+--- a/__init__.py
++++ b/__init__.py
+@@ -1,4 +1,4 @@
+ __version__ = "0.7.1"
+-from .model import VALID_MODELS, EfficientNet
++from .kincnn import EfficientNet
+ from .utils import (BlockArgs, BlockDecoder, GlobalParams, efficientnet,
+                     get_model_params)
+diff --git a/kincnn.py b/kincnn.py
+index 7f518f0..e80f9c1 100644
+--- a/kincnn.py
++++ b/kincnn.py
+@@ -185,7 +185,7 @@ class EfficientNet(nn.Module):
+         self._bn0 = nn.BatchNorm2d(
+             num_features=out_channels, momentum=bn_mom, eps=bn_eps
+         )
+-        image_size = calculate_output_image_size(image_size, stride=2)
++        image_size = calculate_output_image_size(image_size, stride=(2,1))
+ 
+         # Build blocks
+         self._blocks = nn.ModuleList([])
+diff --git a/prepare_dataset.py b/prepare_dataset.py
+deleted file mode 100644
+index 5350a37..0000000
+--- a/prepare_dataset.py
++++ /dev/null
+@@ -1,134 +0,0 @@
+-import sys
+-
+-import numpy as np
+-import pandas as pd
+-import torch
+-import torch.utils.data as data_utils
+-from sklearn.model_selection import train_test_split
+-
+-
+-def prepare_dataset(dataset_mode=None):
+-    df = pd.read_pickle("test1.pkl")
+-    df = df.sample(frac=1, random_state=42).reset_index(drop=True)
+-    # df['stratify'] Ïª¨ÎüºÏùò unique valueÍ∞Ä 1Ïù∏ Í∞íÎì§ÏùÄ df_Î°ú Îî∞Î°ú ÎπºÍ≥†, ÎÇòÎ®∏ÏßÄÎäî dfÎ°ú
+-    # df['stratify'].value_counts() : df['stratify'] Ïª¨ÎüºÏùò unique valueÎì§ÏùÑ countÌï¥Ï£ºÎäî Ìï®Ïàò
+-    # [df['stratify'].value_counts()==1].index.tolist() : df['stratify'] Ïª¨ÎüºÏóêÏÑú unique valueÍ∞Ä 1Ïù∏ indexÎßå Î¶¨Ïä§Ìä∏Î°ú Ï∂îÏ∂ú
+-    df["stratify"] = df.apply(lambda x: x["kin_id"] + "-" + str(x["answer"]), axis=1)
+-    df_ = df[
+-        df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-    df = df[
+-        ~df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-
+-    # df['matrix']Îäî pandas.series typeÏù¥ÎØÄÎ°ú listÌòïÌÉúÎ°ú Î∞îÍøîÏ§ÄÎã§.
+-    matrix = np.array([x for x in df["matrix"]], dtype=np.float32)
+-
+-    # answerÏóê df['answer']Ïùò Í∞íÏùÑ listÌòïÌÉúÎ°ú ÎÑ£Ïñ¥Ï§ÄÎã§
+-    answer = list(df["answer"].astype("int"))
+-
+-    # ÏïÑÍπå Îî∞Î°ú Îó¥Ïñ¥ÎÜ®Îçò df_Ïóê ÎåÄÌï¥ÏÑúÎèÑ ÎòëÍ∞ôÏù¥ matrix_Î•º ÎßåÏñ¥Ï§ÄÎã§.
+-    matrix_ = np.array([x for x in df_["matrix"]], dtype=np.float32)
+-    answer_ = list(df_["answer"].astype("int"))
+-
+-    # matrix = np.concatenate([matrix, matrix_])
+-    # answer = np.concatenate([answer, answer_])
+-
+-    # dataset = data_utils.TensorDataset(torch.tensor(matrix), torch.tensor(answer))
+-    # return dataset
+-    # answer = np.array(answer, dtype=np.int64)
+-    # answer_ = np.array(answer_, dtype=np.int64)
+-    # print(matrix.shape, answer.shape)
+-    xTrain, xTest, yTrain, yTest = train_test_split(
+-        matrix, answer, test_size=0.2, random_state=42, stratify=df["stratify"]
+-    )
+-    try:
+-        xTrain = np.concatenate([xTrain, matrix_])
+-        yTrain = np.concatenate([yTrain, answer_])
+-    except:
+-        pass
+-    # print(type(yTrain[0]))
+-    print(yTrain)
+-    counts = np.bincount(yTrain)
+-    print(
+-        "Number of positive samples in training data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTrain)
+-        )
+-    )
+-    counts = np.bincount(yTest)
+-    print(
+-        "Number of positive samples in validation data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTest)
+-        )
+-    )  # counts[1] : answer = 1 Ïù∏ Í∞í
+-    # globals()['counts'] = counts
+-    # BATCH_SIZE = batch_size
+-    train_set = data_utils.TensorDataset(torch.tensor(xTrain), torch.tensor(yTrain))
+-    valid_set = data_utils.TensorDataset(torch.tensor(xTest), torch.tensor(yTest))
+-
+-    return train_set, valid_set
+-
+-    # elif dataset_mode == 'pretrain_nonrepl':
+-    #     # df_nonreplicated = pd.read_pickle("/home/hb/python/phospho/data/atlas/ats_nonreplicated_with_psph.pkl")
+-    #     # # with open("/home/hb/python/phospho/data/atlas/matrix_0595.pickle", 'rb') as f:
+-    #     #     # matrix = pickle.load(f)
+-    #     # # with open("/home/hb/python/phospho/data/atlas/label_0595.pickle", 'rb') as f:
+-    #     #     # label = pickle.load(f)
+-    #     # matrix = df_nonreplicated['matrix'].to_list()
+-    #     # matrix = np.array([x for x in matrix], dtype=np.float32)
+-    #     # answer = df_nonreplicated['answer'].to_numpy().astype(int)
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_mtx_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_ans_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # elif dataset_mode == 'pretrain_1090':
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/matrix1090.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/label1090.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # return train_set, valid_set
+-
+-
+-class AttrDict(dict):
+-    def __init__(self, *args, **kwargs):
+-        super(AttrDict, self).__init__(*args, **kwargs)
+-        self.__dict__ = self
+-
+-
+-config = AttrDict()
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/output.log b/wandb/run-20230515_170701-hhuka4gm/files/output.log
new file mode 100644
index 0000000..4d4afa5
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/output.log
@@ -0,0 +1,21 @@
+{'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0'}
+FOLD 0
+--------------------------------
+efficientnet-phospho-B-15
+lr:  0.001
+------------------------------------------------------------
+Epoch 1/500
+  0%|                                                   | 0/500 [00:00<?, ?it/s]
+  0%|                                                   | 0/500 [00:01<?, ?it/s]
+Traceback (most recent call last):
+  File "/home/hb/python/efficientnet_kincnn/DeepPhospho.py", line 294, in <module>
+    train_model_5cv()
+  File "/home/hb/python/efficientnet_kincnn/DeepPhospho.py", line 171, in train_model_5cv
+    pred = model(inputs) # forward
+  File "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
+    return forward_call(*input, **kwargs)
+  File "/home/hb/python/efficientnet_kincnn/../efficientnet_kincnn/kincnn.py", line 338, in forward
+    x = self._avg_pooling(x)
+  File "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1269, in __getattr__
+    raise AttributeError("'{}' object has no attribute '{}'".format(
+AttributeError: 'EfficientNet' object has no attribute '_avg_pooling'
\ No newline at end of file
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/requirements.txt b/wandb/run-20230515_170701-hhuka4gm/files/requirements.txt
new file mode 100644
index 0000000..2841956
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/requirements.txt
@@ -0,0 +1,224 @@
+absl-py==1.4.0
+albumentations==1.3.0
+alembic==1.10.4
+ansi2html==1.8.0
+anyio==3.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+asttokens==2.0.5
+attrs==22.1.0
+babel==2.11.0
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==4.1.0
+blinker==1.6.2
+bottleneck==1.3.5
+brotlipy==0.7.0
+cachetools==5.2.1
+category-encoders==2.6.0
+certifi==2022.12.7
+cffi==1.15.1
+charset-normalizer==2.0.4
+click==8.1.3
+cloudpickle==2.2.1
+cmaes==0.9.1
+colorlog==6.7.0
+comm==0.1.2
+contourpy==1.0.5
+cryptography==38.0.4
+cycler==0.11.0
+cython==0.29.34
+dash-core-components==2.0.0
+dash-html-components==2.0.0
+dash-table==5.0.0
+dash==2.9.3
+debugpy==1.5.1
+decorator==5.1.1
+defusedxml==0.7.1
+deprecated==1.2.13
+deprecation==2.1.0
+docker-pycreds==0.4.0
+efficientnet-pytorch==0.7.1
+entrypoints==0.4
+et-xmlfile==1.1.0
+executing==0.8.3
+fastjsonschema==2.16.2
+flask==2.3.1
+flit-core==3.6.0
+fonttools==4.25.0
+gitdb==4.0.10
+gitpython==3.1.30
+google-auth-oauthlib==0.4.6
+google-auth==2.16.0
+grad-cam==1.4.6
+graphviz==0.20.1
+greenlet==2.0.2
+grpcio==1.51.1
+hiddenlayer==0.3
+idna==3.4
+imageio==2.26.0
+imbalanced-learn==0.10.1
+importlib-metadata==6.6.0
+ipykernel==6.19.2
+ipython-genutils==0.2.0
+ipython==8.7.0
+ipywidgets==7.6.5
+itsdangerous==2.1.2
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.2.0
+json5==0.9.6
+jsonschema==4.16.0
+jupyter-client==7.4.8
+jupyter-console==6.4.4
+jupyter-core==5.1.1
+jupyter-dash==0.4.2
+jupyter-server==1.23.4
+jupyter==1.0.0
+jupyterlab-pygments==0.1.2
+jupyterlab-server==2.16.5
+jupyterlab-widgets==1.0.0
+jupyterlab==3.5.2
+kaleido==0.2.1
+kiwisolver==1.4.4
+lazy-loader==0.1
+lightgbm==3.3.5
+llvmlite==0.39.1
+lxml==4.9.1
+mako==1.2.4
+markdown==3.4.1
+markupsafe==2.1.1
+matplotlib-inline==0.1.6
+matplotlib==3.6.2
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+multicoretsne==0.1
+munkres==1.1.4
+nbclassic==0.4.8
+nbclient==0.5.13
+nbconvert==6.5.4
+nbformat==5.7.0
+nest-asyncio==1.5.6
+networkx==3.0
+notebook-shim==0.2.2
+notebook==6.5.2
+numba==0.56.4
+numexpr==2.8.4
+numpy==1.23.5
+oauthlib==3.2.2
+opencv-python-headless==4.7.0.72
+opencv-python==4.7.0.72
+openpyxl==3.0.10
+optuna==3.1.1
+orjson==3.8.10
+packaging==22.0
+pandas==1.5.2
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+patsy==0.5.3
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==9.3.0
+pip==22.3.1
+platformdirs==2.5.2
+plotly-resampler==0.8.3.2
+plotly==5.14.1
+ply==3.11
+pmdarima==2.0.3
+prometheus-client==0.14.1
+prompt-toolkit==3.0.36
+protobuf==3.20.3
+psutil==5.9.0
+ptyprocess==0.7.0
+pure-eval==0.2.2
+pyarrow==11.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycaret==3.0.0
+pycparser==2.21
+pygcn==0.1
+pygments==2.11.2
+pyod==1.0.9
+pyopenssl==22.0.0
+pyparsing==3.0.9
+pyqt5-sip==12.11.0
+pyrsistent==0.18.0
+pysocks==1.7.1
+python-dateutil==2.8.2
+python-louvain==0.16
+pytorch-gradcam==0.2.1
+pytz==2022.7
+pywavelets==1.4.1
+pyyaml==6.0
+pyzmq==23.2.0
+qtconsole==5.4.0
+qtpy==2.2.0
+qudida==0.0.4
+requests-oauthlib==1.3.1
+requests==2.28.1
+retrying==1.3.4
+rsa==4.9
+schemdraw==0.16
+scikit-image==0.20.0
+scikit-learn==1.2.2
+scikit-plot==0.3.7
+scipy==1.10.0
+seaborn==0.12.2
+send2trash==1.8.0
+sentry-sdk==1.14.0
+setproctitle==1.3.2
+setuptools==65.6.3
+shap==0.41.0
+sip==6.6.2
+six==1.16.0
+sktime==0.17.2
+slicer==0.0.7
+smmap==5.0.0
+sniffio==1.2.0
+soupsieve==2.3.2.post1
+sqlalchemy==2.0.11
+stack-data==0.2.0
+statsmodels==0.13.5
+tbats==1.1.3
+tenacity==8.2.2
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.11.2
+terminado==0.17.1
+threadpoolctl==3.1.0
+tifffile==2023.2.28
+tinycss2==1.2.1
+toml==0.10.2
+tomli==2.0.1
+torch==1.13.1
+torchaudio==0.13.1
+torchinfo==1.7.2
+torchsummary==1.5.1
+torchsummaryx==1.3.0
+torchvision==0.14.1
+torchviz==0.0.2
+tornado==6.2
+tqdm==4.64.1
+trace-updater==0.0.9.1
+traitlets==5.7.1
+tsnecuda==3.0.1+cu113
+ttach==0.0.3
+typing-extensions==4.4.0
+urllib3==1.26.14
+wandb==0.13.9
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==0.58.0
+werkzeug==2.3.0
+wheel==0.37.1
+widgetsnbextension==3.5.2
+wrapt==1.15.0
+wurlitzer==3.0.3
+xgboost==1.7.5
+xxhash==3.2.0
+yellowbrick==1.5
+zipp==3.15.0
\ No newline at end of file
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/wandb-metadata.json b/wandb/run-20230515_170701-hhuka4gm/files/wandb-metadata.json
new file mode 100644
index 0000000..31f6a5c
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/wandb-metadata.json
@@ -0,0 +1,708 @@
+{
+    "os": "Linux-5.15.0-57-generic-x86_64-with-glibc2.31",
+    "python": "3.10.9",
+    "heartbeatAt": "2023-05-15T08:07:02.105372",
+    "startedAt": "2023-05-15T08:07:01.361309",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "0",
+        "1024",
+        "500",
+        "1e-3",
+        "5",
+        "7",
+        "0.7",
+        "25",
+        "transfer_learning_1",
+        "0"
+    ],
+    "state": "running",
+    "program": "/home/hb/python/efficientnet_kincnn/DeepPhospho.py",
+    "codePath": "DeepPhospho.py",
+    "git": {
+        "remote": "https://github.com/HongB1/efficientnet_kincnn.git",
+        "commit": "5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8"
+    },
+    "email": "hongbikim14@gmail.com",
+    "root": "/home/hb/python/efficientnet_kincnn",
+    "host": "workstation",
+    "username": "hb",
+    "executable": "/home/hb/anaconda3/envs/phos/bin/python3",
+    "cpu_count": 64,
+    "cpu_count_logical": 128,
+    "cpu_freq": {
+        "current": 2.214453124999995,
+        "min": 2200.0,
+        "max": 2900.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.5,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        }
+    ],
+    "disk": {
+        "total": 1832.2072448730469,
+        "used": 1672.7865447998047
+    },
+    "gpu": "NVIDIA GeForce RTX 3090",
+    "gpu_count": 4,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        }
+    ],
+    "memory": {
+        "total": 251.55356216430664
+    }
+}
diff --git a/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json b/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json
new file mode 100644
index 0000000..a594e25
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json
@@ -0,0 +1 @@
+{"_wandb": {"runtime": 8}}
\ No newline at end of file
diff --git a/wandb/run-20230515_170701-hhuka4gm/logs/debug-internal.log b/wandb/run-20230515_170701-hhuka4gm/logs/debug-internal.log
new file mode 100644
index 0000000..d034232
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/logs/debug-internal.log
@@ -0,0 +1,204 @@
+2023-05-15 17:07:01,371 INFO    StreamThr :3663460 [internal.py:wandb_internal():87] W&B internal server running at pid: 3663460, started at: 2023-05-15 17:07:01.371163
+2023-05-15 17:07:01,373 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: status
+2023-05-15 17:07:01,375 INFO    WriterThread:3663460 [datastore.py:open_for_write():85] open: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/run-hhuka4gm.wandb
+2023-05-15 17:07:01,376 DEBUG   SenderThread:3663460 [sender.py:send():334] send: header
+2023-05-15 17:07:01,377 DEBUG   SenderThread:3663460 [sender.py:send():334] send: run
+2023-05-15 17:07:01,977 INFO    SenderThread:3663460 [dir_watcher.py:__init__():216] watching files in: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files
+2023-05-15 17:07:01,977 INFO    SenderThread:3663460 [sender.py:_start_run_threads():1065] run started: hhuka4gm with start time 1684138021.370938
+2023-05-15 17:07:01,977 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:07:01,977 INFO    SenderThread:3663460 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:07:01,978 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: check_version
+2023-05-15 17:07:01,978 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: check_version
+2023-05-15 17:07:02,024 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: run_start
+2023-05-15 17:07:02,028 DEBUG   HandlerThread:3663460 [system_info.py:__init__():31] System info init
+2023-05-15 17:07:02,028 DEBUG   HandlerThread:3663460 [system_info.py:__init__():46] System info init done
+2023-05-15 17:07:02,029 INFO    HandlerThread:3663460 [system_monitor.py:start():151] Starting system monitor
+2023-05-15 17:07:02,029 INFO    SystemMonitor:3663460 [system_monitor.py:_start():116] Starting system asset monitoring threads
+2023-05-15 17:07:02,029 INFO    HandlerThread:3663460 [system_monitor.py:probe():172] Collecting system info
+2023-05-15 17:07:02,029 INFO    SystemMonitor:3663460 [interfaces.py:start():168] Started cpu
+2023-05-15 17:07:02,030 INFO    SystemMonitor:3663460 [interfaces.py:start():168] Started disk
+2023-05-15 17:07:02,031 INFO    SystemMonitor:3663460 [interfaces.py:start():168] Started gpu
+2023-05-15 17:07:02,031 INFO    SystemMonitor:3663460 [interfaces.py:start():168] Started memory
+2023-05-15 17:07:02,032 INFO    SystemMonitor:3663460 [interfaces.py:start():168] Started network
+2023-05-15 17:07:02,105 DEBUG   HandlerThread:3663460 [system_info.py:probe():195] Probing system
+2023-05-15 17:07:02,107 DEBUG   HandlerThread:3663460 [system_info.py:_probe_git():180] Probing git
+2023-05-15 17:07:02,113 DEBUG   HandlerThread:3663460 [system_info.py:_probe_git():188] Probing git done
+2023-05-15 17:07:02,113 DEBUG   HandlerThread:3663460 [system_info.py:probe():241] Probing system done
+2023-05-15 17:07:02,113 DEBUG   HandlerThread:3663460 [system_monitor.py:probe():181] {'os': 'Linux-5.15.0-57-generic-x86_64-with-glibc2.31', 'python': '3.10.9', 'heartbeatAt': '2023-05-15T08:07:02.105372', 'startedAt': '2023-05-15T08:07:01.361309', 'docker': None, 'cuda': None, 'args': ('0', '1024', '500', '1e-3', '5', '7', '0.7', '25', 'transfer_learning_1', '0'), 'state': 'running', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py', 'codePath': 'DeepPhospho.py', 'git': {'remote': 'https://github.com/HongB1/efficientnet_kincnn.git', 'commit': '5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8'}, 'email': 'hongbikim14@gmail.com', 'root': '/home/hb/python/efficientnet_kincnn', 'host': 'workstation', 'username': 'hb', 'executable': '/home/hb/anaconda3/envs/phos/bin/python3', 'cpu_count': 64, 'cpu_count_logical': 128, 'cpu_freq': {'current': 2.214453124999995, 'min': 2200.0, 'max': 2900.0}, 'cpu_freq_per_core': [{'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.5, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}], 'disk': {'total': 1832.2072448730469, 'used': 1672.7865447998047}, 'gpu': 'NVIDIA GeForce RTX 3090', 'gpu_count': 4, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}], 'memory': {'total': 251.55356216430664}}
+2023-05-15 17:07:02,113 INFO    HandlerThread:3663460 [system_monitor.py:probe():182] Finished collecting system info
+2023-05-15 17:07:02,113 INFO    HandlerThread:3663460 [system_monitor.py:probe():185] Publishing system info
+2023-05-15 17:07:02,113 DEBUG   HandlerThread:3663460 [system_info.py:_save_pip():51] Saving list of pip packages installed into the current environment
+2023-05-15 17:07:02,114 DEBUG   HandlerThread:3663460 [system_info.py:_save_pip():67] Saving pip packages done
+2023-05-15 17:07:02,114 DEBUG   HandlerThread:3663460 [system_info.py:_save_conda():74] Saving list of conda packages installed into the current environment
+2023-05-15 17:07:02,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/requirements.txt
+2023-05-15 17:07:02,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json
+2023-05-15 17:07:02,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml
+2023-05-15 17:07:07,350 DEBUG   HandlerThread:3663460 [system_info.py:_save_conda():86] Saving conda packages done
+2023-05-15 17:07:07,350 DEBUG   HandlerThread:3663460 [system_info.py:_save_code():89] Saving code
+2023-05-15 17:07:07,353 DEBUG   HandlerThread:3663460 [system_info.py:_save_code():110] Saving code done
+2023-05-15 17:07:07,353 DEBUG   HandlerThread:3663460 [system_info.py:_save_patches():127] Saving git patches
+2023-05-15 17:07:07,369 DEBUG   HandlerThread:3663460 [system_info.py:_save_patches():169] Saving git patches done
+2023-05-15 17:07:07,371 INFO    HandlerThread:3663460 [system_monitor.py:probe():187] Finished publishing system info
+2023-05-15 17:07:07,376 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:07:07,377 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:07:07,377 DEBUG   SenderThread:3663460 [sender.py:send():334] send: files
+2023-05-15 17:07:07,377 INFO    SenderThread:3663460 [sender.py:_save_file():1319] saving file wandb-metadata.json with policy now
+2023-05-15 17:07:07,378 INFO    SenderThread:3663460 [sender.py:_save_file():1319] saving file code/DeepPhospho.py with policy now
+2023-05-15 17:07:07,378 INFO    SenderThread:3663460 [sender.py:_save_file():1319] saving file diff.patch with policy now
+2023-05-15 17:07:07,382 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: stop_status
+2023-05-15 17:07:07,382 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: stop_status
+2023-05-15 17:07:07,733 DEBUG   SenderThread:3663460 [sender.py:send():334] send: telemetry
+2023-05-15 17:07:07,734 DEBUG   SenderThread:3663460 [sender.py:send():334] send: telemetry
+2023-05-15 17:07:07,734 DEBUG   SenderThread:3663460 [sender.py:send():334] send: run
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/config.yaml
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/wandb-metadata.json
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/code/DeepPhospho.py
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/diff.patch
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/output.log
+2023-05-15 17:07:07,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/code
+2023-05-15 17:07:08,160 INFO    Thread-17 :3663460 [upload_job.py:push():143] Uploaded file /tmp/tmp6nxb8s05wandb/u4c8cjr8-code/DeepPhospho.py
+2023-05-15 17:07:08,172 INFO    Thread-16 :3663460 [upload_job.py:push():143] Uploaded file /tmp/tmp6nxb8s05wandb/mn529n3h-wandb-metadata.json
+2023-05-15 17:07:08,278 INFO    SenderThread:3663460 [sender.py:send_run():942] updated run: hhuka4gm
+2023-05-15 17:07:08,832 INFO    Thread-18 :3663460 [upload_job.py:push():143] Uploaded file /tmp/tmp6nxb8s05wandb/f5nzq3l8-diff.patch
+2023-05-15 17:07:09,979 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/output.log
+2023-05-15 17:07:10,043 DEBUG   SenderThread:3663460 [sender.py:send():334] send: exit
+2023-05-15 17:07:10,044 INFO    SenderThread:3663460 [sender.py:send_exit():557] handling exit code: 1
+2023-05-15 17:07:10,045 INFO    SenderThread:3663460 [sender.py:send_exit():559] handling runtime: 8
+2023-05-15 17:07:10,046 INFO    SenderThread:3663460 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:07:10,046 INFO    SenderThread:3663460 [sender.py:send_exit():565] send defer
+2023-05-15 17:07:10,046 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,047 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 0
+2023-05-15 17:07:10,047 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,047 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 0
+2023-05-15 17:07:10,047 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 1
+2023-05-15 17:07:10,047 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,047 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 1
+2023-05-15 17:07:10,047 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,047 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 1
+2023-05-15 17:07:10,048 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 2
+2023-05-15 17:07:10,048 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,048 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 2
+2023-05-15 17:07:10,048 INFO    HandlerThread:3663460 [system_monitor.py:finish():161] Stopping system monitor
+2023-05-15 17:07:10,049 DEBUG   SystemMonitor:3663460 [system_monitor.py:_start():130] Starting system metrics aggregation loop
+2023-05-15 17:07:10,049 DEBUG   SystemMonitor:3663460 [system_monitor.py:_start():137] Finished system metrics aggregation loop
+2023-05-15 17:07:10,049 DEBUG   SystemMonitor:3663460 [system_monitor.py:_start():141] Publishing last batch of metrics
+2023-05-15 17:07:10,049 INFO    HandlerThread:3663460 [interfaces.py:finish():175] Joined cpu
+2023-05-15 17:07:10,051 INFO    HandlerThread:3663460 [interfaces.py:finish():175] Joined disk
+2023-05-15 17:07:10,462 INFO    HandlerThread:3663460 [interfaces.py:finish():175] Joined gpu
+2023-05-15 17:07:10,462 INFO    HandlerThread:3663460 [interfaces.py:finish():175] Joined memory
+2023-05-15 17:07:10,462 INFO    HandlerThread:3663460 [interfaces.py:finish():175] Joined network
+2023-05-15 17:07:10,463 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,463 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 2
+2023-05-15 17:07:10,463 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 3
+2023-05-15 17:07:10,464 DEBUG   SenderThread:3663460 [sender.py:send():334] send: stats
+2023-05-15 17:07:10,465 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,465 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 3
+2023-05-15 17:07:10,465 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,465 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 3
+2023-05-15 17:07:10,465 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 4
+2023-05-15 17:07:10,465 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,465 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 4
+2023-05-15 17:07:10,466 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,466 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 4
+2023-05-15 17:07:10,466 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 5
+2023-05-15 17:07:10,466 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,466 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 5
+2023-05-15 17:07:10,466 DEBUG   SenderThread:3663460 [sender.py:send():334] send: summary
+2023-05-15 17:07:10,466 INFO    SenderThread:3663460 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:07:10,467 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,467 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 5
+2023-05-15 17:07:10,467 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 6
+2023-05-15 17:07:10,467 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,467 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 6
+2023-05-15 17:07:10,467 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,467 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 6
+2023-05-15 17:07:10,472 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:07:10,848 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 7
+2023-05-15 17:07:10,849 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:10,849 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 7
+2023-05-15 17:07:10,849 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:10,849 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 7
+2023-05-15 17:07:10,980 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/config.yaml
+2023-05-15 17:07:10,980 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json
+2023-05-15 17:07:10,980 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/output.log
+2023-05-15 17:07:11,044 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:07:12,287 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 8
+2023-05-15 17:07:12,288 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:07:12,288 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:12,288 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 8
+2023-05-15 17:07:12,289 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:12,289 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 8
+2023-05-15 17:07:12,306 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 9
+2023-05-15 17:07:12,307 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:12,307 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 9
+2023-05-15 17:07:12,307 DEBUG   SenderThread:3663460 [sender.py:send():334] send: artifact
+2023-05-15 17:07:12,981 INFO    Thread-13 :3663460 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/output.log
+2023-05-15 17:07:15,120 INFO    Thread-21 :3663460 [upload_job.py:push():98] Skipped uploading /home/hb/.local/share/wandb/artifacts/staging/tmph_g3nuj4
+2023-05-15 17:07:15,120 INFO    Thread-22 :3663460 [upload_job.py:push():98] Skipped uploading /home/hb/.local/share/wandb/artifacts/staging/tmpsio0zi1w
+2023-05-15 17:07:15,515 INFO    Thread-20 :3663460 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmp3z6ma002
+2023-05-15 17:07:16,046 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:07:19,772 INFO    SenderThread:3663460 [sender.py:send_artifact():1415] sent artifact job-https___github.com_HongB1_efficientnet_kincnn.git_DeepPhospho.py - {'id': 'QXJ0aWZhY3Q6NDU1NDk0OTcz', 'digest': '0fa43c0ddbdf882835cc18c19c984848', 'state': 'PENDING', 'aliases': [], 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjY5MzkzNzYx', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6NDU1NDkzNjU3', 'versionIndex': 0}}, 'version': 'latest'}
+2023-05-15 17:07:19,772 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:19,772 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 9
+2023-05-15 17:07:19,773 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:07:19,773 INFO    SenderThread:3663460 [dir_watcher.py:finish():362] shutting down directory watcher
+2023-05-15 17:07:19,984 INFO    SenderThread:3663460 [dir_watcher.py:finish():392] scan: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files
+2023-05-15 17:07:19,984 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/output.log output.log
+2023-05-15 17:07:19,984 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/wandb-metadata.json wandb-metadata.json
+2023-05-15 17:07:19,984 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/diff.patch diff.patch
+2023-05-15 17:07:19,985 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json wandb-summary.json
+2023-05-15 17:07:19,985 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/config.yaml config.yaml
+2023-05-15 17:07:19,991 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/requirements.txt requirements.txt
+2023-05-15 17:07:19,991 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml conda-environment.yaml
+2023-05-15 17:07:19,995 INFO    SenderThread:3663460 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/code/DeepPhospho.py code/DeepPhospho.py
+2023-05-15 17:07:19,997 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 10
+2023-05-15 17:07:19,998 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:19,998 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 10
+2023-05-15 17:07:20,001 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:20,002 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 10
+2023-05-15 17:07:20,002 INFO    SenderThread:3663460 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:07:20,819 INFO    Thread-24 :3663460 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/wandb-summary.json
+2023-05-15 17:07:20,833 INFO    Thread-23 :3663460 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/output.log
+2023-05-15 17:07:20,836 INFO    Thread-27 :3663460 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/conda-environment.yaml
+2023-05-15 17:07:20,844 INFO    Thread-25 :3663460 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/config.yaml
+2023-05-15 17:07:20,879 INFO    Thread-26 :3663460 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/files/requirements.txt
+2023-05-15 17:07:21,050 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:07:21,080 INFO    Thread-12 (_thread_body):3663460 [sender.py:transition_state():585] send defer: 11
+2023-05-15 17:07:21,080 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:21,080 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 11
+2023-05-15 17:07:21,081 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:21,081 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 11
+2023-05-15 17:07:21,081 INFO    SenderThread:3663460 [file_pusher.py:join():165] waiting for file pusher
+2023-05-15 17:07:21,081 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 12
+2023-05-15 17:07:21,081 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:21,081 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 12
+2023-05-15 17:07:21,082 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:21,082 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 12
+2023-05-15 17:07:21,538 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 13
+2023-05-15 17:07:21,539 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:21,539 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 13
+2023-05-15 17:07:21,539 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:21,539 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 13
+2023-05-15 17:07:21,539 INFO    SenderThread:3663460 [sender.py:transition_state():585] send defer: 14
+2023-05-15 17:07:21,540 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:07:21,540 DEBUG   SenderThread:3663460 [sender.py:send():334] send: final
+2023-05-15 17:07:21,540 INFO    HandlerThread:3663460 [handler.py:handle_request_defer():170] handle defer: 14
+2023-05-15 17:07:21,540 DEBUG   SenderThread:3663460 [sender.py:send():334] send: footer
+2023-05-15 17:07:21,540 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:07:21,540 INFO    SenderThread:3663460 [sender.py:send_request_defer():581] handle sender defer: 14
+2023-05-15 17:07:21,541 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:07:21,541 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:07:21,542 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: server_info
+2023-05-15 17:07:21,542 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: get_summary
+2023-05-15 17:07:21,542 DEBUG   SenderThread:3663460 [sender.py:send_request():361] send_request: server_info
+2023-05-15 17:07:21,545 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: sampled_history
+2023-05-15 17:07:21,850 INFO    MainThread:3663460 [wandb_run.py:_footer_history_summary_info():3427] rendering history
+2023-05-15 17:07:21,850 INFO    MainThread:3663460 [wandb_run.py:_footer_history_summary_info():3459] rendering summary
+2023-05-15 17:07:21,850 INFO    MainThread:3663460 [wandb_run.py:_footer_sync_info():3383] logging synced files
+2023-05-15 17:07:21,850 DEBUG   HandlerThread:3663460 [handler.py:handle_request():144] handle_request: shutdown
+2023-05-15 17:07:21,850 INFO    HandlerThread:3663460 [handler.py:finish():841] shutting down handler
+2023-05-15 17:07:22,542 INFO    WriterThread:3663460 [datastore.py:close():299] close: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/run-hhuka4gm.wandb
+2023-05-15 17:07:22,850 INFO    SenderThread:3663460 [sender.py:finish():1491] shutting down sender
+2023-05-15 17:07:22,850 INFO    SenderThread:3663460 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:07:22,850 INFO    SenderThread:3663460 [file_pusher.py:join():165] waiting for file pusher
diff --git a/wandb/run-20230515_170701-hhuka4gm/logs/debug.log b/wandb/run-20230515_170701-hhuka4gm/logs/debug.log
new file mode 100644
index 0000000..7615cd3
--- /dev/null
+++ b/wandb/run-20230515_170701-hhuka4gm/logs/debug.log
@@ -0,0 +1,26 @@
+2023-05-15 17:07:01,362 INFO    MainThread:3663315 [wandb_setup.py:_flush():68] Configure stats pid to 3663315
+2023-05-15 17:07:01,362 INFO    MainThread:3663315 [wandb_setup.py:_flush():68] Loading settings from /home/hb/.config/wandb/settings
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_setup.py:_flush():68] Loading settings from /home/hb/python/efficientnet_kincnn/wandb/settings
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'DeepPhospho.py', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py'}
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_init.py:_log_setup():478] Logging user logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/logs/debug.log
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_init.py:_log_setup():479] Logging internal logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170701-hhuka4gm/logs/debug-internal.log
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_init.py:init():518] calling init triggers
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_init.py:init():521] wandb.init called with sweep_config: {}
+config: {'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1706_bs1024_weight0'}
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_init.py:init():571] starting backend
+2023-05-15 17:07:01,363 INFO    MainThread:3663315 [wandb_init.py:init():575] setting up manager
+2023-05-15 17:07:01,367 INFO    MainThread:3663315 [backend.py:_multiprocessing_setup():106] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2023-05-15 17:07:01,370 INFO    MainThread:3663315 [wandb_init.py:init():582] backend started and connected
+2023-05-15 17:07:01,372 INFO    MainThread:3663315 [wandb_init.py:init():670] updated telemetry
+2023-05-15 17:07:01,376 INFO    MainThread:3663315 [wandb_init.py:init():710] communicating run to backend with 60.0 second timeout
+2023-05-15 17:07:01,977 INFO    MainThread:3663315 [wandb_run.py:_on_init():2121] communicating current version
+2023-05-15 17:07:02,019 INFO    MainThread:3663315 [wandb_run.py:_on_init():2125] got version response upgrade_message: "wandb version 0.15.2 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2023-05-15 17:07:02,019 INFO    MainThread:3663315 [wandb_init.py:init():758] starting run threads in backend
+2023-05-15 17:07:07,381 INFO    MainThread:3663315 [wandb_run.py:_console_start():2101] atexit reg
+2023-05-15 17:07:07,382 INFO    MainThread:3663315 [wandb_run.py:_redirect():1959] redirect: SettingsConsole.WRAP_RAW
+2023-05-15 17:07:07,382 INFO    MainThread:3663315 [wandb_run.py:_redirect():2024] Wrapping output streams.
+2023-05-15 17:07:07,382 INFO    MainThread:3663315 [wandb_run.py:_redirect():2046] Redirects installed.
+2023-05-15 17:07:07,383 INFO    MainThread:3663315 [wandb_init.py:init():798] run started, returning control to user process
+2023-05-15 17:07:22,852 WARNING MsgRouterThr:3663315 [router.py:message_loop():77] message_loop has been closed
diff --git a/wandb/run-20230515_170701-hhuka4gm/run-hhuka4gm.wandb b/wandb/run-20230515_170701-hhuka4gm/run-hhuka4gm.wandb
new file mode 100644
index 0000000..e1c63e0
Binary files /dev/null and b/wandb/run-20230515_170701-hhuka4gm/run-hhuka4gm.wandb differ
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/code/DeepPhospho.py b/wandb/run-20230515_170807-fh6cjibh/files/code/DeepPhospho.py
new file mode 100644
index 0000000..73cab75
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/code/DeepPhospho.py
@@ -0,0 +1,294 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+import efficientnet_kincnn
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'efficientnet-phospho-B-15'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = efficientnet_kincnn.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml b/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml
new file mode 100644
index 0000000..ceb7650
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml
@@ -0,0 +1,360 @@
+name: phos
+channels:
+  - pytorch
+  - nvidia
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - anyio=3.5.0=py310h06a4308_0
+  - argon2-cffi=21.3.0=pyhd3eb1b0_0
+  - argon2-cffi-bindings=21.2.0=py310h7f8727e_0
+  - asttokens=2.0.5=pyhd3eb1b0_0
+  - attrs=22.1.0=py310h06a4308_0
+  - babel=2.11.0=py310h06a4308_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - beautifulsoup4=4.11.1=py310h06a4308_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd3eb1b0_0
+  - bottleneck=1.3.5=py310ha9d4c09_0
+  - brotli=1.0.9=h5eee18b_7
+  - brotli-bin=1.0.9=h5eee18b_7
+  - brotlipy=0.7.0=py310h7f8727e_1002
+  - bzip2=1.0.8=h7b6447c_0
+  - ca-certificates=2022.10.11=h06a4308_0
+  - certifi=2022.12.7=py310h06a4308_0
+  - cffi=1.15.1=py310h5eee18b_3
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - comm=0.1.2=py310h06a4308_0
+  - contourpy=1.0.5=py310hdb19cb5_0
+  - cryptography=38.0.4=py310h9ce1e76_0
+  - cuda=11.6.1=0
+  - cuda-cccl=11.6.55=hf6102b2_0
+  - cuda-command-line-tools=11.6.2=0
+  - cuda-compiler=11.6.2=0
+  - cuda-cudart=11.6.55=he381448_0
+  - cuda-cudart-dev=11.6.55=h42ad0f4_0
+  - cuda-cuobjdump=11.6.124=h2eeebcb_0
+  - cuda-cupti=11.6.124=h86345e5_0
+  - cuda-cuxxfilt=11.6.124=hecbf4f6_0
+  - cuda-driver-dev=11.6.55=0
+  - cuda-gdb=12.0.90=0
+  - cuda-libraries=11.6.1=0
+  - cuda-libraries-dev=11.6.1=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=12.0.78=0
+  - cuda-nsight-compute=12.0.0=0
+  - cuda-nvcc=11.6.124=hbba6d2d_0
+  - cuda-nvdisasm=12.0.76=0
+  - cuda-nvml-dev=11.6.55=haa9ef22_0
+  - cuda-nvprof=12.0.90=0
+  - cuda-nvprune=11.6.124=he22ec0a_0
+  - cuda-nvrtc=11.6.124=h020bade_0
+  - cuda-nvrtc-dev=11.6.124=h249d397_0
+  - cuda-nvtx=11.6.124=h0630a44_0
+  - cuda-nvvp=12.0.90=0
+  - cuda-runtime=11.6.1=0
+  - cuda-samples=11.6.101=h8efea70_0
+  - cuda-sanitizer-api=12.0.90=0
+  - cuda-toolkit=11.6.1=0
+  - cuda-tools=11.6.1=0
+  - cuda-visual-tools=11.6.1=0
+  - cycler=0.11.0=pyhd3eb1b0_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.5.1=py310h295c915_0
+  - decorator=5.1.1=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - entrypoints=0.4=py310h06a4308_0
+  - executing=0.8.3=pyhd3eb1b0_0
+  - expat=2.4.9=h6a678d5_0
+  - ffmpeg=4.3=hf484d3e_0
+  - flit-core=3.6.0=pyhd3eb1b0_0
+  - fontconfig=2.14.1=h52c9d5c_1
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.12.1=h4a9f257_0
+  - gds-tools=1.5.0.59=0
+  - giflib=5.2.1=h7b6447c_0
+  - glib=2.69.1=he621ea3_2
+  - gmp=6.2.1=h295c915_3
+  - gnutls=3.6.15=he1e5248_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.4=py310h06a4308_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - ipykernel=6.19.2=py310h2f386ee_0
+  - ipython=8.7.0=py310h06a4308_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.5=pyhd3eb1b0_1
+  - jedi=0.18.1=py310h06a4308_1
+  - jinja2=3.1.2=py310h06a4308_0
+  - jpeg=9e=h7f8727e_0
+  - json5=0.9.6=pyhd3eb1b0_0
+  - jsonschema=4.16.0=py310h06a4308_0
+  - jupyter=1.0.0=py310h06a4308_8
+  - jupyter_client=7.4.8=py310h06a4308_0
+  - jupyter_console=6.4.4=py310h06a4308_0
+  - jupyter_core=5.1.1=py310h06a4308_0
+  - jupyter_server=1.23.4=py310h06a4308_0
+  - jupyterlab=3.5.2=py310h06a4308_0
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.16.5=py310h06a4308_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - kiwisolver=1.4.4=py310h6a678d5_0
+  - krb5=1.19.2=hac12032_0
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.38=h1181459_1
+  - lerc=3.0=h295c915_0
+  - libbrotlicommon=1.0.9=h5eee18b_7
+  - libbrotlidec=1.0.9=h5eee18b_7
+  - libbrotlienc=1.0.9=h5eee18b_7
+  - libclang=10.0.1=default_hb85057a_2
+  - libcublas=11.9.2.110=h5e84587_0
+  - libcublas-dev=11.9.2.110=h5c901ab_0
+  - libcufft=10.7.1.112=hf425ae0_0
+  - libcufft-dev=10.7.1.112=ha5ce4c0_0
+  - libcufile=1.5.0.59=0
+  - libcufile-dev=1.5.0.59=0
+  - libcurand=10.3.1.50=0
+  - libcurand-dev=10.3.1.50=0
+  - libcusolver=11.3.4.124=h33c3c4e_0
+  - libcusparse=11.7.2.124=h7538f96_0
+  - libcusparse-dev=11.7.2.124=hbbe9722_0
+  - libdeflate=1.8=h7f8727e_5
+  - libedit=3.1.20221030=h5eee18b_0
+  - libevent=2.1.12=h8f2d780_0
+  - libffi=3.4.2=h6a678d5_6
+  - libgcc-ng=11.2.0=h1234567_1
+  - libgomp=11.2.0=h1234567_1
+  - libiconv=1.16=h7f8727e_2
+  - libidn2=2.3.2=h7f8727e_0
+  - libllvm10=10.0.1=hbcb73fb_5
+  - libnpp=11.6.3.124=hd2722f0_0
+  - libnpp-dev=11.6.3.124=h3c42840_0
+  - libnvjpeg=11.6.2.124=hd473ad6_0
+  - libnvjpeg-dev=11.6.2.124=hb5906b9_0
+  - libpng=1.6.37=hbc83047_0
+  - libpq=12.9=h16c4e8d_3
+  - libsodium=1.0.18=h7b6447c_0
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.16.0=h27cfd23_0
+  - libtiff=4.5.0=hecacb30_0
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=1.41.5=h5eee18b_0
+  - libwebp=1.2.4=h11a3e52_0
+  - libwebp-base=1.2.4=h5eee18b_0
+  - libxcb=1.15=h7f8727e_0
+  - libxkbcommon=1.0.1=hfa300c1_0
+  - libxml2=2.9.14=h74e7548_0
+  - libxslt=1.1.35=h4e12654_0
+  - lxml=4.9.1=py310h1edc446_0
+  - lz4-c=1.9.4=h6a678d5_0
+  - markupsafe=2.1.1=py310h7f8727e_0
+  - matplotlib=3.6.2=py310h06a4308_0
+  - matplotlib-base=3.6.2=py310h945d387_0
+  - matplotlib-inline=0.1.6=py310h06a4308_0
+  - mistune=0.8.4=py310h7f8727e_1000
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py310h7f8727e_0
+  - mkl_fft=1.3.1=py310hd6ae3a3_0
+  - mkl_random=1.2.2=py310h00e6091_0
+  - munkres=1.1.4=py_0
+  - nbclassic=0.4.8=py310h06a4308_0
+  - nbclient=0.5.13=py310h06a4308_0
+  - nbconvert=6.5.4=py310h06a4308_0
+  - nbformat=5.7.0=py310h06a4308_0
+  - ncurses=6.3=h5eee18b_3
+  - nest-asyncio=1.5.6=py310h06a4308_0
+  - nettle=3.7.3=hbbd107a_1
+  - notebook=6.5.2=py310h06a4308_0
+  - notebook-shim=0.2.2=py310h06a4308_0
+  - nsight-compute=2022.4.0.15=0
+  - nspr=4.33=h295c915_0
+  - nss=3.74=h0370c37_0
+  - numexpr=2.8.4=py310h8879344_0
+  - numpy=1.23.5=py310hd5efca6_0
+  - numpy-base=1.23.5=py310h8e6c178_0
+  - openh264=2.1.1=h4ff587b_0
+  - openssl=1.1.1s=h7f8727e_0
+  - packaging=22.0=py310h06a4308_0
+  - pandas=1.5.2=py310h1128e8f_0
+  - pandocfilters=1.5.0=pyhd3eb1b0_0
+  - parso=0.8.3=pyhd3eb1b0_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=9.3.0=py310hace64e9_1
+  - pip=22.3.1=py310h06a4308_0
+  - platformdirs=2.5.2=py310h06a4308_0
+  - ply=3.11=py310h06a4308_0
+  - prometheus_client=0.14.1=py310h06a4308_0
+  - prompt-toolkit=3.0.36=py310h06a4308_0
+  - prompt_toolkit=3.0.36=hd3eb1b0_0
+  - psutil=5.9.0=py310h5eee18b_0
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - pure_eval=0.2.2=pyhd3eb1b0_0
+  - pycparser=2.21=pyhd3eb1b0_0
+  - pygments=2.11.2=pyhd3eb1b0_0
+  - pyopenssl=22.0.0=pyhd3eb1b0_0
+  - pyparsing=3.0.9=py310h06a4308_0
+  - pyqt=5.15.7=py310h6a678d5_1
+  - pyrsistent=0.18.0=py310h7f8727e_0
+  - pysocks=1.7.1=py310h06a4308_0
+  - python=3.10.9=h7a1cb2a_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python-fastjsonschema=2.16.2=py310h06a4308_0
+  - pytorch=1.13.1=py3.10_cuda11.6_cudnn8.3.2_0
+  - pytorch-cuda=11.6=h867d48c_1
+  - pytorch-mutex=1.0=cuda
+  - pytz=2022.7=py310h06a4308_0
+  - pyzmq=23.2.0=py310h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - qt-webengine=5.15.9=hd2b0992_4
+  - qtconsole=5.4.0=py310h06a4308_0
+  - qtpy=2.2.0=py310h06a4308_0
+  - qtwebkit=5.212=h4eab89a_4
+  - readline=8.2=h5eee18b_0
+  - requests=2.28.1=py310h06a4308_0
+  - seaborn=0.12.2=py310h06a4308_0
+  - send2trash=1.8.0=pyhd3eb1b0_1
+  - setuptools=65.6.3=py310h06a4308_0
+  - sip=6.6.2=py310h6a678d5_0
+  - six=1.16.0=pyhd3eb1b0_1
+  - sniffio=1.2.0=py310h06a4308_1
+  - soupsieve=2.3.2.post1=py310h06a4308_0
+  - sqlite=3.40.1=h5082296_0
+  - stack_data=0.2.0=pyhd3eb1b0_0
+  - terminado=0.17.1=py310h06a4308_0
+  - tinycss2=1.2.1=py310h06a4308_0
+  - tk=8.6.12=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tomli=2.0.1=py310h06a4308_0
+  - torchaudio=0.13.1=py310_cu116
+  - torchvision=0.14.1=py310_cu116
+  - tornado=6.2=py310h5eee18b_0
+  - tqdm=4.64.1=py310h06a4308_0
+  - traitlets=5.7.1=py310h06a4308_0
+  - typing-extensions=4.4.0=py310h06a4308_0
+  - typing_extensions=4.4.0=py310h06a4308_0
+  - tzdata=2022g=h04d1e81_0
+  - urllib3=1.26.14=py310h06a4308_0
+  - wcwidth=0.2.5=pyhd3eb1b0_0
+  - webencodings=0.5.1=py310h06a4308_1
+  - websocket-client=0.58.0=py310h06a4308_4
+  - wheel=0.37.1=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.2=py310h06a4308_0
+  - xz=5.2.10=h5eee18b_1
+  - zeromq=4.3.4=h2531618_0
+  - zlib=1.2.13=h5eee18b_0
+  - zstd=1.5.2=ha4553b6_0
+  - pip:
+    - absl-py==1.4.0
+    - albumentations==1.3.0
+    - alembic==1.10.4
+    - ansi2html==1.8.0
+    - appdirs==1.4.4
+    - blinker==1.6.2
+    - cachetools==5.2.1
+    - category-encoders==2.6.0
+    - click==8.1.3
+    - cloudpickle==2.2.1
+    - cmaes==0.9.1
+    - colorlog==6.7.0
+    - cython==0.29.34
+    - dash==2.9.3
+    - dash-core-components==2.0.0
+    - dash-html-components==2.0.0
+    - dash-table==5.0.0
+    - deprecated==1.2.13
+    - deprecation==2.1.0
+    - docker-pycreds==0.4.0
+    - efficientnet-pytorch==0.7.1
+    - et-xmlfile==1.1.0
+    - flask==2.3.1
+    - gitdb==4.0.10
+    - gitpython==3.1.30
+    - google-auth==2.16.0
+    - google-auth-oauthlib==0.4.6
+    - grad-cam==1.4.6
+    - greenlet==2.0.2
+    - grpcio==1.51.1
+    - hiddenlayer==0.3
+    - imageio==2.26.0
+    - imbalanced-learn==0.10.1
+    - importlib-metadata==6.6.0
+    - itsdangerous==2.1.2
+    - joblib==1.2.0
+    - jupyter-dash==0.4.2
+    - kaleido==0.2.1
+    - lazy-loader==0.1
+    - lightgbm==3.3.5
+    - llvmlite==0.39.1
+    - mako==1.2.4
+    - markdown==3.4.1
+    - multicoretsne==0.1
+    - networkx==3.0
+    - numba==0.56.4
+    - oauthlib==3.2.2
+    - opencv-python==4.7.0.72
+    - opencv-python-headless==4.7.0.72
+    - openpyxl==3.0.10
+    - optuna==3.1.1
+    - orjson==3.8.10
+    - pathtools==0.1.2
+    - patsy==0.5.3
+    - plotly==5.14.1
+    - plotly-resampler==0.8.3.2
+    - pmdarima==2.0.3
+    - protobuf==3.20.3
+    - pyarrow==11.0.0
+    - pyasn1==0.4.8
+    - pyasn1-modules==0.2.8
+    - pycaret==3.0.0
+    - pyod==1.0.9
+    - pyqt5-sip==12.11.0
+    - python-graphviz==0.20.1
+    - python-louvain==0.16
+    - pytorch-gradcam==0.2.1
+    - pywavelets==1.4.1
+    - pyyaml==6.0
+    - qudida==0.0.4
+    - requests-oauthlib==1.3.1
+    - retrying==1.3.4
+    - rsa==4.9
+    - schemdraw==0.16
+    - scikit-image==0.20.0
+    - scikit-learn==1.2.2
+    - scikit-plot==0.3.7
+    - scipy==1.10.0
+    - sentry-sdk==1.14.0
+    - setproctitle==1.3.2
+    - shap==0.41.0
+    - sktime==0.17.2
+    - slicer==0.0.7
+    - smmap==5.0.0
+    - sqlalchemy==2.0.11
+    - statsmodels==0.13.5
+    - tbats==1.1.3
+    - tenacity==8.2.2
+    - tensorboard==2.11.2
+    - tensorboard-data-server==0.6.1
+    - tensorboard-plugin-wit==1.8.1
+    - threadpoolctl==3.1.0
+    - tifffile==2023.2.28
+    - torchinfo==1.7.2
+    - torchsummary==1.5.1
+    - torchsummaryx==1.3.0
+    - torchviz==0.0.2
+    - trace-updater==0.0.9.1
+    - tsnecuda==3.0.1+cu113
+    - ttach==0.0.3
+    - wandb==0.13.9
+    - werkzeug==2.3.0
+    - wrapt==1.15.0
+    - wurlitzer==3.0.3
+    - xgboost==1.7.5
+    - xxhash==3.2.0
+    - yellowbrick==1.5
+    - zipp==3.15.0
+prefix: /home/hb/anaconda3/envs/phos
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/config.yaml b/wandb/run-20230515_170807-fh6cjibh/files/config.yaml
new file mode 100644
index 0000000..6ec2e32
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/config.yaml
@@ -0,0 +1,68 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.13.9
+    code_path: code/DeepPhospho.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.10.9
+    start_time: 1684138087.959013
+    t:
+      1:
+      - 1
+      - 5
+      - 53
+      - 55
+      2:
+      - 1
+      - 5
+      - 53
+      - 55
+      3:
+      - 16
+      - 17
+      - 23
+      - 37
+      4: 3.10.9
+      5: 0.13.9
+      8:
+      - 5
+batch_size:
+  desc: null
+  value: 1024
+dataset:
+  desc: null
+  value: transfer_learning_1
+defalut_learning_rate:
+  desc: null
+  value: 0.001
+erls_patience:
+  desc: null
+  value: 25
+fold_num:
+  desc: null
+  value: 5
+gpu_num:
+  desc: null
+  value: '0'
+model:
+  desc: null
+  value: efficientnet-phospho-B-15
+n_epoch:
+  desc: null
+  value: 500
+pretrain_fold_num:
+  desc: null
+  value: '0'
+save_dir:
+  desc: null
+  value: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0
+scheduler_factor:
+  desc: null
+  value: 0.7
+scheduler_patience:
+  desc: null
+  value: 7
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/diff.patch b/wandb/run-20230515_170807-fh6cjibh/files/diff.patch
new file mode 100644
index 0000000..66735dd
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/diff.patch
@@ -0,0 +1,171 @@
+diff --git a/__init__.py b/__init__.py
+index 4210ebf..0959fed 100644
+--- a/__init__.py
++++ b/__init__.py
+@@ -1,4 +1,4 @@
+ __version__ = "0.7.1"
+-from .model import VALID_MODELS, EfficientNet
++from .kincnn import EfficientNet
+ from .utils import (BlockArgs, BlockDecoder, GlobalParams, efficientnet,
+                     get_model_params)
+diff --git a/kincnn.py b/kincnn.py
+index 7f518f0..3f7a213 100644
+--- a/kincnn.py
++++ b/kincnn.py
+@@ -185,7 +185,7 @@ class EfficientNet(nn.Module):
+         self._bn0 = nn.BatchNorm2d(
+             num_features=out_channels, momentum=bn_mom, eps=bn_eps
+         )
+-        image_size = calculate_output_image_size(image_size, stride=2)
++        image_size = calculate_output_image_size(image_size, stride=(2,1))
+ 
+         # Build blocks
+         self._blocks = nn.ModuleList([])
+@@ -228,6 +228,7 @@ class EfficientNet(nn.Module):
+ 
+         # Final linear layer
+         # self._avg_pooling = nn.AdaptiveAvgPool2d(1) <-- ÏõêÎ≥∏
++        self._avg_pooling = nn.AdaptiveAvgPool2d(1) 
+         self._dropout = nn.Dropout(self._global_params.dropout_rate)
+         self._fc = nn.Linear(self.define_last_fcn(), self._global_params.num_classes)
+ 
+diff --git a/prepare_dataset.py b/prepare_dataset.py
+deleted file mode 100644
+index 5350a37..0000000
+--- a/prepare_dataset.py
++++ /dev/null
+@@ -1,134 +0,0 @@
+-import sys
+-
+-import numpy as np
+-import pandas as pd
+-import torch
+-import torch.utils.data as data_utils
+-from sklearn.model_selection import train_test_split
+-
+-
+-def prepare_dataset(dataset_mode=None):
+-    df = pd.read_pickle("test1.pkl")
+-    df = df.sample(frac=1, random_state=42).reset_index(drop=True)
+-    # df['stratify'] Ïª¨ÎüºÏùò unique valueÍ∞Ä 1Ïù∏ Í∞íÎì§ÏùÄ df_Î°ú Îî∞Î°ú ÎπºÍ≥†, ÎÇòÎ®∏ÏßÄÎäî dfÎ°ú
+-    # df['stratify'].value_counts() : df['stratify'] Ïª¨ÎüºÏùò unique valueÎì§ÏùÑ countÌï¥Ï£ºÎäî Ìï®Ïàò
+-    # [df['stratify'].value_counts()==1].index.tolist() : df['stratify'] Ïª¨ÎüºÏóêÏÑú unique valueÍ∞Ä 1Ïù∏ indexÎßå Î¶¨Ïä§Ìä∏Î°ú Ï∂îÏ∂ú
+-    df["stratify"] = df.apply(lambda x: x["kin_id"] + "-" + str(x["answer"]), axis=1)
+-    df_ = df[
+-        df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-    df = df[
+-        ~df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-
+-    # df['matrix']Îäî pandas.series typeÏù¥ÎØÄÎ°ú listÌòïÌÉúÎ°ú Î∞îÍøîÏ§ÄÎã§.
+-    matrix = np.array([x for x in df["matrix"]], dtype=np.float32)
+-
+-    # answerÏóê df['answer']Ïùò Í∞íÏùÑ listÌòïÌÉúÎ°ú ÎÑ£Ïñ¥Ï§ÄÎã§
+-    answer = list(df["answer"].astype("int"))
+-
+-    # ÏïÑÍπå Îî∞Î°ú Îó¥Ïñ¥ÎÜ®Îçò df_Ïóê ÎåÄÌï¥ÏÑúÎèÑ ÎòëÍ∞ôÏù¥ matrix_Î•º ÎßåÏñ¥Ï§ÄÎã§.
+-    matrix_ = np.array([x for x in df_["matrix"]], dtype=np.float32)
+-    answer_ = list(df_["answer"].astype("int"))
+-
+-    # matrix = np.concatenate([matrix, matrix_])
+-    # answer = np.concatenate([answer, answer_])
+-
+-    # dataset = data_utils.TensorDataset(torch.tensor(matrix), torch.tensor(answer))
+-    # return dataset
+-    # answer = np.array(answer, dtype=np.int64)
+-    # answer_ = np.array(answer_, dtype=np.int64)
+-    # print(matrix.shape, answer.shape)
+-    xTrain, xTest, yTrain, yTest = train_test_split(
+-        matrix, answer, test_size=0.2, random_state=42, stratify=df["stratify"]
+-    )
+-    try:
+-        xTrain = np.concatenate([xTrain, matrix_])
+-        yTrain = np.concatenate([yTrain, answer_])
+-    except:
+-        pass
+-    # print(type(yTrain[0]))
+-    print(yTrain)
+-    counts = np.bincount(yTrain)
+-    print(
+-        "Number of positive samples in training data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTrain)
+-        )
+-    )
+-    counts = np.bincount(yTest)
+-    print(
+-        "Number of positive samples in validation data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTest)
+-        )
+-    )  # counts[1] : answer = 1 Ïù∏ Í∞í
+-    # globals()['counts'] = counts
+-    # BATCH_SIZE = batch_size
+-    train_set = data_utils.TensorDataset(torch.tensor(xTrain), torch.tensor(yTrain))
+-    valid_set = data_utils.TensorDataset(torch.tensor(xTest), torch.tensor(yTest))
+-
+-    return train_set, valid_set
+-
+-    # elif dataset_mode == 'pretrain_nonrepl':
+-    #     # df_nonreplicated = pd.read_pickle("/home/hb/python/phospho/data/atlas/ats_nonreplicated_with_psph.pkl")
+-    #     # # with open("/home/hb/python/phospho/data/atlas/matrix_0595.pickle", 'rb') as f:
+-    #     #     # matrix = pickle.load(f)
+-    #     # # with open("/home/hb/python/phospho/data/atlas/label_0595.pickle", 'rb') as f:
+-    #     #     # label = pickle.load(f)
+-    #     # matrix = df_nonreplicated['matrix'].to_list()
+-    #     # matrix = np.array([x for x in matrix], dtype=np.float32)
+-    #     # answer = df_nonreplicated['answer'].to_numpy().astype(int)
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_mtx_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_ans_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # elif dataset_mode == 'pretrain_1090':
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/matrix1090.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/label1090.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # return train_set, valid_set
+-
+-
+-class AttrDict(dict):
+-    def __init__(self, *args, **kwargs):
+-        super(AttrDict, self).__init__(*args, **kwargs)
+-        self.__dict__ = self
+-
+-
+-config = AttrDict()
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/output.log b/wandb/run-20230515_170807-fh6cjibh/files/output.log
new file mode 100644
index 0000000..8763ad7
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/output.log
@@ -0,0 +1,23 @@
+{'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0'}
+FOLD 0
+--------------------------------
+efficientnet-phospho-B-15
+lr:  0.001
+------------------------------------------------------------
+Epoch 1/500
+  0%|                                                   | 0/500 [00:00<?, ?it/s]
+  0%|                                                   | 0/500 [00:01<?, ?it/s]
+Traceback (most recent call last):
+  File "/home/hb/python/efficientnet_kincnn/DeepPhospho.py", line 294, in <module>
+    train_model_5cv()
+  File "/home/hb/python/efficientnet_kincnn/DeepPhospho.py", line 171, in train_model_5cv
+    pred = model(inputs) # forward
+  File "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
+    return forward_call(*input, **kwargs)
+  File "/home/hb/python/efficientnet_kincnn/../efficientnet_kincnn/kincnn.py", line 345, in forward
+    x = self._fc(x)
+  File "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
+    return forward_call(*input, **kwargs)
+  File "/home/hb/anaconda3/envs/phos/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 114, in forward
+    return F.linear(input, self.weight, self.bias)
+RuntimeError: mat1 and mat2 shapes cannot be multiplied (1024x8 and 8448x1)
\ No newline at end of file
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/requirements.txt b/wandb/run-20230515_170807-fh6cjibh/files/requirements.txt
new file mode 100644
index 0000000..2841956
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/requirements.txt
@@ -0,0 +1,224 @@
+absl-py==1.4.0
+albumentations==1.3.0
+alembic==1.10.4
+ansi2html==1.8.0
+anyio==3.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+asttokens==2.0.5
+attrs==22.1.0
+babel==2.11.0
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==4.1.0
+blinker==1.6.2
+bottleneck==1.3.5
+brotlipy==0.7.0
+cachetools==5.2.1
+category-encoders==2.6.0
+certifi==2022.12.7
+cffi==1.15.1
+charset-normalizer==2.0.4
+click==8.1.3
+cloudpickle==2.2.1
+cmaes==0.9.1
+colorlog==6.7.0
+comm==0.1.2
+contourpy==1.0.5
+cryptography==38.0.4
+cycler==0.11.0
+cython==0.29.34
+dash-core-components==2.0.0
+dash-html-components==2.0.0
+dash-table==5.0.0
+dash==2.9.3
+debugpy==1.5.1
+decorator==5.1.1
+defusedxml==0.7.1
+deprecated==1.2.13
+deprecation==2.1.0
+docker-pycreds==0.4.0
+efficientnet-pytorch==0.7.1
+entrypoints==0.4
+et-xmlfile==1.1.0
+executing==0.8.3
+fastjsonschema==2.16.2
+flask==2.3.1
+flit-core==3.6.0
+fonttools==4.25.0
+gitdb==4.0.10
+gitpython==3.1.30
+google-auth-oauthlib==0.4.6
+google-auth==2.16.0
+grad-cam==1.4.6
+graphviz==0.20.1
+greenlet==2.0.2
+grpcio==1.51.1
+hiddenlayer==0.3
+idna==3.4
+imageio==2.26.0
+imbalanced-learn==0.10.1
+importlib-metadata==6.6.0
+ipykernel==6.19.2
+ipython-genutils==0.2.0
+ipython==8.7.0
+ipywidgets==7.6.5
+itsdangerous==2.1.2
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.2.0
+json5==0.9.6
+jsonschema==4.16.0
+jupyter-client==7.4.8
+jupyter-console==6.4.4
+jupyter-core==5.1.1
+jupyter-dash==0.4.2
+jupyter-server==1.23.4
+jupyter==1.0.0
+jupyterlab-pygments==0.1.2
+jupyterlab-server==2.16.5
+jupyterlab-widgets==1.0.0
+jupyterlab==3.5.2
+kaleido==0.2.1
+kiwisolver==1.4.4
+lazy-loader==0.1
+lightgbm==3.3.5
+llvmlite==0.39.1
+lxml==4.9.1
+mako==1.2.4
+markdown==3.4.1
+markupsafe==2.1.1
+matplotlib-inline==0.1.6
+matplotlib==3.6.2
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+multicoretsne==0.1
+munkres==1.1.4
+nbclassic==0.4.8
+nbclient==0.5.13
+nbconvert==6.5.4
+nbformat==5.7.0
+nest-asyncio==1.5.6
+networkx==3.0
+notebook-shim==0.2.2
+notebook==6.5.2
+numba==0.56.4
+numexpr==2.8.4
+numpy==1.23.5
+oauthlib==3.2.2
+opencv-python-headless==4.7.0.72
+opencv-python==4.7.0.72
+openpyxl==3.0.10
+optuna==3.1.1
+orjson==3.8.10
+packaging==22.0
+pandas==1.5.2
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+patsy==0.5.3
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==9.3.0
+pip==22.3.1
+platformdirs==2.5.2
+plotly-resampler==0.8.3.2
+plotly==5.14.1
+ply==3.11
+pmdarima==2.0.3
+prometheus-client==0.14.1
+prompt-toolkit==3.0.36
+protobuf==3.20.3
+psutil==5.9.0
+ptyprocess==0.7.0
+pure-eval==0.2.2
+pyarrow==11.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycaret==3.0.0
+pycparser==2.21
+pygcn==0.1
+pygments==2.11.2
+pyod==1.0.9
+pyopenssl==22.0.0
+pyparsing==3.0.9
+pyqt5-sip==12.11.0
+pyrsistent==0.18.0
+pysocks==1.7.1
+python-dateutil==2.8.2
+python-louvain==0.16
+pytorch-gradcam==0.2.1
+pytz==2022.7
+pywavelets==1.4.1
+pyyaml==6.0
+pyzmq==23.2.0
+qtconsole==5.4.0
+qtpy==2.2.0
+qudida==0.0.4
+requests-oauthlib==1.3.1
+requests==2.28.1
+retrying==1.3.4
+rsa==4.9
+schemdraw==0.16
+scikit-image==0.20.0
+scikit-learn==1.2.2
+scikit-plot==0.3.7
+scipy==1.10.0
+seaborn==0.12.2
+send2trash==1.8.0
+sentry-sdk==1.14.0
+setproctitle==1.3.2
+setuptools==65.6.3
+shap==0.41.0
+sip==6.6.2
+six==1.16.0
+sktime==0.17.2
+slicer==0.0.7
+smmap==5.0.0
+sniffio==1.2.0
+soupsieve==2.3.2.post1
+sqlalchemy==2.0.11
+stack-data==0.2.0
+statsmodels==0.13.5
+tbats==1.1.3
+tenacity==8.2.2
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.11.2
+terminado==0.17.1
+threadpoolctl==3.1.0
+tifffile==2023.2.28
+tinycss2==1.2.1
+toml==0.10.2
+tomli==2.0.1
+torch==1.13.1
+torchaudio==0.13.1
+torchinfo==1.7.2
+torchsummary==1.5.1
+torchsummaryx==1.3.0
+torchvision==0.14.1
+torchviz==0.0.2
+tornado==6.2
+tqdm==4.64.1
+trace-updater==0.0.9.1
+traitlets==5.7.1
+tsnecuda==3.0.1+cu113
+ttach==0.0.3
+typing-extensions==4.4.0
+urllib3==1.26.14
+wandb==0.13.9
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==0.58.0
+werkzeug==2.3.0
+wheel==0.37.1
+widgetsnbextension==3.5.2
+wrapt==1.15.0
+wurlitzer==3.0.3
+xgboost==1.7.5
+xxhash==3.2.0
+yellowbrick==1.5
+zipp==3.15.0
\ No newline at end of file
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/wandb-metadata.json b/wandb/run-20230515_170807-fh6cjibh/files/wandb-metadata.json
new file mode 100644
index 0000000..94677f6
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/wandb-metadata.json
@@ -0,0 +1,708 @@
+{
+    "os": "Linux-5.15.0-57-generic-x86_64-with-glibc2.31",
+    "python": "3.10.9",
+    "heartbeatAt": "2023-05-15T08:08:08.729087",
+    "startedAt": "2023-05-15T08:08:07.949537",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "0",
+        "1024",
+        "500",
+        "1e-3",
+        "5",
+        "7",
+        "0.7",
+        "25",
+        "transfer_learning_1",
+        "0"
+    ],
+    "state": "running",
+    "program": "/home/hb/python/efficientnet_kincnn/DeepPhospho.py",
+    "codePath": "DeepPhospho.py",
+    "git": {
+        "remote": "https://github.com/HongB1/efficientnet_kincnn.git",
+        "commit": "5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8"
+    },
+    "email": "hongbikim14@gmail.com",
+    "root": "/home/hb/python/efficientnet_kincnn",
+    "host": "workstation",
+    "username": "hb",
+    "executable": "/home/hb/anaconda3/envs/phos/bin/python3",
+    "cpu_count": 64,
+    "cpu_count_logical": 128,
+    "cpu_freq": {
+        "current": 2.3195781249999947,
+        "min": 2200.0,
+        "max": 2900.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.512,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 4.328,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 3.042,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        }
+    ],
+    "disk": {
+        "total": 1832.2072448730469,
+        "used": 1672.7867317199707
+    },
+    "gpu": "NVIDIA GeForce RTX 3090",
+    "gpu_count": 4,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        }
+    ],
+    "memory": {
+        "total": 251.55356216430664
+    }
+}
diff --git a/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json b/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json
new file mode 100644
index 0000000..13ed209
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json
@@ -0,0 +1 @@
+{"_wandb": {"runtime": 7}}
\ No newline at end of file
diff --git a/wandb/run-20230515_170807-fh6cjibh/logs/debug-internal.log b/wandb/run-20230515_170807-fh6cjibh/logs/debug-internal.log
new file mode 100644
index 0000000..48eff10
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/logs/debug-internal.log
@@ -0,0 +1,207 @@
+2023-05-15 17:08:07,959 INFO    StreamThr :3663699 [internal.py:wandb_internal():87] W&B internal server running at pid: 3663699, started at: 2023-05-15 17:08:07.959096
+2023-05-15 17:08:07,961 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: status
+2023-05-15 17:08:07,963 INFO    WriterThread:3663699 [datastore.py:open_for_write():85] open: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/run-fh6cjibh.wandb
+2023-05-15 17:08:07,963 DEBUG   SenderThread:3663699 [sender.py:send():334] send: header
+2023-05-15 17:08:07,965 DEBUG   SenderThread:3663699 [sender.py:send():334] send: run
+2023-05-15 17:08:08,595 INFO    SenderThread:3663699 [dir_watcher.py:__init__():216] watching files in: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files
+2023-05-15 17:08:08,596 INFO    SenderThread:3663699 [sender.py:_start_run_threads():1065] run started: fh6cjibh with start time 1684138087.959013
+2023-05-15 17:08:08,596 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:08,596 INFO    SenderThread:3663699 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:08,597 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: check_version
+2023-05-15 17:08:08,597 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: check_version
+2023-05-15 17:08:08,651 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: run_start
+2023-05-15 17:08:08,655 DEBUG   HandlerThread:3663699 [system_info.py:__init__():31] System info init
+2023-05-15 17:08:08,655 DEBUG   HandlerThread:3663699 [system_info.py:__init__():46] System info init done
+2023-05-15 17:08:08,655 INFO    HandlerThread:3663699 [system_monitor.py:start():151] Starting system monitor
+2023-05-15 17:08:08,655 INFO    SystemMonitor:3663699 [system_monitor.py:_start():116] Starting system asset monitoring threads
+2023-05-15 17:08:08,655 INFO    HandlerThread:3663699 [system_monitor.py:probe():172] Collecting system info
+2023-05-15 17:08:08,656 INFO    SystemMonitor:3663699 [interfaces.py:start():168] Started cpu
+2023-05-15 17:08:08,656 INFO    SystemMonitor:3663699 [interfaces.py:start():168] Started disk
+2023-05-15 17:08:08,657 INFO    SystemMonitor:3663699 [interfaces.py:start():168] Started gpu
+2023-05-15 17:08:08,658 INFO    SystemMonitor:3663699 [interfaces.py:start():168] Started memory
+2023-05-15 17:08:08,659 INFO    SystemMonitor:3663699 [interfaces.py:start():168] Started network
+2023-05-15 17:08:08,729 DEBUG   HandlerThread:3663699 [system_info.py:probe():195] Probing system
+2023-05-15 17:08:08,730 DEBUG   HandlerThread:3663699 [system_info.py:_probe_git():180] Probing git
+2023-05-15 17:08:08,736 DEBUG   HandlerThread:3663699 [system_info.py:_probe_git():188] Probing git done
+2023-05-15 17:08:08,736 DEBUG   HandlerThread:3663699 [system_info.py:probe():241] Probing system done
+2023-05-15 17:08:08,736 DEBUG   HandlerThread:3663699 [system_monitor.py:probe():181] {'os': 'Linux-5.15.0-57-generic-x86_64-with-glibc2.31', 'python': '3.10.9', 'heartbeatAt': '2023-05-15T08:08:08.729087', 'startedAt': '2023-05-15T08:08:07.949537', 'docker': None, 'cuda': None, 'args': ('0', '1024', '500', '1e-3', '5', '7', '0.7', '25', 'transfer_learning_1', '0'), 'state': 'running', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py', 'codePath': 'DeepPhospho.py', 'git': {'remote': 'https://github.com/HongB1/efficientnet_kincnn.git', 'commit': '5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8'}, 'email': 'hongbikim14@gmail.com', 'root': '/home/hb/python/efficientnet_kincnn', 'host': 'workstation', 'username': 'hb', 'executable': '/home/hb/anaconda3/envs/phos/bin/python3', 'cpu_count': 64, 'cpu_count_logical': 128, 'cpu_freq': {'current': 2.3195781249999947, 'min': 2200.0, 'max': 2900.0}, 'cpu_freq_per_core': [{'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.512, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 4.328, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 3.042, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}], 'disk': {'total': 1832.2072448730469, 'used': 1672.7867317199707}, 'gpu': 'NVIDIA GeForce RTX 3090', 'gpu_count': 4, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}], 'memory': {'total': 251.55356216430664}}
+2023-05-15 17:08:08,736 INFO    HandlerThread:3663699 [system_monitor.py:probe():182] Finished collecting system info
+2023-05-15 17:08:08,736 INFO    HandlerThread:3663699 [system_monitor.py:probe():185] Publishing system info
+2023-05-15 17:08:08,736 DEBUG   HandlerThread:3663699 [system_info.py:_save_pip():51] Saving list of pip packages installed into the current environment
+2023-05-15 17:08:08,736 DEBUG   HandlerThread:3663699 [system_info.py:_save_pip():67] Saving pip packages done
+2023-05-15 17:08:08,736 DEBUG   HandlerThread:3663699 [system_info.py:_save_conda():74] Saving list of conda packages installed into the current environment
+2023-05-15 17:08:09,597 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/requirements.txt
+2023-05-15 17:08:09,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml
+2023-05-15 17:08:09,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json
+2023-05-15 17:08:14,055 DEBUG   HandlerThread:3663699 [system_info.py:_save_conda():86] Saving conda packages done
+2023-05-15 17:08:14,055 DEBUG   HandlerThread:3663699 [system_info.py:_save_code():89] Saving code
+2023-05-15 17:08:14,058 DEBUG   HandlerThread:3663699 [system_info.py:_save_code():110] Saving code done
+2023-05-15 17:08:14,058 DEBUG   HandlerThread:3663699 [system_info.py:_save_patches():127] Saving git patches
+2023-05-15 17:08:14,075 DEBUG   HandlerThread:3663699 [system_info.py:_save_patches():169] Saving git patches done
+2023-05-15 17:08:14,076 INFO    HandlerThread:3663699 [system_monitor.py:probe():187] Finished publishing system info
+2023-05-15 17:08:14,081 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:08:14,081 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:08:14,082 DEBUG   SenderThread:3663699 [sender.py:send():334] send: files
+2023-05-15 17:08:14,082 INFO    SenderThread:3663699 [sender.py:_save_file():1319] saving file wandb-metadata.json with policy now
+2023-05-15 17:08:14,082 INFO    SenderThread:3663699 [sender.py:_save_file():1319] saving file code/DeepPhospho.py with policy now
+2023-05-15 17:08:14,083 INFO    SenderThread:3663699 [sender.py:_save_file():1319] saving file diff.patch with policy now
+2023-05-15 17:08:14,087 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: stop_status
+2023-05-15 17:08:14,087 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: stop_status
+2023-05-15 17:08:14,343 DEBUG   SenderThread:3663699 [sender.py:send():334] send: telemetry
+2023-05-15 17:08:14,344 DEBUG   SenderThread:3663699 [sender.py:send():334] send: telemetry
+2023-05-15 17:08:14,344 DEBUG   SenderThread:3663699 [sender.py:send():334] send: run
+2023-05-15 17:08:14,597 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/config.yaml
+2023-05-15 17:08:14,597 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml
+2023-05-15 17:08:14,597 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-metadata.json
+2023-05-15 17:08:14,597 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/output.log
+2023-05-15 17:08:14,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/code/DeepPhospho.py
+2023-05-15 17:08:14,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/diff.patch
+2023-05-15 17:08:14,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/code
+2023-05-15 17:08:14,763 INFO    Thread-18 :3663699 [upload_job.py:push():143] Uploaded file /tmp/tmpqz9lc_aowandb/9s20nkng-diff.patch
+2023-05-15 17:08:14,783 INFO    SenderThread:3663699 [sender.py:send_run():942] updated run: fh6cjibh
+2023-05-15 17:08:14,798 INFO    Thread-16 :3663699 [upload_job.py:push():143] Uploaded file /tmp/tmpqz9lc_aowandb/6cnz809a-wandb-metadata.json
+2023-05-15 17:08:14,842 INFO    Thread-17 :3663699 [upload_job.py:push():143] Uploaded file /tmp/tmpqz9lc_aowandb/tlmxhikr-code/DeepPhospho.py
+2023-05-15 17:08:16,507 DEBUG   SenderThread:3663699 [sender.py:send():334] send: exit
+2023-05-15 17:08:16,508 INFO    SenderThread:3663699 [sender.py:send_exit():557] handling exit code: 1
+2023-05-15 17:08:16,508 INFO    SenderThread:3663699 [sender.py:send_exit():559] handling runtime: 7
+2023-05-15 17:08:16,508 INFO    SenderThread:3663699 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:16,508 INFO    SenderThread:3663699 [sender.py:send_exit():565] send defer
+2023-05-15 17:08:16,508 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,508 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 0
+2023-05-15 17:08:16,509 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,509 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 0
+2023-05-15 17:08:16,509 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 1
+2023-05-15 17:08:16,509 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,509 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 1
+2023-05-15 17:08:16,509 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,509 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 1
+2023-05-15 17:08:16,509 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 2
+2023-05-15 17:08:16,509 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,510 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 2
+2023-05-15 17:08:16,510 INFO    HandlerThread:3663699 [system_monitor.py:finish():161] Stopping system monitor
+2023-05-15 17:08:16,511 DEBUG   SystemMonitor:3663699 [system_monitor.py:_start():130] Starting system metrics aggregation loop
+2023-05-15 17:08:16,511 DEBUG   SystemMonitor:3663699 [system_monitor.py:_start():137] Finished system metrics aggregation loop
+2023-05-15 17:08:16,511 DEBUG   SystemMonitor:3663699 [system_monitor.py:_start():141] Publishing last batch of metrics
+2023-05-15 17:08:16,513 INFO    HandlerThread:3663699 [interfaces.py:finish():175] Joined cpu
+2023-05-15 17:08:16,513 INFO    HandlerThread:3663699 [interfaces.py:finish():175] Joined disk
+2023-05-15 17:08:16,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/output.log
+2023-05-15 17:08:16,598 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json
+2023-05-15 17:08:16,909 INFO    HandlerThread:3663699 [interfaces.py:finish():175] Joined gpu
+2023-05-15 17:08:16,909 INFO    HandlerThread:3663699 [interfaces.py:finish():175] Joined memory
+2023-05-15 17:08:16,909 INFO    HandlerThread:3663699 [interfaces.py:finish():175] Joined network
+2023-05-15 17:08:16,910 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,910 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 2
+2023-05-15 17:08:16,910 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 3
+2023-05-15 17:08:16,910 DEBUG   SenderThread:3663699 [sender.py:send():334] send: stats
+2023-05-15 17:08:16,910 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,911 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 3
+2023-05-15 17:08:16,911 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,911 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 3
+2023-05-15 17:08:16,911 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 4
+2023-05-15 17:08:16,912 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,912 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 4
+2023-05-15 17:08:16,912 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,912 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 4
+2023-05-15 17:08:16,912 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 5
+2023-05-15 17:08:16,912 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,912 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 5
+2023-05-15 17:08:16,912 DEBUG   SenderThread:3663699 [sender.py:send():334] send: summary
+2023-05-15 17:08:16,913 INFO    SenderThread:3663699 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:16,913 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,913 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 5
+2023-05-15 17:08:16,913 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 6
+2023-05-15 17:08:16,913 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:16,913 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 6
+2023-05-15 17:08:16,913 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:16,913 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 6
+2023-05-15 17:08:16,917 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:08:17,508 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:08:17,599 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/output.log
+2023-05-15 17:08:17,599 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json
+2023-05-15 17:08:17,675 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 7
+2023-05-15 17:08:17,675 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:08:17,675 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:17,676 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 7
+2023-05-15 17:08:17,676 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:17,676 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 7
+2023-05-15 17:08:18,508 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:08:18,600 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/config.yaml
+2023-05-15 17:08:18,814 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 8
+2023-05-15 17:08:18,815 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:08:18,815 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:18,815 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 8
+2023-05-15 17:08:18,816 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:18,816 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 8
+2023-05-15 17:08:18,834 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 9
+2023-05-15 17:08:18,834 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:18,834 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 9
+2023-05-15 17:08:18,834 DEBUG   SenderThread:3663699 [sender.py:send():334] send: artifact
+2023-05-15 17:08:19,510 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:08:19,600 INFO    Thread-13 :3663699 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/output.log
+2023-05-15 17:08:20,378 INFO    Thread-21 :3663699 [upload_job.py:push():98] Skipped uploading /home/hb/.local/share/wandb/artifacts/staging/tmp0jby_ohl
+2023-05-15 17:08:20,378 INFO    Thread-22 :3663699 [upload_job.py:push():98] Skipped uploading /home/hb/.local/share/wandb/artifacts/staging/tmpk3rwgoqc
+2023-05-15 17:08:20,769 INFO    Thread-20 :3663699 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmp56j3u4wz
+2023-05-15 17:08:22,522 INFO    SenderThread:3663699 [sender.py:send_artifact():1415] sent artifact job-https___github.com_HongB1_efficientnet_kincnn.git_DeepPhospho.py - {'id': 'QXJ0aWZhY3Q6NDU1NDk1NzY5', 'digest': 'f56168e87d83019bf2611cf0d62ffad6', 'state': 'PENDING', 'aliases': [], 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjY5MzkzNzYx', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6NDU1NDk0OTcz', 'versionIndex': 1}}, 'version': 'latest'}
+2023-05-15 17:08:22,523 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:22,523 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 9
+2023-05-15 17:08:22,523 INFO    SenderThread:3663699 [dir_watcher.py:finish():362] shutting down directory watcher
+2023-05-15 17:08:22,601 INFO    SenderThread:3663699 [dir_watcher.py:finish():392] scan: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files
+2023-05-15 17:08:22,601 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/output.log output.log
+2023-05-15 17:08:22,601 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-metadata.json wandb-metadata.json
+2023-05-15 17:08:22,602 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/diff.patch diff.patch
+2023-05-15 17:08:22,602 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json wandb-summary.json
+2023-05-15 17:08:22,602 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/config.yaml config.yaml
+2023-05-15 17:08:22,605 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/requirements.txt requirements.txt
+2023-05-15 17:08:22,605 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml conda-environment.yaml
+2023-05-15 17:08:22,609 INFO    SenderThread:3663699 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/code/DeepPhospho.py code/DeepPhospho.py
+2023-05-15 17:08:22,611 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 10
+2023-05-15 17:08:22,611 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:08:22,612 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:22,617 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 10
+2023-05-15 17:08:22,618 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:22,618 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 10
+2023-05-15 17:08:22,618 INFO    SenderThread:3663699 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:08:23,265 INFO    Thread-23 :3663699 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/output.log
+2023-05-15 17:08:23,277 INFO    Thread-27 :3663699 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/conda-environment.yaml
+2023-05-15 17:08:23,281 INFO    Thread-25 :3663699 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/config.yaml
+2023-05-15 17:08:23,306 INFO    Thread-26 :3663699 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/requirements.txt
+2023-05-15 17:08:23,315 INFO    Thread-24 :3663699 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/files/wandb-summary.json
+2023-05-15 17:08:23,515 INFO    Thread-12 (_thread_body):3663699 [sender.py:transition_state():585] send defer: 11
+2023-05-15 17:08:23,516 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:23,516 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 11
+2023-05-15 17:08:23,516 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:23,517 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 11
+2023-05-15 17:08:23,517 INFO    SenderThread:3663699 [file_pusher.py:join():165] waiting for file pusher
+2023-05-15 17:08:23,517 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 12
+2023-05-15 17:08:23,517 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:23,517 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 12
+2023-05-15 17:08:23,517 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:23,517 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 12
+2023-05-15 17:08:23,761 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 13
+2023-05-15 17:08:23,761 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:23,761 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 13
+2023-05-15 17:08:23,761 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:23,761 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 13
+2023-05-15 17:08:23,761 INFO    SenderThread:3663699 [sender.py:transition_state():585] send defer: 14
+2023-05-15 17:08:23,761 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:08:23,762 INFO    HandlerThread:3663699 [handler.py:handle_request_defer():170] handle defer: 14
+2023-05-15 17:08:23,762 DEBUG   SenderThread:3663699 [sender.py:send():334] send: final
+2023-05-15 17:08:23,762 DEBUG   SenderThread:3663699 [sender.py:send():334] send: footer
+2023-05-15 17:08:23,762 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:08:23,762 INFO    SenderThread:3663699 [sender.py:send_request_defer():581] handle sender defer: 14
+2023-05-15 17:08:23,763 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:08:23,763 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:08:23,763 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: server_info
+2023-05-15 17:08:23,764 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: get_summary
+2023-05-15 17:08:23,764 DEBUG   SenderThread:3663699 [sender.py:send_request():361] send_request: server_info
+2023-05-15 17:08:23,764 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: sampled_history
+2023-05-15 17:08:23,983 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:08:23,983 INFO    MainThread:3663699 [wandb_run.py:_footer_history_summary_info():3427] rendering history
+2023-05-15 17:08:23,984 INFO    MainThread:3663699 [wandb_run.py:_footer_history_summary_info():3459] rendering summary
+2023-05-15 17:08:23,984 INFO    MainThread:3663699 [wandb_run.py:_footer_sync_info():3383] logging synced files
+2023-05-15 17:08:23,984 DEBUG   HandlerThread:3663699 [handler.py:handle_request():144] handle_request: shutdown
+2023-05-15 17:08:23,984 INFO    HandlerThread:3663699 [handler.py:finish():841] shutting down handler
+2023-05-15 17:08:24,983 INFO    SenderThread:3663699 [sender.py:finish():1491] shutting down sender
+2023-05-15 17:08:24,983 INFO    SenderThread:3663699 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:08:24,983 INFO    SenderThread:3663699 [file_pusher.py:join():165] waiting for file pusher
+2023-05-15 17:08:24,984 INFO    WriterThread:3663699 [datastore.py:close():299] close: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/run-fh6cjibh.wandb
diff --git a/wandb/run-20230515_170807-fh6cjibh/logs/debug.log b/wandb/run-20230515_170807-fh6cjibh/logs/debug.log
new file mode 100644
index 0000000..870ab81
--- /dev/null
+++ b/wandb/run-20230515_170807-fh6cjibh/logs/debug.log
@@ -0,0 +1,26 @@
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_setup.py:_flush():68] Configure stats pid to 3663553
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_setup.py:_flush():68] Loading settings from /home/hb/.config/wandb/settings
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_setup.py:_flush():68] Loading settings from /home/hb/python/efficientnet_kincnn/wandb/settings
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'DeepPhospho.py', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py'}
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_init.py:_log_setup():478] Logging user logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/logs/debug.log
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_init.py:_log_setup():479] Logging internal logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170807-fh6cjibh/logs/debug-internal.log
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_init.py:init():518] calling init triggers
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_init.py:init():521] wandb.init called with sweep_config: {}
+config: {'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0'}
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_init.py:init():571] starting backend
+2023-05-15 17:08:07,951 INFO    MainThread:3663553 [wandb_init.py:init():575] setting up manager
+2023-05-15 17:08:07,955 INFO    MainThread:3663553 [backend.py:_multiprocessing_setup():106] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2023-05-15 17:08:07,958 INFO    MainThread:3663553 [wandb_init.py:init():582] backend started and connected
+2023-05-15 17:08:07,960 INFO    MainThread:3663553 [wandb_init.py:init():670] updated telemetry
+2023-05-15 17:08:07,963 INFO    MainThread:3663553 [wandb_init.py:init():710] communicating run to backend with 60.0 second timeout
+2023-05-15 17:08:08,596 INFO    MainThread:3663553 [wandb_run.py:_on_init():2121] communicating current version
+2023-05-15 17:08:08,646 INFO    MainThread:3663553 [wandb_run.py:_on_init():2125] got version response upgrade_message: "wandb version 0.15.2 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2023-05-15 17:08:08,646 INFO    MainThread:3663553 [wandb_init.py:init():758] starting run threads in backend
+2023-05-15 17:08:14,085 INFO    MainThread:3663553 [wandb_run.py:_console_start():2101] atexit reg
+2023-05-15 17:08:14,086 INFO    MainThread:3663553 [wandb_run.py:_redirect():1959] redirect: SettingsConsole.WRAP_RAW
+2023-05-15 17:08:14,087 INFO    MainThread:3663553 [wandb_run.py:_redirect():2024] Wrapping output streams.
+2023-05-15 17:08:14,087 INFO    MainThread:3663553 [wandb_run.py:_redirect():2046] Redirects installed.
+2023-05-15 17:08:14,087 INFO    MainThread:3663553 [wandb_init.py:init():798] run started, returning control to user process
+2023-05-15 17:08:24,985 WARNING MsgRouterThr:3663553 [router.py:message_loop():77] message_loop has been closed
diff --git a/wandb/run-20230515_170807-fh6cjibh/run-fh6cjibh.wandb b/wandb/run-20230515_170807-fh6cjibh/run-fh6cjibh.wandb
new file mode 100644
index 0000000..3190684
Binary files /dev/null and b/wandb/run-20230515_170807-fh6cjibh/run-fh6cjibh.wandb differ
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/code/DeepPhospho.py b/wandb/run-20230515_170843-jr2qjj7w/files/code/DeepPhospho.py
new file mode 100644
index 0000000..73cab75
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/code/DeepPhospho.py
@@ -0,0 +1,294 @@
+import os
+import sys
+sys.path.append(os.path.join(os.getcwd(), '..'))
+import efficientnet_kincnn
+from phospho_preprocessing import prepare_dataset, AttrDict
+import random
+from tqdm.auto import tqdm
+import torch
+from torch.utils.data import Dataset, DataLoader
+import torch.utils.data as data_utils
+from sklearn.model_selection import StratifiedShuffleSplit, KFold
+from sklearn.metrics import f1_score, accuracy_score, roc_auc_score
+from torch import nn
+from torch.autograd import Variable
+from Radam import RAdam
+from torch.utils.data import DataLoader, ConcatDataset
+from datetime import datetime
+from precision_recall import precision_recall
+from EarlyStopping import EarlyStopping
+import wandb
+from matplotlib import pyplot as plt
+import numpy as np
+
+if __name__ == "__main__":
+    config = AttrDict()
+    config.gpu_num = sys.argv[1]
+    config.batch_size = int(sys.argv[2])
+    config.n_epoch = int(sys.argv[3])
+    config.defalut_learning_rate = float(sys.argv[4])
+    config.fold_num = int(sys.argv[5])
+    config.scheduler_patience, config.scheduler_factor = int(sys.argv[6]), float(sys.argv[7])
+    config.erls_patience = int(sys.argv[8])
+    config.dataset = sys.argv[9]
+    config.pretrain_fold_num = sys.argv[10]
+    config.model = f'efficientnet-phospho-B-15'
+    config.save_dir = f'/home/hb/python/efficientnet_kincnn/saved_model/{datetime.today().strftime("%m%d")}/DeepPP_{config.dataset}_{datetime.today().strftime("%H%M")}_bs{config.batch_size}_weight{config.pretrain_fold_num}'
+
+    os.makedirs(f'{config.save_dir}', exist_ok=True)
+
+    import yaml
+    with open(f'{config.save_dir}/config.yaml', 'w') as f:
+        yaml.dump(config, f)
+
+def seed_everything(seed: int = 42):
+    random.seed(seed)
+    np.random.seed(seed)
+    os.environ["PYTHONHASHSEED"] = str(seed)
+    torch.manual_seed(seed)
+    torch.cuda.manual_seed(seed)  # type: ignore
+    torch.backends.cudnn.deterministic = True  # type: ignore
+    torch.backends.cudnn.benchmark = False  # type: ignore
+
+seed_everything(42)        
+os.environ["CUDA_VISIBLE_DEVICES"] = config.gpu_num  # Set the GPU number to use
+device = torch.device(f'cuda:{config.gpu_num}' if torch.cuda.is_available() else 'cpu')
+
+print('Device:', device)
+print('Current cuda device:', torch.cuda.current_device())
+print(f'Using CUDA_VISIBLE_DEVICES {config.gpu_num}')
+print('Count of using GPUs:', torch.cuda.device_count())
+
+'''prepare dataset'''
+dtset = prepare_dataset(dataset_mode=config.dataset)
+train_set = dtset[0]
+valid_set = dtset[1]
+print(train_set, valid_set)
+train_loader = data_utils.DataLoader(train_set, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+valid_loader = data_utils.DataLoader(valid_set, batch_size=config.batch_size, )
+
+dataloaders = {'train':train_loader,'valid':valid_loader}
+dataset_sizes = {x: len(dataloaders[x]) for x in ['train', 'valid']}
+dataset = ConcatDataset([train_set, valid_set])
+
+def train_model_5cv():
+
+    # dataset = data_utils.DataLoader(, batch_size=config.batch_size, pin_memory=True, shuffle=True)
+    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
+    kfold = KFold(n_splits=5, shuffle=True)
+
+    wandb.init(project='phospho', entity="jeguring", reinit=True, config=config)
+    print(config)
+    project_name = f'bs{config.batch_size}_{datetime.today().strftime("%m%d%H%M")}'
+    wandb.run.name = project_name 
+    
+    for fold, (train_idx, valid_idx) in enumerate(kfold.split(dataset)):
+
+        globals()[f'{fold}_train_loss'] = []
+        globals()[f'{fold}_train_precision'] = []
+        globals()[f'{fold}_train_recall'] = []
+        globals()[f'{fold}_train_f1'] = []
+        globals()[f'{fold}_train_acc'] = []
+
+        globals()[f'{fold}_valid_loss'] = []
+        globals()[f'{fold}_valid_precision'] = []
+        globals()[f'{fold}_valid_recall'] = []
+        globals()[f'{fold}_valid_f1'] = []
+        globals()[f'{fold}_valid_acc'] = []
+        globals()[f'{fold}_lr'] = []
+
+        globals()[f'{fold}_result'] = []
+        print(f'FOLD {fold}')
+        print('--------------------------------')
+
+        '''model compile'''
+        model = efficientnet_kincnn.EfficientNet.from_name(f'{config.model}')
+
+        '''optimizer & loss'''
+
+        optimizer = RAdam(model.parameters(), lr=config.defalut_learning_rate)
+        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=config.scheduler_factor, patience=config.scheduler_patience, threshold=0.0001, cooldown=0, min_lr=0, verbose=1)
+        criterion = nn.BCELoss()
+        # criterion = nn.CrossEntropyLoss()
+        print("lr: ", optimizer.param_groups[0]['lr'])
+        # state_dict = torch.load(f'/home/hb/python/phospho/saved_model/0224/DeepPP_pretrain_1090_1708_bs1024_weight0/{config.pretrain_fold_num}fold_best_model.pth')
+        # model.load_state_dict(state_dict['state_dict']) 
+        model = model.to(device)
+        criterion.to(device)
+                
+        best_model_weights = model.state_dict()
+        best_loss = 1000000.0
+        
+        # Define data loaders for training and testing data in this fold
+        train_subsampler = torch.utils.data.SubsetRandomSampler(train_idx)
+        test_subsampler = torch.utils.data.SubsetRandomSampler(valid_idx)
+    
+        # Define data loaders for training and testing data in this fold
+        trainloader = torch.utils.data.DataLoader(
+                    dataset, 
+                    batch_size=config.batch_size, sampler=train_subsampler)
+        validloader = torch.utils.data.DataLoader(
+                    dataset,
+                    batch_size=config.batch_size, sampler=test_subsampler)
+        
+        
+        early_stopping = EarlyStopping(patience = config.erls_patience, verbose = True)
+
+        for epoch in tqdm(range(config.n_epoch), position=0, leave=True):
+            print('-' * 60)
+            print('Epoch {}/{}'.format(epoch+1, config.n_epoch))
+
+            train_corrects = 0.0      
+            train_loss = 0.0
+            train_precision, train_recall, train_f1 = 0.0, 0.0, 0.0
+            # rus = RandomUnderSampler(random_state=epoch)
+            # undersampling_idx, _ = rus.fit_resample(train_idx, y_train)
+            # undersampling_idx = undersampling_idx.flatten()
+            
+            # X_urs = X_train[undersampling_idx]
+            # y_urs = y_train[undersampling_idx]
+            # print(y_urs.bincount())
+            # train_dataset = data_utils.TensorDataset(torch.tensor(X_urs), torch.tensor(y_urs))
+            
+            # trainloader = torch.utils.data.DataLoader(
+            #                 train_dataset,
+            #                 batch_size=config.batch_size,)
+            # validloader = torch.utils.data.DataLoader(
+            #                 valid_dataset,
+            #                 batch_size=config.batch_size,)
+            for _, (inputs, labels) in enumerate(tqdm(trainloader, position=1, leave=True)): 
+                model.train(True)
+                # inputs, labels = data
+                inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                # print(labels.shape)
+                # print(labels)
+                # labels = labels.unsqueeze(1).to(device, dtype=torch.float)
+                # print(labels)
+                # print(labels.shape)
+                labels = Variable(labels.to(device))
+                # print(labels)
+
+                pred = model(inputs) # forward
+                precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                # loss = criterion(pred, labels)
+                loss = criterion(pred, labels.float().view(-1,1)).to(device)      
+                preds = (pred>0.5).float()
+
+                '''backward'''
+                optimizer.zero_grad() # zero the parameter gradients
+                loss.backward()
+                optimizer.step()
+
+                '''train record'''
+                train_loss += loss.item()
+                train_preds = (pred>=0.5).float()
+                train_corrects += accuracy_score(labels.cpu(), train_preds.cpu())
+                train_precision += precision.detach()
+                train_recall += recall.detach()
+                train_f1 += f1.detach()
+
+            '''epoch train record'''
+            epoch_train_loss = train_loss / len(trainloader)
+            epoch_train_precision = train_precision / len(trainloader)
+            epoch_train_recall = train_recall / len(trainloader)
+            epoch_train_f1 = train_f1 / len(trainloader)
+            epoch_train_acc = train_corrects / len(trainloader)
+            # # ---train 1 epoch ÎÅù---
+
+                # ---valid 1 epoch 
+            with torch.no_grad():
+                model.eval()
+
+                valid_corrects = 0.0         
+                valid_loss = 0.0
+                valid_precision, valid_recall, valid_f1 = 0.0, 0.0, 0.0
+
+                for i, (inputs, labels) in enumerate(tqdm(validloader, position=1, leave=True)):
+                    # model.train(False)
+                    inputs = Variable(inputs.to(device, dtype=torch.float), requires_grad=True)
+                    labels = Variable(labels.to(device))
+
+                    pred = model(inputs) 
+                    precision, recall, f1 = precision_recall(labels.float().view(-1,1), pred) # outputs = net(inputs)
+                    loss = criterion(pred, labels.float().view(-1,1)).to(device)   
+                    # loss = criterion(pred, labels).to(device)   
+
+                    '''valid record'''
+                    valid_loss += loss.item()
+                    valid_preds = (pred>=0.5).float()
+                    valid_corrects += accuracy_score(labels.cpu(), valid_preds.cpu())
+                    valid_precision += precision.detach()
+                    valid_recall += recall.detach()
+                    valid_f1 += f1.detach()
+            
+            '''epoch valid record'''
+            epoch_valid_loss = valid_loss / len(validloader) 
+            epoch_valid_precision = valid_precision / len(validloader)
+            epoch_valid_recall = valid_recall / len(validloader)
+            epoch_valid_f1 = valid_f1 / len(validloader)
+            epoch_valid_acc = valid_corrects / len(validloader)
+
+            globals()[f'{fold}_train_loss'].append(epoch_train_loss)
+            globals()[f'{fold}_train_precision'].append(epoch_train_precision)
+            globals()[f'{fold}_train_recall'].append(epoch_train_recall)
+            globals()[f'{fold}_train_f1'].append(epoch_train_f1)
+            globals()[f'{fold}_train_acc'].append(epoch_train_acc) 
+
+            globals()[f'{fold}_valid_loss'].append(epoch_valid_loss)
+            globals()[f'{fold}_valid_precision'].append(epoch_valid_precision)
+            globals()[f'{fold}_valid_recall'].append(epoch_valid_recall)
+            globals()[f'{fold}_valid_f1'].append(epoch_valid_f1)
+            globals()[f'{fold}_valid_acc'].append(epoch_valid_acc) 
+
+            if epoch_valid_loss < best_loss:
+                best_loss = epoch_valid_loss
+                best_model_weights = model.state_dict()
+            # valiid 1 epoch end
+            # Í∞ÄÏû• ÏµúÍ∑º Î™®Îç∏ Ï†ÄÏû•
+            checkpoint = {'epoch':epoch, 
+            'loss':epoch_valid_loss,
+                'model': model,
+                        #'state_dict': model.module.state_dict(),
+                            'state_dict': model.state_dict(),
+                        'optimizer' : optimizer.state_dict()}
+            torch.save(checkpoint, f"{config.save_dir}/{fold}fold_latest_epoch.pth")
+
+            # Earlystopping & best Î™®Îç∏ Ï†ÄÏû•
+            savePath = "{}/{}fold_best_model.pth".format(wandb.config.save_dir, fold) 
+            early_stopping(epoch_valid_loss, model, optimizer, savePath)
+            if early_stopping.early_stop:
+                print(f'Early stopping... fold:{fold} epoch:{epoch} loss:{epoch_valid_loss}')
+                break
+            # wandb.log({f'{config.data} : {fold}fold Validation loss': epoch_valid_loss, f'{fold}fold Learning_rate':optimizer.param_groups[0]['lr']})
+
+            wandb.log({f"{fold} fold train" : {"loss":epoch_train_loss}, f"{fold} fold val":{"loss":epoch_valid_loss} ,f"{fold} fold learning_rate":optimizer.param_groups[0]['lr']})
+            globals()[f'{fold}_lr'].append(optimizer.param_groups[0]['lr'])
+            scheduler.step(epoch_valid_loss) # reducedÎäî Î¨¥Ï°∞Í±¥ epochÏóêÏÑú backward
+            print("lr: ", optimizer.param_groups[0]['lr'])
+            print('-' * 60)
+            print()
+            # globals()[f'{fold}_result'].append(epoch_valid_loss)
+
+        torch.cuda.empty_cache()
+
+    plt.plot(globals()['0_valid_loss'], label="0fold")
+    plt.plot(globals()['1_valid_loss'], label='1fold')
+    plt.plot(globals()['2_valid_loss'], label='2fold')
+    plt.plot(globals()['3_valid_loss'], label='3fold')
+    plt.plot(globals()['4_valid_loss'], label='4fold')
+    plt.title('Validation loss')
+    plt.xlabel("epoch")
+    plt.ylabel("Validation loss")
+    plt.legend()
+    plt.show()
+    plt.savefig(config.save_dir + "/fig_saved.png")
+    # wandb.log({f'{config.data}': plt})
+    wandb.run.save()
+    wandb.finish()
+
+    print('Best val Loss: {:4f}'.format(best_loss))
+    # load best model weights
+    model.load_state_dict(best_model_weights)
+    return model
+
+train_model_5cv()
\ No newline at end of file
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml b/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml
new file mode 100644
index 0000000..ceb7650
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml
@@ -0,0 +1,360 @@
+name: phos
+channels:
+  - pytorch
+  - nvidia
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - anyio=3.5.0=py310h06a4308_0
+  - argon2-cffi=21.3.0=pyhd3eb1b0_0
+  - argon2-cffi-bindings=21.2.0=py310h7f8727e_0
+  - asttokens=2.0.5=pyhd3eb1b0_0
+  - attrs=22.1.0=py310h06a4308_0
+  - babel=2.11.0=py310h06a4308_0
+  - backcall=0.2.0=pyhd3eb1b0_0
+  - beautifulsoup4=4.11.1=py310h06a4308_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd3eb1b0_0
+  - bottleneck=1.3.5=py310ha9d4c09_0
+  - brotli=1.0.9=h5eee18b_7
+  - brotli-bin=1.0.9=h5eee18b_7
+  - brotlipy=0.7.0=py310h7f8727e_1002
+  - bzip2=1.0.8=h7b6447c_0
+  - ca-certificates=2022.10.11=h06a4308_0
+  - certifi=2022.12.7=py310h06a4308_0
+  - cffi=1.15.1=py310h5eee18b_3
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - comm=0.1.2=py310h06a4308_0
+  - contourpy=1.0.5=py310hdb19cb5_0
+  - cryptography=38.0.4=py310h9ce1e76_0
+  - cuda=11.6.1=0
+  - cuda-cccl=11.6.55=hf6102b2_0
+  - cuda-command-line-tools=11.6.2=0
+  - cuda-compiler=11.6.2=0
+  - cuda-cudart=11.6.55=he381448_0
+  - cuda-cudart-dev=11.6.55=h42ad0f4_0
+  - cuda-cuobjdump=11.6.124=h2eeebcb_0
+  - cuda-cupti=11.6.124=h86345e5_0
+  - cuda-cuxxfilt=11.6.124=hecbf4f6_0
+  - cuda-driver-dev=11.6.55=0
+  - cuda-gdb=12.0.90=0
+  - cuda-libraries=11.6.1=0
+  - cuda-libraries-dev=11.6.1=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=12.0.78=0
+  - cuda-nsight-compute=12.0.0=0
+  - cuda-nvcc=11.6.124=hbba6d2d_0
+  - cuda-nvdisasm=12.0.76=0
+  - cuda-nvml-dev=11.6.55=haa9ef22_0
+  - cuda-nvprof=12.0.90=0
+  - cuda-nvprune=11.6.124=he22ec0a_0
+  - cuda-nvrtc=11.6.124=h020bade_0
+  - cuda-nvrtc-dev=11.6.124=h249d397_0
+  - cuda-nvtx=11.6.124=h0630a44_0
+  - cuda-nvvp=12.0.90=0
+  - cuda-runtime=11.6.1=0
+  - cuda-samples=11.6.101=h8efea70_0
+  - cuda-sanitizer-api=12.0.90=0
+  - cuda-toolkit=11.6.1=0
+  - cuda-tools=11.6.1=0
+  - cuda-visual-tools=11.6.1=0
+  - cycler=0.11.0=pyhd3eb1b0_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.5.1=py310h295c915_0
+  - decorator=5.1.1=pyhd3eb1b0_0
+  - defusedxml=0.7.1=pyhd3eb1b0_0
+  - entrypoints=0.4=py310h06a4308_0
+  - executing=0.8.3=pyhd3eb1b0_0
+  - expat=2.4.9=h6a678d5_0
+  - ffmpeg=4.3=hf484d3e_0
+  - flit-core=3.6.0=pyhd3eb1b0_0
+  - fontconfig=2.14.1=h52c9d5c_1
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.12.1=h4a9f257_0
+  - gds-tools=1.5.0.59=0
+  - giflib=5.2.1=h7b6447c_0
+  - glib=2.69.1=he621ea3_2
+  - gmp=6.2.1=h295c915_3
+  - gnutls=3.6.15=he1e5248_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.4=py310h06a4308_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - ipykernel=6.19.2=py310h2f386ee_0
+  - ipython=8.7.0=py310h06a4308_0
+  - ipython_genutils=0.2.0=pyhd3eb1b0_1
+  - ipywidgets=7.6.5=pyhd3eb1b0_1
+  - jedi=0.18.1=py310h06a4308_1
+  - jinja2=3.1.2=py310h06a4308_0
+  - jpeg=9e=h7f8727e_0
+  - json5=0.9.6=pyhd3eb1b0_0
+  - jsonschema=4.16.0=py310h06a4308_0
+  - jupyter=1.0.0=py310h06a4308_8
+  - jupyter_client=7.4.8=py310h06a4308_0
+  - jupyter_console=6.4.4=py310h06a4308_0
+  - jupyter_core=5.1.1=py310h06a4308_0
+  - jupyter_server=1.23.4=py310h06a4308_0
+  - jupyterlab=3.5.2=py310h06a4308_0
+  - jupyterlab_pygments=0.1.2=py_0
+  - jupyterlab_server=2.16.5=py310h06a4308_0
+  - jupyterlab_widgets=1.0.0=pyhd3eb1b0_1
+  - kiwisolver=1.4.4=py310h6a678d5_0
+  - krb5=1.19.2=hac12032_0
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.38=h1181459_1
+  - lerc=3.0=h295c915_0
+  - libbrotlicommon=1.0.9=h5eee18b_7
+  - libbrotlidec=1.0.9=h5eee18b_7
+  - libbrotlienc=1.0.9=h5eee18b_7
+  - libclang=10.0.1=default_hb85057a_2
+  - libcublas=11.9.2.110=h5e84587_0
+  - libcublas-dev=11.9.2.110=h5c901ab_0
+  - libcufft=10.7.1.112=hf425ae0_0
+  - libcufft-dev=10.7.1.112=ha5ce4c0_0
+  - libcufile=1.5.0.59=0
+  - libcufile-dev=1.5.0.59=0
+  - libcurand=10.3.1.50=0
+  - libcurand-dev=10.3.1.50=0
+  - libcusolver=11.3.4.124=h33c3c4e_0
+  - libcusparse=11.7.2.124=h7538f96_0
+  - libcusparse-dev=11.7.2.124=hbbe9722_0
+  - libdeflate=1.8=h7f8727e_5
+  - libedit=3.1.20221030=h5eee18b_0
+  - libevent=2.1.12=h8f2d780_0
+  - libffi=3.4.2=h6a678d5_6
+  - libgcc-ng=11.2.0=h1234567_1
+  - libgomp=11.2.0=h1234567_1
+  - libiconv=1.16=h7f8727e_2
+  - libidn2=2.3.2=h7f8727e_0
+  - libllvm10=10.0.1=hbcb73fb_5
+  - libnpp=11.6.3.124=hd2722f0_0
+  - libnpp-dev=11.6.3.124=h3c42840_0
+  - libnvjpeg=11.6.2.124=hd473ad6_0
+  - libnvjpeg-dev=11.6.2.124=hb5906b9_0
+  - libpng=1.6.37=hbc83047_0
+  - libpq=12.9=h16c4e8d_3
+  - libsodium=1.0.18=h7b6447c_0
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.16.0=h27cfd23_0
+  - libtiff=4.5.0=hecacb30_0
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=1.41.5=h5eee18b_0
+  - libwebp=1.2.4=h11a3e52_0
+  - libwebp-base=1.2.4=h5eee18b_0
+  - libxcb=1.15=h7f8727e_0
+  - libxkbcommon=1.0.1=hfa300c1_0
+  - libxml2=2.9.14=h74e7548_0
+  - libxslt=1.1.35=h4e12654_0
+  - lxml=4.9.1=py310h1edc446_0
+  - lz4-c=1.9.4=h6a678d5_0
+  - markupsafe=2.1.1=py310h7f8727e_0
+  - matplotlib=3.6.2=py310h06a4308_0
+  - matplotlib-base=3.6.2=py310h945d387_0
+  - matplotlib-inline=0.1.6=py310h06a4308_0
+  - mistune=0.8.4=py310h7f8727e_1000
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py310h7f8727e_0
+  - mkl_fft=1.3.1=py310hd6ae3a3_0
+  - mkl_random=1.2.2=py310h00e6091_0
+  - munkres=1.1.4=py_0
+  - nbclassic=0.4.8=py310h06a4308_0
+  - nbclient=0.5.13=py310h06a4308_0
+  - nbconvert=6.5.4=py310h06a4308_0
+  - nbformat=5.7.0=py310h06a4308_0
+  - ncurses=6.3=h5eee18b_3
+  - nest-asyncio=1.5.6=py310h06a4308_0
+  - nettle=3.7.3=hbbd107a_1
+  - notebook=6.5.2=py310h06a4308_0
+  - notebook-shim=0.2.2=py310h06a4308_0
+  - nsight-compute=2022.4.0.15=0
+  - nspr=4.33=h295c915_0
+  - nss=3.74=h0370c37_0
+  - numexpr=2.8.4=py310h8879344_0
+  - numpy=1.23.5=py310hd5efca6_0
+  - numpy-base=1.23.5=py310h8e6c178_0
+  - openh264=2.1.1=h4ff587b_0
+  - openssl=1.1.1s=h7f8727e_0
+  - packaging=22.0=py310h06a4308_0
+  - pandas=1.5.2=py310h1128e8f_0
+  - pandocfilters=1.5.0=pyhd3eb1b0_0
+  - parso=0.8.3=pyhd3eb1b0_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyhd3eb1b0_3
+  - pickleshare=0.7.5=pyhd3eb1b0_1003
+  - pillow=9.3.0=py310hace64e9_1
+  - pip=22.3.1=py310h06a4308_0
+  - platformdirs=2.5.2=py310h06a4308_0
+  - ply=3.11=py310h06a4308_0
+  - prometheus_client=0.14.1=py310h06a4308_0
+  - prompt-toolkit=3.0.36=py310h06a4308_0
+  - prompt_toolkit=3.0.36=hd3eb1b0_0
+  - psutil=5.9.0=py310h5eee18b_0
+  - ptyprocess=0.7.0=pyhd3eb1b0_2
+  - pure_eval=0.2.2=pyhd3eb1b0_0
+  - pycparser=2.21=pyhd3eb1b0_0
+  - pygments=2.11.2=pyhd3eb1b0_0
+  - pyopenssl=22.0.0=pyhd3eb1b0_0
+  - pyparsing=3.0.9=py310h06a4308_0
+  - pyqt=5.15.7=py310h6a678d5_1
+  - pyrsistent=0.18.0=py310h7f8727e_0
+  - pysocks=1.7.1=py310h06a4308_0
+  - python=3.10.9=h7a1cb2a_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python-fastjsonschema=2.16.2=py310h06a4308_0
+  - pytorch=1.13.1=py3.10_cuda11.6_cudnn8.3.2_0
+  - pytorch-cuda=11.6=h867d48c_1
+  - pytorch-mutex=1.0=cuda
+  - pytz=2022.7=py310h06a4308_0
+  - pyzmq=23.2.0=py310h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - qt-webengine=5.15.9=hd2b0992_4
+  - qtconsole=5.4.0=py310h06a4308_0
+  - qtpy=2.2.0=py310h06a4308_0
+  - qtwebkit=5.212=h4eab89a_4
+  - readline=8.2=h5eee18b_0
+  - requests=2.28.1=py310h06a4308_0
+  - seaborn=0.12.2=py310h06a4308_0
+  - send2trash=1.8.0=pyhd3eb1b0_1
+  - setuptools=65.6.3=py310h06a4308_0
+  - sip=6.6.2=py310h6a678d5_0
+  - six=1.16.0=pyhd3eb1b0_1
+  - sniffio=1.2.0=py310h06a4308_1
+  - soupsieve=2.3.2.post1=py310h06a4308_0
+  - sqlite=3.40.1=h5082296_0
+  - stack_data=0.2.0=pyhd3eb1b0_0
+  - terminado=0.17.1=py310h06a4308_0
+  - tinycss2=1.2.1=py310h06a4308_0
+  - tk=8.6.12=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tomli=2.0.1=py310h06a4308_0
+  - torchaudio=0.13.1=py310_cu116
+  - torchvision=0.14.1=py310_cu116
+  - tornado=6.2=py310h5eee18b_0
+  - tqdm=4.64.1=py310h06a4308_0
+  - traitlets=5.7.1=py310h06a4308_0
+  - typing-extensions=4.4.0=py310h06a4308_0
+  - typing_extensions=4.4.0=py310h06a4308_0
+  - tzdata=2022g=h04d1e81_0
+  - urllib3=1.26.14=py310h06a4308_0
+  - wcwidth=0.2.5=pyhd3eb1b0_0
+  - webencodings=0.5.1=py310h06a4308_1
+  - websocket-client=0.58.0=py310h06a4308_4
+  - wheel=0.37.1=pyhd3eb1b0_0
+  - widgetsnbextension=3.5.2=py310h06a4308_0
+  - xz=5.2.10=h5eee18b_1
+  - zeromq=4.3.4=h2531618_0
+  - zlib=1.2.13=h5eee18b_0
+  - zstd=1.5.2=ha4553b6_0
+  - pip:
+    - absl-py==1.4.0
+    - albumentations==1.3.0
+    - alembic==1.10.4
+    - ansi2html==1.8.0
+    - appdirs==1.4.4
+    - blinker==1.6.2
+    - cachetools==5.2.1
+    - category-encoders==2.6.0
+    - click==8.1.3
+    - cloudpickle==2.2.1
+    - cmaes==0.9.1
+    - colorlog==6.7.0
+    - cython==0.29.34
+    - dash==2.9.3
+    - dash-core-components==2.0.0
+    - dash-html-components==2.0.0
+    - dash-table==5.0.0
+    - deprecated==1.2.13
+    - deprecation==2.1.0
+    - docker-pycreds==0.4.0
+    - efficientnet-pytorch==0.7.1
+    - et-xmlfile==1.1.0
+    - flask==2.3.1
+    - gitdb==4.0.10
+    - gitpython==3.1.30
+    - google-auth==2.16.0
+    - google-auth-oauthlib==0.4.6
+    - grad-cam==1.4.6
+    - greenlet==2.0.2
+    - grpcio==1.51.1
+    - hiddenlayer==0.3
+    - imageio==2.26.0
+    - imbalanced-learn==0.10.1
+    - importlib-metadata==6.6.0
+    - itsdangerous==2.1.2
+    - joblib==1.2.0
+    - jupyter-dash==0.4.2
+    - kaleido==0.2.1
+    - lazy-loader==0.1
+    - lightgbm==3.3.5
+    - llvmlite==0.39.1
+    - mako==1.2.4
+    - markdown==3.4.1
+    - multicoretsne==0.1
+    - networkx==3.0
+    - numba==0.56.4
+    - oauthlib==3.2.2
+    - opencv-python==4.7.0.72
+    - opencv-python-headless==4.7.0.72
+    - openpyxl==3.0.10
+    - optuna==3.1.1
+    - orjson==3.8.10
+    - pathtools==0.1.2
+    - patsy==0.5.3
+    - plotly==5.14.1
+    - plotly-resampler==0.8.3.2
+    - pmdarima==2.0.3
+    - protobuf==3.20.3
+    - pyarrow==11.0.0
+    - pyasn1==0.4.8
+    - pyasn1-modules==0.2.8
+    - pycaret==3.0.0
+    - pyod==1.0.9
+    - pyqt5-sip==12.11.0
+    - python-graphviz==0.20.1
+    - python-louvain==0.16
+    - pytorch-gradcam==0.2.1
+    - pywavelets==1.4.1
+    - pyyaml==6.0
+    - qudida==0.0.4
+    - requests-oauthlib==1.3.1
+    - retrying==1.3.4
+    - rsa==4.9
+    - schemdraw==0.16
+    - scikit-image==0.20.0
+    - scikit-learn==1.2.2
+    - scikit-plot==0.3.7
+    - scipy==1.10.0
+    - sentry-sdk==1.14.0
+    - setproctitle==1.3.2
+    - shap==0.41.0
+    - sktime==0.17.2
+    - slicer==0.0.7
+    - smmap==5.0.0
+    - sqlalchemy==2.0.11
+    - statsmodels==0.13.5
+    - tbats==1.1.3
+    - tenacity==8.2.2
+    - tensorboard==2.11.2
+    - tensorboard-data-server==0.6.1
+    - tensorboard-plugin-wit==1.8.1
+    - threadpoolctl==3.1.0
+    - tifffile==2023.2.28
+    - torchinfo==1.7.2
+    - torchsummary==1.5.1
+    - torchsummaryx==1.3.0
+    - torchviz==0.0.2
+    - trace-updater==0.0.9.1
+    - tsnecuda==3.0.1+cu113
+    - ttach==0.0.3
+    - wandb==0.13.9
+    - werkzeug==2.3.0
+    - wrapt==1.15.0
+    - wurlitzer==3.0.3
+    - xgboost==1.7.5
+    - xxhash==3.2.0
+    - yellowbrick==1.5
+    - zipp==3.15.0
+prefix: /home/hb/anaconda3/envs/phos
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml b/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml
new file mode 100644
index 0000000..40dec6d
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml
@@ -0,0 +1,71 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.13.9
+    code_path: code/DeepPhospho.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.10.9
+    start_time: 1684138123.166899
+    t:
+      1:
+      - 1
+      - 5
+      - 53
+      - 55
+      2:
+      - 1
+      - 5
+      - 53
+      - 55
+      3:
+      - 2
+      - 16
+      - 17
+      - 23
+      - 37
+      4: 3.10.9
+      5: 0.13.9
+      8:
+      - 5
+      10:
+      - 3
+batch_size:
+  desc: null
+  value: 1024
+dataset:
+  desc: null
+  value: transfer_learning_1
+defalut_learning_rate:
+  desc: null
+  value: 0.001
+erls_patience:
+  desc: null
+  value: 25
+fold_num:
+  desc: null
+  value: 5
+gpu_num:
+  desc: null
+  value: '0'
+model:
+  desc: null
+  value: efficientnet-phospho-B-15
+n_epoch:
+  desc: null
+  value: 500
+pretrain_fold_num:
+  desc: null
+  value: '0'
+save_dir:
+  desc: null
+  value: /home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0
+scheduler_factor:
+  desc: null
+  value: 0.7
+scheduler_patience:
+  desc: null
+  value: 7
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/diff.patch b/wandb/run-20230515_170843-jr2qjj7w/files/diff.patch
new file mode 100644
index 0000000..bb6979b
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/diff.patch
@@ -0,0 +1,174 @@
+diff --git a/__init__.py b/__init__.py
+index 4210ebf..0959fed 100644
+--- a/__init__.py
++++ b/__init__.py
+@@ -1,4 +1,4 @@
+ __version__ = "0.7.1"
+-from .model import VALID_MODELS, EfficientNet
++from .kincnn import EfficientNet
+ from .utils import (BlockArgs, BlockDecoder, GlobalParams, efficientnet,
+                     get_model_params)
+diff --git a/kincnn.py b/kincnn.py
+index 7f518f0..9247128 100644
+--- a/kincnn.py
++++ b/kincnn.py
+@@ -185,7 +185,7 @@ class EfficientNet(nn.Module):
+         self._bn0 = nn.BatchNorm2d(
+             num_features=out_channels, momentum=bn_mom, eps=bn_eps
+         )
+-        image_size = calculate_output_image_size(image_size, stride=2)
++        image_size = calculate_output_image_size(image_size, stride=(2,1))
+ 
+         # Build blocks
+         self._blocks = nn.ModuleList([])
+@@ -228,8 +228,9 @@ class EfficientNet(nn.Module):
+ 
+         # Final linear layer
+         # self._avg_pooling = nn.AdaptiveAvgPool2d(1) <-- ÏõêÎ≥∏
++        self._avg_pooling = nn.AdaptiveAvgPool2d(1) 
+         self._dropout = nn.Dropout(self._global_params.dropout_rate)
+-        self._fc = nn.Linear(self.define_last_fcn(), self._global_params.num_classes)
++        self._fc = nn.Linear(out_channels, self._global_params.num_classes)
+ 
+         # set activation to memory efficient swish by default
+         self._swish = MemoryEfficientSwish()
+diff --git a/prepare_dataset.py b/prepare_dataset.py
+deleted file mode 100644
+index 5350a37..0000000
+--- a/prepare_dataset.py
++++ /dev/null
+@@ -1,134 +0,0 @@
+-import sys
+-
+-import numpy as np
+-import pandas as pd
+-import torch
+-import torch.utils.data as data_utils
+-from sklearn.model_selection import train_test_split
+-
+-
+-def prepare_dataset(dataset_mode=None):
+-    df = pd.read_pickle("test1.pkl")
+-    df = df.sample(frac=1, random_state=42).reset_index(drop=True)
+-    # df['stratify'] Ïª¨ÎüºÏùò unique valueÍ∞Ä 1Ïù∏ Í∞íÎì§ÏùÄ df_Î°ú Îî∞Î°ú ÎπºÍ≥†, ÎÇòÎ®∏ÏßÄÎäî dfÎ°ú
+-    # df['stratify'].value_counts() : df['stratify'] Ïª¨ÎüºÏùò unique valueÎì§ÏùÑ countÌï¥Ï£ºÎäî Ìï®Ïàò
+-    # [df['stratify'].value_counts()==1].index.tolist() : df['stratify'] Ïª¨ÎüºÏóêÏÑú unique valueÍ∞Ä 1Ïù∏ indexÎßå Î¶¨Ïä§Ìä∏Î°ú Ï∂îÏ∂ú
+-    df["stratify"] = df.apply(lambda x: x["kin_id"] + "-" + str(x["answer"]), axis=1)
+-    df_ = df[
+-        df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-    df = df[
+-        ~df["stratify"].isin(
+-            df["stratify"]
+-            .value_counts()[df["stratify"].value_counts() == 1]
+-            .index.tolist()
+-        )
+-    ]
+-
+-    # df['matrix']Îäî pandas.series typeÏù¥ÎØÄÎ°ú listÌòïÌÉúÎ°ú Î∞îÍøîÏ§ÄÎã§.
+-    matrix = np.array([x for x in df["matrix"]], dtype=np.float32)
+-
+-    # answerÏóê df['answer']Ïùò Í∞íÏùÑ listÌòïÌÉúÎ°ú ÎÑ£Ïñ¥Ï§ÄÎã§
+-    answer = list(df["answer"].astype("int"))
+-
+-    # ÏïÑÍπå Îî∞Î°ú Îó¥Ïñ¥ÎÜ®Îçò df_Ïóê ÎåÄÌï¥ÏÑúÎèÑ ÎòëÍ∞ôÏù¥ matrix_Î•º ÎßåÏñ¥Ï§ÄÎã§.
+-    matrix_ = np.array([x for x in df_["matrix"]], dtype=np.float32)
+-    answer_ = list(df_["answer"].astype("int"))
+-
+-    # matrix = np.concatenate([matrix, matrix_])
+-    # answer = np.concatenate([answer, answer_])
+-
+-    # dataset = data_utils.TensorDataset(torch.tensor(matrix), torch.tensor(answer))
+-    # return dataset
+-    # answer = np.array(answer, dtype=np.int64)
+-    # answer_ = np.array(answer_, dtype=np.int64)
+-    # print(matrix.shape, answer.shape)
+-    xTrain, xTest, yTrain, yTest = train_test_split(
+-        matrix, answer, test_size=0.2, random_state=42, stratify=df["stratify"]
+-    )
+-    try:
+-        xTrain = np.concatenate([xTrain, matrix_])
+-        yTrain = np.concatenate([yTrain, answer_])
+-    except:
+-        pass
+-    # print(type(yTrain[0]))
+-    print(yTrain)
+-    counts = np.bincount(yTrain)
+-    print(
+-        "Number of positive samples in training data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTrain)
+-        )
+-    )
+-    counts = np.bincount(yTest)
+-    print(
+-        "Number of positive samples in validation data: {} ({:.2f}% of total)".format(
+-            counts[1], 100 * float(counts[1]) / len(yTest)
+-        )
+-    )  # counts[1] : answer = 1 Ïù∏ Í∞í
+-    # globals()['counts'] = counts
+-    # BATCH_SIZE = batch_size
+-    train_set = data_utils.TensorDataset(torch.tensor(xTrain), torch.tensor(yTrain))
+-    valid_set = data_utils.TensorDataset(torch.tensor(xTest), torch.tensor(yTest))
+-
+-    return train_set, valid_set
+-
+-    # elif dataset_mode == 'pretrain_nonrepl':
+-    #     # df_nonreplicated = pd.read_pickle("/home/hb/python/phospho/data/atlas/ats_nonreplicated_with_psph.pkl")
+-    #     # # with open("/home/hb/python/phospho/data/atlas/matrix_0595.pickle", 'rb') as f:
+-    #     #     # matrix = pickle.load(f)
+-    #     # # with open("/home/hb/python/phospho/data/atlas/label_0595.pickle", 'rb') as f:
+-    #     #     # label = pickle.load(f)
+-    #     # matrix = df_nonreplicated['matrix'].to_list()
+-    #     # matrix = np.array([x for x in matrix], dtype=np.float32)
+-    #     # answer = df_nonreplicated['answer'].to_numpy().astype(int)
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_mtx_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/0213_ats0595_ans_nonrepl_with_psph.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # elif dataset_mode == 'pretrain_1090':
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/matrix1090.pkl", 'rb') as f:
+-    #         matrix = pickle.load(f)
+-    #     print('matrix loaded!')
+-    #     with open("/home/hb/python/phospho/data/atlas/1090/label1090.pkl", 'rb') as f:
+-    #         label = pickle.load(f)
+-    #     print('label loaded!')
+-    #     xTrain, xTest, yTrain, yTest = train_test_split(matrix,
+-    #                                                     label,
+-    #                                                     test_size=0.2,
+-    #                                                     random_state=42,)
+-
+-    #     train_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTrain), torch.tensor(yTrain))
+-    #     valid_set = data_utils.TensorDataset(
+-    #                             torch.tensor(xTest), torch.tensor(yTest))
+-    #     print('train_set loaded! :',len(train_set))
+-    #     print('valid_set loaded! :', len(valid_set))
+-
+-    # return train_set, valid_set
+-
+-
+-class AttrDict(dict):
+-    def __init__(self, *args, **kwargs):
+-        super(AttrDict, self).__init__(*args, **kwargs)
+-        self.__dict__ = self
+-
+-
+-config = AttrDict()
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/output.log b/wandb/run-20230515_170843-jr2qjj7w/files/output.log
new file mode 100644
index 0000000..a184060
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/output.log
@@ -0,0 +1,3775 @@
+{'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0'}
+FOLD 0
+--------------------------------
+lr:  0.001
+------------------------------------------------------------
+Epoch 1/500
+  0%|                                                   | 0/500 [00:00<?, ?it/s]
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+Validation loss decreased (inf --> 0.698212).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+	addcmul_(Number value, Tensor tensor1, Tensor tensor2)  | 0/14 [00:00<?, ?it/s]
+Consider using one of the following signatures instead:
+	addcmul_(Tensor tensor1, Tensor tensor2, *, Number value) (Triggered internally at /opt/conda/conda-bld/pytorch_1670525552843/work/torch/csrc/utils/python_arg_parser.cpp:1420.)
+  exp_avg_sq.mul_(beta2).addcmul_(1 - beta2, grad, grad)
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:02<00:00,  5.41it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 56.50it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.32it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.90it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+Validation loss decreased (0.698212 --> 0.698102).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 3/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.30it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 25.12it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.28it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 55.28it/s]
+  1%|‚ñé                                          | 4/500 [00:05<09:17,  1.12s/it]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 17.01it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 5/500
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 55.17it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.52it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.88it/s]
+  1%|‚ñå                                          | 6/500 [00:07<08:12,  1.00it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.46it/s]
+Validation loss decreased (0.698102 --> 0.697781).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 7/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 8/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.60it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.81it/s]
+  2%|‚ñã                                          | 8/500 [00:08<07:47,  1.05it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.71it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 10/500
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.39it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.20it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.85it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.31it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.01it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 12/500
+Validation loss decreased (0.697781 --> 0.697577).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.19it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.93it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.20it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 25.35it/s]
+  3%|‚ñà                                         | 13/500 [00:13<07:24,  1.10it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.94it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 14/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.05it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.17it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.86it/s]
+  3%|‚ñà‚ñé                                        | 15/500 [00:15<07:09,  1.13it/s]
+ 36%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                            | 5/14 [00:00<00:00, 14.75it/s]
+Validation loss decreased (0.697577 --> 0.696818).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 16/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 17/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.01it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.19it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.80it/s]
+  3%|‚ñà‚ñç                                        | 17/500 [00:16<07:09,  1.12it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.71it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 19/500
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.06it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.37it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.98it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.35it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.87it/s]
+  4%|‚ñà‚ñã                                        | 20/500 [00:19<07:04,  1.13it/s]
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 21/500
+EarlyStopping counter: 6 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.84it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.39it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.62it/s]
+  4%|‚ñà‚ñä                                        | 22/500 [00:21<07:05,  1.12it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.19it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 23/500
+EarlyStopping counter: 8 out of 25
+Epoch 00023: reducing learning rate of group 0 to 7.0000e-04.
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.33it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.35it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.26it/s]
+  5%|‚ñà‚ñà                                        | 24/500 [00:23<07:08,  1.11it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.68it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 25/500
+EarlyStopping counter: 10 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 26/500
+EarlyStopping counter: 11 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.68it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.46it/s]
+  5%|‚ñà‚ñà‚ñè                                       | 26/500 [00:24<07:08,  1.11it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.68it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 28/500
+EarlyStopping counter: 13 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.73it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.14it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.45it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.80it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 14 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 30/500
+EarlyStopping counter: 15 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.12it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.18it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.24it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.33it/s]
+  6%|‚ñà‚ñà‚ñå                                       | 31/500 [00:29<07:05,  1.10it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.19it/s]
+EarlyStopping counter: 16 out of 25
+Epoch 00031: reducing learning rate of group 0 to 4.9000e-04.
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 32/500
+EarlyStopping counter: 17 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.86it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.26it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.70it/s]
+  7%|‚ñà‚ñà‚ñä                                       | 33/500 [00:31<06:51,  1.14it/s]
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.91it/s]
+EarlyStopping counter: 18 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 34/500
+Validation loss decreased (0.696818 --> 0.693464).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 35/500
+Validation loss decreased (0.693464 --> 0.674460).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.08it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.19it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.72it/s]
+  7%|‚ñà‚ñà‚ñâ                                       | 35/500 [00:32<06:54,  1.12it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 16.12it/s]
+Validation loss decreased (0.674460 --> 0.659978).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 37/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.35it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.09it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.85it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.27it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.83it/s]
+ 25%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                 | 1/4 [00:00<00:00,  9.02it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 39/500
+Validation loss decreased (0.659978 --> 0.628244).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.28it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.48it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.11it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.82it/s]
+  8%|‚ñà‚ñà‚ñà‚ñé                                      | 40/500 [00:37<06:47,  1.13it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.10it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 41/500
+Validation loss decreased (0.628244 --> 0.576106).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.11it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.11it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.91it/s]
+  8%|‚ñà‚ñà‚ñà‚ñå                                      | 42/500 [00:39<06:51,  1.11it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.33it/s]
+Validation loss decreased (0.576106 --> 0.561716).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 43/500
+Validation loss decreased (0.561716 --> 0.544663).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 44/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.88it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.26it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.83it/s]
+  9%|‚ñà‚ñà‚ñà‚ñã                                      | 44/500 [00:41<06:54,  1.10it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.52it/s]
+Validation loss decreased (0.544663 --> 0.493417).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 46/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.68it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.31it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 25.20it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.31it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.83it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 48/500
+Validation loss decreased (0.493417 --> 0.463239).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.31it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.72it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.24it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.82it/s]
+ 10%|‚ñà‚ñà‚ñà‚ñà                                      | 49/500 [00:45<06:47,  1.11it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.85it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 50/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.19it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.30it/s]
+ 10%|‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 51/500 [00:47<06:34,  1.14it/s]
+ 36%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                            | 5/14 [00:00<00:00, 14.80it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.19it/s]
+Validation loss decreased (0.463239 --> 0.457806).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 52/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 53/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.41it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.85it/s]
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñç                                     | 53/500 [00:49<06:33,  1.14it/s]
+ 64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé               | 9/14 [00:00<00:00, 16.63it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.41it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 55/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.43it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.39it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.59it/s]
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñã                                     | 56/500 [00:51<06:29,  1.14it/s]
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.43it/s]
+Validation loss decreased (0.457806 --> 0.453581).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 57/500
+Validation loss decreased (0.453581 --> 0.451635).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.19it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.63it/s]
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñä                                     | 58/500 [00:53<06:33,  1.12it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.08it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.19it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 59/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.19it/s]
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 60/500 [00:55<06:34,  1.12it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.40it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.19it/s]
+Validation loss decreased (0.451635 --> 0.443401).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 61/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 62/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                                    | 62/500 [00:57<06:37,  1.10it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.74it/s]
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                                    | 62/500 [00:57<06:37,  1.10it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 64/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.76it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.76it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 66/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                    | 67/500 [01:01<06:32,  1.10it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.04it/s]
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                    | 67/500 [01:01<06:32,  1.10it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 68/500
+EarlyStopping counter: 8 out of 25
+Epoch 00068: reducing learning rate of group 0 to 3.4300e-04.
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 36%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                            | 5/14 [00:00<00:00, 14.48it/s]
+ 36%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                            | 5/14 [00:00<00:00, 14.48it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 70/500
+EarlyStopping counter: 10 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 71/500
+Validation loss decreased (0.443401 --> 0.441814).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.92it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.92it/s]
+Validation loss decreased (0.441814 --> 0.426419).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 73/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.12it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.12it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 75/500
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.55it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.55it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 77/500
+EarlyStopping counter: 5 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.40it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.40it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 79/500
+EarlyStopping counter: 7 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.86it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.86it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00080: reducing learning rate of group 0 to 2.4010e-04.
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 81/500
+EarlyStopping counter: 9 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 82/500
+EarlyStopping counter: 10 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 16%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                                   | 82/500 [01:15<06:21,  1.10it/s]
+ 16%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                                   | 82/500 [01:15<06:21,  1.10it/s]
+EarlyStopping counter: 11 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 84/500
+EarlyStopping counter: 12 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.88it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.88it/s]
+EarlyStopping counter: 13 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 86/500
+EarlyStopping counter: 14 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 17%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                  | 87/500 [01:19<06:14,  1.10it/s]
+ 17%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                  | 87/500 [01:19<06:14,  1.10it/s]
+EarlyStopping counter: 15 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 88/500
+EarlyStopping counter: 16 out of 25
+Epoch 00088: reducing learning rate of group 0 to 1.6807e-04.
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 13.85it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 13.85it/s]
+EarlyStopping counter: 17 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 90/500
+EarlyStopping counter: 18 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 91/500
+EarlyStopping counter: 19 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.95it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.95it/s]
+EarlyStopping counter: 20 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 93/500
+EarlyStopping counter: 21 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+EarlyStopping counter: 22 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 95/500
+EarlyStopping counter: 23 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.98it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.98it/s]
+Validation loss decreased (0.426419 --> 0.425819).  Saving model ...
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 97/500
+Validation loss decreased (0.425819 --> 0.423699).  Saving model ...
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+Validation loss decreased (0.423699 --> 0.421138).  Saving model ...
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 99/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.14it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.14it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 101/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 102/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.40it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.40it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 104/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.22it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.22it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 106/500
+EarlyStopping counter: 8 out of 25
+Epoch 00106: reducing learning rate of group 0 to 1.1765e-04.
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 21%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                | 107/500 [01:37<05:46,  1.13it/s]
+ 21%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                | 107/500 [01:37<05:46,  1.13it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 108/500
+EarlyStopping counter: 10 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.61it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.61it/s]
+EarlyStopping counter: 11 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 110/500
+EarlyStopping counter: 12 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 111/500
+EarlyStopping counter: 13 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 14 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 113/500
+EarlyStopping counter: 15 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 15.97it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 15.97it/s]
+EarlyStopping counter: 16 out of 25
+Epoch 00114: reducing learning rate of group 0 to 8.2354e-05.
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 115/500
+EarlyStopping counter: 17 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.23it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.23it/s]
+EarlyStopping counter: 18 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 117/500
+Validation loss decreased (0.421138 --> 0.419193).  Saving model ...
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.45it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.45it/s]
+EarlyStopping counter: 1 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 119/500
+EarlyStopping counter: 2 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 120/500
+EarlyStopping counter: 3 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.16it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.16it/s]
+EarlyStopping counter: 4 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 122/500
+EarlyStopping counter: 5 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.20it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.20it/s]
+EarlyStopping counter: 6 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 124/500
+Validation loss decreased (0.419193 --> 0.418178).  Saving model ...
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.14it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.14it/s]
+EarlyStopping counter: 1 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 126/500
+EarlyStopping counter: 2 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 25%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                              | 127/500 [01:55<05:35,  1.11it/s]
+ 25%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                              | 127/500 [01:55<05:35,  1.11it/s]
+EarlyStopping counter: 3 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 128/500
+EarlyStopping counter: 4 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.67it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.67it/s]
+EarlyStopping counter: 5 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 130/500
+EarlyStopping counter: 6 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 131/500
+EarlyStopping counter: 7 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00132: reducing learning rate of group 0 to 5.7648e-05.
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 133/500
+EarlyStopping counter: 9 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 15.95it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 15.95it/s]
+EarlyStopping counter: 10 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 135/500
+EarlyStopping counter: 11 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.81it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.81it/s]
+EarlyStopping counter: 12 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 137/500
+EarlyStopping counter: 13 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.09it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.09it/s]
+EarlyStopping counter: 14 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 139/500
+EarlyStopping counter: 15 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 140/500
+EarlyStopping counter: 16 out of 25
+Epoch 00140: reducing learning rate of group 0 to 4.0354e-05.
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.70it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.70it/s]
+EarlyStopping counter: 17 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 142/500
+EarlyStopping counter: 18 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.20it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.20it/s]
+EarlyStopping counter: 19 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 144/500
+EarlyStopping counter: 20 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.89it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.89it/s]
+EarlyStopping counter: 21 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 146/500
+EarlyStopping counter: 22 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                             | 147/500 [02:13<05:12,  1.13it/s]
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                             | 147/500 [02:13<05:12,  1.13it/s]
+EarlyStopping counter: 23 out of 25
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 148/500
+EarlyStopping counter: 24 out of 25
+Epoch 00148: reducing learning rate of group 0 to 2.8248e-05.
+lr:  2.8247524899999994e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 149/500
+EarlyStopping counter: 25 out of 25
+Early stopping... fold:0 epoch:148 loss:0.4325941503047943
+FOLD 1
+--------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.21it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.21it/s]
+------------------------------------------------------------
+Epoch 1/500
+Validation loss decreased (inf --> 0.706766).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 2/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.11it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.11it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 4/500
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 5/500
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.11it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 6/500
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 8/500
+EarlyStopping counter: 7 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 9/500
+EarlyStopping counter: 8 out of 25
+Epoch 00009: reducing learning rate of group 0 to 7.0000e-04.
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.46it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.46it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 11/500
+EarlyStopping counter: 10 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.10it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.10it/s]
+EarlyStopping counter: 11 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 13/500
+EarlyStopping counter: 12 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.25it/s]
+EarlyStopping counter: 13 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 15/500
+EarlyStopping counter: 14 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.08it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.08it/s]
+EarlyStopping counter: 15 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 17/500
+EarlyStopping counter: 16 out of 25
+Epoch 00017: reducing learning rate of group 0 to 4.9000e-04.
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.15it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.15it/s]
+EarlyStopping counter: 17 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 19/500
+EarlyStopping counter: 18 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 20/500
+EarlyStopping counter: 19 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  4%|‚ñà‚ñã                                        | 20/500 [00:17<07:16,  1.10it/s]
+  4%|‚ñà‚ñã                                        | 20/500 [00:17<07:16,  1.10it/s]
+EarlyStopping counter: 20 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 22/500
+Validation loss decreased (0.706766 --> 0.702444).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.70it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.70it/s]
+Validation loss decreased (0.702444 --> 0.699658).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 24/500
+Validation loss decreased (0.699658 --> 0.693502).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+Validation loss decreased (0.693502 --> 0.688055).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 26/500
+Validation loss decreased (0.688055 --> 0.680490).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  7%|‚ñà‚ñà‚ñà‚ñè                                        | 1/14 [00:00<00:01,  6.54it/s]
+  7%|‚ñà‚ñà‚ñà‚ñè                                        | 1/14 [00:00<00:01,  6.54it/s]
+Validation loss decreased (0.680490 --> 0.669723).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 28/500
+Validation loss decreased (0.669723 --> 0.663003).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 42.21it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 42.21it/s]
+Validation loss decreased (0.663003 --> 0.656940).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 30/500
+Validation loss decreased (0.656940 --> 0.654737).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 31/500
+Validation loss decreased (0.654737 --> 0.643714).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.08it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.08it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 33/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.29it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.29it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 35/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.07it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.07it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 37/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.97it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.97it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 39/500
+Validation loss decreased (0.643714 --> 0.635008).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  8%|‚ñà‚ñà‚ñà‚ñé                                      | 40/500 [00:36<07:04,  1.08it/s]
+  8%|‚ñà‚ñà‚ñà‚ñé                                      | 40/500 [00:36<07:04,  1.08it/s]
+Validation loss decreased (0.635008 --> 0.607590).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 41/500
+Validation loss decreased (0.607590 --> 0.598044).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 42/500
+Validation loss decreased (0.598044 --> 0.563616).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.60it/s]
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.60it/s]
+Validation loss decreased (0.563616 --> 0.555405).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 44/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.56it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.56it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 46/500
+Validation loss decreased (0.555405 --> 0.527819).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+  0%|                                                    | 0/14 [00:00<?, ?it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 48/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.64it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.64it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 50/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.01it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.01it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 52/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 53/500
+Validation loss decreased (0.527819 --> 0.518115).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.65it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.65it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 55/500
+Validation loss decreased (0.518115 --> 0.498154).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñå                                     | 55/500 [00:49<06:40,  1.11it/s]
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñå                                     | 55/500 [00:49<06:40,  1.11it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 57/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.12it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.12it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 59/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 60/500 [00:54<06:35,  1.11it/s]
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 60/500 [00:54<06:35,  1.11it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 61/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 62/500
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.80it/s]
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.80it/s]
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 63/500
+EarlyStopping counter: 8 out of 25
+Epoch 00063: reducing learning rate of group 0 to 3.4300e-04.
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 64/500
+Validation loss decreased (0.498154 --> 0.473998).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.16it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.16it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 66/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.33it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.33it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 68/500
+Validation loss decreased (0.473998 --> 0.460617).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.02it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.02it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 70/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.42it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.42it/s]
+Validation loss decreased (0.460617 --> 0.457724).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 72/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 73/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.27it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.27it/s]
+Validation loss decreased (0.457724 --> 0.451819).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 75/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                   | 75/500 [01:07<06:21,  1.12it/s]
+ 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                   | 75/500 [01:07<06:21,  1.12it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 77/500
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.55it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.55it/s]
+Validation loss decreased (0.451819 --> 0.449884).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 79/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 16%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                   | 80/500 [01:12<06:17,  1.11it/s]
+ 16%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                   | 80/500 [01:12<06:17,  1.11it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 81/500
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                  | 8/14 [00:00<00:00, 17.59it/s]
+ 57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                  | 8/14 [00:00<00:00, 17.59it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 83/500
+EarlyStopping counter: 5 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 84/500
+EarlyStopping counter: 6 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.31it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.31it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 86/500
+EarlyStopping counter: 8 out of 25
+Epoch 00086: reducing learning rate of group 0 to 2.4010e-04.
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.45it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.45it/s]
+Validation loss decreased (0.449884 --> 0.443496).  Saving model ...
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 88/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.58it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.58it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 90/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.43it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.43it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 92/500
+EarlyStopping counter: 5 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 93/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.04it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.04it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 95/500
+EarlyStopping counter: 8 out of 25
+Epoch 00095: reducing learning rate of group 0 to 1.6807e-04.
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.29it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.29it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 97/500
+EarlyStopping counter: 10 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.02it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.02it/s]
+EarlyStopping counter: 11 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 99/500
+Validation loss decreased (0.443496 --> 0.442802).  Saving model ...
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                                | 100/500 [01:30<05:57,  1.12it/s]
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                                | 100/500 [01:30<05:57,  1.12it/s]
+Validation loss decreased (0.442802 --> 0.440491).  Saving model ...
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 101/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 102/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.83it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.83it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 104/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 21%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                | 105/500 [01:34<05:54,  1.12it/s]
+ 21%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                | 105/500 [01:34<05:54,  1.12it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 106/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.12it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.12it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 108/500
+EarlyStopping counter: 8 out of 25
+Epoch 00108: reducing learning rate of group 0 to 1.1765e-04.
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.42it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.42it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 110/500
+Validation loss decreased (0.440491 --> 0.437272).  Saving model ...
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 111/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.23it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.23it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 113/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.24it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.24it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 115/500
+EarlyStopping counter: 5 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 117/500
+EarlyStopping counter: 7 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.06it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.06it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00118: reducing learning rate of group 0 to 8.2354e-05.
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 119/500
+EarlyStopping counter: 9 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 120/500
+EarlyStopping counter: 10 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 24%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                               | 120/500 [01:48<05:41,  1.11it/s]
+ 24%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                               | 120/500 [01:48<05:41,  1.11it/s]
+EarlyStopping counter: 11 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 122/500
+EarlyStopping counter: 12 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.74it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.74it/s]
+EarlyStopping counter: 13 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 124/500
+EarlyStopping counter: 14 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 25%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                              | 125/500 [01:52<05:38,  1.11it/s]
+ 25%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                              | 125/500 [01:52<05:38,  1.11it/s]
+EarlyStopping counter: 15 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 126/500
+EarlyStopping counter: 16 out of 25
+Epoch 00126: reducing learning rate of group 0 to 5.7648e-05.
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.94it/s]
+ 50%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      | 7/14 [00:00<00:00, 15.94it/s]
+EarlyStopping counter: 17 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 128/500
+EarlyStopping counter: 18 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 129/500
+EarlyStopping counter: 19 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 20 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 131/500
+EarlyStopping counter: 21 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.12it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.12it/s]
+EarlyStopping counter: 22 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 133/500
+EarlyStopping counter: 23 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.60it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.60it/s]
+EarlyStopping counter: 24 out of 25
+Epoch 00134: reducing learning rate of group 0 to 4.0354e-05.
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 135/500
+EarlyStopping counter: 25 out of 25
+Early stopping... fold:1 epoch:134 loss:0.45298583060503006
+FOLD 2
+--------------------------------
+lr:  0.001
+------------------------------------------------------------
+ 27%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                              | 134/500 [02:01<05:32,  1.10it/s]
+ 27%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                              | 134/500 [02:01<05:32,  1.10it/s]
+Validation loss decreased (inf --> 0.711172).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 2/500
+Validation loss decreased (0.711172 --> 0.708936).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.21it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.21it/s]
+Validation loss decreased (0.708936 --> 0.707488).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 4/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 5/500
+Validation loss decreased (0.707488 --> 0.705992).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.30it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.30it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 7/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  1%|‚ñå                                          | 7/500 [00:06<07:18,  1.12it/s]
+  1%|‚ñå                                          | 7/500 [00:06<07:18,  1.12it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 9/500
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.00it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.00it/s]
+Validation loss decreased (0.705992 --> 0.705489).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 11/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  2%|‚ñà                                         | 12/500 [00:10<07:14,  1.12it/s]
+  2%|‚ñà                                         | 12/500 [00:10<07:14,  1.12it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 13/500
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 14/500
+Validation loss decreased (0.705489 --> 0.703537).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.64it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.64it/s]
+Validation loss decreased (0.703537 --> 0.702684).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 16/500
+Validation loss decreased (0.702684 --> 0.700192).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.06it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.06it/s]
+Validation loss decreased (0.700192 --> 0.700148).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 18/500
+Validation loss decreased (0.700148 --> 0.697544).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.37it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.37it/s]
+Validation loss decreased (0.697544 --> 0.696711).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 20/500
+Validation loss decreased (0.696711 --> 0.694571).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.47it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.47it/s]
+Validation loss decreased (0.694571 --> 0.693487).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 22/500
+Validation loss decreased (0.693487 --> 0.692865).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.25it/s]
+Validation loss decreased (0.692865 --> 0.691860).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 24/500
+Validation loss decreased (0.691860 --> 0.691076).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 25/500
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.34it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.34it/s]
+Validation loss decreased (0.691076 --> 0.689883).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 27/500
+Validation loss decreased (0.689883 --> 0.689779).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  5%|‚ñà‚ñà‚ñé                                       | 27/500 [00:24<07:09,  1.10it/s]
+  5%|‚ñà‚ñà‚ñé                                       | 27/500 [00:24<07:09,  1.10it/s]
+Validation loss decreased (0.689779 --> 0.687164).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 29/500
+Validation loss decreased (0.687164 --> 0.681023).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.72it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.72it/s]
+Validation loss decreased (0.681023 --> 0.675670).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 31/500
+Validation loss decreased (0.675670 --> 0.657081).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  6%|‚ñà‚ñà‚ñã                                       | 32/500 [00:28<07:11,  1.08it/s]
+  6%|‚ñà‚ñà‚ñã                                       | 32/500 [00:28<07:11,  1.08it/s]
+Validation loss decreased (0.657081 --> 0.619605).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 33/500
+Validation loss decreased (0.619605 --> 0.603230).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 15.86it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 15.86it/s]
+Validation loss decreased (0.603230 --> 0.577517).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 35/500
+Validation loss decreased (0.577517 --> 0.564859).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 36/500
+Validation loss decreased (0.564859 --> 0.553976).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.70it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.70it/s]
+Validation loss decreased (0.553976 --> 0.545990).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 38/500
+Validation loss decreased (0.545990 --> 0.542285).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.21it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.21it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 40/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.55it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.55it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 42/500
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.06it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.06it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 44/500
+EarlyStopping counter: 6 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.32it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.32it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 46/500
+EarlyStopping counter: 8 out of 25
+Epoch 00046: reducing learning rate of group 0 to 7.0000e-04.
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 47/500
+EarlyStopping counter: 9 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  9%|‚ñà‚ñà‚ñà‚ñâ                                      | 47/500 [00:42<06:47,  1.11it/s]
+  9%|‚ñà‚ñà‚ñà‚ñâ                                      | 47/500 [00:42<06:47,  1.11it/s]
+EarlyStopping counter: 10 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 49/500
+EarlyStopping counter: 11 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.72it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.72it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 51/500
+EarlyStopping counter: 13 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+  0%|                                                     | 0/4 [00:00<?, ?it/s]
+EarlyStopping counter: 14 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 53/500
+EarlyStopping counter: 15 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.08it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 2/14 [00:00<00:00, 16.08it/s]
+EarlyStopping counter: 16 out of 25
+Epoch 00054: reducing learning rate of group 0 to 4.9000e-04.
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 55/500
+EarlyStopping counter: 17 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 56/500
+EarlyStopping counter: 18 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.39it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.39it/s]
+Validation loss decreased (0.542285 --> 0.542250).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 58/500
+Validation loss decreased (0.542250 --> 0.494827).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.41it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.41it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 60/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.53it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.53it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 62/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.41it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.41it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 64/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 65/500
+EarlyStopping counter: 7 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.87it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.87it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00066: reducing learning rate of group 0 to 3.4300e-04.
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 67/500
+Validation loss decreased (0.494827 --> 0.488604).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                    | 67/500 [01:00<06:29,  1.11it/s]
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                    | 67/500 [01:00<06:29,  1.11it/s]
+Validation loss decreased (0.488604 --> 0.477719).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 69/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.87it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.87it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 71/500
+Validation loss decreased (0.477719 --> 0.466559).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                    | 72/500 [01:05<06:30,  1.10it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                    | 72/500 [01:05<06:30,  1.10it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 73/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 4/14 [00:00<00:00, 16.85it/s]
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 4/14 [00:00<00:00, 16.85it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 75/500
+Validation loss decreased (0.466559 --> 0.464520).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 76/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.40it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.40it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 78/500
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.35it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.35it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 80/500
+Validation loss decreased (0.464520 --> 0.460045).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.62it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.62it/s]
+Validation loss decreased (0.460045 --> 0.458612).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 82/500
+Validation loss decreased (0.458612 --> 0.456694).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.14it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.14it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 84/500
+Validation loss decreased (0.456694 --> 0.455717).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 85/500
+Validation loss decreased (0.455717 --> 0.450926).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.39it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.39it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 87/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 17%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                  | 87/500 [01:18<06:18,  1.09it/s]
+ 17%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                  | 87/500 [01:18<06:18,  1.09it/s]
+Validation loss decreased (0.450926 --> 0.439501).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 89/500
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 57.11it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 57.11it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 91/500
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                  | 92/500 [01:23<06:01,  1.13it/s]
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                  | 92/500 [01:23<06:01,  1.13it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 93/500
+EarlyStopping counter: 5 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 94/500
+EarlyStopping counter: 6 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                  | 8/14 [00:00<00:00, 17.85it/s]
+ 57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                  | 8/14 [00:00<00:00, 17.85it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 96/500
+EarlyStopping counter: 8 out of 25
+Epoch 00096: reducing learning rate of group 0 to 2.4010e-04.
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.90it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.90it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 98/500
+EarlyStopping counter: 10 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.51it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.51it/s]
+EarlyStopping counter: 11 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 100/500
+EarlyStopping counter: 12 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.87it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.87it/s]
+Validation loss decreased (0.439501 --> 0.435562).  Saving model ...
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 102/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.48it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.48it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 104/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 105/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 22.65it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 22.65it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 107/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.40it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.40it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 109/500
+EarlyStopping counter: 8 out of 25
+Epoch 00109: reducing learning rate of group 0 to 1.6807e-04.
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.73it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.73it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 111/500
+EarlyStopping counter: 10 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 112/500
+EarlyStopping counter: 11 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                               | 112/500 [01:40<05:39,  1.14it/s]
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                               | 112/500 [01:40<05:39,  1.14it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 114/500
+EarlyStopping counter: 13 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.92it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.92it/s]
+EarlyStopping counter: 14 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 116/500
+EarlyStopping counter: 15 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 23%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 117/500 [01:45<05:34,  1.14it/s]
+ 23%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 117/500 [01:45<05:34,  1.14it/s]
+EarlyStopping counter: 16 out of 25
+Epoch 00117: reducing learning rate of group 0 to 1.1765e-04.
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 118/500
+EarlyStopping counter: 17 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 4/14 [00:00<00:00, 16.95it/s]
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 4/14 [00:00<00:00, 16.95it/s]
+EarlyStopping counter: 18 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 120/500
+EarlyStopping counter: 19 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 121/500
+EarlyStopping counter: 20 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.25it/s]
+EarlyStopping counter: 21 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 123/500
+EarlyStopping counter: 22 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.28it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.28it/s]
+Validation loss decreased (0.435562 --> 0.434215).  Saving model ...
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 125/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.60it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 24.60it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 127/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.40it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.40it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 129/500
+EarlyStopping counter: 5 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.62it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.62it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 131/500
+EarlyStopping counter: 7 out of 25
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 132/500
+EarlyStopping counter: 8 out of 25
+Epoch 00132: reducing learning rate of group 0 to 8.2354e-05.
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 26%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                              | 132/500 [01:58<05:29,  1.12it/s]
+ 26%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                              | 132/500 [01:58<05:29,  1.12it/s]
+EarlyStopping counter: 9 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 134/500
+EarlyStopping counter: 10 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.87it/s]
+ 86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 12/14 [00:00<00:00, 17.87it/s]
+EarlyStopping counter: 11 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 136/500
+EarlyStopping counter: 12 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 27%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                             | 137/500 [02:03<05:23,  1.12it/s]
+ 27%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                             | 137/500 [02:03<05:23,  1.12it/s]
+EarlyStopping counter: 13 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 138/500
+EarlyStopping counter: 14 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.31it/s]
+ 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                         | 6/14 [00:00<00:00, 17.31it/s]
+EarlyStopping counter: 15 out of 25
+lr:  8.235429999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 140/500
+EarlyStopping counter: 16 out of 25
+Epoch 00140: reducing learning rate of group 0 to 5.7648e-05.
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 141/500
+EarlyStopping counter: 17 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.97it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.97it/s]
+EarlyStopping counter: 18 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 143/500
+EarlyStopping counter: 19 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.24it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.24it/s]
+EarlyStopping counter: 20 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 145/500
+EarlyStopping counter: 21 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.73it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.73it/s]
+EarlyStopping counter: 22 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 147/500
+EarlyStopping counter: 23 out of 25
+lr:  5.764800999999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.52it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.52it/s]
+EarlyStopping counter: 24 out of 25
+Epoch 00148: reducing learning rate of group 0 to 4.0354e-05.
+lr:  4.035360699999999e-05
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 149/500
+EarlyStopping counter: 25 out of 25
+Early stopping... fold:2 epoch:148 loss:0.4582105800509453
+FOLD 3
+--------------------------------
+lr:  0.001
+------------------------------------------------------------
+Epoch 1/500
+Validation loss decreased (inf --> 0.701510).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.24it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.24it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 3/500
+Validation loss decreased (0.701510 --> 0.699720).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.93it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.93it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 5/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  1%|‚ñç                                          | 5/500 [00:04<07:23,  1.12it/s]
+  1%|‚ñç                                          | 5/500 [00:04<07:23,  1.12it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 7/500
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.87it/s]
+ 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã            | 10/14 [00:00<00:00, 17.87it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 9/500
+EarlyStopping counter: 6 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  2%|‚ñä                                         | 10/500 [00:08<07:13,  1.13it/s]
+  2%|‚ñä                                         | 10/500 [00:08<07:13,  1.13it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 11/500
+EarlyStopping counter: 8 out of 25
+Epoch 00011: reducing learning rate of group 0 to 7.0000e-04.
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 12/500
+EarlyStopping counter: 9 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 4/14 [00:00<00:00, 16.95it/s]
+ 29%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 4/14 [00:00<00:00, 16.95it/s]
+Validation loss decreased (0.699720 --> 0.699514).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 14/500
+Validation loss decreased (0.699514 --> 0.698830).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.07it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.07it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 16/500
+EarlyStopping counter: 2 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.23it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.23it/s]
+Validation loss decreased (0.698830 --> 0.697953).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 18/500
+Validation loss decreased (0.697953 --> 0.697471).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.36it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.36it/s]
+Validation loss decreased (0.697471 --> 0.696872).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 20/500
+Validation loss decreased (0.696872 --> 0.695481).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 21/500
+Validation loss decreased (0.695481 --> 0.693145).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.21it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.21it/s]
+Validation loss decreased (0.693145 --> 0.690930).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 23/500
+Validation loss decreased (0.690930 --> 0.689211).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.46it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 53.46it/s]
+Validation loss decreased (0.689211 --> 0.684283).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 25/500
+Validation loss decreased (0.684283 --> 0.682874).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  5%|‚ñà‚ñà                                        | 25/500 [00:22<07:04,  1.12it/s]
+  5%|‚ñà‚ñà                                        | 25/500 [00:22<07:04,  1.12it/s]
+Validation loss decreased (0.682874 --> 0.680447).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 27/500
+Validation loss decreased (0.680447 --> 0.672594).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.12it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.12it/s]
+Validation loss decreased (0.672594 --> 0.672183).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 29/500
+Validation loss decreased (0.672183 --> 0.664247).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 30/500
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.16it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.16it/s]
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 31/500
+Validation loss decreased (0.662086 --> 0.649791).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 32/500
+Validation loss decreased (0.649791 --> 0.634837).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  6%|‚ñà‚ñà‚ñã                                       | 32/500 [00:28<07:11,  1.08it/s]
+  6%|‚ñà‚ñà‚ñã                                       | 32/500 [00:28<07:11,  1.08it/s]
+Validation loss decreased (0.634837 --> 0.629396).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 34/500
+Validation loss decreased (0.629396 --> 0.613262).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  7%|‚ñà‚ñà‚ñä                                       | 34/500 [00:30<06:58,  1.11it/s]
+  7%|‚ñà‚ñà‚ñä                                       | 34/500 [00:30<06:58,  1.11it/s]
+Validation loss decreased (0.613262 --> 0.586528).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 36/500
+Validation loss decreased (0.586528 --> 0.582406).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  7%|‚ñà‚ñà‚ñà                                       | 36/500 [00:32<07:00,  1.10it/s]
+  7%|‚ñà‚ñà‚ñà                                       | 36/500 [00:32<07:00,  1.10it/s]
+Validation loss decreased (0.582406 --> 0.574255).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 38/500
+Validation loss decreased (0.574255 --> 0.551668).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.27it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.27it/s]
+Validation loss decreased (0.551668 --> 0.544012).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 40/500
+Validation loss decreased (0.544012 --> 0.532624).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 41/500
+Validation loss decreased (0.532624 --> 0.528719).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.14it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 54.14it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 43/500
+Validation loss decreased (0.528719 --> 0.518116).  Saving model ...
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  9%|‚ñà‚ñà‚ñà‚ñå                                      | 43/500 [00:38<06:47,  1.12it/s]
+  9%|‚ñà‚ñà‚ñà‚ñå                                      | 43/500 [00:38<06:47,  1.12it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 45/500
+EarlyStopping counter: 2 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  9%|‚ñà‚ñà‚ñà‚ñä                                      | 45/500 [00:40<06:47,  1.12it/s]
+  9%|‚ñà‚ñà‚ñà‚ñä                                      | 45/500 [00:40<06:47,  1.12it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 47/500
+EarlyStopping counter: 4 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.60it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.60it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 49/500
+EarlyStopping counter: 6 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 50/500
+EarlyStopping counter: 7 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.68it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.68it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00051: reducing learning rate of group 0 to 4.9000e-04.
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 52/500
+EarlyStopping counter: 9 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 10%|‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 52/500 [00:46<06:31,  1.14it/s]
+ 10%|‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 52/500 [00:46<06:31,  1.14it/s]
+EarlyStopping counter: 10 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 54/500
+EarlyStopping counter: 11 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñå                                     | 54/500 [00:48<06:31,  1.14it/s]
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñå                                     | 54/500 [00:48<06:31,  1.14it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 56/500
+EarlyStopping counter: 13 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.45it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.45it/s]
+Validation loss decreased (0.518116 --> 0.503569).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 58/500
+Validation loss decreased (0.503569 --> 0.502300).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 59/500
+Validation loss decreased (0.502300 --> 0.492111).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.73it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.73it/s]
+Validation loss decreased (0.492111 --> 0.482468).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 61/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 61/500 [00:54<06:40,  1.10it/s]
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 61/500 [00:54<06:40,  1.10it/s]
+Validation loss decreased (0.482468 --> 0.479845).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 63/500
+Validation loss decreased (0.479845 --> 0.478079).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                    | 63/500 [00:56<06:39,  1.09it/s]
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                    | 63/500 [00:56<06:39,  1.09it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 65/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.53it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.53it/s]
+Validation loss decreased (0.478079 --> 0.471925).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 67/500
+Validation loss decreased (0.471925 --> 0.465317).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.89it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.89it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 69/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 70/500
+Validation loss decreased (0.465317 --> 0.459798).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                                    | 70/500 [01:02<06:30,  1.10it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                                    | 70/500 [01:02<06:30,  1.10it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 72/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                    | 72/500 [01:04<06:16,  1.14it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                    | 72/500 [01:04<06:16,  1.14it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 74/500
+Validation loss decreased (0.459798 --> 0.455723).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                                   | 74/500 [01:06<06:20,  1.12it/s]
+ 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                                   | 74/500 [01:06<06:20,  1.12it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 76/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.33it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.33it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 78/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 79/500
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.87it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.87it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 81/500
+Validation loss decreased (0.455723 --> 0.447976).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 16%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                   | 81/500 [01:12<06:14,  1.12it/s]
+ 16%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                   | 81/500 [01:12<06:14,  1.12it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 83/500
+Validation loss decreased (0.447976 --> 0.445933).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.24it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.24it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 85/500
+Validation loss decreased (0.445933 --> 0.445238).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 43.15it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 43.15it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 87/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                                  | 88/500 [01:19<06:17,  1.09it/s]
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                                  | 88/500 [01:19<06:17,  1.09it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 89/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 90/500
+Validation loss decreased (0.445238 --> 0.438785).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                  | 90/500 [01:20<06:05,  1.12it/s]
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                  | 90/500 [01:20<06:05,  1.12it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 92/500
+Validation loss decreased (0.438785 --> 0.437851).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                  | 92/500 [01:22<06:05,  1.11it/s]
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                  | 92/500 [01:22<06:05,  1.11it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 94/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.34it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.34it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 96/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.86it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 50.86it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 98/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 99/500
+EarlyStopping counter: 7 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                 | 99/500 [01:28<06:03,  1.10it/s]
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                 | 99/500 [01:28<06:03,  1.10it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00100: reducing learning rate of group 0 to 3.4300e-04.
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 101/500
+EarlyStopping counter: 9 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                | 101/500 [01:30<06:02,  1.10it/s]
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                | 101/500 [01:30<06:02,  1.10it/s]
+EarlyStopping counter: 10 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 103/500
+EarlyStopping counter: 11 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.38it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.38it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 105/500
+EarlyStopping counter: 13 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.33it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 23.33it/s]
+EarlyStopping counter: 14 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 107/500
+EarlyStopping counter: 15 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 108/500
+EarlyStopping counter: 16 out of 25
+Epoch 00108: reducing learning rate of group 0 to 2.4010e-04.
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                | 108/500 [01:36<05:49,  1.12it/s]
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                | 108/500 [01:36<05:49,  1.12it/s]
+EarlyStopping counter: 17 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 110/500
+EarlyStopping counter: 18 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                | 110/500 [01:38<05:50,  1.11it/s]
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                | 110/500 [01:38<05:50,  1.11it/s]
+EarlyStopping counter: 19 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 112/500
+EarlyStopping counter: 20 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.36it/s]
+EarlyStopping counter: 21 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 114/500
+EarlyStopping counter: 22 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.81it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 52.81it/s]
+EarlyStopping counter: 23 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 116/500
+EarlyStopping counter: 24 out of 25
+Epoch 00116: reducing learning rate of group 0 to 1.6807e-04.
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 117/500
+EarlyStopping counter: 25 out of 25
+ 23%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 116/500 [01:45<05:47,  1.10it/s]
+ 23%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                               | 116/500 [01:45<05:47,  1.10it/s]
+FOLD 4
+--------------------------------
+lr:  0.001
+------------------------------------------------------------
+Epoch 1/500
+Validation loss decreased (inf --> 0.701266).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 2/500
+Validation loss decreased (0.701266 --> 0.699363).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  0%|‚ñè                                          | 2/500 [00:01<07:46,  1.07it/s]
+  0%|‚ñè                                          | 2/500 [00:01<07:46,  1.07it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 4/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  1%|‚ñé                                          | 4/500 [00:03<07:23,  1.12it/s]
+  1%|‚ñé                                          | 4/500 [00:03<07:23,  1.12it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 6/500
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.07it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.07it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 8/500
+Validation loss decreased (0.699363 --> 0.698568).  Saving model ...
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 48.88it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 48.88it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 10/500
+EarlyStopping counter: 2 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 11/500
+EarlyStopping counter: 3 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  2%|‚ñâ                                         | 11/500 [00:09<07:20,  1.11it/s]
+  2%|‚ñâ                                         | 11/500 [00:09<07:20,  1.11it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 13/500
+EarlyStopping counter: 5 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+  3%|‚ñà                                         | 13/500 [00:11<07:20,  1.11it/s]
+  3%|‚ñà                                         | 13/500 [00:11<07:20,  1.11it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 15/500
+EarlyStopping counter: 7 out of 25
+lr:  0.001
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.34it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.34it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00016: reducing learning rate of group 0 to 7.0000e-04.
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 17/500
+EarlyStopping counter: 9 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.42it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 51.42it/s]
+EarlyStopping counter: 10 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 19/500
+EarlyStopping counter: 11 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  4%|‚ñà‚ñã                                        | 20/500 [00:18<07:17,  1.10it/s]
+  4%|‚ñà‚ñã                                        | 20/500 [00:18<07:17,  1.10it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 21/500
+EarlyStopping counter: 13 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 22/500
+EarlyStopping counter: 14 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+  4%|‚ñà‚ñä                                        | 22/500 [00:19<07:03,  1.13it/s]
+  4%|‚ñà‚ñä                                        | 22/500 [00:19<07:03,  1.13it/s]
+EarlyStopping counter: 15 out of 25
+lr:  0.0007
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 24/500
+EarlyStopping counter: 16 out of 25
+Epoch 00024: reducing learning rate of group 0 to 4.9000e-04.
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  5%|‚ñà‚ñà                                        | 24/500 [00:21<07:05,  1.12it/s]
+  5%|‚ñà‚ñà                                        | 24/500 [00:21<07:05,  1.12it/s]
+EarlyStopping counter: 17 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 26/500
+Validation loss decreased (0.698568 --> 0.698491).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 17.99it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 17.99it/s]
+Validation loss decreased (0.698491 --> 0.691621).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 28/500
+Validation loss decreased (0.691621 --> 0.679424).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.25it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.25it/s]
+Validation loss decreased (0.679424 --> 0.666740).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 30/500
+Validation loss decreased (0.666740 --> 0.651724).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 31/500
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 49.25it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 32/500
+Validation loss decreased (0.651724 --> 0.628579).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 33/500
+Validation loss decreased (0.628579 --> 0.623738).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.48it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.48it/s]
+Validation loss decreased (0.623738 --> 0.611397).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 35/500
+Validation loss decreased (0.611397 --> 0.604278).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 25.94it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 25.94it/s]
+Validation loss decreased (0.604278 --> 0.592651).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 37/500
+Validation loss decreased (0.592651 --> 0.574779).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  7%|‚ñà‚ñà‚ñà                                       | 37/500 [00:33<06:44,  1.14it/s]
+  7%|‚ñà‚ñà‚ñà                                       | 37/500 [00:33<06:44,  1.14it/s]
+Validation loss decreased (0.574779 --> 0.556872).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 39/500
+Validation loss decreased (0.556872 --> 0.544417).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 40/500
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.45it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.45it/s]
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 41/500
+Validation loss decreased (0.535851 --> 0.530427).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 42/500
+Validation loss decreased (0.530427 --> 0.518239).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.68it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.68it/s]
+Validation loss decreased (0.518239 --> 0.503753).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 44/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+  9%|‚ñà‚ñà‚ñà‚ñã                                      | 44/500 [00:39<06:39,  1.14it/s]
+  9%|‚ñà‚ñà‚ñà‚ñã                                      | 44/500 [00:39<06:39,  1.14it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 46/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.48it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.48it/s]
+Validation loss decreased (0.503753 --> 0.495188).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 48/500
+Validation loss decreased (0.495188 --> 0.492328).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 49/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.69it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.69it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 51/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 10%|‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 51/500 [00:45<06:36,  1.13it/s]
+ 10%|‚ñà‚ñà‚ñà‚ñà‚ñé                                     | 51/500 [00:45<06:36,  1.13it/s]
+Validation loss decreased (0.492328 --> 0.481351).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 53/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñç                                     | 53/500 [00:47<06:25,  1.16it/s]
+ 11%|‚ñà‚ñà‚ñà‚ñà‚ñç                                     | 53/500 [00:47<06:25,  1.16it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 55/500
+Validation loss decreased (0.481351 --> 0.460215).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 56/500
+Validation loss decreased (0.460215 --> 0.460023).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.50it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.50it/s]
+Validation loss decreased (0.460023 --> 0.459412).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 58/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.58it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.58it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 60/500
+Validation loss decreased (0.459412 --> 0.458223).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 60/500 [00:53<06:24,  1.15it/s]
+ 12%|‚ñà‚ñà‚ñà‚ñà‚ñà                                     | 60/500 [00:53<06:24,  1.15it/s]
+Validation loss decreased (0.458223 --> 0.441325).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 62/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.48it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.48it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 64/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 65/500
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.83it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 60.83it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 67/500
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                    | 67/500 [00:59<06:18,  1.15it/s]
+ 13%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                    | 67/500 [00:59<06:18,  1.15it/s]
+EarlyStopping counter: 7 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 69/500
+Validation loss decreased (0.441325 --> 0.436772).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                    | 69/500 [01:01<06:21,  1.13it/s]
+ 14%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                    | 69/500 [01:01<06:21,  1.13it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 71/500
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 72/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.50it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.50it/s]
+Validation loss decreased (0.436772 --> 0.435405).  Saving model ...
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 74/500
+EarlyStopping counter: 1 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 61.02it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 61.02it/s]
+EarlyStopping counter: 2 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 76/500
+EarlyStopping counter: 3 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+ 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                                   | 76/500 [01:07<06:04,  1.16it/s]
+ 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                                   | 76/500 [01:07<06:04,  1.16it/s]
+EarlyStopping counter: 4 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 78/500
+EarlyStopping counter: 5 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.32it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 16.32it/s]
+EarlyStopping counter: 6 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 80/500
+EarlyStopping counter: 7 out of 25
+lr:  0.00049
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 81/500
+EarlyStopping counter: 8 out of 25
+Epoch 00081: reducing learning rate of group 0 to 3.4300e-04.
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.94it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.94it/s]
+EarlyStopping counter: 9 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 83/500
+EarlyStopping counter: 10 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 17%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                                   | 83/500 [01:13<06:04,  1.14it/s]
+ 17%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                                   | 83/500 [01:13<06:04,  1.14it/s]
+EarlyStopping counter: 11 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 85/500
+Validation loss decreased (0.435405 --> 0.433285).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.30it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.30it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 87/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 88/500
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 56.10it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 56.10it/s]
+Validation loss decreased (0.433285 --> 0.428997).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 90/500
+Validation loss decreased (0.428997 --> 0.423699).  Saving model ...
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                  | 90/500 [01:19<06:03,  1.13it/s]
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                  | 90/500 [01:19<06:03,  1.13it/s]
+EarlyStopping counter: 1 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 92/500
+EarlyStopping counter: 2 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                  | 92/500 [01:21<06:03,  1.12it/s]
+ 18%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                                  | 92/500 [01:21<06:03,  1.12it/s]
+EarlyStopping counter: 3 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 94/500
+EarlyStopping counter: 4 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.32it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.32it/s]
+EarlyStopping counter: 5 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 96/500
+EarlyStopping counter: 6 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 97/500
+EarlyStopping counter: 7 out of 25
+lr:  0.000343
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.69it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.69it/s]
+EarlyStopping counter: 8 out of 25
+Epoch 00098: reducing learning rate of group 0 to 2.4010e-04.
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 99/500
+EarlyStopping counter: 9 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                 | 99/500 [01:27<05:47,  1.15it/s]
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                 | 99/500 [01:27<05:47,  1.15it/s]
+EarlyStopping counter: 10 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 101/500
+EarlyStopping counter: 11 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                | 101/500 [01:29<05:48,  1.14it/s]
+ 20%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                                | 101/500 [01:29<05:48,  1.14it/s]
+EarlyStopping counter: 12 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 103/500
+EarlyStopping counter: 13 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 104/500
+EarlyStopping counter: 14 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.37it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.37it/s]
+EarlyStopping counter: 15 out of 25
+lr:  0.00024009999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 106/500
+EarlyStopping counter: 16 out of 25
+Epoch 00106: reducing learning rate of group 0 to 1.6807e-04.
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.72it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.72it/s]
+EarlyStopping counter: 17 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 108/500
+EarlyStopping counter: 18 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                | 108/500 [01:35<05:44,  1.14it/s]
+ 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä                                | 108/500 [01:35<05:44,  1.14it/s]
+EarlyStopping counter: 19 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 110/500
+EarlyStopping counter: 20 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.32it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 14/14 [00:00<00:00, 18.32it/s]
+EarlyStopping counter: 21 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 112/500
+EarlyStopping counter: 22 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+Epoch 113/500
+EarlyStopping counter: 23 out of 25
+lr:  0.00016806999999999998
+------------------------------------------------------------
+------------------------------------------------------------
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.57it/s]
+100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 4/4 [00:00<00:00, 58.57it/s]
+EarlyStopping counter: 24 out of 25
+Epoch 00114: reducing learning rate of group 0 to 1.1765e-04.
+lr:  0.00011764899999999998
+------------------------------------------------------------
+------------------------------------------------------------
+ 23%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                               | 114/500 [01:41<05:45,  1.12it/s]
+ 23%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé                               | 114/500 [01:41<05:45,  1.12it/s]
+EarlyStopping counter: 25 out of 25
+Early stopping... fold:4 epoch:114 loss:0.4285089001059532
\ No newline at end of file
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/requirements.txt b/wandb/run-20230515_170843-jr2qjj7w/files/requirements.txt
new file mode 100644
index 0000000..2841956
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/requirements.txt
@@ -0,0 +1,224 @@
+absl-py==1.4.0
+albumentations==1.3.0
+alembic==1.10.4
+ansi2html==1.8.0
+anyio==3.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+asttokens==2.0.5
+attrs==22.1.0
+babel==2.11.0
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==4.1.0
+blinker==1.6.2
+bottleneck==1.3.5
+brotlipy==0.7.0
+cachetools==5.2.1
+category-encoders==2.6.0
+certifi==2022.12.7
+cffi==1.15.1
+charset-normalizer==2.0.4
+click==8.1.3
+cloudpickle==2.2.1
+cmaes==0.9.1
+colorlog==6.7.0
+comm==0.1.2
+contourpy==1.0.5
+cryptography==38.0.4
+cycler==0.11.0
+cython==0.29.34
+dash-core-components==2.0.0
+dash-html-components==2.0.0
+dash-table==5.0.0
+dash==2.9.3
+debugpy==1.5.1
+decorator==5.1.1
+defusedxml==0.7.1
+deprecated==1.2.13
+deprecation==2.1.0
+docker-pycreds==0.4.0
+efficientnet-pytorch==0.7.1
+entrypoints==0.4
+et-xmlfile==1.1.0
+executing==0.8.3
+fastjsonschema==2.16.2
+flask==2.3.1
+flit-core==3.6.0
+fonttools==4.25.0
+gitdb==4.0.10
+gitpython==3.1.30
+google-auth-oauthlib==0.4.6
+google-auth==2.16.0
+grad-cam==1.4.6
+graphviz==0.20.1
+greenlet==2.0.2
+grpcio==1.51.1
+hiddenlayer==0.3
+idna==3.4
+imageio==2.26.0
+imbalanced-learn==0.10.1
+importlib-metadata==6.6.0
+ipykernel==6.19.2
+ipython-genutils==0.2.0
+ipython==8.7.0
+ipywidgets==7.6.5
+itsdangerous==2.1.2
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.2.0
+json5==0.9.6
+jsonschema==4.16.0
+jupyter-client==7.4.8
+jupyter-console==6.4.4
+jupyter-core==5.1.1
+jupyter-dash==0.4.2
+jupyter-server==1.23.4
+jupyter==1.0.0
+jupyterlab-pygments==0.1.2
+jupyterlab-server==2.16.5
+jupyterlab-widgets==1.0.0
+jupyterlab==3.5.2
+kaleido==0.2.1
+kiwisolver==1.4.4
+lazy-loader==0.1
+lightgbm==3.3.5
+llvmlite==0.39.1
+lxml==4.9.1
+mako==1.2.4
+markdown==3.4.1
+markupsafe==2.1.1
+matplotlib-inline==0.1.6
+matplotlib==3.6.2
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+multicoretsne==0.1
+munkres==1.1.4
+nbclassic==0.4.8
+nbclient==0.5.13
+nbconvert==6.5.4
+nbformat==5.7.0
+nest-asyncio==1.5.6
+networkx==3.0
+notebook-shim==0.2.2
+notebook==6.5.2
+numba==0.56.4
+numexpr==2.8.4
+numpy==1.23.5
+oauthlib==3.2.2
+opencv-python-headless==4.7.0.72
+opencv-python==4.7.0.72
+openpyxl==3.0.10
+optuna==3.1.1
+orjson==3.8.10
+packaging==22.0
+pandas==1.5.2
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+patsy==0.5.3
+pexpect==4.8.0
+pickleshare==0.7.5
+pillow==9.3.0
+pip==22.3.1
+platformdirs==2.5.2
+plotly-resampler==0.8.3.2
+plotly==5.14.1
+ply==3.11
+pmdarima==2.0.3
+prometheus-client==0.14.1
+prompt-toolkit==3.0.36
+protobuf==3.20.3
+psutil==5.9.0
+ptyprocess==0.7.0
+pure-eval==0.2.2
+pyarrow==11.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycaret==3.0.0
+pycparser==2.21
+pygcn==0.1
+pygments==2.11.2
+pyod==1.0.9
+pyopenssl==22.0.0
+pyparsing==3.0.9
+pyqt5-sip==12.11.0
+pyrsistent==0.18.0
+pysocks==1.7.1
+python-dateutil==2.8.2
+python-louvain==0.16
+pytorch-gradcam==0.2.1
+pytz==2022.7
+pywavelets==1.4.1
+pyyaml==6.0
+pyzmq==23.2.0
+qtconsole==5.4.0
+qtpy==2.2.0
+qudida==0.0.4
+requests-oauthlib==1.3.1
+requests==2.28.1
+retrying==1.3.4
+rsa==4.9
+schemdraw==0.16
+scikit-image==0.20.0
+scikit-learn==1.2.2
+scikit-plot==0.3.7
+scipy==1.10.0
+seaborn==0.12.2
+send2trash==1.8.0
+sentry-sdk==1.14.0
+setproctitle==1.3.2
+setuptools==65.6.3
+shap==0.41.0
+sip==6.6.2
+six==1.16.0
+sktime==0.17.2
+slicer==0.0.7
+smmap==5.0.0
+sniffio==1.2.0
+soupsieve==2.3.2.post1
+sqlalchemy==2.0.11
+stack-data==0.2.0
+statsmodels==0.13.5
+tbats==1.1.3
+tenacity==8.2.2
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.11.2
+terminado==0.17.1
+threadpoolctl==3.1.0
+tifffile==2023.2.28
+tinycss2==1.2.1
+toml==0.10.2
+tomli==2.0.1
+torch==1.13.1
+torchaudio==0.13.1
+torchinfo==1.7.2
+torchsummary==1.5.1
+torchsummaryx==1.3.0
+torchvision==0.14.1
+torchviz==0.0.2
+tornado==6.2
+tqdm==4.64.1
+trace-updater==0.0.9.1
+traitlets==5.7.1
+tsnecuda==3.0.1+cu113
+ttach==0.0.3
+typing-extensions==4.4.0
+urllib3==1.26.14
+wandb==0.13.9
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==0.58.0
+werkzeug==2.3.0
+wheel==0.37.1
+widgetsnbextension==3.5.2
+wrapt==1.15.0
+wurlitzer==3.0.3
+xgboost==1.7.5
+xxhash==3.2.0
+yellowbrick==1.5
+zipp==3.15.0
\ No newline at end of file
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/wandb-metadata.json b/wandb/run-20230515_170843-jr2qjj7w/files/wandb-metadata.json
new file mode 100644
index 0000000..22844d5
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/wandb-metadata.json
@@ -0,0 +1,708 @@
+{
+    "os": "Linux-5.15.0-57-generic-x86_64-with-glibc2.31",
+    "python": "3.10.9",
+    "heartbeatAt": "2023-05-15T08:08:43.897429",
+    "startedAt": "2023-05-15T08:08:43.161277",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "0",
+        "1024",
+        "500",
+        "1e-3",
+        "5",
+        "7",
+        "0.7",
+        "25",
+        "transfer_learning_1",
+        "0"
+    ],
+    "state": "running",
+    "program": "/home/hb/python/efficientnet_kincnn/DeepPhospho.py",
+    "codePath": "DeepPhospho.py",
+    "git": {
+        "remote": "https://github.com/HongB1/efficientnet_kincnn.git",
+        "commit": "5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8"
+    },
+    "email": "hongbikim14@gmail.com",
+    "root": "/home/hb/python/efficientnet_kincnn",
+    "host": "workstation",
+    "username": "hb",
+    "executable": "/home/hb/anaconda3/envs/phos/bin/python3",
+    "cpu_count": 64,
+    "cpu_count_logical": 128,
+    "cpu_freq": {
+        "current": 2.287085937499995,
+        "min": 2200.0,
+        "max": 2900.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.8,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.9,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.576,
+            "min": 2200.0,
+            "max": 2900.0
+        },
+        {
+            "current": 2.2,
+            "min": 2200.0,
+            "max": 2900.0
+        }
+    ],
+    "disk": {
+        "total": 1832.2072448730469,
+        "used": 1672.7869186401367
+    },
+    "gpu": "NVIDIA GeForce RTX 3090",
+    "gpu_count": 4,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        },
+        {
+            "name": "NVIDIA GeForce RTX 3090",
+            "memory_total": 25447170048
+        }
+    ],
+    "memory": {
+        "total": 251.55356216430664
+    }
+}
diff --git a/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json b/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
new file mode 100644
index 0000000..66fcedd
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
@@ -0,0 +1 @@
+{"0 fold train": {"loss": 0.3975361500467573}, "0 fold val": {"loss": 0.4355916455388069}, "0 fold learning_rate": 4.035360699999999e-05, "_timestamp": 1684138727.236127, "_runtime": 604.0692279338837, "_step": 659, "1 fold train": {"loss": 0.42268334542001995}, "1 fold val": {"loss": 0.4469219893217087}, "1 fold learning_rate": 5.764800999999999e-05, "2 fold train": {"loss": 0.3904175226177488}, "2 fold val": {"loss": 0.45200640708208084}, "2 fold learning_rate": 5.764800999999999e-05, "3 fold train": {"loss": 0.3909370281866619}, "3 fold val": {"loss": 0.46055929362773895}, "3 fold learning_rate": 0.00024009999999999998, "4 fold train": {"loss": 0.393282060112272}, "4 fold val": {"loss": 0.4404236003756523}, "4 fold learning_rate": 0.00016806999999999998, "_wandb": {"runtime": 604}}
\ No newline at end of file
diff --git a/wandb/run-20230515_170843-jr2qjj7w/logs/debug-internal.log b/wandb/run-20230515_170843-jr2qjj7w/logs/debug-internal.log
new file mode 100644
index 0000000..8275d2e
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/logs/debug-internal.log
@@ -0,0 +1,4093 @@
+2023-05-15 17:08:43,168 INFO    StreamThr :3663959 [internal.py:wandb_internal():87] W&B internal server running at pid: 3663959, started at: 2023-05-15 17:08:43.168312
+2023-05-15 17:08:43,170 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status
+2023-05-15 17:08:43,172 INFO    WriterThread:3663959 [datastore.py:open_for_write():85] open: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/run-jr2qjj7w.wandb
+2023-05-15 17:08:43,173 DEBUG   SenderThread:3663959 [sender.py:send():334] send: header
+2023-05-15 17:08:43,173 DEBUG   SenderThread:3663959 [sender.py:send():334] send: run
+2023-05-15 17:08:43,762 INFO    SenderThread:3663959 [dir_watcher.py:__init__():216] watching files in: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files
+2023-05-15 17:08:43,762 INFO    SenderThread:3663959 [sender.py:_start_run_threads():1065] run started: jr2qjj7w with start time 1684138123.166899
+2023-05-15 17:08:43,762 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:43,762 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:43,763 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: check_version
+2023-05-15 17:08:43,764 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: check_version
+2023-05-15 17:08:43,810 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: run_start
+2023-05-15 17:08:43,815 DEBUG   HandlerThread:3663959 [system_info.py:__init__():31] System info init
+2023-05-15 17:08:43,815 DEBUG   HandlerThread:3663959 [system_info.py:__init__():46] System info init done
+2023-05-15 17:08:43,815 INFO    HandlerThread:3663959 [system_monitor.py:start():151] Starting system monitor
+2023-05-15 17:08:43,815 INFO    SystemMonitor:3663959 [system_monitor.py:_start():116] Starting system asset monitoring threads
+2023-05-15 17:08:43,815 INFO    HandlerThread:3663959 [system_monitor.py:probe():172] Collecting system info
+2023-05-15 17:08:43,815 INFO    SystemMonitor:3663959 [interfaces.py:start():168] Started cpu
+2023-05-15 17:08:43,816 INFO    SystemMonitor:3663959 [interfaces.py:start():168] Started disk
+2023-05-15 17:08:43,816 INFO    SystemMonitor:3663959 [interfaces.py:start():168] Started gpu
+2023-05-15 17:08:43,817 INFO    SystemMonitor:3663959 [interfaces.py:start():168] Started memory
+2023-05-15 17:08:43,819 INFO    SystemMonitor:3663959 [interfaces.py:start():168] Started network
+2023-05-15 17:08:43,897 DEBUG   HandlerThread:3663959 [system_info.py:probe():195] Probing system
+2023-05-15 17:08:43,899 DEBUG   HandlerThread:3663959 [system_info.py:_probe_git():180] Probing git
+2023-05-15 17:08:43,905 DEBUG   HandlerThread:3663959 [system_info.py:_probe_git():188] Probing git done
+2023-05-15 17:08:43,905 DEBUG   HandlerThread:3663959 [system_info.py:probe():241] Probing system done
+2023-05-15 17:08:43,905 DEBUG   HandlerThread:3663959 [system_monitor.py:probe():181] {'os': 'Linux-5.15.0-57-generic-x86_64-with-glibc2.31', 'python': '3.10.9', 'heartbeatAt': '2023-05-15T08:08:43.897429', 'startedAt': '2023-05-15T08:08:43.161277', 'docker': None, 'cuda': None, 'args': ('0', '1024', '500', '1e-3', '5', '7', '0.7', '25', 'transfer_learning_1', '0'), 'state': 'running', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py', 'codePath': 'DeepPhospho.py', 'git': {'remote': 'https://github.com/HongB1/efficientnet_kincnn.git', 'commit': '5e85913d3eb191bbf2f013d2a42ee0b9f0c46aa8'}, 'email': 'hongbikim14@gmail.com', 'root': '/home/hb/python/efficientnet_kincnn', 'host': 'workstation', 'username': 'hb', 'executable': '/home/hb/anaconda3/envs/phos/bin/python3', 'cpu_count': 64, 'cpu_count_logical': 128, 'cpu_freq': {'current': 2.287085937499995, 'min': 2200.0, 'max': 2900.0}, 'cpu_freq_per_core': [{'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.8, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.9, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}, {'current': 2.576, 'min': 2200.0, 'max': 2900.0}, {'current': 2.2, 'min': 2200.0, 'max': 2900.0}], 'disk': {'total': 1832.2072448730469, 'used': 1672.7869186401367}, 'gpu': 'NVIDIA GeForce RTX 3090', 'gpu_count': 4, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}, {'name': 'NVIDIA GeForce RTX 3090', 'memory_total': 25447170048}], 'memory': {'total': 251.55356216430664}}
+2023-05-15 17:08:43,905 INFO    HandlerThread:3663959 [system_monitor.py:probe():182] Finished collecting system info
+2023-05-15 17:08:43,905 INFO    HandlerThread:3663959 [system_monitor.py:probe():185] Publishing system info
+2023-05-15 17:08:43,905 DEBUG   HandlerThread:3663959 [system_info.py:_save_pip():51] Saving list of pip packages installed into the current environment
+2023-05-15 17:08:43,906 DEBUG   HandlerThread:3663959 [system_info.py:_save_pip():67] Saving pip packages done
+2023-05-15 17:08:43,906 DEBUG   HandlerThread:3663959 [system_info.py:_save_conda():74] Saving list of conda packages installed into the current environment
+2023-05-15 17:08:44,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml
+2023-05-15 17:08:44,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/requirements.txt
+2023-05-15 17:08:44,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:49,180 DEBUG   HandlerThread:3663959 [system_info.py:_save_conda():86] Saving conda packages done
+2023-05-15 17:08:49,181 DEBUG   HandlerThread:3663959 [system_info.py:_save_code():89] Saving code
+2023-05-15 17:08:49,183 DEBUG   HandlerThread:3663959 [system_info.py:_save_code():110] Saving code done
+2023-05-15 17:08:49,183 DEBUG   HandlerThread:3663959 [system_info.py:_save_patches():127] Saving git patches
+2023-05-15 17:08:49,200 DEBUG   HandlerThread:3663959 [system_info.py:_save_patches():169] Saving git patches done
+2023-05-15 17:08:49,202 INFO    HandlerThread:3663959 [system_monitor.py:probe():187] Finished publishing system info
+2023-05-15 17:08:49,207 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:08:49,208 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:08:49,208 DEBUG   SenderThread:3663959 [sender.py:send():334] send: files
+2023-05-15 17:08:49,208 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-metadata.json with policy now
+2023-05-15 17:08:49,209 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file code/DeepPhospho.py with policy now
+2023-05-15 17:08:49,209 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file diff.patch with policy now
+2023-05-15 17:08:49,213 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: stop_status
+2023-05-15 17:08:49,213 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: stop_status
+2023-05-15 17:08:49,446 DEBUG   SenderThread:3663959 [sender.py:send():334] send: telemetry
+2023-05-15 17:08:49,447 DEBUG   SenderThread:3663959 [sender.py:send():334] send: telemetry
+2023-05-15 17:08:49,447 DEBUG   SenderThread:3663959 [sender.py:send():334] send: run
+2023-05-15 17:08:49,740 INFO    SenderThread:3663959 [sender.py:send_run():942] updated run: jr2qjj7w
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/code/DeepPhospho.py
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-metadata.json
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/diff.patch
+2023-05-15 17:08:49,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_created():275] file/dir created: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/code
+2023-05-15 17:08:49,898 INFO    Thread-16 :3663959 [upload_job.py:push():143] Uploaded file /tmp/tmpk6hnc6hkwandb/x4ibymdj-wandb-metadata.json
+2023-05-15 17:08:49,951 INFO    Thread-18 :3663959 [upload_job.py:push():143] Uploaded file /tmp/tmpk6hnc6hkwandb/jo9okaaj-diff.patch
+2023-05-15 17:08:49,974 INFO    Thread-17 :3663959 [upload_job.py:push():143] Uploaded file /tmp/tmpk6hnc6hkwandb/rom4xotp-code/DeepPhospho.py
+2023-05-15 17:08:51,764 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:52,615 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:52,617 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:52,617 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:52,618 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:52,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:52,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:53,475 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:53,476 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:53,477 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:53,478 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:53,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:53,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:53,823 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:08:54,412 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:54,414 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:54,414 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:54,415 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:54,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:54,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:55,263 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:55,265 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:55,266 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:55,266 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:55,765 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:55,766 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:56,106 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:56,108 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:56,109 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:56,109 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:56,766 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:56,766 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:57,051 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:57,052 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:57,053 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:57,054 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:57,766 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:57,766 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:57,906 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:57,908 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:57,908 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:57,909 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:58,766 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:58,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:08:58,836 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:08:58,853 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:58,854 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:58,854 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:58,855 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:59,714 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:08:59,715 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:08:59,716 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:08:59,716 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:08:59,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:08:59,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:00,572 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:00,573 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:00,573 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:00,574 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:00,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:00,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:01,518 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:01,519 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:01,520 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:01,521 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:01,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:01,767 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:02,386 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:02,388 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:02,389 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:02,390 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:02,768 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:02,768 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:03,326 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:03,328 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:03,328 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:03,329 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:03,768 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:03,768 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:03,892 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:04,177 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:04,179 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:04,180 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:04,180 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:04,212 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:04,768 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:04,768 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:05,045 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:05,046 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:05,047 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:05,048 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:05,769 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:05,769 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:05,988 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:05,989 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:05,990 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:05,991 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:06,769 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:06,769 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:06,846 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:06,848 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:06,848 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:06,849 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:07,703 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:07,708 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:07,708 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:07,708 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:07,770 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:07,770 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:08,646 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:08,648 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:08,648 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:08,649 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:08,770 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:08,770 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:08,988 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:09,216 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:09,497 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:09,498 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:09,499 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:09,500 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:09,770 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:09,770 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:10,452 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:10,454 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:10,454 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:10,455 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:10,771 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:10,771 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:11,304 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:11,305 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:11,306 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:11,307 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:11,771 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:11,771 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:12,165 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:12,166 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:12,167 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:12,168 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:12,771 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:12,771 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:13,107 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:13,112 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:13,112 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:13,112 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:13,772 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:13,772 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:13,960 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:13,961 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:13,962 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:13,963 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:14,121 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:14,259 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:14,772 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:14,772 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml
+2023-05-15 17:09:14,772 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:14,910 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:14,912 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:14,913 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:14,914 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:15,770 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:15,772 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:15,772 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:15,773 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:15,774 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:15,774 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:16,630 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:16,631 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:16,632 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:16,633 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:16,774 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:16,774 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:17,570 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:17,571 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:17,572 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:17,576 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:17,774 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:17,774 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:18,432 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:18,433 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:18,434 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:18,434 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:18,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:18,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:19,261 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:19,383 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:19,384 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:19,385 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:19,386 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:19,508 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:19,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:19,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:20,242 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:20,243 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:20,244 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:20,245 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:20,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:20,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:21,096 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:21,098 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:21,098 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:21,099 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:21,775 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:21,776 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:22,047 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:22,048 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:22,048 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:22,050 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:22,776 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:22,776 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:22,914 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:22,915 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:22,916 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:22,917 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:23,776 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:23,776 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:23,871 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:23,872 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:23,873 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:23,873 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:24,262 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:24,559 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:24,732 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:24,733 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:24,734 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:24,735 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:24,776 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:24,777 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:25,672 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:25,674 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:25,675 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:25,675 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:25,777 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:25,777 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:26,539 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:26,540 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:26,540 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:26,542 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:26,777 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:26,777 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:27,401 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:27,403 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:27,404 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:27,404 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:27,777 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:27,778 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:28,363 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:28,366 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:28,366 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:28,366 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:28,778 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:28,782 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:29,236 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:29,238 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:29,238 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:29,239 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:29,263 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:29,588 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:29,778 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:29,778 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:30,111 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:30,113 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:30,113 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:30,114 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:30,778 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:30,778 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:31,061 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:31,063 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:31,064 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:31,065 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:31,779 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:31,779 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:31,936 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:31,938 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:31,939 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:31,939 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:32,779 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:32,779 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:32,873 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:32,874 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:32,875 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:32,876 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:33,724 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:33,726 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:33,727 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:33,727 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:33,779 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:33,780 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:34,263 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:34,589 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:34,590 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:34,591 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:34,591 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:34,592 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:34,780 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:34,780 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:35,538 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:35,539 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:35,541 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:35,543 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:35,780 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:35,780 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:36,390 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:36,393 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:36,393 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:36,394 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:36,780 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:36,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:37,249 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:37,251 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:37,251 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:37,253 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:37,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:37,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:38,184 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:38,185 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:38,186 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:38,187 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:38,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:38,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:39,030 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:39,031 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:39,032 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:39,033 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:39,345 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:39,629 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:39,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:39,781 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:39,967 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:39,969 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:39,970 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:39,970 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:40,782 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:40,782 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:40,822 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:40,823 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:40,824 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:40,825 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:41,684 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:41,685 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:41,686 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:41,687 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:41,782 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:41,783 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:42,645 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:42,646 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:42,646 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:42,647 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:42,783 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:42,783 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:43,503 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:43,505 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:43,505 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:43,506 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:43,783 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:43,783 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:43,819 DEBUG   SystemMonitor:3663959 [system_monitor.py:_start():130] Starting system metrics aggregation loop
+2023-05-15 17:09:43,823 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:09:44,345 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:44,454 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:44,455 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:44,456 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:44,457 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:44,694 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:44,784 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:44,784 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:45,324 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:45,325 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:45,326 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:45,327 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:45,784 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:45,784 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:46,182 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:46,183 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:46,184 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:46,184 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:46,784 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:46,784 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:47,138 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:47,140 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:47,141 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:47,141 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:47,785 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:47,785 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:47,996 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:47,997 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:47,998 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:47,999 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:48,785 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:48,785 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:48,943 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:48,944 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:48,945 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:48,946 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:49,346 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:49,716 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:49,785 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:49,785 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:49,806 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:49,808 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:49,808 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:49,808 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:50,669 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:50,671 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:50,671 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:50,672 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:50,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:50,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:51,625 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:51,627 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:51,628 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:51,628 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:51,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:51,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:52,488 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:52,490 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:52,491 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:52,491 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:52,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:52,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:53,347 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:53,349 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:53,349 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:53,350 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:53,786 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:53,787 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:54,299 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:54,300 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:54,301 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:54,302 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:54,347 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:54,762 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:09:54,787 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:54,787 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:55,172 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:55,173 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:55,173 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:55,174 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:55,787 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:55,787 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:56,135 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:56,136 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:56,137 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:56,138 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:56,787 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:56,788 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:56,998 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:56,999 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:56,999 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:57,000 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:57,788 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:57,788 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:57,853 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:57,854 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:57,854 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:57,855 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:58,788 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:58,789 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:58,803 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:58,805 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:58,805 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:58,805 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:59,348 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:09:59,666 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:09:59,668 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:09:59,669 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:09:59,669 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:09:59,789 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:09:59,789 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:09:59,793 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:00,613 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:00,615 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:00,615 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:00,616 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:00,789 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:00,789 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:01,468 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:01,469 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:01,470 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:01,471 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:01,789 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:01,790 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:02,331 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:02,333 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:02,333 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:02,334 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:02,790 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:02,790 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:03,287 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:03,288 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:03,289 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:03,290 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:03,790 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:03,790 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:04,156 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:04,158 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:04,158 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:04,159 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:04,349 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:04,790 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:04,791 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:04,845 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:05,110 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:05,112 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:05,112 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:05,113 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:05,791 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:05,791 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:05,976 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:05,977 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:05,978 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:05,979 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:06,791 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:06,791 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:06,843 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:06,845 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:06,845 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:06,846 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:07,791 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:07,792 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:07,796 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:07,797 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:07,797 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:07,799 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:08,650 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:08,651 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:08,652 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:08,653 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:08,792 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:08,792 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:09,350 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:09,594 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:09,596 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:09,596 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:09,598 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:09,792 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:09,792 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:09,947 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:10,460 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:10,462 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:10,463 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:10,463 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:10,792 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:10,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:11,336 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:11,337 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:11,338 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:11,339 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:11,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:11,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:12,292 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:12,293 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:12,294 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:12,295 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:12,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:12,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:13,156 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:13,157 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:13,158 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:13,159 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:13,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:13,793 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:13,824 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:10:14,102 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:14,103 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:14,104 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:14,105 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:14,351 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:14,794 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:14,794 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:14,961 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:14,972 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:14,973 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:14,974 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:14,975 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:15,794 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:15,794 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:15,842 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:15,843 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:15,843 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:15,845 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:16,794 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:16,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:16,799 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:16,801 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:16,802 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:16,803 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:17,667 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:17,669 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:17,670 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:17,670 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:17,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:17,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:18,625 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:18,626 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:18,627 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:18,628 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:18,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:18,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:19,352 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:19,490 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:19,491 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:19,492 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:19,493 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:19,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:19,795 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:20,059 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:20,351 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:20,353 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:20,353 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:20,354 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:20,796 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:20,796 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:21,312 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:21,314 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:21,314 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:21,315 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:21,796 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:21,796 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:22,178 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:22,180 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:22,181 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:22,181 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:22,796 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:22,796 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:23,036 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:23,038 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:23,039 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:23,039 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:23,797 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:23,797 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:23,982 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:23,983 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:23,984 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:23,985 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:24,353 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:24,797 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:24,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:24,847 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:24,848 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:24,849 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:24,850 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:25,079 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:25,797 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:25,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:25,798 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:25,799 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:25,800 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:25,801 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:26,652 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:26,654 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:26,654 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:26,656 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:26,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:26,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:27,507 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:27,508 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:27,509 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:27,510 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:27,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:27,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:28,447 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:28,449 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:28,449 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:28,450 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:28,798 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:28,799 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:29,310 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:29,312 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:29,312 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:29,313 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:29,354 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:29,799 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:29,799 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:30,091 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:30,268 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:30,269 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:30,270 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:30,271 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:30,799 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:30,799 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:31,126 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:31,127 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:31,128 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:31,129 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:31,799 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:31,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:31,995 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:31,996 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:31,996 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:31,997 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:32,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:32,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:32,952 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:32,953 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:32,954 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:32,955 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:33,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:33,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:33,820 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:33,821 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:33,822 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:33,823 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:34,354 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:34,688 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:34,689 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:34,690 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:34,690 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:34,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:34,800 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:35,184 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:35,645 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:35,647 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:35,649 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:35,649 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:35,801 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:35,801 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:36,525 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:36,526 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:36,526 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:36,528 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:36,801 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:36,802 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:37,472 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:37,473 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:37,473 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:37,475 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:37,802 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:37,802 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:38,340 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:38,342 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:38,342 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:38,343 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:38,802 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:38,802 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:39,207 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:39,209 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:39,209 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:39,210 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:39,357 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:39,803 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:39,803 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:40,160 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:40,162 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:40,163 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:40,163 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:40,287 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:40,803 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:40,803 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:41,036 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:41,038 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:41,039 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:41,039 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:41,803 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:41,803 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:41,992 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:41,994 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:41,994 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:41,996 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:42,804 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:42,804 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:42,870 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:42,871 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:42,872 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:42,873 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:43,738 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:43,740 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:43,740 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:43,742 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:43,804 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:43,804 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:43,832 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:10:44,358 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:44,693 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:44,695 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:44,696 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:44,696 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:44,804 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:44,804 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:45,381 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:45,561 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:45,562 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:45,563 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:45,564 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:45,805 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:45,805 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:46,514 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:46,516 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:46,516 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:46,517 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:46,805 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:46,805 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:47,385 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:47,387 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:47,388 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:47,388 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:47,805 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:47,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:48,248 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:48,250 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:48,251 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:48,252 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:48,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:48,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:49,195 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:49,196 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:49,197 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:49,197 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:49,359 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:49,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:49,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:50,064 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:50,065 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:50,065 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:50,067 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:50,416 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:50,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:50,806 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:51,019 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:51,020 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:51,022 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:51,022 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:51,807 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:51,807 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:51,885 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:51,886 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:51,887 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:51,888 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:52,750 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:52,751 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:52,752 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:52,753 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:52,807 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:52,807 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:53,708 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:53,710 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:53,710 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:53,711 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:53,807 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:53,807 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:54,359 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:54,574 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:54,577 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:54,578 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:54,578 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:54,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:54,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:55,483 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:10:55,526 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:55,528 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:55,529 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:55,529 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:55,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:55,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:56,403 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:56,404 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:56,405 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:56,405 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:56,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:56,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:57,265 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:57,266 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:57,267 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:57,267 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:57,808 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:57,809 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:58,217 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:58,219 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:58,220 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:58,220 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:58,809 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:58,809 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:10:59,078 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:10:59,079 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:10:59,080 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:10:59,081 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:10:59,360 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:10:59,809 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:10:59,809 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:00,024 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:00,025 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:00,026 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:00,027 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:00,486 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:00,810 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:00,810 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:00,881 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:00,883 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:00,883 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:00,883 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:01,728 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:01,729 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:01,730 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:01,731 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:01,810 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:01,810 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:02,667 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:02,668 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:02,669 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:02,670 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:02,810 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:02,810 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:03,524 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:03,525 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:03,526 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:03,527 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:03,811 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:03,811 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:04,396 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:04,460 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:04,461 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:04,462 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:04,463 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:04,811 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:04,811 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:05,490 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:05,811 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:06,233 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:06,234 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:06,235 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:06,236 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:06,811 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:06,812 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:07,180 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:07,181 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:07,182 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:07,183 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:07,812 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:07,812 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:08,030 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:08,032 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:08,033 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:08,034 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:08,812 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:08,812 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:08,898 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:08,899 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:08,900 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:08,901 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:09,399 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:09,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:09,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:09,833 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:09,834 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:09,835 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:09,836 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:10,507 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:10,683 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:10,684 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:10,685 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:10,686 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:10,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:10,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:11,631 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:11,632 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:11,633 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:11,634 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:11,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:11,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:12,491 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:12,493 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:12,494 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:12,494 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:12,813 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:12,814 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:13,347 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:13,348 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:13,349 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:13,350 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:13,814 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:13,814 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:13,827 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:11:14,300 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:14,302 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:14,302 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:14,303 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:14,442 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:14,814 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:14,814 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:15,166 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:15,168 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:15,169 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:15,169 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:15,519 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:15,814 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:15,815 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:16,123 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:16,125 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:16,126 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:16,127 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:16,815 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:16,815 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:16,981 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:16,982 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:16,983 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:16,984 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:17,815 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:17,815 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:17,847 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:17,849 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:17,849 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:17,850 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:18,805 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:18,806 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:18,807 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:18,808 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:18,815 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:18,816 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:19,443 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:19,682 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:19,683 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:19,684 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:19,685 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:19,816 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:19,816 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:20,596 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:20,640 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:20,642 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:20,643 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:20,643 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:20,816 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:20,816 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:21,507 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:21,508 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:21,509 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:21,510 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:21,816 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:21,817 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:22,373 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:22,375 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:22,375 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:22,376 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:22,817 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:22,817 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:23,328 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:23,330 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:23,330 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:23,332 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:23,817 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:23,817 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:24,206 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:24,207 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:24,208 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:24,209 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:24,445 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:24,817 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:24,818 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:25,169 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:25,171 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:25,171 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:25,172 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:25,633 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:25,818 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:25,818 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:26,042 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:26,043 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:26,043 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:26,045 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:26,818 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:26,818 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:26,911 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:26,912 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:26,912 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:26,914 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:27,818 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:27,819 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:27,879 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:27,880 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:27,880 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:27,881 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:28,747 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:28,749 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:28,749 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:28,750 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:28,819 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:28,819 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:29,449 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:29,625 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:29,626 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:29,627 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:29,628 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:29,819 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:29,819 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:30,611 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:30,612 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:30,613 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:30,614 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:30,739 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:30,819 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:30,820 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:31,496 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:31,497 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:31,498 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:31,499 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:31,820 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:31,820 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:32,465 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:32,469 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:32,469 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:32,469 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:32,820 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:32,820 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:33,342 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:33,343 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:33,344 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:33,345 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:33,820 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:33,821 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:34,208 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:34,209 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:34,210 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:34,212 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:34,454 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:34,821 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:34,821 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:35,161 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:35,164 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:35,164 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:35,164 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:35,821 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:35,821 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:35,848 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:36,025 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:36,026 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:36,027 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:36,028 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:36,821 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:36,822 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:36,972 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:36,973 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:36,974 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:36,975 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:37,822 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:37,822 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:37,840 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:37,842 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:37,842 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:37,845 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:38,706 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:38,708 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:38,708 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:38,710 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:38,822 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:38,822 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:39,455 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:39,661 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:39,663 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:39,663 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:39,664 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:39,822 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:39,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:40,539 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:40,540 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:40,541 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:40,542 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:40,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:40,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:40,892 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:41,512 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:41,513 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:41,514 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:41,515 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:41,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:41,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:42,397 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:42,398 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:42,399 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:42,400 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:42,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:42,823 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:43,281 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:43,283 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:43,283 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:43,284 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:43,824 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:43,824 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:43,829 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:11:44,255 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:44,257 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:44,257 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:44,258 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:44,456 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:44,824 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:44,824 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:45,125 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:45,126 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:45,127 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:45,128 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:45,824 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:45,824 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:45,903 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:46,082 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:46,084 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:46,085 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:46,085 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:46,825 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:46,825 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:46,953 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:46,954 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:46,955 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:46,956 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:47,821 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:47,823 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:47,823 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:47,824 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:47,825 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:47,825 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:48,775 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:48,776 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:48,777 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:48,778 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:48,825 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:48,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:49,457 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:49,645 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:49,647 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:49,648 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:49,648 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:49,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:49,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:50,606 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:50,607 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:50,608 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:50,609 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:50,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:50,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:50,960 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:51,477 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:51,479 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:51,479 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:51,480 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:51,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:51,826 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:52,354 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:52,356 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:52,357 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:52,358 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:52,827 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:52,827 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:53,338 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:53,339 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:53,340 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:53,341 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:53,827 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:53,827 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:54,209 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:54,210 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:54,211 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:54,212 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:54,520 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:54,827 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:54,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:55,090 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:55,091 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:55,092 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:55,093 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:55,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:55,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:56,039 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:11:56,051 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:56,052 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:56,053 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:56,054 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:56,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:56,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:56,923 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:56,924 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:56,925 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:56,926 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:57,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:57,828 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:57,887 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:57,889 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:57,889 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:57,890 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:58,759 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:58,760 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:58,761 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:58,762 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:58,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:58,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:11:59,522 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:11:59,640 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:11:59,641 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:11:59,642 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:11:59,643 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:11:59,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:11:59,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:00,602 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:00,603 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:00,603 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:00,605 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:00,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:00,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:01,068 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:01,471 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:01,474 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:01,474 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:01,475 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:01,829 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:01,830 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:02,424 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:02,425 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:02,426 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:02,427 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:02,830 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:02,830 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:03,300 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:03,302 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:03,302 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:03,304 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:03,830 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:03,830 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:04,170 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:04,172 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:04,172 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:04,173 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:04,577 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:04,831 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:04,831 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:05,123 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:05,124 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:05,124 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:05,126 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:05,831 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:05,831 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:05,995 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:05,996 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:05,997 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:05,998 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:06,123 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:06,831 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:06,832 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:06,969 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:06,970 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:06,971 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:06,972 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:07,832 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:07,832 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:07,839 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:07,840 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:07,841 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:07,842 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:08,699 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:08,700 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:08,701 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:08,702 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:08,832 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:08,832 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:09,578 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:09,656 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:09,657 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:09,658 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:09,659 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:09,833 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:09,833 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:10,518 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:10,520 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:10,520 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:10,522 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:10,833 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:10,833 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:11,188 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:11,482 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:11,483 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:11,484 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:11,485 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:11,833 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:11,834 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:12,364 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:12,366 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:12,366 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:12,367 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:12,834 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:12,834 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:13,238 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:13,239 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:13,240 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:13,241 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:13,831 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:12:13,836 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:13,836 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:14,206 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:14,207 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:14,208 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:14,209 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:14,578 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:14,836 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:14,836 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:15,077 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:15,079 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:15,079 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:15,080 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:15,836 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:15,959 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:15,960 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:15,960 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:15,961 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:16,234 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:16,837 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:16,837 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:16,918 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:16,920 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:16,920 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:16,921 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:17,781 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:17,783 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:17,783 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:17,784 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:17,837 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:18,731 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:18,732 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:18,733 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:18,734 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:18,838 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:18,838 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:19,579 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:19,593 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:19,595 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:19,595 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:19,596 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:19,838 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:20,455 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:20,457 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:20,458 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:20,459 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:20,838 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:20,838 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:21,299 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:21,419 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:21,421 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:21,422 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:21,422 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:21,839 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:22,277 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:22,279 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:22,279 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:22,280 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:22,839 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:22,839 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:23,140 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:23,140 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:23,141 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:23,142 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:23,839 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:24,101 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:24,102 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:24,103 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:24,104 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:24,580 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:24,840 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:24,840 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:24,961 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:24,963 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:24,963 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:24,963 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:25,840 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:25,907 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:25,908 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:25,909 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:25,910 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:26,360 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:26,755 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:26,757 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:26,757 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:26,758 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:26,840 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:26,841 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:27,601 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:27,603 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:27,606 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:27,606 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:27,841 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:28,535 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:28,536 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:28,536 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:28,537 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:28,841 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:28,841 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:29,381 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:29,382 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:29,382 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:29,383 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:29,581 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:29,841 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:30,318 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:30,319 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:30,320 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:30,321 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:30,842 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:30,842 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:31,176 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:31,177 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:31,178 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:31,179 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:31,415 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:31,842 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:32,023 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:32,024 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:32,025 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:32,026 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:32,842 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:32,843 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:32,964 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:32,965 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:32,965 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:32,966 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:33,810 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:33,811 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:33,812 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:33,813 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:33,843 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:34,582 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:34,771 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:34,773 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:34,773 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:34,774 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:34,843 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:34,843 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:35,640 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:35,641 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:35,642 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:35,643 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:35,843 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:36,521 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:36,586 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:36,587 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:36,588 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:36,589 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:36,844 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:36,844 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:37,450 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:37,452 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:37,452 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:37,453 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:37,844 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:38,310 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:38,311 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:38,312 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:38,313 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:38,845 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:38,845 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:39,282 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:39,283 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:39,284 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:39,285 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:39,586 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:39,845 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:40,144 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:40,144 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:40,145 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:40,146 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:40,845 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:40,845 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:41,003 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:41,005 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:41,005 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:41,006 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:41,610 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:41,845 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:41,962 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:41,963 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:41,964 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:41,965 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:42,822 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:42,824 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:42,824 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:42,825 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:42,846 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:42,846 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:43,771 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:43,772 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:43,773 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:43,774 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:43,833 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:12:43,846 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:44,586 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:44,646 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:44,648 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:44,648 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:44,649 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:44,847 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:44,847 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:45,503 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:45,504 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:45,505 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:45,506 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:45,847 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:46,448 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:46,449 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:46,450 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:46,451 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:46,680 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:46,847 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:46,847 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:47,300 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:47,302 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:47,303 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:47,303 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:47,847 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:48,152 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:48,153 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:48,154 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:48,155 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:48,848 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:48,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:49,095 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:49,096 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:49,097 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:49,098 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:49,605 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:49,848 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:49,950 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:49,951 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:49,952 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:49,953 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:50,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:50,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:50,899 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:50,901 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:50,902 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:50,903 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:51,739 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:51,750 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:51,752 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:51,753 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:51,754 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:51,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:52,603 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:52,605 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:52,606 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:52,607 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:52,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:52,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:53,547 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:53,549 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:53,550 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:53,551 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:53,849 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:54,401 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:54,402 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:54,403 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:54,404 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:54,606 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:54,850 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:54,850 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:55,255 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:55,256 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:55,257 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:55,257 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:55,850 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:56,204 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:56,206 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:56,206 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:56,207 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:56,778 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:12:56,850 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:56,851 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:57,063 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:57,064 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:57,065 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:57,066 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:57,851 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:58,004 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:58,006 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:58,007 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:58,007 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:58,851 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:12:58,851 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:12:58,857 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:58,858 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:58,860 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:58,860 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:59,607 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:12:59,707 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:12:59,708 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:12:59,709 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:12:59,710 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:12:59,851 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:00,647 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:00,649 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:00,649 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:00,649 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:00,852 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:00,852 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:01,496 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:01,498 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:01,499 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:01,499 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:01,844 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:01,852 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:02,445 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:02,447 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:02,448 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:02,449 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:02,852 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:02,852 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:03,305 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:03,308 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:03,308 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:03,308 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:03,853 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:04,159 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:04,161 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:04,162 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:04,163 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:04,610 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:04,853 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:04,853 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:05,112 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:05,113 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:05,114 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:05,115 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:05,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:05,968 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:05,970 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:05,971 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:05,971 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:06,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:06,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:06,880 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:07,830 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:07,831 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:07,832 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:07,833 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:07,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:08,704 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:08,705 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:08,706 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:08,707 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:08,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:08,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:09,611 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:09,667 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:09,668 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:09,668 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:09,670 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:09,854 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:10,522 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:10,524 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:10,524 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:10,525 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:10,855 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:10,855 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:11,396 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:11,397 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:11,398 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:11,399 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:11,855 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:11,891 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:12,346 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:12,348 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:12,348 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:12,349 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:12,855 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:12,856 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:13,198 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:13,199 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:13,200 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:13,201 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:13,850 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:13:13,856 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:14,144 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:14,146 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:14,147 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:14,147 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:14,613 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:14,856 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:14,856 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:15,008 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:15,010 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:15,010 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:15,012 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:15,856 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:15,883 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:15,884 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:15,884 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:15,886 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:16,829 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:16,831 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:16,832 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:16,832 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:16,857 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:16,857 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:16,950 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:17,687 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:17,689 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:17,689 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:17,690 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:17,857 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:18,641 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:18,643 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:18,643 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:18,644 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:18,857 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:18,858 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:19,506 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:19,508 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:19,509 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:19,509 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:19,614 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:19,858 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:20,372 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:20,373 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:20,374 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:20,375 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:20,858 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:20,858 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:21,326 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:21,328 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:21,329 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:21,329 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:21,858 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:22,004 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:22,189 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:22,190 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:22,191 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:22,193 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:22,859 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:22,859 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:23,144 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:23,146 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:23,146 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:23,148 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:23,859 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:24,018 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:24,020 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:24,020 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:24,021 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:24,618 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:24,859 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:24,860 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:24,894 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:24,895 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:24,896 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:24,897 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:25,860 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:25,864 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:25,865 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:25,866 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:25,867 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:26,749 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:26,750 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:26,751 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:26,752 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:26,860 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:26,860 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:27,094 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:27,717 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:27,719 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:27,719 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:27,721 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:27,861 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:28,606 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:28,607 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:28,608 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:28,609 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:28,861 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:28,861 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:29,472 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:29,474 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:29,475 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:29,476 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:29,619 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:29,861 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:30,445 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:30,447 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:30,447 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:30,448 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:30,862 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:30,862 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:31,321 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:31,323 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:31,323 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:31,324 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:31,862 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:32,168 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:32,201 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:32,202 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:32,203 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:32,204 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:32,862 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:32,862 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:33,160 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:33,161 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:33,161 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:33,163 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:33,863 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:34,047 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:34,049 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:34,050 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:34,050 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:34,620 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:34,863 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:34,863 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:35,038 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:35,039 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:35,040 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:35,041 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:35,863 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:35,934 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:35,935 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:35,936 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:35,936 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:36,836 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:36,837 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:36,838 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:36,839 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:36,864 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:36,864 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:37,227 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:37,818 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:37,819 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:37,819 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:37,820 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:37,864 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:38,707 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:38,709 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:38,709 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:38,711 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:38,864 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:38,865 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:39,627 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:39,677 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:39,678 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:39,679 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:39,680 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:39,865 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:40,557 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:40,559 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:40,559 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:40,560 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:40,865 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:40,865 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:41,430 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:41,431 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:41,431 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:41,433 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:41,865 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:42,302 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:42,394 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:42,395 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:42,396 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:42,397 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:42,866 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:42,866 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:43,266 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:43,267 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:43,268 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:43,269 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:43,837 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:13:43,866 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:44,226 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:44,227 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:44,228 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:44,229 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:44,631 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:44,867 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:44,867 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:45,084 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:45,086 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:45,086 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:45,087 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:45,867 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:45,949 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:45,950 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:45,951 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:45,952 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:46,867 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:46,867 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:46,903 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:46,904 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:46,905 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:46,905 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:47,368 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:47,773 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:47,774 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:47,775 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:47,776 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:47,868 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:48,726 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:48,727 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:48,728 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:48,729 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:48,868 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:48,868 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:49,590 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:49,591 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:49,592 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:49,593 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:49,635 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:49,868 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:50,461 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:50,462 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:50,463 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:50,464 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:50,869 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:50,869 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:51,415 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:51,420 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:51,420 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:51,420 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:51,869 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:52,274 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:52,276 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:52,277 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:52,278 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:52,394 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:52,869 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:52,869 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:53,213 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:53,214 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:53,215 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:53,216 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:53,870 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:54,064 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:54,066 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:54,067 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:54,067 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:54,635 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:54,870 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:54,871 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:54,924 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:54,926 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:54,926 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:54,927 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:55,871 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:55,876 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:55,877 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:55,878 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:55,879 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:56,739 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:56,740 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:56,740 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:56,741 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:56,871 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:56,871 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:57,419 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:13:57,684 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:57,686 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:57,686 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:57,687 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:57,871 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:58,554 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:58,555 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:58,556 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:58,557 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:58,872 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:13:58,872 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:13:59,426 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:13:59,428 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:13:59,428 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:13:59,429 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:13:59,637 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:13:59,872 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:00,375 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:00,377 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:00,377 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:00,378 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:00,872 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:00,873 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:01,232 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:01,234 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:01,235 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:01,236 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:01,873 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:02,083 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:02,085 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:02,085 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:02,086 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:02,458 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:02,873 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:02,873 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:03,018 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:03,019 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:03,020 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:03,021 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:03,868 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:03,870 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:03,871 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:03,871 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:03,873 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:04,642 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:04,825 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:04,827 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:04,827 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:04,829 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:04,874 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:04,874 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:05,686 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:05,689 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:05,689 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:05,689 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:05,874 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:06,535 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:06,536 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:06,537 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:06,538 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:06,874 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:06,875 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:07,460 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:07,481 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:07,482 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:07,483 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:07,484 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:07,875 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:08,344 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:08,346 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:08,347 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:08,347 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:08,875 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:08,875 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:09,304 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:09,305 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:09,306 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:09,307 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:09,642 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:09,875 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:10,171 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:10,171 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:10,172 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:10,174 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:10,876 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:10,876 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:11,050 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:11,051 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:11,052 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:11,052 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:11,876 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:12,012 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:12,014 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:12,015 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:12,017 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:12,478 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:12,876 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:12,877 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:12,881 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:12,882 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:12,883 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:12,884 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:13,839 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:14:13,846 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:13,847 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:13,848 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:13,849 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:13,877 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:14,643 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:14,722 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:14,723 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:14,724 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:14,725 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:14,877 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:14,877 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:15,584 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:15,585 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:15,586 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:15,587 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:15,877 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:16,527 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:16,528 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:16,529 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:16,530 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:16,878 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:16,878 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:17,378 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:17,380 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:17,380 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:17,381 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:17,499 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:17,878 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:18,232 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:18,233 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:18,234 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:18,235 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:18,879 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:18,879 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:19,186 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:19,187 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:19,188 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:19,189 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:19,685 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:19,879 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:20,066 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:20,067 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:20,068 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:20,069 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:20,879 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:20,880 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:21,028 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:21,030 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:21,030 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:21,032 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:21,880 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:21,897 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:21,898 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:21,899 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:21,900 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:22,574 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:22,772 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:22,773 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:22,774 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:22,775 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:22,880 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:22,880 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:23,733 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:23,734 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:23,735 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:23,736 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:23,880 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:24,598 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:24,600 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:24,600 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:24,600 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:24,686 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:24,881 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:24,881 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:25,551 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:25,553 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:25,554 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:25,555 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:25,881 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:26,423 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:26,425 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:26,425 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:26,426 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:26,881 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:26,881 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:27,286 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:27,288 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:27,288 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:27,289 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:27,616 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:27,882 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:28,232 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:28,234 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:28,235 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:28,236 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:28,882 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:28,882 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:29,103 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:29,105 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:29,105 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:29,106 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:29,687 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:29,882 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:29,965 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:29,966 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:29,966 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:29,967 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:30,883 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:30,883 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:30,910 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:30,912 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:30,912 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:30,913 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:31,767 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:31,768 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:31,769 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:31,770 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:31,883 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:32,618 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:32,706 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:32,708 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:32,708 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:32,709 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:32,883 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:32,884 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:33,576 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:33,577 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:33,578 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:33,579 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:33,884 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:34,488 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:34,489 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:34,490 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:34,491 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:34,688 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:34,884 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:34,884 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:35,422 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:35,424 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:35,424 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:35,426 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:35,885 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:36,276 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:36,277 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:36,278 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:36,281 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:36,885 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:36,885 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:37,217 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:37,218 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:37,219 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:37,220 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:37,671 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:37,885 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:38,072 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:38,073 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:38,074 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:38,075 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:38,886 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:38,886 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:38,917 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:38,918 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:38,919 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:38,920 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:39,688 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:39,854 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:39,856 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:39,857 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:39,857 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:39,886 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:40,707 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:40,708 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:40,709 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:40,710 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:40,886 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:40,886 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:41,671 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:41,672 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:41,673 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:41,674 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:41,887 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:42,524 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:42,526 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:42,526 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:42,527 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:42,757 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:42,887 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:42,887 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:43,362 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:43,364 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:43,365 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:43,366 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:43,841 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:14:43,888 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:44,304 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:44,307 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:44,307 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:44,307 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:44,693 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:44,889 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:44,889 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:45,159 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:45,161 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:45,161 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:45,163 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:45,889 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:46,093 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:46,095 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:46,096 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:46,098 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:46,889 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:46,890 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:46,939 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:46,940 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:46,941 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:46,942 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:47,774 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:47,793 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:47,794 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:47,795 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:47,797 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:47,890 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:48,739 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:48,740 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:48,740 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:48,742 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:48,890 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:48,890 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:49,586 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:49,591 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:49,591 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:49,591 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:49,694 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:49,890 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:50,527 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:50,528 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:50,529 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:50,530 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:50,891 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:50,891 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:51,382 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:51,383 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:51,384 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:51,385 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:51,891 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:52,228 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:52,229 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:52,230 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:52,231 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:52,883 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:52,892 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:52,892 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:53,168 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:53,170 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:53,171 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:53,171 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:53,892 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:54,025 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:54,027 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:54,028 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:54,028 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:54,695 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:54,892 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:54,892 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:54,969 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:54,974 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:54,974 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:54,974 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:55,823 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:55,825 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:55,825 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:55,826 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:55,893 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:56,672 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:56,673 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:56,674 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:56,675 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:56,893 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:56,893 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:57,628 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:57,630 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:57,630 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:57,631 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:57,895 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:57,980 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:14:58,503 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:58,505 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:58,505 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:58,506 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:58,895 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:14:58,896 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:14:59,462 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:14:59,463 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:14:59,464 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:14:59,465 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:14:59,696 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:14:59,896 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:00,321 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:00,325 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:00,325 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:00,325 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:00,897 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:00,897 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:01,192 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:01,194 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:01,194 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:01,196 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:01,897 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:02,148 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:02,149 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:02,150 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:02,151 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:02,898 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:02,898 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:02,992 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:03,010 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:03,013 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:03,013 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:03,014 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:03,898 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:03,974 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:03,975 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:03,976 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:03,977 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:04,700 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:04,852 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:04,854 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:04,854 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:04,855 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:04,898 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:04,898 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:05,724 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:05,733 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:05,733 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:05,733 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:05,898 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:06,688 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:06,689 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:06,690 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:06,691 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:06,899 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:06,899 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:07,555 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:07,556 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:07,557 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:07,558 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:07,899 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:08,010 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:08,510 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:08,512 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:08,512 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:08,513 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:08,899 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:08,900 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:09,382 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:09,384 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:09,385 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:09,385 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:09,701 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:09,900 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:10,248 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:10,249 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:10,250 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:10,251 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:10,900 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:10,900 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:11,220 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:11,221 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:11,222 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:11,222 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:11,900 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:12,101 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:12,102 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:12,103 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:12,106 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:12,901 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:12,901 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:13,035 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:13,064 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:13,065 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:13,066 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:13,067 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:13,843 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:15:13,901 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:13,929 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:13,930 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:13,931 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:13,932 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:14,702 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:14,803 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:14,805 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:14,805 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:14,807 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:14,901 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:14,901 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:15,756 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:15,757 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:15,758 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:15,759 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:15,902 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:16,605 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:16,607 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:16,608 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:16,608 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:16,902 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:16,902 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:17,547 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:17,549 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:17,549 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:17,551 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:17,902 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:18,120 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:18,404 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:18,406 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:18,406 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:18,408 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:18,902 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:18,903 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:19,251 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:19,252 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:19,253 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:19,254 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:19,703 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:19,903 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:20,192 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:20,193 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:20,194 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:20,196 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:20,904 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:20,904 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:21,948 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:21,949 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:21,949 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:21,951 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:22,903 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:22,904 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:22,905 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:22,906 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:22,906 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:22,907 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:23,142 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:23,775 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:23,776 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:23,777 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:23,778 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:23,906 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:24,704 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:24,721 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:24,724 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:24,724 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:24,725 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:24,907 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:24,907 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:25,578 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:25,580 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:25,581 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:25,581 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:25,907 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:26,435 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:26,436 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:26,437 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:26,438 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:26,907 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:26,908 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:27,380 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:27,382 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:27,383 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:27,384 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:27,908 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:28,143 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:28,231 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:28,232 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:28,233 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:28,234 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:28,908 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:28,909 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:29,165 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:29,167 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:29,168 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:29,169 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:29,718 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:29,909 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:30,013 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:30,015 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:30,015 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:30,017 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:30,870 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:30,872 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:30,873 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:30,874 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:30,909 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:30,909 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:31,819 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:31,821 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:31,822 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:31,822 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:31,909 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:32,686 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:32,688 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:32,689 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:32,690 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:32,910 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:32,910 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:33,151 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:33,647 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:33,648 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:33,648 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:33,650 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:33,910 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:34,505 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:34,506 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:34,507 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:34,508 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:34,719 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:34,910 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:34,911 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:35,361 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:35,363 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:35,363 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:35,364 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:35,911 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:36,311 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:36,312 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:36,313 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:36,314 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:36,911 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:36,911 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:37,180 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:37,181 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:37,182 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:37,183 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:37,911 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:38,131 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:38,132 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:38,133 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:38,134 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:38,251 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:38,912 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:38,912 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:38,993 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:38,994 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:38,995 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:38,996 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:39,721 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:39,864 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:39,865 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:39,865 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:39,867 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:39,912 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:40,816 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:40,818 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:40,818 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:40,820 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:40,912 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:40,912 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:41,683 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:41,684 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:41,684 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:41,685 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:41,913 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:42,630 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:42,632 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:42,633 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:42,633 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:42,913 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:42,913 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:43,304 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:43,487 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:43,488 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:43,489 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:43,490 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:43,846 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:15:43,913 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:44,350 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:44,352 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:44,352 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:44,353 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:44,724 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:44,914 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:44,914 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:45,310 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:45,311 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:45,312 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:45,313 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:45,914 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:46,186 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:46,187 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:46,188 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:46,188 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:46,914 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:46,914 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:47,064 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:47,065 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:47,066 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:47,067 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:47,915 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:48,028 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:48,030 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:48,030 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:48,031 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:48,381 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:48,905 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:48,906 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:48,908 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:48,908 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:48,915 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:48,915 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:49,725 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:49,875 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:49,876 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:49,876 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:49,878 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:49,915 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:50,751 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:50,753 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:50,753 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:50,754 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:50,916 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:50,916 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:51,627 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:51,628 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:51,629 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:51,630 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:51,916 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:52,589 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:52,590 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:52,591 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:52,592 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:52,916 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:52,916 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:53,444 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:53,465 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:53,467 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:53,468 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:53,469 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:53,917 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:54,424 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:54,426 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:54,426 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:54,427 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:54,729 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:54,917 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:54,917 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:55,289 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:55,290 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:55,292 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:55,292 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:55,917 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:56,154 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:56,155 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:56,156 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:56,157 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:56,918 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:56,918 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:57,111 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:57,112 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:57,113 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:57,114 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:57,918 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:57,975 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:57,976 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:57,977 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:57,978 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:58,553 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:15:58,906 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:58,908 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:58,909 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:58,909 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:58,918 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:15:58,918 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:15:59,730 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:15:59,762 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:15:59,763 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:15:59,764 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:15:59,765 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:15:59,918 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:00,605 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:00,606 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:00,607 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:00,608 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:00,919 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:00,919 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:01,547 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:01,548 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:01,549 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:01,550 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:01,919 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:02,408 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:02,409 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:02,411 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:02,411 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:02,919 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:02,920 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:03,252 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:03,253 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:03,254 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:03,255 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:03,625 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:03,920 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:04,187 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:04,189 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:04,189 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:04,190 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:04,730 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:04,920 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:04,920 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:05,040 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:05,041 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:05,042 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:05,043 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:05,920 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:05,982 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:05,984 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:05,984 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:05,986 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:06,834 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:06,836 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:06,836 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:06,837 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:06,921 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:06,921 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:07,681 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:07,683 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:07,683 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:07,684 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:07,921 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:08,615 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:08,617 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:08,617 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:08,618 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:08,734 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:08,921 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:08,922 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:09,462 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:09,464 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:09,464 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:09,465 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:09,777 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:09,922 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:10,408 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:10,409 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:10,410 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:10,411 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:10,922 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:10,922 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:11,262 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:11,264 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:11,264 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:11,265 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:11,922 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:12,120 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:12,122 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:12,122 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:12,124 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:12,923 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:12,923 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:13,128 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:13,129 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:13,130 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:13,131 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:13,743 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:13,847 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:16:13,923 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:14,049 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:14,051 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:14,051 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:14,052 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:14,778 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:14,923 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:14,923 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:15,049 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:15,051 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:15,051 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:15,053 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:15,894 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:15,895 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:15,897 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:15,897 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:15,924 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:16,760 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:16,761 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:16,762 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:16,763 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:16,924 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:16,924 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:17,710 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:17,711 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:17,712 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:17,713 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:17,924 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:18,561 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:18,563 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:18,564 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:18,564 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:18,827 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:18,925 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:18,925 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:19,496 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:19,499 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:19,499 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:19,500 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:19,855 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:19,925 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:20,352 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:20,356 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:20,356 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:20,357 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:20,925 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:20,926 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:21,222 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:21,224 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:21,224 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:21,225 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:21,926 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:22,170 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:22,172 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:22,173 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:22,174 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:22,926 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:22,926 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:23,022 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:23,023 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:23,024 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:23,025 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:23,877 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:23,927 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:23,977 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:23,978 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:23,978 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:23,980 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:24,830 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:24,831 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:24,832 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:24,833 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:24,856 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:24,927 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:24,928 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:25,684 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:25,686 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:25,686 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:25,688 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:25,928 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:26,629 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:26,631 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:26,631 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:26,632 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:26,928 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:26,928 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:27,509 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:27,510 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:27,511 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:27,512 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:27,929 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:28,456 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:28,457 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:28,458 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:28,459 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:28,912 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:28,929 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:28,929 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:29,312 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:29,313 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:29,313 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:29,315 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:29,860 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:29,929 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:30,167 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:30,183 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:30,183 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:30,183 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:30,929 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:30,930 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:31,114 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:31,116 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:31,116 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:31,117 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:31,930 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:31,978 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:31,979 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:31,980 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:31,981 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:32,921 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:32,923 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:32,923 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:32,924 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:32,930 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:32,930 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:33,788 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:33,790 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:33,790 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:33,792 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:33,915 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:33,931 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:34,654 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:34,655 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:34,656 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:34,657 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:34,863 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:34,931 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:34,931 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:35,615 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:35,616 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:35,616 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:35,617 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:35,932 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:36,476 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:36,478 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:36,478 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:36,479 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:36,932 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:36,932 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:37,447 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:37,448 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:37,448 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:37,450 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:37,932 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:38,330 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:38,331 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:38,332 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:38,333 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:38,932 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:38,933 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:39,021 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:39,203 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:39,205 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:39,206 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:39,207 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:39,864 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:39,933 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:40,166 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:40,167 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:40,168 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:40,169 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:40,934 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:40,934 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:41,035 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:41,036 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:41,037 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:41,038 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:41,903 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:41,904 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:41,905 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:41,906 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:41,934 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:42,852 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:42,854 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:42,855 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:42,855 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:42,934 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:42,935 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:43,720 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:43,721 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:43,722 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:43,723 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:43,849 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:16:43,935 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:44,065 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:44,672 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:44,673 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:44,674 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:44,675 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:44,866 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:44,935 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:44,935 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:45,529 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:45,530 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:45,531 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:45,532 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:45,935 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:46,391 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:46,392 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:46,393 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:46,394 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:46,936 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:46,936 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:47,352 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:47,354 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:47,355 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:47,356 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:47,936 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:48,211 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:48,213 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:48,214 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:48,215 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:48,936 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:48,936 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:49,077 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:49,078 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:49,078 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:49,079 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:49,080 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:49,870 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:49,937 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:50,032 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:50,034 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:50,034 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:50,035 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:50,892 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:50,893 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:50,893 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:50,895 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:50,937 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:50,937 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:51,834 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:51,836 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:51,836 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:51,837 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:51,937 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:52,704 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:52,705 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:52,706 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:52,707 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:52,938 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:52,938 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:53,564 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:53,565 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:53,566 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:53,566 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:53,938 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:54,166 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:54,512 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:54,514 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:54,514 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:54,515 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:54,870 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:54,938 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:54,938 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:55,368 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:55,369 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:55,370 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:55,371 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:55,939 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:56,329 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:56,330 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:56,330 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:56,331 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:56,939 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:56,939 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:57,203 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:57,204 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:57,205 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:57,206 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:57,939 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:58,072 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:58,073 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:58,074 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:58,075 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:58,939 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:16:58,940 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:16:59,025 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:59,027 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:59,027 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:59,028 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:59,266 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:16:59,871 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:16:59,896 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:16:59,898 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:16:59,898 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:16:59,899 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:16:59,940 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:00,853 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:00,855 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:00,855 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:00,856 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:00,940 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:00,940 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:01,710 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:01,712 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:01,712 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:01,713 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:01,940 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:02,567 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:02,568 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:02,569 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:02,570 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:02,941 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:02,941 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:03,515 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:03,517 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:03,517 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:03,518 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:03,941 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:04,280 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:04,370 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:04,372 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:04,373 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:04,373 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:04,872 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:04,942 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:04,942 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:05,232 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:05,234 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:05,234 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:05,235 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:05,942 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:06,943 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:07,099 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:07,101 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:07,101 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:07,102 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:07,943 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:08,075 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:08,077 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:08,077 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:08,078 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:08,943 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:08,943 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:08,948 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:08,949 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:08,950 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:08,951 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:09,301 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:09,820 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:09,821 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:09,822 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:09,823 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:09,919 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:09,944 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:10,787 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:10,789 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:10,789 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:10,790 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:10,944 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:10,944 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:11,659 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:11,660 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:11,661 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:11,662 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:11,944 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:12,631 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:12,632 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:12,632 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:12,634 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:12,945 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:12,945 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:13,510 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:13,512 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:13,512 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:13,514 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:13,851 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:17:13,945 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:14,370 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:14,381 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:14,382 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:14,383 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:14,384 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:14,924 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:14,945 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:14,945 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:15,330 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:15,333 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:15,333 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:15,333 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:15,946 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:16,200 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:16,202 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:16,202 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:16,203 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:16,946 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:16,946 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:17,159 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:17,161 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:17,161 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:17,162 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:17,946 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:18,030 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:18,031 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:18,032 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:18,033 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:18,900 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:18,901 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:18,902 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:18,903 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:18,946 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:18,947 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:19,458 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:19,861 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:19,862 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:19,862 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:19,864 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:19,925 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:19,947 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:20,723 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:20,724 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:20,726 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:20,726 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:20,947 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:20,947 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:21,598 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:21,599 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:21,600 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:21,601 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:21,947 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:22,554 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:22,555 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:22,556 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:22,556 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:22,948 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:22,948 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:23,411 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:23,413 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:23,414 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:23,414 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:23,948 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:24,360 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:24,362 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:24,363 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:24,364 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:24,481 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:24,927 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:24,949 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:24,949 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:25,219 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:25,220 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:25,220 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:25,222 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:25,949 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:26,081 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:26,083 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:26,083 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:26,084 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:26,949 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:26,950 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:27,039 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:27,040 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:27,040 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:27,042 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:27,902 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:27,904 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:27,904 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:27,906 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:27,950 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:28,867 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:28,872 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:28,872 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:28,872 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:28,950 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:28,950 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:29,559 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:29,753 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:29,755 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:29,755 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:29,756 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:29,928 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:29,950 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:30,637 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:30,639 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:30,639 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:30,640 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:30,951 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:30,951 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:31,608 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:31,610 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:31,610 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:31,612 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:31,951 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:32,485 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:32,486 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:32,486 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:32,488 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:32,951 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:32,952 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:33,446 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:33,448 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:33,448 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:33,450 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:33,952 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:34,284 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:34,285 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:34,286 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:34,286 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:34,626 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:34,929 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:34,952 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:34,952 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:35,130 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:35,132 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:35,132 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:35,133 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:35,953 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:36,069 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:36,071 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:36,071 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:36,072 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:36,917 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:36,918 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:36,919 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:36,920 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:36,953 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:36,953 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:37,852 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:37,854 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:37,854 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:37,856 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:37,953 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:38,701 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:38,702 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:38,703 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:38,704 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:38,954 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:38,954 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:39,549 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:39,551 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:39,551 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:39,551 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:39,670 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:39,932 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:39,954 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:40,490 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:40,491 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:40,491 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:40,493 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:40,954 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:40,954 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:41,337 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:41,339 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:41,340 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:41,341 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:41,955 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:42,274 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:42,275 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:42,276 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:42,277 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:42,955 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:42,955 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:43,122 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:43,123 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:43,124 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:43,125 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:43,853 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:17:43,955 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:43,973 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:43,975 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:43,976 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:43,976 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:44,685 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:44,913 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:44,914 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:44,915 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:44,916 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:44,933 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:44,956 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:44,956 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:45,750 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:45,752 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:45,752 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:45,753 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:45,956 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:46,586 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:46,588 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:46,588 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:46,589 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:46,956 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:46,956 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:47,509 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:47,511 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:47,511 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:47,513 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:47,957 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:48,357 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:48,358 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:48,358 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:48,360 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:48,957 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:48,957 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:49,291 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:49,293 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:49,293 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:49,294 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:49,745 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:49,933 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:49,957 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:50,127 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:50,129 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:50,130 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:50,131 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:50,958 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:50,958 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:50,965 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:50,966 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:50,967 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:50,968 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:51,893 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:51,896 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:51,896 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:51,897 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:51,958 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:52,740 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:52,742 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:52,743 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:52,743 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:52,958 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:52,958 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:53,578 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:53,579 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:53,580 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:53,581 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:53,958 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:54,511 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:54,513 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:54,513 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:54,514 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:54,853 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:54,934 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:54,959 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:54,959 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:55,357 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:55,358 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:55,360 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:55,360 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:55,959 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:56,294 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:56,296 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:56,296 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:56,297 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:56,959 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:56,960 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:57,142 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:57,144 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:57,145 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:57,145 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:57,960 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:57,980 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:57,981 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:57,981 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:57,982 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:58,906 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:58,908 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:58,908 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:58,909 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:58,960 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:17:58,960 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:17:59,752 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:17:59,754 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:17:59,754 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:17:59,755 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:17:59,873 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:17:59,935 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:17:59,960 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:00,687 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:00,689 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:00,689 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:00,690 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:00,961 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:00,961 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:01,523 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:01,524 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:01,525 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:01,526 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:01,961 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:02,359 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:02,360 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:02,361 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:02,362 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:02,961 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:02,962 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:03,285 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:03,287 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:03,287 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:03,288 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:03,962 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:04,121 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:04,122 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:04,123 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:04,124 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:04,883 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:04,962 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:04,962 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:04,986 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:05,059 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:05,060 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:05,061 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:05,062 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:05,895 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:05,896 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:05,897 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:05,898 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:05,963 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:06,732 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:06,733 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:06,734 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:06,734 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:06,963 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:06,963 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:07,668 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:07,669 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:07,669 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:07,671 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:07,963 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:08,505 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:08,507 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:08,507 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:08,508 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:08,964 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:08,964 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:09,429 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:09,430 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:09,431 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:09,432 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:09,964 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:09,993 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:10,054 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:10,264 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:10,267 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:10,267 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:10,268 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:10,964 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:10,965 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:11,111 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:11,113 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:11,113 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:11,114 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:11,965 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:12,038 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:12,039 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:12,040 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:12,042 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:12,875 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:12,877 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:12,878 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:12,878 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:12,965 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:12,965 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:13,716 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:13,718 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:13,718 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:13,720 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:13,856 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:18:13,965 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:14,653 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:14,655 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:14,656 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:14,657 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:14,966 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:14,966 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:14,999 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:15,055 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:15,500 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:15,501 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:15,502 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:15,503 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:15,966 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:16,439 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:16,441 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:16,441 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:16,443 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:16,967 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:16,967 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:17,283 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:17,285 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:17,285 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:17,286 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:17,967 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:18,126 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:18,128 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:18,129 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:18,129 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:18,967 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:18,967 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:19,060 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:19,061 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:19,062 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:19,063 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:19,903 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:19,905 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:19,906 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:19,907 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:19,968 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:20,025 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:20,059 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:20,839 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:20,841 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:20,842 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:20,843 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:20,968 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:20,968 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:21,695 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:21,697 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:21,697 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:21,698 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:21,968 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:22,541 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:22,543 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:22,543 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:22,545 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:22,970 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:22,970 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:23,479 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:23,482 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:23,482 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:23,482 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:23,970 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:24,329 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:24,331 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:24,331 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:24,332 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:24,970 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:24,971 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:25,060 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:25,095 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:25,275 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:25,276 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:25,277 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:25,278 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:25,971 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:26,132 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:26,134 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:26,135 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:26,135 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:26,971 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:26,971 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:26,980 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:26,981 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:26,981 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:26,982 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:27,912 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:27,913 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:27,914 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:27,915 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:27,971 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:28,757 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:28,758 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:28,759 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:28,760 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:28,972 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:28,972 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:29,694 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:29,695 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:29,695 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:29,697 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:29,972 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:30,077 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:30,150 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:30,539 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:30,540 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:30,541 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:30,542 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:30,972 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:30,973 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:31,384 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:31,391 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:31,391 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:31,392 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:31,973 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:32,322 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:32,324 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:32,324 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:32,325 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:32,974 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:32,974 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:33,168 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:33,169 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:33,170 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:33,171 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:33,974 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:34,013 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:34,014 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:34,015 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:34,016 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:34,947 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:34,948 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:34,949 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:34,950 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:34,974 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:34,974 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:35,110 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:35,180 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:35,791 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:35,793 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:35,793 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:35,795 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:35,975 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:36,730 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:36,731 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:36,732 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:36,733 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:36,975 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:36,975 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:37,579 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:37,581 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:37,582 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:37,583 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:37,975 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:38,422 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:38,423 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:38,424 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:38,425 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:38,976 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:38,976 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:39,353 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:39,355 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:39,355 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:39,356 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:39,976 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:40,111 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:40,186 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:40,197 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:40,200 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:40,200 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:40,201 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:40,976 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:40,977 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:41,137 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:41,139 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:41,140 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:41,141 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:41,977 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:41,982 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:41,985 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:41,985 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:41,986 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:42,827 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:42,830 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:42,832 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:42,832 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:42,977 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:42,977 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:43,760 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:43,762 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:43,762 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:43,764 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:43,858 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:18:43,977 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:44,605 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:44,607 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:44,608 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:44,609 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:44,978 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:44,978 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:45,112 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:45,211 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:45,545 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:45,546 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:45,547 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:45,548 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:45,978 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:46,390 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:46,406 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:46,406 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:46,407 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:46,978 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:46,979 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:47,236 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: partial_history
+2023-05-15 17:18:47,237 DEBUG   SenderThread:3663959 [sender.py:send():334] send: history
+2023-05-15 17:18:47,238 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: summary_record
+2023-05-15 17:18:47,240 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:47,979 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:48,290 DEBUG   SenderThread:3663959 [sender.py:send():334] send: telemetry
+2023-05-15 17:18:48,290 DEBUG   SenderThread:3663959 [sender.py:send():334] send: telemetry
+2023-05-15 17:18:48,291 DEBUG   SenderThread:3663959 [sender.py:send():334] send: exit
+2023-05-15 17:18:48,291 INFO    SenderThread:3663959 [sender.py:send_exit():557] handling exit code: 0
+2023-05-15 17:18:48,291 INFO    SenderThread:3663959 [sender.py:send_exit():559] handling runtime: 604
+2023-05-15 17:18:48,291 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:48,291 INFO    SenderThread:3663959 [sender.py:send_exit():565] send defer
+2023-05-15 17:18:48,291 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,292 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 0
+2023-05-15 17:18:48,292 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,292 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 0
+2023-05-15 17:18:48,292 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 1
+2023-05-15 17:18:48,292 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,292 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 1
+2023-05-15 17:18:48,292 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,292 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 1
+2023-05-15 17:18:48,292 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 2
+2023-05-15 17:18:48,293 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,293 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 2
+2023-05-15 17:18:48,293 INFO    HandlerThread:3663959 [system_monitor.py:finish():161] Stopping system monitor
+2023-05-15 17:18:48,294 DEBUG   SystemMonitor:3663959 [system_monitor.py:_start():137] Finished system metrics aggregation loop
+2023-05-15 17:18:48,294 INFO    HandlerThread:3663959 [interfaces.py:finish():175] Joined cpu
+2023-05-15 17:18:48,294 DEBUG   SystemMonitor:3663959 [system_monitor.py:_start():141] Publishing last batch of metrics
+2023-05-15 17:18:48,295 INFO    HandlerThread:3663959 [interfaces.py:finish():175] Joined disk
+2023-05-15 17:18:48,742 INFO    HandlerThread:3663959 [interfaces.py:finish():175] Joined gpu
+2023-05-15 17:18:48,743 INFO    HandlerThread:3663959 [interfaces.py:finish():175] Joined memory
+2023-05-15 17:18:48,743 INFO    HandlerThread:3663959 [interfaces.py:finish():175] Joined network
+2023-05-15 17:18:48,743 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,744 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 2
+2023-05-15 17:18:48,744 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 3
+2023-05-15 17:18:48,744 DEBUG   SenderThread:3663959 [sender.py:send():334] send: stats
+2023-05-15 17:18:48,744 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,745 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 3
+2023-05-15 17:18:48,745 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,745 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 3
+2023-05-15 17:18:48,745 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 4
+2023-05-15 17:18:48,746 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,746 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 4
+2023-05-15 17:18:48,746 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,746 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 4
+2023-05-15 17:18:48,746 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 5
+2023-05-15 17:18:48,746 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,746 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 5
+2023-05-15 17:18:48,747 DEBUG   SenderThread:3663959 [sender.py:send():334] send: summary
+2023-05-15 17:18:48,747 INFO    SenderThread:3663959 [sender.py:_save_file():1319] saving file wandb-summary.json with policy end
+2023-05-15 17:18:48,747 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,747 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 5
+2023-05-15 17:18:48,747 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 6
+2023-05-15 17:18:48,748 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:48,748 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 6
+2023-05-15 17:18:48,748 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:48,748 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 6
+2023-05-15 17:18:48,753 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:48,979 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:48,979 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:49,291 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:18:49,742 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 7
+2023-05-15 17:18:49,742 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:18:49,742 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:49,743 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 7
+2023-05-15 17:18:49,743 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:49,743 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 7
+2023-05-15 17:18:49,980 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml
+2023-05-15 17:18:50,291 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:18:50,816 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 8
+2023-05-15 17:18:50,817 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:18:50,817 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:50,817 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 8
+2023-05-15 17:18:50,817 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:50,817 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 8
+2023-05-15 17:18:50,835 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 9
+2023-05-15 17:18:50,835 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:50,835 DEBUG   SenderThread:3663959 [sender.py:send():334] send: artifact
+2023-05-15 17:18:50,835 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 9
+2023-05-15 17:18:50,980 INFO    Thread-13 :3663959 [dir_watcher.py:_on_file_modified():292] file/dir modified: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:51,292 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:18:52,372 INFO    Thread-21 :3663959 [upload_job.py:push():98] Skipped uploading /home/hb/.local/share/wandb/artifacts/staging/tmpmos4lyvb
+2023-05-15 17:18:52,843 INFO    Thread-20 :3663959 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmputsqfg68
+2023-05-15 17:18:52,843 INFO    Thread-22 :3663959 [upload_job.py:push():101] Uploaded file /home/hb/.local/share/wandb/artifacts/staging/tmpmudq6jqv
+2023-05-15 17:18:54,576 INFO    SenderThread:3663959 [sender.py:send_artifact():1415] sent artifact job-https___github.com_HongB1_efficientnet_kincnn.git_DeepPhospho.py - {'id': 'QXJ0aWZhY3Q6NDU1NTA1ODkw', 'digest': 'bf40999c50e967513f738d11a75671de', 'state': 'PENDING', 'aliases': [], 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjY5MzkzNzYx', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6NDU1NDk1NzY5', 'versionIndex': 2}}, 'version': 'latest'}
+2023-05-15 17:18:54,577 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:54,577 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 9
+2023-05-15 17:18:54,577 INFO    SenderThread:3663959 [dir_watcher.py:finish():362] shutting down directory watcher
+2023-05-15 17:18:54,982 INFO    SenderThread:3663959 [dir_watcher.py:finish():392] scan: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files
+2023-05-15 17:18:54,982 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log output.log
+2023-05-15 17:18:54,982 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-metadata.json wandb-metadata.json
+2023-05-15 17:18:54,982 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/diff.patch diff.patch
+2023-05-15 17:18:54,982 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json wandb-summary.json
+2023-05-15 17:18:54,983 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml config.yaml
+2023-05-15 17:18:54,986 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/requirements.txt requirements.txt
+2023-05-15 17:18:54,989 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml conda-environment.yaml
+2023-05-15 17:18:54,992 INFO    SenderThread:3663959 [dir_watcher.py:finish():406] scan save: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/code/DeepPhospho.py code/DeepPhospho.py
+2023-05-15 17:18:54,992 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 10
+2023-05-15 17:18:54,993 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:18:54,999 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:54,999 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 10
+2023-05-15 17:18:55,000 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:55,000 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 10
+2023-05-15 17:18:55,000 INFO    SenderThread:3663959 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:18:55,637 INFO    Thread-26 :3663959 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/requirements.txt
+2023-05-15 17:18:55,643 INFO    Thread-25 :3663959 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/config.yaml
+2023-05-15 17:18:55,672 INFO    Thread-24 :3663959 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/wandb-summary.json
+2023-05-15 17:18:55,683 INFO    Thread-27 :3663959 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/conda-environment.yaml
+2023-05-15 17:18:55,802 INFO    Thread-23 :3663959 [upload_job.py:push():143] Uploaded file /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/files/output.log
+2023-05-15 17:18:56,000 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: status_report
+2023-05-15 17:18:56,002 INFO    Thread-12 (_thread_body):3663959 [sender.py:transition_state():585] send defer: 11
+2023-05-15 17:18:56,003 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:56,003 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 11
+2023-05-15 17:18:56,003 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:56,003 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 11
+2023-05-15 17:18:56,003 INFO    SenderThread:3663959 [file_pusher.py:join():165] waiting for file pusher
+2023-05-15 17:18:56,003 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 12
+2023-05-15 17:18:56,003 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:56,004 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 12
+2023-05-15 17:18:56,004 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:56,004 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 12
+2023-05-15 17:18:56,295 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: keepalive
+2023-05-15 17:18:57,058 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 13
+2023-05-15 17:18:57,058 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:57,058 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 13
+2023-05-15 17:18:57,058 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:57,059 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 13
+2023-05-15 17:18:57,059 INFO    SenderThread:3663959 [sender.py:transition_state():585] send defer: 14
+2023-05-15 17:18:57,059 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: defer
+2023-05-15 17:18:57,059 DEBUG   SenderThread:3663959 [sender.py:send():334] send: final
+2023-05-15 17:18:57,059 INFO    HandlerThread:3663959 [handler.py:handle_request_defer():170] handle defer: 14
+2023-05-15 17:18:57,059 DEBUG   SenderThread:3663959 [sender.py:send():334] send: footer
+2023-05-15 17:18:57,060 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: defer
+2023-05-15 17:18:57,060 INFO    SenderThread:3663959 [sender.py:send_request_defer():581] handle sender defer: 14
+2023-05-15 17:18:57,061 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: poll_exit
+2023-05-15 17:18:57,061 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: server_info
+2023-05-15 17:18:57,061 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: get_summary
+2023-05-15 17:18:57,061 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: poll_exit
+2023-05-15 17:18:57,062 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: sampled_history
+2023-05-15 17:18:57,062 DEBUG   SenderThread:3663959 [sender.py:send_request():361] send_request: server_info
+2023-05-15 17:18:57,295 DEBUG   HandlerThread:3663959 [handler.py:handle_request():144] handle_request: shutdown
+2023-05-15 17:18:57,295 INFO    HandlerThread:3663959 [handler.py:finish():841] shutting down handler
+2023-05-15 17:18:58,062 INFO    WriterThread:3663959 [datastore.py:close():299] close: /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/run-jr2qjj7w.wandb
+2023-05-15 17:18:58,295 INFO    SenderThread:3663959 [sender.py:finish():1491] shutting down sender
+2023-05-15 17:18:58,295 INFO    SenderThread:3663959 [file_pusher.py:finish():160] shutting down file pusher
+2023-05-15 17:18:58,295 INFO    SenderThread:3663959 [file_pusher.py:join():165] waiting for file pusher
diff --git a/wandb/run-20230515_170843-jr2qjj7w/logs/debug.log b/wandb/run-20230515_170843-jr2qjj7w/logs/debug.log
new file mode 100644
index 0000000..77e3730
--- /dev/null
+++ b/wandb/run-20230515_170843-jr2qjj7w/logs/debug.log
@@ -0,0 +1,32 @@
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_setup.py:_flush():68] Configure stats pid to 3663814
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_setup.py:_flush():68] Loading settings from /home/hb/.config/wandb/settings
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_setup.py:_flush():68] Loading settings from /home/hb/python/efficientnet_kincnn/wandb/settings
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'DeepPhospho.py', 'program': '/home/hb/python/efficientnet_kincnn/DeepPhospho.py'}
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_init.py:_log_setup():478] Logging user logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/logs/debug.log
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_init.py:_log_setup():479] Logging internal logs to /home/hb/python/efficientnet_kincnn/wandb/run-20230515_170843-jr2qjj7w/logs/debug-internal.log
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_init.py:init():518] calling init triggers
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_init.py:init():521] wandb.init called with sweep_config: {}
+config: {'gpu_num': '0', 'batch_size': 1024, 'n_epoch': 500, 'defalut_learning_rate': 0.001, 'fold_num': 5, 'scheduler_patience': 7, 'scheduler_factor': 0.7, 'erls_patience': 25, 'dataset': 'transfer_learning_1', 'pretrain_fold_num': '0', 'model': 'efficientnet-phospho-B-15', 'save_dir': '/home/hb/python/efficientnet_kincnn/saved_model/0515/DeepPP_transfer_learning_1_1708_bs1024_weight0'}
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_init.py:init():571] starting backend
+2023-05-15 17:08:43,162 INFO    MainThread:3663814 [wandb_init.py:init():575] setting up manager
+2023-05-15 17:08:43,164 INFO    MainThread:3663814 [backend.py:_multiprocessing_setup():106] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2023-05-15 17:08:43,166 INFO    MainThread:3663814 [wandb_init.py:init():582] backend started and connected
+2023-05-15 17:08:43,168 INFO    MainThread:3663814 [wandb_init.py:init():670] updated telemetry
+2023-05-15 17:08:43,172 INFO    MainThread:3663814 [wandb_init.py:init():710] communicating run to backend with 60.0 second timeout
+2023-05-15 17:08:43,763 INFO    MainThread:3663814 [wandb_run.py:_on_init():2121] communicating current version
+2023-05-15 17:08:43,805 INFO    MainThread:3663814 [wandb_run.py:_on_init():2125] got version response upgrade_message: "wandb version 0.15.2 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2023-05-15 17:08:43,805 INFO    MainThread:3663814 [wandb_init.py:init():758] starting run threads in backend
+2023-05-15 17:08:49,212 INFO    MainThread:3663814 [wandb_run.py:_console_start():2101] atexit reg
+2023-05-15 17:08:49,213 INFO    MainThread:3663814 [wandb_run.py:_redirect():1959] redirect: SettingsConsole.WRAP_RAW
+2023-05-15 17:08:49,214 INFO    MainThread:3663814 [wandb_run.py:_redirect():2024] Wrapping output streams.
+2023-05-15 17:08:49,214 INFO    MainThread:3663814 [wandb_run.py:_redirect():2046] Redirects installed.
+2023-05-15 17:08:49,214 INFO    MainThread:3663814 [wandb_init.py:init():798] run started, returning control to user process
+2023-05-15 17:18:48,289 INFO    MainThread:3663814 [wandb_run.py:_finish():1844] finishing run jeguring/phospho/jr2qjj7w
+2023-05-15 17:18:48,289 INFO    MainThread:3663814 [wandb_run.py:_atexit_cleanup():2070] got exitcode: 0
+2023-05-15 17:18:48,290 INFO    MainThread:3663814 [wandb_run.py:_restore():2053] restore
+2023-05-15 17:18:48,290 INFO    MainThread:3663814 [wandb_run.py:_restore():2059] restore done
+2023-05-15 17:18:58,297 INFO    MainThread:3663814 [wandb_run.py:_footer_history_summary_info():3427] rendering history
+2023-05-15 17:18:58,298 INFO    MainThread:3663814 [wandb_run.py:_footer_history_summary_info():3459] rendering summary
+2023-05-15 17:18:58,300 INFO    MainThread:3663814 [wandb_run.py:_footer_sync_info():3383] logging synced files
diff --git a/wandb/run-20230515_170843-jr2qjj7w/run-jr2qjj7w.wandb b/wandb/run-20230515_170843-jr2qjj7w/run-jr2qjj7w.wandb
new file mode 100644
index 0000000..5cd3842
Binary files /dev/null and b/wandb/run-20230515_170843-jr2qjj7w/run-jr2qjj7w.wandb differ
